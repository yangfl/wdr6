//***************************************
//IDR home page: http://kpnc.org/idr32/en
//Decompiled by IDR v.01.04.2017
//***************************************
unit Controls;

interface

uses
  SysUtils, Classes, Controls, Graphics, Menus, Dialogs, MPHexEditorEx;

type
  TAlign = (alNone, alTop, alBottom, alLeft, alRight, alClient, alCustom);
  TDragObject = class(TObject)
  public
    FDragTarget:Pointer;//f4
    FDragHandle:HWND;//f8
    FDragPos:TPoint;//fC
    FDragTargetPos:TPoint;//f14
    FDropped:Boolean;//f1C
    FMouseDeltaX:Double;//f20
    f24:dword;//f24
    FMouseDeltaY:Double;//f28
    f2C:dword;//f2C
    FCancelling:Boolean;//f30
    procedure AfterConstruction; virtual;//00480120
    procedure BeforeDestruction; virtual;//00480104
    //procedure v0(?:?; ?:?); virtual;//v0//0047FEBC
    //function v4(?:?; ?:?):?; virtual;//v4//00480050
    //function v8:?; virtual;//v8//00480038
    //procedure vC(?:?); virtual;//vC//0047FF28
    //procedure v10(?:?); virtual;//v10//0047FE20
    //procedure v14(?:?); virtual;//v14//0047FED4
    procedure v18; virtual;//v18//00480080
    //function v1C:?; virtual;//v1C//0048008C
    procedure v20; virtual;//v20//004800A4
  end;
  TDragObjectEx = class(TDragObject)
  public
    procedure BeforeDestruction; virtual;//0048013C
  end;
  TBaseDragControlObject = class(TDragObject)
  public
    .....................................FControl:TControl;//f38
    //procedure v0(?:?; ?:?; ?:?; ?:?); virtual;//v0//004801F8
    //procedure v10(?:?); virtual;//v10//0048018C
    //procedure v24(?:?; ?:?; ?:?); virtual;//v24//004801C8
    constructor Create; virtual;//v28//00480148
  end;
  TDragControlObject = class(TBaseDragControlObject)
  public
    //function v4(?:?; ?:?):?; virtual;//v4//00480240
    //function v8:?; virtual;//v8//00480278
    procedure v18; virtual;//v18//00480298
    procedure v20; virtual;//v20//004802C4
  end;
  TDragControlObjectEx = class(TDragControlObject)
  public
    procedure BeforeDestruction; virtual;//004802F0
  end;
  TDragDockObject = class(TBaseDragControlObject)
  public
    FBrush:TBrush;//f40
    FDockRect:TRect;//f44
    FDropAlign:TAlign;//f54
    FDropOnControl:TControl;//f58
    FEraseDockRect:TRect;//f5C
    FFloating:Boolean;//f6C
    destructor Destroy; virtual;//00480370
    //function v4(?:?; ?:?):?; virtual;//v4//0048058C
    //procedure v10(?:?); virtual;//v10//004803AC
    //procedure v24(?:?; ?:?; ?:?); virtual;//v24//00480434
    constructor Create; virtual;//v28//004802FC
    //procedure v2C(?:?); virtual;//v2C//0048049C
    procedure v30; virtual;//v30//0048054C
    procedure v34; virtual;//v34//0048056C
    //function v38:?; virtual;//v38//004805AC
  end;
  TDragDockObjectEx = class(TDragDockObject)
  public
    procedure BeforeDestruction; virtual;//004805C4
  end;
  TControlCanvas = class(TCanvas)
  public
    FControl:TControl;//f58
    FDeviceContext:HDC;//f5C
    FWindowHandle:HWND;//f60
    destructor Destroy; virtual;//00481A0C
    procedure v14; virtual;//v14//00481A48
    procedure FreeHandle;//00481AF4
  end;
  TControlActionLink = class(TActionLink)
  public
    .................FClient:TControl;//f18
    //procedure v0(?:?); virtual;//v0//00481D9C
    //function v8:?; virtual;//v8//00482028
    //procedure v10(?:?; ?:?); virtual;//v10//00482118
    //function v20:?; virtual;//v20//00481EC4
    //function v28:?; virtual;//v28//00481F48
    //function v34:?; virtual;//v34//00482148
    //function v38:?; virtual;//v38//00481F94
    //function v44:?; virtual;//v44//00481FE0
    //procedure v4C(?:?); virtual;//v4C//00482064
    //procedure v54(?:?); virtual;//v54//00482090
    //procedure v5C(?:?); virtual;//v5C//004821F8
    //procedure v60(?:?); virtual;//v60//004821CC
    //procedure v64(?:?); virtual;//v64//00482224
    //procedure v68(?:?); virtual;//v68//004820BC
    //procedure v74(?:?); virtual;//v74//004820EC
    //function v78(?:?):?; virtual;//v78//00481DC0
  end;
  TMouseButton = (mbLeft, mbRight, mbMiddle);
  TDragMode = (dmManual, dmAutomatic);
  TDragState = (dsDragEnter, dsDragLeave, dsDragMove);
  TDragKind = (dkDrag, dkDock);
  TAnchorKind = (akLeft, akTop, akRight, akBottom);
  TAnchors = set of TAnchorKind;
  TSizeConstraints = class(TPersistent)
  public
    FControl:TControl;//f4
    MaxHeight:TConstraintSize;//f8
    MaxWidth:TConstraintSize;//fC
    MinHeight:TConstraintSize;//f10
    MinWidth:TConstraintSize;//f14
    FOnChange:TNotifyEvent;//f18
    f1A:word;//f1A
    f1C:TControl;//f1C
    //procedure v0(?:?); virtual;//v0//00481BF0
    procedure vC; virtual;//vC//00481D78
    constructor Create; virtual;//v10//00481BA0
    //procedure SetMaxHeight(Value:TConstraintSize; ?:?);//00481C58
  end;
  TMouseEvent = procedure(Sender:TObject; Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer) of object;;
  TMouseMoveEvent = procedure(Sender:TObject; Shift:TShiftState; X:Integer; Y:Integer) of object;;
  TKeyEvent = procedure(Sender:TObject; var Key:Word; Shift:TShiftState) of object;;
  TKeyPressEvent = procedure(Sender:TObject; var Key:Char) of object;;
  TDragOverEvent = procedure(Sender:TObject; Source:TObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean) of object;;
  TDragDropEvent = procedure(Sender:TObject; Source:TObject; X:Integer; Y:Integer) of object;;
  TStartDragEvent = procedure(Sender:TObject; var DragObject:TDragObject) of object;;
  TEndDragEvent = procedure(Sender:TObject; Target:TObject; X:Integer; Y:Integer) of object;;
  TDockDropEvent = procedure(Sender:TObject; Source:TDragDockObject; X:Integer; Y:Integer) of object;;
  TDockOverEvent = procedure(Sender:TObject; Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean) of object;;
  TUnDockEvent = procedure(Sender:TObject; Client:TControl; NewTarget:TWinControl; var Allow:Boolean) of object;;
  TStartDockEvent = procedure(Sender:TObject; var DragObject:TDragDockObject) of object;;
  TGetSiteInfoEvent = procedure(Sender:TObject; DockClient:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean) of object;;
  TCanResizeEvent = procedure(Sender:TObject; var NewWidth:Integer; var NewHeight:Integer; var Resize:Boolean) of object;;
  TConstrainedResizeEvent = procedure(Sender:TObject; var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer) of object;;
  TMouseWheelEvent = procedure(Sender:TObject; Shift:TShiftState; WheelDelta:Integer; MousePos:TPoint; var Handled:Boolean) of object;;
  TMouseWheelUpDownEvent = procedure(Sender:TObject; Shift:TShiftState; MousePos:TPoint; var Handled:Boolean) of object;;
  TContextPopupEvent = procedure(Sender:TObject; MousePos:TPoint; var Handled:Boolean) of object;;
  TControl = class(TComponent)
  public
    FParent:TWinControl;//f30
    FWindowProc:TWndMethod;//f38
    f3C:TControl;//f3C
    Left:Integer;//f40
    Top:Integer;//f44
    Width:Integer;//f48
    Height:Integer;//f4C
    FControlStyle:TControlStyle;//f50
    f51:byte;//f51
    f52:byte;//f52
    FControlState:TControlState;//f54
    f55:byte;//f55
    FDesktopFont:Boolean;//f56
    FVisible:Boolean;//f57
    FEnabled:Boolean;//f58
    FParentFont:Boolean;//f59
    FParentColor:Boolean;//f5A
    FAlign:TAlign;//f5B
    FAutoSize:Boolean;//f5C
    FDragMode:TDragMode;//f5D
    FIsControl:Boolean;//f5E
    FBiDiMode:TBiDiMode;//f5F
    FParentBiDiMode:Boolean;//f60
    FAnchors:TAnchors;//f61
    FAnchorMove:Boolean;//f62
    FText:PChar;//f64
    FFont:TFont;//f68
    FActionLink:TControlActionLink;//f6C
    FColor:TColor;//f70
    FConstraints:TSizeConstraints;//f74
    Cursor:TCursor;//f78
    FDragCursor:TCursor;//f7A
    FPopupMenu:TPopupMenu;//f7C
    Hint:String;//f80
    FFontHeight:Integer;//f84
    FAnchorRules:TPoint;//f88
    FOriginalParentSize:TPoint;//f90
    FScalingFlags:TScalingFlags;//f98
    FShowHint:Boolean;//f99
    FParentShowHint:Boolean;//f9A
    FDragKind:TDragKind;//f9B
    FDockOrientation:TDockOrientation;//f9C
    FHostDockSite:TWinControl;//fA0
    FWheelAccumulator:Integer;//fA4
    FUndockWidth:Integer;//fA8
    FUndockHeight:Integer;//fAC
    FLRDockWidth:Integer;//fB0
    FTBDockHeight:Integer;//fB4
    FFloatingDockSiteClass:TWinControlClass;//fB8
    FOnCanResize:TCanResizeEvent;//fC0
    fC2:word;//fC2
    fC4:dword;//fC4
    FOnConstrainedResize:TConstrainedResizeEvent;//fC8
    fCA:word;//fCA
    fCC:dword;//fCC
    FOnMouseDown:TMouseEvent;//fD0
    fD2:word;//fD2
    fD4:dword;//fD4
    FOnMouseMove:TMouseMoveEvent;//fD8
    fDA:word;//fDA
    fDC:dword;//fDC
    FOnMouseUp:TMouseEvent;//fE0
    fE2:word;//fE2
    fE4:dword;//fE4
    FOnDragDrop:TDragDropEvent;//fE8
    fEA:word;//fEA
    fEC:dword;//fEC
    FOnDragOver:TDragOverEvent;//fF0
    fF2:word;//fF2
    fF4:dword;//fF4
    FOnResize:TNotifyEvent;//fF8
    fFA:word;//fFA
    fFC:dword;//fFC
    FOnStartDock:TStartDockEvent;//f100
    f102:word;//f102
    f104:dword;//f104
    FOnEndDock:TEndDragEvent;//f108
    f10A:word;//f10A
    f10C:dword;//f10C
    FOnStartDrag:TStartDragEvent;//f110
    f112:word;//f112
    f114:dword;//f114
    FOnEndDrag:TEndDragEvent;//f118
    f11A:word;//f11A
    f11C:dword;//f11C
    FOnClick:TNotifyEvent;//f120
    f122:word;//f122
    f124:TMessageForm;//f124
    FOnDblClick:TNotifyEvent;//f128
    f12A:word;//f12A
    f12C:TFormatSelDialog;//f12C
    FOnContextPopup:TContextPopupEvent;//f130
    f132:word;//f132
    f134:dword;//f134
    FOnMouseWheel:TMouseWheelEvent;//f138
    f13A:word;//f13A
    f13C:dword;//f13C
    FOnMouseWheelDown:TMouseWheelUpDownEvent;//f140
    f142:word;//f142
    f144:dword;//f144
    FOnMouseWheelUp:TMouseWheelUpDownEvent;//f148
    f14A:word;//f14A
    f14C:dword;//f14C
    HelpType:THelpType;//f150
    HelpKeyword:String;//f154
    HelpContext:THelpContext;//f158
    procedure DefaultHandler(var Message:void ); virtual;//00485330
    destructor Destroy; virtual;//00482378
    //procedure v0(?:?); virtual;//v0//004864F8
    procedure DefineProperties(Filer:TFiler); virtual;//v4//0048547C
    procedure vC; virtual;//vC//004864B8
    //procedure v10(?:?; ?:?); virtual;//v10//004827F4
    //procedure v14(?:?); virtual;//v14//00482748
    //procedure v18(?:?); virtual;//v18//00483488
    constructor v2C; virtual;//v2C//00482250
    //function v30(?:?; ?:?):?; virtual;//v30//00484D20
    //function v34(?:?; ?:?):?; virtual;//v34//00484D04
    //procedure v38(?:?; ?:?; ?:?; ?:?); virtual;//v38//00484E1C
    function GetAction:TBasicAction; virtual;//v3C//004825B0
    //procedure v40(?:?); virtual;//v40//0048303C
    //procedure v44(?:?); virtual;//v44//00482F5C
    //function v48(?:?):?; virtual;//v48//00483D18
    //function v4C:?; virtual;//v4C//00482460
    function GetEnabled:Boolean; virtual;//v50//00482478
    //function v54:?; virtual;//v54//004866DC
    //function v58:?; virtual;//v58//00486720
    procedure SetAutoSize(Value:Boolean); virtual;//v5C//00483450
    procedure SetDragMode(Value:TDragMode); virtual;//v60//004826DC
    procedure SetEnabled(Value:Boolean); virtual;//v64//0048365C
    //procedure v68(?:?); virtual;//v68//0048359C
    procedure SetParentBiDiMode(Value:Boolean); virtual;//v6C//00483B10
    procedure SetBiDiMode(Value:TBiDiMode); virtual;//v70//00483868
    //procedure v74(?:?); virtual;//v74//00485148
    procedure v78; virtual;//v78//004867F8
    procedure v7C; virtual;//v7C//00483F08
    procedure v80; virtual;//v80//00484018
    //procedure v84(?:?; ?:?; ?:?; ?:?); virtual;//v84//00482930
    procedure v88; virtual;//v88//00483FDC
    //procedure WMCancelMode(?:?); message WM_CANCELMODE;//00485BA8
    //procedure WMWindowPosChangedMsg(?:?); message WM_WINDOWPOSCHANGED;//00485C00
    //procedure WMContextMenu(?:?); message WM_CONTEXTMENU;//00486854
    //procedure WMNCLButtonDown(?:?); message WM_NCLBUTTONDOWN;//004856D4
    //procedure WMMouseMove(?:?); message WM_MOUSEMOVE;//00485938
    //procedure WMLButtonDown(?:?); message WM_LBUTTONDOWN;//00485670
    //procedure WMLButtonUp(?:?); message WM_LBUTTONUP;//00485A64
    //procedure WMLButtonDblClk(?:?); message WM_LBUTTONDBLCLK;//004856FC
    //procedure WMRButtonDown(?:?); message WM_RBUTTONDOWN;//00485824
    //procedure WMRButtonUp(?:?); message WM_RBUTTONUP;//00485AEC
    //procedure WMRButtonDblClk(?:?); message WM_RBUTTONDBLCLK;//00485858
    //procedure WMMButtonDown(?:?); message WM_MBUTTONDOWN;//0048588C
    //procedure WMMButtonUp(?:?); message WM_MBUTTONUP;//00485B14
    //procedure WMMButtonDblClk(?:?); message WM_MBUTTONDBLCLK;//004858C0
    //procedure WMMouseWheel(?:?); message WM_MOUSEWHEEL;//00485B3C
    //procedure CMParentFontChanged(?:?); message CM_PARENTFONTCHANGED;//00485F24
    //procedure CMParentColorChanged(?:?); message CM_PARENTCOLORCHANGED;//00485DB0
    //procedure CMHitTest(?:?); message CM_HITTEST;//00485FA8
    //procedure CMVisibleChanged(?:?); message CM_VISIBLECHANGED;//00485D24
    //procedure CMEnabledChanged(?:?); message CM_ENABLEDCHANGED;//00485D68
    //procedure CMColorChanged(?:?); message CM_COLORCHANGED;//00485D98
    //procedure CMFontChanged(?:?); message CM_FONTCHANGED;//00485D80
    //procedure CMMouseEnter(?:?); message CM_MOUSEENTER;//00485FC4
    //procedure CMMouseLeave(?:?); message CM_MOUSELEAVE;//00485FF4
    //procedure CMDesignHitTest(?:?); message CM_DESIGNHITTEST;//00486024
    //procedure CMParentShowHintChanged(?:?); message CM_PARENTSHOWHINTCHANGED;//00485EE8
    //procedure CMHintShow(?:?); message CM_HINTSHOW;//00486818
    //procedure CMSysFontChanged(?:?); message CM_SYSFONTCHANGED;//00485F70
    //procedure CMFloat(?:?); message CM_FLOAT;//0048619C
    //procedure CMBiDiModeChanged(?:?); message CM_BIDIMODECHANGED;//00485EBC
    //procedure CMParentBiDiModeChanged(?:?); message CM_PARENTBIDIMODECHANGED;//00485DFC
    //procedure CMMouseWheel(?:?); message CM_MOUSEWHEEL;//00485E38
    procedure sub_0048415C; dynamic;//0048415C
    //procedure sub_00483F2C(?:?); dynamic;//00483F2C
    procedure sub_00484118; dynamic;//00484118
    //procedure sub_00484338(?:?; ?:?; ?:?); dynamic;//00484338
    //procedure sub_00482C8C(?:?; ?:?); dynamic;//00482C8C
    procedure sub_0048513C; dynamic;//0048513C
    //procedure sub_00483CD4(?:?); dynamic;//00483CD4
    procedure sub_0048271C; dynamic;//0048271C
    procedure sub_004826F8; dynamic;//004826F8
    //procedure sub_0048251C(?:?); dynamic;//0048251C
    //procedure sub_004843F4(?:?); dynamic;//004843F4
    //procedure sub_004859D0(?:?; ?:?; ?:?; ?:?); dynamic;//004859D0
    //procedure sub_004858F4(?:?; ?:?; ?:?); dynamic;//004858F4
    //procedure sub_00485588(?:?; ?:?; ?:?; ?:?); dynamic;//00485588
    procedure sub_00485764; dynamic;//00485764
    procedure sub_00482494; dynamic;//00482494
    //procedure sub_00486608(?:?); dynamic;//00486608
    procedure sub_00486368; dynamic;//00486368
    //procedure sub_004848C8(?:?); dynamic;//004848C8
    //procedure sub_004848A4(?:?); dynamic;//004848A4
    //procedure sub_0048437C(?:?); dynamic;//0048437C
    //procedure sub_004843B0(?:?; ?:?; ?:?); dynamic;//004843B0
    //procedure sub_004842E0(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//004842E0
    procedure sub_004842B8; dynamic;//004842B8
    //procedure sub_00484704(?:?; ?:?); dynamic;//00484704
    //procedure sub_004846B4(?:?; ?:?); dynamic;//004846B4
    //procedure sub_004845BC(?:?; ?:?; ?:?); dynamic;//004845BC
    //procedure sub_00484588(?:?); dynamic;//00484588
    //procedure sub_00482DC8(?:?; ?:?); dynamic;//00482DC8
    //procedure sub_00484544(?:?; ?:?; ?:?); dynamic;//00484544
    //procedure sub_004869A0(?:?; ?:?); dynamic;//004869A0
    //procedure sub_0048451C(?:?; ?:?); dynamic;//0048451C
    //procedure sub_00484754(?:?; ?:?); dynamic;//00484754
    procedure sub_0048555C; dynamic;//0048555C
    //procedure sub_00484E9C(?:?); dynamic;//00484E9C
    procedure sub_004854CC; dynamic;//004854CC
    //procedure sub_00483238(?:?; ?:?); dynamic;//00483238
    procedure sub_004841BC; dynamic;//004841BC
    procedure sub_0048673C; dynamic;//0048673C
    //procedure sub_00486204(?:?; ?:?); dynamic;//00486204
    procedure sub_0042A774; dynamic;//004824AC
    procedure sub_0042A81C; dynamic;//004824C8
    //procedure sub_0042A834(?:?); dynamic;//004824E4
    procedure SetLeft(Value:Integer);//00482B8C
    procedure SetTop(Value:Integer);//00482BCC
    procedure SetHelpContext(Value:THelpContext);//00482E38
    procedure SetHelpKeyword(Value:String);//00482E68
    function GetClientWidth:Integer;//00482F94
    function GetClientHeight:Integer;//00482FE8
    function ClientToScreen(const Point:TPoint):TPoint;//004830E0
    function ScreenToClient(const Point:TPoint):TPoint;//0048311C
    procedure ReadIsControl(Reader:TReader);//004853FC
    procedure WriteIsControl(Writer:TWriter);//0048541C
    function IsStoredHelpKeyword(Value:String):Boolean;//0048641C
  end;
  TWinControlActionLink = class(TControlActionLink)
  public
    ...........................FClient:TWinControl;//f20
    //procedure v0(?:?); virtual;//v0//00486B44
    //function v30:?; virtual;//v30//00486B74
    //procedure v5C(?:?); virtual;//v5C//00486B90
  end;
  TImeMode = (imDisable, imClose, imOpen, imDontCare, imSAlpha, imAlpha, imHira, imSKata, imKata, imChinese, imSHanguel, imHanguel);
  TBevelCut = (bvNone, bvLowered, bvRaised, bvSpace);
  TBevelEdge = (beLeft, beTop, beRight, beBottom);
  TBevelEdges = set of TBevelEdge;
  TBevelKind = (bkNone, bkTile, bkSoft, bkFlat);
  TWinControl = class(TControl)
  public
    FAlignLevel:Word;//f160
    FBevelEdges:TBevelEdges;//f162
    FBevelInner:TBevelCut;//f163
    FBevelOuter:TBevelCut;//f164
    FBevelKind:TBevelKind;//f165
    FBevelWidth:TBevelWidth;//f168
    FBorderWidth:TBorderWidth;//f16C
    FBrush:TBrush;//f170
    FDefWndProc:Pointer;//f174
    FDockClients:TList;//f178
    FDockManager:IDockManager;//f17C
    FHandle:HWND;//f180
    FImeMode:TImeMode;//f184
    FImeName:TImeName;//f188
    FObjectInstance:Pointer;//f18C
    FParentWindow:HWND;//f190
    FTabList:TList;//f194
    FControls:TList;//f198
    FWinControls:TList;//f19C
    FTabOrder:Integer;//f1A0
    FTabStop:Boolean;//f1A4
    FCtl3D:Boolean;//f1A5
    FShowing:Boolean;//f1A6
    FUseDockManager:Boolean;//f1A7
    FDockSite:Boolean;//f1A8
    FParentCtl3D:Boolean;//f1A9
    FOnDockDrop:TDockDropEvent;//f1B0
    f1B2:word;//f1B2
    f1B4:dword;//f1B4
    FOnDockOver:TDockOverEvent;//f1B8
    f1BA:word;//f1BA
    f1BC:dword;//f1BC
    FOnEnter:TNotifyEvent;//f1C0
    f1C2:word;//f1C2
    f1C4:dword;//f1C4
    FOnExit:TNotifyEvent;//f1C8
    f1CA:word;//f1CA
    f1CC:dword;//f1CC
    FOnGetSiteInfo:TGetSiteInfoEvent;//f1D0
    f1D2:word;//f1D2
    f1D4:dword;//f1D4
    FOnKeyDown:TKeyEvent;//f1D8
    f1DA:word;//f1DA
    f1DC:TMessageForm;//f1DC
    FOnKeyPress:TKeyPressEvent;//f1E0
    f1E2:word;//f1E2
    f1E4:dword;//f1E4
    FOnKeyUp:TKeyEvent;//f1E8
    f1EA:word;//f1EA
    f1EC:dword;//f1EC
    FOnUnDock:TUnDockEvent;//f1F0
    f1F2:word;//f1F2
    f1F4:dword;//f1F4
    FDoubleBuffered:Boolean;//f1F8
    FInImeComposition:Boolean;//f1F9
    FDesignSize:TPoint;//f1FA
    procedure DefaultHandler(var Message:void ); virtual;//00489060
    destructor Destroy; virtual;//00486D28
    //procedure v0(?:?); virtual;//v0//0048CF6C
    procedure DefineProperties(Filer:TFiler); virtual;//v4//00488648
    //procedure v14(?:?); virtual;//v14//00486F38
    constructor v2C; virtual;//v2C//00486BAC
    //function v30(?:?; ?:?):?; virtual;//v30//0048C994
    //function v34(?:?; ?:?):?; virtual;//v34//0048CFAC
    //procedure v38(?:?; ?:?; ?:?; ?:?); virtual;//v38//0048CEBC
    //procedure v40(?:?); virtual;//v40//0048C208
    //procedure v44(?:?); virtual;//v44//0048C23C
    //function v48(?:?):?; virtual;//v48//0048BDF8
    //procedure v74(?:?); virtual;//v74//00488EC8
    procedure v7C; virtual;//v7C//0048BE68
    procedure v80; virtual;//v80//0048BF68
    //procedure v84(?:?; ?:?; ?:?; ?:?); virtual;//v84//0048B89C
    procedure v88; virtual;//v88//0048BF40
    //procedure v8C(?:?); virtual;//v8C//00486FB0
    procedure AlignControls(AControl:TControl; var Rect:TRect); virtual;//v90//004876D8
    procedure v94; virtual;//v94//004887E4
    //procedure v98(?:?); virtual;//v98//00488034
    //procedure v9C(?:?); virtual;//v9C//004883D8
    procedure CreateWnd; virtual;//vA0//004881C0
    //function vA4(?:?; ?:?):?; virtual;//vA4//004888A4
    //procedure vA8(?:?; ?:?; ?:?); virtual;//vA8//004888C0
    procedure DestroyWindowHandle; virtual;//vAC//00488714
    procedure vB0; virtual;//vB0//004886A4
    //procedure vB4(?:?); virtual;//vB4//0048C10C
    //procedure vB8(?:?); virtual;//vB8//0048939C
    procedure SetParentBackground(Value:Boolean); virtual;//vBC//0048D7F0
    //procedure vC0(?:?); virtual;//vC0//0048BBC8
    procedure vC4; virtual;//vC4//0048C028
    //procedure WMDestroy(?:?); message WM_DESTROY;//0048ADD8
    //procedure WMMove(?:?); message WM_MOVE;//00489E3C
    //procedure WMSize(?:?); message WM_SIZE;//00489DF8
    //procedure WMSetFocus(?:?); message WM_SETFOCUS;//00489F9C
    //procedure WMKillFocus(?:?); message WM_KILLFOCUS;//00489FC0
    procedure WMPaint(var Message:TWMPaint); message WM_PAINT;//0048985C
    //procedure WMEraseBkgnd(?:?); message WM_ERASEBKGND;//00489BFC
    //procedure WMSysColorChange(?:?); message WM_SYSCOLORCHANGE;//00489A40
    //procedure WMSettingChange(?:?); message WM_SETTINGCHANGE;//00489A68
    //procedure WMFontChange(?:?); message WM_FONTCHANGE;//00489A94
    //procedure WMTimeChange(?:?); message WM_TIMECHANGE;//00489AB8
    //procedure WMSetCursor(?:?); message WM_SETCURSOR;//00489E60
    //procedure WMDrawItem(?:?); message WM_DRAWITEM;//00489B9C
    //procedure WMMeasureItem(?:?); message WM_MEASUREITEM;//00489BCC
    //procedure WMDeleteItem(?:?); message WM_DELETEITEM;//00489B6C
    //procedure WMVKeyToItem(?:?); message WM_VKEYTOITEM;//0048ADA8
    //procedure WMCharToItem(?:?); message WM_CHARTOITEM;//0048AD34
    //procedure WMCompareItem(?:?); message WM_COMPAREITEM;//00489B3C
    //procedure WMWindowPosChangingMsg(?:?); message WM_WINDOWPOSCHANGING;//00489D88
    //procedure WMWindowPosChangedMsg(?:?); message WM_WINDOWPOSCHANGED;//00489CA0
    //procedure WMNotify(?:?); message WM_NOTIFY;//00489A10
    //procedure WMContextMenu(?:?); message WM_CONTEXTMENU;//0048D684
    //procedure WMNCDestroy(?:?); message WM_NCDESTROY;//0048AE24
    //procedure WMNCCalcSize(?:?); message WM_NCCALCSIZE;//0048D2E0
    //procedure WMNCHitTest(?:?); message WM_NCHITTEST;//0048AE54
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//0048D3C4
    //procedure WMKeyDown(?:?); message WM_KEYDOWN;//0048A93C
    //procedure WMKeyUp(?:?); message WM_KEYUP;//0048AA78
    //procedure WMChar(?:?); message WM_CHAR;//0048AB8C
    //procedure WMSysKeyDown(?:?); message WM_SYSKEYDOWN;//0048A978
    //procedure WMSysKeyUp(?:?); message WM_SYSKEYUP;//0048AAA4
    //procedure sub_00489FE4(?:?); dynamic;//00489FE4
    //procedure sub_0048A00C(?:?); dynamic;//0048A00C
    //procedure WMCommand(?:?); message WM_COMMAND;//004899E0
    //procedure WMSysCommand(?:?); message WM_SYSCOMMAND;//0048AC80
    //procedure WMHScroll(?:?); message WM_HSCROLL;//00489ADC
    //procedure WMVScroll(?:?); message WM_VSCROLL;//00489B0C
    //procedure WMParentNotify(?:?); message WM_PARENTNOTIFY;//0048AD64
    //procedure WMQueryNewPalette(?:?); message WM_QUERYNEWPALETTE;//0048AEFC
    //procedure WMPaletteChanged(?:?); message WM_PALETTECHANGED;//0048AF30
    //procedure sub_0048D780(?:?); dynamic;//0048D780
    //procedure CMDialogKey(?:?); message CM_DIALOGKEY;//0048B0EC
    //procedure CMDialogChar(?:?); message CM_DIALOGCHAR;//0048B108
    //procedure CMFocusChenged(?:?); message CM_FOCUSCHANGED;//0048B124
    //procedure CMVisibleChanged(?:?); message CM_VISIBLECHANGED;//0048B140
    //procedure CMEnabledChanged(?:?); message CM_ENABLEDCHANGED;//0048B1C4
    //procedure CMColorChanged(?:?); message CM_COLORCHANGED;//0048B224
    //procedure CMFontChanged(?:?); message CM_FONTCHANGED;//0048B260
    //procedure CMCursorChanged(?:?); message CM_CURSORCHANGED;//0048B2B0
    //procedure CMCtl3DChanged(?:?); message CM_CTL3DCHANGED;//0048B350
    //procedure CMParentCtl3DChanged(?:?); message CM_PARENTCTL3DCHANGED;//0048B3A8
    //procedure CMShowingChanged(?:?); message CM_SHOWINGCHANGED;//0048B188
    //procedure CMEnter(?:?); message CM_ENTER;//0048AFC8
    //procedure CMExit(?:?); message CM_EXIT;//0048B048
    //procedure CMDesignHitTest(?:?); message CM_DESIGNHITTEST;//0048B068
    //procedure CMShowHintChanged(?:?); message CM_SHOWHINTCHANGED;//0048AF5C
    //procedure CMSysColorChange(?:?); message CM_SYSCOLORCHANGE;//0048B400
    //procedure CMWinIniChange(?:?); message CM_WININICHANGE;//0048B41C
    //procedure CMFontChange(?:?); message CM_FONTCHANGE;//0048B438
    //procedure CMTimeChange(?:?); message CM_TIMECHANGE;//0048B454
    //procedure CMControlLIstChange(?:?); message CM_CONTROLLISTCHANGE;//0048B4EC
    //procedure CMChildKey(?:?); message CM_CHILDKEY;//0048B0C0
    //procedure CMDrag(?:?); message CM_DRAG;//0048B470
    //procedure CMRecreateWnd(?:?); message CM_RECREATEWND;//00488978
    //procedure CMInvalidate(?:?); message CM_INVALIDATE;//0048BE84
    //procedure CMSysFontChanged(?:?); message CM_SYSFONTCHANGED;//0048B518
    //procedure CMChanged(?:?); message CM_CHANGED;//0048B094
    //procedure CMDockClient(?:?); message CM_DOCKCLIENT;//0048A6B0
    //procedure CMUndockClient(?:?); message CM_UNDOCKCLIENT;//0048A7AC
    //procedure CMFloat(?:?); message CM_FLOAT;//0048A7F0
    //procedure CMBorderChanged(?:?); message CM_BORDERCHANGED;//0048B2FC
    procedure CMBiDiModeChanged(var Message:TMessage); message CM_BIDIMODECHANGED;//0048AF84
    //procedure sub_0048B5F4(?:?); dynamic;//0048B5F4
    //procedure sub_0048B70C(?:?); dynamic;//0048B70C
    //procedure sub_0048B770(?:?); dynamic;//0048B770
    //procedure sub_0048B7D4(?:?); dynamic;//0048B7D4
    //procedure sub_0048B850(?:?); dynamic;//0048B850
    //procedure sub_0048C6B4(?:?); dynamic;//0048C6B4
    procedure sub_0048C078; dynamic;//0048C078
    //procedure sub_004879C4(?:?); dynamic;//004879C4
    //procedure sub_0048A270(?:?; ?:?; ?:?); dynamic;//0048A270
    procedure sub_0048BFC8; dynamic;//0048BFC8
    //procedure sub_0048A3D4(?:?; ?:?); dynamic;//0048A3D4
    //procedure sub_0048AAD0(?:?); dynamic;//0048AAD0
    //procedure sub_0048A9B4(?:?; ?:?); dynamic;//0048A9B4
    //procedure sub_0048A878(?:?; ?:?); dynamic;//0048A878
    //procedure sub_0048A478(?:?; ?:?; ?:?; ?:?); dynamic;//0048A478
    //procedure sub_0048A364(?:?; ?:?); dynamic;//0048A364
    //procedure sub_0048A208(?:?); dynamic;//0048A208
    procedure sub_004878D0; dynamic;//004878D0
    procedure sub_0048A244; dynamic;//0048A244
    procedure sub_0048A218; dynamic;//0048A218
    //procedure sub_0048A2D4(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//0048A2D4
    //procedure sub_0048A320(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//0048A320
    //procedure sub_0048A1E8(?:?; ?:?); dynamic;//0048A1E8
    //procedure sub_0048A544(?:?); dynamic;//0048A544
    procedure sub_0048A538; dynamic;//0048A538
    //procedure sub_00483CD4(?:?); dynamic;//0048BD54
    //procedure sub_0048251C(?:?); dynamic;//0048AE90
    procedure sub_00486368; dynamic;//0048CF54
    //procedure sub_00483238(?:?; ?:?); dynamic;//0048BA00
    procedure sub_0048673C; dynamic;//0048C260
    //procedure sub_00486204(?:?; ?:?); dynamic;//0048CF00
    //procedure sub_0042A808(?:?; ?:?); dynamic;//0048C944
    //procedure sub_0042A788(?:?; ?:?); dynamic;//0048C8F0
    procedure DisableAlign;//00487874
    procedure EnableAlign;//00487888
    procedure ReadDesignSize(Reader:TReader);//00488444
    procedure WriteDesignSize(Writer:TWriter);//00488490
    procedure RecreateWnd;//00488950
    procedure PaintHandler(var Message:TWMPaint);//00489230
    function GetHandle:HWND;//0048C0E8
    function HandleAllocated:Boolean;//0048C5B8
  end;
  TGraphicControl = class(TControl)
  public
    ....................................................................................................................................................................................................................................................................................FCanvas:TCanvas;//f160
    destructor Destroy; virtual;//0048D8B8
    constructor v2C; virtual;//v2C//0048D848
    procedure v8C; virtual;//v8C//0048D9B8
    //procedure WMPaint(?:?); message WM_PAINT;//0048D908
  end;
  TCustomControl = class(TWinControl)
  public
    .............................................................................FCanvas:TCanvas;//f208
    destructor Destroy; virtual;//0048E560
    constructor v2C; virtual;//v2C//0048E4F0
    //procedure vB8(?:?); virtual;//vB8//0048E5D0
    procedure vC8; virtual;//vC8//0048E67C
    procedure WMPaint(Message:TWMPaint); message WM_PAINT;//0048E5A0
  end;
  THintWindow = class(TCustomControl)
  public
    FActivating:Boolean;//f210
    FLastActive:Cardinal;//f214
    constructor v2C; virtual;//v2C//0048D9C4
    //procedure v98(?:?); virtual;//v98//0048DA48
    procedure vC8; virtual;//vC8//0048DB48
    //procedure vCC(?:?); virtual;//vCC//0048E008
    //procedure vD0(?:?; ?:?); virtual;//vD0//0048DD54
    //procedure vD4(?:?; ?:?); virtual;//vD4//0048DF6C
    //procedure vD8(?:?; ?:?; ?:?); virtual;//vD8//0048DFA0
    //function vDC(?:?):?; virtual;//vDC//0048DBF8
    //procedure WMNCHitTest(?:?); message WM_NCHITTEST;//0048DAC8
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//0048DAE4
    //procedure sub_0048E07C(?:?); dynamic;//0048E07C
    //procedure CMTextChanged(?:?); message CM_TEXTCHANGED;//0048DCA0
  end;
  TDragImageList = class(TCustomImageList)
  public
    FDragCursor:TCursor;//f68
    FDragging:Boolean;//f6A
    FDragHandle:HWND;//f6C
    FDragHotspot:TPoint;//f70
    FDragIndex:Integer;//f78
    procedure v34; virtual;//v34//0048E104
    //procedure v40(?:?); virtual;//v40//0048E2A0
  end;
  TImageList = class(TDragImageList)
  end;
  TDockZone = class(TObject)
  public
    FChildControl:TControl;//f4
    FChildZones:TDockZone;//f8
    FNextSibling:TDockZone;//fC
    FOrientation:TDockOrientation;//f10
    FParentZone:TDockZone;//f14
    FPrevSibling:TDockZone;//f18
    FTree:TDockTree;//f1C
    FZoneLimit:Integer;//f20
    FOldSize:Integer;//f24
    constructor Create;//0048E704
  end;
  TDockTree = class(TInterfacedObject)
  public
    FBorderWidth:Integer;//fC
    FBrush:TBrush;//f10
    FDockSite:TWinControl;//f14
    FGrabberSize:Integer;//f18
    FGrabbersOnTop:Boolean;//f1C
    FOldRect:TRect;//f1D
    FOldWndProc:TWndMethod;//f30
    f34:TControl;//f34
    FReplacementZone:TDockZone;//f38
    FScaleBy:Double;//f40
    f44:dword;//f44
    FShiftScaleOrient:TDockOrientation;//f48
    FShiftBy:Integer;//f4C
    FSizePos:TPoint;//f50
    FSizingDC:HDC;//f58
    FSizingWnd:HWND;//f5C
    FSizingZone:TDockZone;//f60
    FTopZone:TDockZone;//f64
    FTopXYLimit:Integer;//f68
    FUpdateCount:Integer;//f6C
    FVersion:Integer;//f70
    destructor Destroy; virtual;//0048F194
    //procedure v0(?:?; ?:?); virtual;//v0//0048F208
    //function v4(?:?; ?:?):?; virtual;//v4//0048F41C
    //procedure v8(?:?; ?:?; ?:?); virtual;//v8//0048F45C
    //procedure vC(?:?); virtual;//vC//0048FEA0
    //procedure v10(?:?; ?:?; ?:?); virtual;//v10//004901EC
    //procedure v14(?:?; ?:?; ?:?; ?:?); virtual;//v14//00490490
    //procedure v18(?:?); virtual;//v18//0049070C
    //procedure v1C(?:?); virtual;//v1C//00490DB0
    //procedure v20(?:?); virtual;//v20//00490AFC
    constructor v24; virtual;//v24//0048F020
    //procedure v28(?:?); virtual;//v28//00490300
  end;
  TMouse = class(TObject)
  public
    FDragImmediate:Boolean;//f4
    FDragThreshold:Integer;//f8
    FMousePresent:Boolean;//fC
    FNativeWheelSupport:Boolean;//fD
    FScrollLines:Integer;//f10
    FScrollLinesMessage:UINT;//f14
    FWheelHwnd:HWND;//f18
    FWheelMessage:UINT;//f1C
    FWheelPresent:Boolean;//f20
    FWheelSupportMessage:UINT;//f24
  end;
  TCustomListControl = class(TWinControl)
  public
    procedure vC8; virtual; abstract;//vC8//00403328
    procedure vCC; virtual; abstract;//vCC//00403328
    procedure vD0; virtual; abstract;//vD0//00403328
    procedure vD4; virtual; abstract;//vD4//00403328
    procedure Clear; virtual; abstract;//vD8//00403328
    procedure vDC; virtual; abstract;//vDC//00403328
    procedure vE0; virtual; abstract;//vE0//00403328
    procedure vE4; virtual; abstract;//vE4//00403328
    //procedure vE8(?:?); virtual;//vE8//00492588
    procedure vEC; virtual; abstract;//vEC//00403328
  end;
  TCustomMultiSelectListControl = class(TCustomListControl)
  public
    ........................FMultiSelect:Boolean;//f208
  end;
  TSiteList = class(TList)
  public
    procedure v8; virtual;//v8//0047FD48
  end;
    procedure sub_0047F678(?:TAlignment);//0047F678
    //function sub_0047F6A0(?:?; ?:?; ?:?; ?:?):?;//0047F6A0
    //function sub_0047F754(?:?):?;//0047F754
    //function sub_0047F79C(?:HWND):?;//0047F79C
    //function sub_0047F80C(?:?; ?:?; ?:?):?;//0047F80C
    //function sub_0047F9F4(?:?; ?:?):?;//0047F9F4
    //function sub_0047FA1C(?:?; ?:?):?;//0047FA1C
    //procedure sub_0047FA44(?:?; ?:?);//0047FA44
    //procedure sub_0047FA98(?:?; ?:?);//0047FA98
    //procedure sub_0047FAEC(?:TSpeedButton; ?:?);//0047FAEC
    //function sub_0047FB54:?;//0047FB54
    procedure sub_0047FB90(?:TWinControl);//0047FB90
    //function sub_0047FC50(?:?; ?:HWND; ?:?):?;//0047FC50
    //function sub_0047FCA4(?:?):?;//0047FCA4
    //procedure sub_0047FCE4(?:?; ?:Pointer);//0047FCE4
    procedure sub_0047FD48;//0047FD48
    //function sub_0047FD90(?:?):?;//0047FD90
    //procedure sub_0047FE20(?:?);//0047FE20
    //function sub_0047FE90(?:?):?;//0047FE90
    //procedure sub_0047FEBC(?:?; ?:?);//0047FEBC
    //procedure sub_0047FED4(?:?);//0047FED4
    //procedure sub_0047FF08(?:?; ?:?);//0047FF08
    //procedure sub_0047FF28(?:?);//0047FF28
    //function sub_00480038:?;//00480038
    //function sub_00480050(?:?; ?:?):?;//00480050
    procedure sub_00480080;//00480080
    //function sub_0048008C:?;//0048008C
    procedure sub_004800A4;//004800A4
    procedure BeforeDestruction;//00480104
    procedure AfterConstruction;//00480120
    procedure BeforeDestruction;//0048013C
    constructor Create;//00480148
    //procedure sub_0048018C(?:?);//0048018C
    //procedure sub_004801C8(?:?; ?:?; ?:?);//004801C8
    //procedure sub_004801F8(?:?; ?:?; ?:?; ?:?);//004801F8
    //function sub_00480240(?:?; ?:?):?;//00480240
    //function sub_00480278:?;//00480278
    procedure sub_00480298;//00480298
    procedure sub_004802C4;//004802C4
    procedure BeforeDestruction;//004802F0
    constructor Create;//004802FC
    destructor Destroy;//00480370
    //procedure sub_004803AC(?:?);//004803AC
    //procedure sub_00480434(?:?; ?:?; ?:?);//00480434
    //function sub_00480464(?:?; ?:?):?;//00480464
    //procedure sub_0048049C(?:?);//0048049C
    procedure sub_0048054C;//0048054C
    procedure sub_0048056C;//0048056C
    //function sub_0048058C(?:?; ?:?):?;//0048058C
    //function sub_004805AC:?;//004805AC
    procedure BeforeDestruction;//004805C4
    //function sub_00480664(?:?; ?:?):?;//00480664
    //function sub_00480828(?:?):?;//00480828
    //function sub_00480874(?:?; ?:?):?;//00480874
    //procedure sub_004809D8(?:TPanel; ?:?);//004809D8
    //function sub_00480A48(?:?; ?:?; ?:?; ?:?; ?:?):?;//00480A48
    //function sub_00480AB0(?:HWND):?;//00480AB0
    //function sub_00480B28(?:?):?;//00480B28
    //function sub_00480B6C(?:?; ?:?; ?:?; ?:?):?;//00480B6C
    //function sub_00480BD8(?:?):?;//00480BD8
    //function sub_00480C28:?;//00480C28
    //procedure sub_00480CF8(?:?);//00480CF8
    //procedure sub_00481028(?:TDragDockObjectEx; ?:?; ?:?);//00481028
    //procedure sub_004811D0(?:TControl; ?:?; ?:Integer);//004811D0
    //function sub_004813B4(?:?):?;//004813B4
    procedure DragDone(Drop:Boolean);//00481434
    procedure CancelDrag;//00481730
    //function sub_00481748(?:?):?;//00481748
    //function sub_00481798(?:?; ?:?):?;//00481798
    //procedure sub_004817F4(?:?; ?:?);//004817F4
    //procedure sub_0048182C(?:?; ?:?);//0048182C
    procedure MoveWindowOrg(DC:HDC; DX:Integer; DY:Integer);//00481868
    procedure FreeDeviceContext;//004818A4
    procedure FreeDeviceContexts;//00481960
    destructor Destroy;//00481A0C
    procedure sub_00481A48;//00481A48
    procedure sub_00481B3C(?:TCanvas; ?:TControl);//00481B3C
    procedure sub_00481B68(?:TCanvas);//00481B68
    constructor Create;//00481BA0
    //procedure sub_00481BF0(?:?);//00481BF0
    procedure sub_00481D78;//00481D78
    //procedure sub_00481D9C(?:?);//00481D9C
    //function sub_00481DC0(?:?):?;//00481DC0
    //function sub_00481EC4:?;//00481EC4
    //function sub_00481F48:?;//00481F48
    //function sub_00481F94:?;//00481F94
    //function sub_00481FE0:?;//00481FE0
    //function sub_00482028:?;//00482028
    //procedure sub_00482064(?:?);//00482064
    //procedure sub_00482090(?:?);//00482090
    //procedure sub_004820BC(?:?);//004820BC
    //procedure sub_004820EC(?:?);//004820EC
    //procedure sub_00482118(?:?; ?:?);//00482118
    //function sub_00482148:?;//00482148
    //procedure sub_004821CC(?:?);//004821CC
    //procedure sub_004821F8(?:?);//004821F8
    //procedure sub_00482224(?:?);//00482224
    constructor sub_00482250;//00482250
    destructor Destroy;//00482378
    //function sub_00482460:?;//00482460
    function GetEnabled:Boolean;//00482478
    procedure sub_00482494;//00482494
    procedure sub_0042A774;//004824AC
    procedure sub_0042A81C;//004824C8
    //procedure sub_0042A834(?:?);//004824E4
    //procedure sub_0048251C(?:?);//0048251C
    function GetAction:TBasicAction;//004825B0
    procedure SetAnchors(Value:TAnchors);//004825DC
    procedure SetAction(Value:TBasicAction);//00482608
    function IsStoredAnchors(Value:TAnchors):Boolean;//004826B4
    procedure SetDragMode(Value:TDragMode);//004826DC
    procedure sub_004826F8;//004826F8
    procedure sub_0048271C;//0048271C
    //procedure sub_00482748(?:?);//00482748
    //procedure sub_004827F4(?:?; ?:?);//004827F4
    procedure SetAlign(Value:TAlign);//0048284C
    //procedure sub_00482930(?:?; ?:?; ?:?; ?:?);//00482930
    procedure sub_00482A00(?:TControl);//00482A00
    procedure SetWidth(Value:Integer);//00482C0C
    procedure SetHeight(Value:Integer);//00482C4C
    //procedure sub_00482C8C(?:?; ?:?);//00482C8C
    //procedure sub_00482DC8(?:?; ?:?);//00482DC8
    //procedure sub_00482E9C(?:?; ?:TToolWindow);//00482E9C
    procedure sub_00482ECC(?:TControl; ?:TPoint);//00482ECC
    //procedure sub_00482F18(?:TControl; ?:?);//00482F18
    //procedure sub_00482F5C(?:?);//00482F5C
    procedure sub_00482FB8(?:TCustomForm; ?:Integer);//00482FB8
    procedure sub_0048300C(?:TCustomForm; ?:Integer);//0048300C
    //procedure sub_0048303C(?:?);//0048303C
    procedure sub_00483158(?:TControl; ?:TControl);//00483158
    //procedure sub_004831A0(?:TControl; ?:?; ?:?; ?:?);//004831A0
    procedure sub_00483218(?:TWinControl);//00483218
    //procedure sub_00483238(?:?; ?:?);//00483238
    procedure SetAutoSize(Value:Boolean);//00483450
    //procedure sub_00483488(?:?);//00483488
    //procedure sub_00483544(?:?; ?:?);//00483544
    //procedure sub_0048359C(?:?);//0048359C
    procedure SetVisible(Value:Boolean);//00483608
    procedure SetEnabled(Value:Boolean);//0048365C
    //function sub_00483694(?:TControl):?;//00483694
    //function sub_004836B8(?:TWinControl; ?:PChar; ?:?):?;//004836B8
    //function sub_004836E8(?:?):?;//004836E8
    //function sub_0048371C(?:?):?;//0048371C
    procedure SetPopupMenu(Value:TPopupMenu);//00483750
    procedure sub_00483788(?:TWinControl; ?:PChar);//00483788
    procedure GetCaption(?:AnsiString);//004837BC
    procedure SetCaption(Value:TCaption);//004837FC
    procedure SetBiDiMode(Value:TBiDiMode);//00483868
    //procedure sub_004838A4(?:?; ?:?);//004838A4
    procedure SetFont(Value:TFont);//00483908
    function IsStoredFont(Value:TFont):Boolean;//00483928
    function IsStoredShowHint(Value:Boolean):Boolean;//00483954
    function IsStoredBiDiMode(Value:TBiDiMode):Boolean;//00483974
    procedure SetParentFont(Value:Boolean);//00483990
    procedure SetShowHint(Value:Boolean);//004839D8
    procedure SetParentShowHint(Value:Boolean);//00483A20
    procedure SetColor(Value:TColor);//00483A70
    function IsStoredColor(Value:TColor):Boolean;//00483AAC
    procedure SetParentColor(Value:Boolean);//00483AC8
    procedure SetParentBiDiMode(Value:Boolean);//00483B10
    procedure SetCursor(Value:TCursor);//00483B58
    //function sub_00483B94(?:TControl):?;//00483B94
    //procedure sub_00483BB0(?:TControl; ?:?);//00483BB0
    procedure sub_00483BE4(?:TWinControl);//00483BE4
    //procedure sub_00483C00(?:TControl; ?:?);//00483C00
    //procedure sub_00483CD4(?:?);//00483CD4
    //function sub_00483D18(?:?):?;//00483D18
    //function sub_00483DE0(?:?):?;//00483DE0
    //procedure sub_00483E7C(?:TControl; ?:?; ?:?);//00483E7C
    procedure sub_00483F08;//00483F08
    //procedure sub_00483F2C(?:?);//00483F2C
    procedure sub_00483F88(?:TWinControl);//00483F88
    //procedure sub_00483F9C(?:?);//00483F9C
    procedure sub_00483FDC;//00483FDC
    procedure sub_00484000(?:TWinControl);//00484000
    procedure sub_00484018;//00484018
    procedure sub_00484118;//00484118
    //function sub_0048412C(?:TControl):?;//0048412C
    procedure sub_0048415C;//0048415C
    //function sub_0048418C(?:?):?;//0048418C
    procedure sub_004841BC;//004841BC
    //procedure sub_004841E0(?:TControl; ?:?; ?:Integer);//004841E0
    procedure sub_004842B8;//004842B8
    //function sub_004842C4(?:TWinControl):?;//004842C4
    //procedure sub_004842E0(?:?; ?:?; ?:?; ?:?; ?:?);//004842E0
    //procedure sub_00484338(?:?; ?:?; ?:?);//00484338
    //procedure sub_0048437C(?:?);//0048437C
    //procedure sub_004843B0(?:?; ?:?; ?:?);//004843B0
    //procedure sub_004843F4(?:?);//004843F4
    //procedure sub_0048451C(?:?; ?:?);//0048451C
    //procedure sub_00484544(?:?; ?:?; ?:?);//00484544
    //procedure sub_00484588(?:?);//00484588
    //procedure sub_004845BC(?:?; ?:?; ?:?);//004845BC
    //procedure sub_004846B4(?:?; ?:?);//004846B4
    //procedure sub_00484704(?:?; ?:?);//00484704
    //procedure sub_00484754(?:?; ?:?);//00484754
    //procedure sub_004848A4(?:?);//004848A4
    //procedure sub_004848C8(?:?);//004848C8
    //procedure sub_004848EC(?:?; ?:?);//004848EC
    //function sub_004849FC(?:?; ?:TWinControl; ?:?; ?:?):?;//004849FC
    //function sub_00484C34(?:?; ?:TPoint):?;//00484C34
    //procedure sub_00484CE4(?:?; ?:?);//00484CE4
    //function sub_00484D04(?:?; ?:?):?;//00484D04
    //function sub_00484D20(?:?; ?:?):?;//00484D20
    //function sub_00484D68(?:TControl; ?:?; ?:?):?;//00484D68
    //function sub_00484DDC(?:TControl; ?:?; ?:?):?;//00484DDC
    //procedure sub_00484E1C(?:?; ?:?; ?:?; ?:?);//00484E1C
    //procedure sub_00484E64(?:TControl; ?:?);//00484E64
    //procedure sub_00484E9C(?:?);//00484E9C
    //procedure sub_00484EF0(?:?; ?:?; ?:?);//00484EF0
    //function sub_00484FFC(?:TPersistent; ?:?; ?:HWND; ?:?):?;//00484FFC
    procedure sub_00485048(?:TControl);//00485048
    //procedure sub_004850E8(?:TControl; ?:?);//004850E8
    procedure sub_0048513C;//0048513C
    //procedure sub_00485148(?:?);//00485148
    procedure DefaultHandler(var Message:void );//00485330
    function DoWriteIsControl:Boolean;//0048543C
    procedure DefineProperties(Filer:TFiler);//0048547C
    procedure sub_004854CC;//004854CC
    procedure sub_0048555C;//0048555C
    //procedure sub_00485588(?:?; ?:?; ?:?; ?:?);//00485588
    //procedure sub_004855D0(?:TControl; ?:?; ?:?; ?:?);//004855D0
    //procedure WMLButtonDown(?:?);//00485670
    //procedure WMNCLButtonDown(?:?);//004856D4
    //procedure WMLButtonDblClk(?:?);//004856FC
    procedure sub_00485764;//00485764
    //function sub_00485780(?:TControl; ?:?; ?:?):?;//00485780
    //procedure WMRButtonDown(?:?);//00485824
    //procedure WMRButtonDblClk(?:?);//00485858
    //procedure WMMButtonDown(?:?);//0048588C
    //procedure WMMButtonDblClk(?:?);//004858C0
    //procedure sub_004858F4(?:?; ?:?; ?:?);//004858F4
    //procedure WMMouseMove(?:?);//00485938
    //procedure sub_004859D0(?:?; ?:?; ?:?; ?:?);//004859D0
    //procedure sub_00485A18(?:TControl; ?:?; ?:?);//00485A18
    //procedure WMLButtonUp(?:?);//00485A64
    //procedure WMRButtonUp(?:?);//00485AEC
    //procedure WMMButtonUp(?:?);//00485B14
    //procedure WMMouseWheel(?:?);//00485B3C
    //procedure WMCancelMode(?:?);//00485BA8
    //procedure WMWindowPosChangedMsg(?:?);//00485C00
    //procedure CMVisibleChanged(?:?);//00485D24
    //procedure CMEnabledChanged(?:?);//00485D68
    //procedure CMFontChanged(?:?);//00485D80
    //procedure CMColorChanged(?:?);//00485D98
    //procedure CMParentColorChanged(?:?);//00485DB0
    //procedure CMParentBiDiModeChanged(?:?);//00485DFC
    //procedure CMMouseWheel(?:?);//00485E38
    //procedure CMBiDiModeChanged(?:?);//00485EBC
    //procedure CMParentShowHintChanged(?:?);//00485EE8
    //procedure CMParentFontChanged(?:?);//00485F24
    //procedure CMSysFontChanged(?:?);//00485F70
    //procedure CMHitTest(?:?);//00485FA8
    //procedure CMMouseEnter(?:?);//00485FC4
    //procedure CMMouseLeave(?:?);//00485FF4
    //procedure CMDesignHitTest(?:?);//00486024
    //function sub_0048603C(?:TControl; ?:?):?;//0048603C
    //procedure sub_004860CC(?:?);//004860CC
    //procedure CMFloat(?:?);//0048619C
    //procedure sub_00486204(?:?; ?:?);//00486204
    //procedure sub_00486338(?:?; ?:?);//00486338
    procedure sub_00486368;//00486368
    function IsStoredCaption(Value:TCaption):Boolean;//00486380
    function IsStoredEnabled(Value:Boolean):Boolean;//004863B4
    function IsStoredHint(Value:String):Boolean;//004863E8
    function IsStoredVisible(Value:Boolean):Boolean;//00486450
    function IsStoredOnClick(Value:TNotifyEvent):Boolean;//00486484
    procedure sub_004864B8;//004864B8
    //procedure sub_004864F8(?:?);//004864F8
    //function sub_004865B8(?:Double; ?:?):?;//004865B8
    //procedure sub_00486608(?:?);//00486608
    //function sub_004866DC:?;//004866DC
    //function sub_00486720:?;//00486720
    procedure sub_0048673C;//0048673C
    //function sub_00486778(?:TControl; ?:?):?;//00486778
    //function sub_004867CC(?:TControl):?;//004867CC
    procedure sub_004867F8;//004867F8
    //procedure CMHintShow(?:?);//00486818
    //procedure WMContextMenu(?:?);//00486854
    //procedure sub_004869A0(?:?; ?:?);//004869A0
    procedure SetConstraints(Value:TSizeConstraints);//004869E4
    //procedure sub_00486A04(?:TCustomStatusBar; ?:?; ?:?; ?:?);//00486A04
    //procedure sub_00486B44(?:?);//00486B44
    //function sub_00486B74:?;//00486B74
    //procedure sub_00486B90(?:?);//00486B90
    constructor sub_00486BAC;//00486BAC
    //function sub_00486D08(?:TCustomActionBar):?;//00486D08
    destructor Destroy;//00486D28
    procedure sub_00486E34(?:TWinControl);//00486E34
    //procedure sub_00486F38(?:?);//00486F38
    //procedure sub_00486FB0(?:?);//00486FB0
    //function sub_00486FC0(?:?; ?:?; ?:?; ?:?):?;//00486FC0
    //procedure sub_00487088(?:?; ?:?; ?:?; ?:?);//00487088
    procedure DoAlign(AAlign:TAlign);//004874D8
    function AlignWork:Boolean;//00487674
    procedure AlignControls(AControl:TControl; var Rect:TRect);//004876D8
    procedure sub_004877DC(?:TWinControl; ?:TControl);//004877DC
    procedure sub_004878BC(?:TWinControl);//004878BC
    procedure sub_004878D0;//004878D0
    //procedure sub_004879C4(?:?);//004879C4
    //function sub_00487B2C(?:TWinControl; ?:?):?;//00487B2C
    //procedure sub_00487B60(?:TControl; ?:?);//00487B60
    //procedure sub_00487B90(?:?; ?:TControl);//00487B90
    procedure sub_00487BF4(?:TWinControl; ?:TControl);//00487BF4
    //procedure sub_00487C50(?:?; ?:TControl);//00487C50
    procedure sub_00487D40(?:TWinControl; ?:TControl);//00487D40
    //function sub_00487DCC(?:TWinControl; ?:?):?;//00487DCC
    //function sub_00487E38(?:TWinControl):?;//00487E38
    //procedure sub_00487E84(?:TWinControl; ?:?);//00487E84
    //procedure sub_00487ED8(?:TWinControl; ?:?);//00487ED8
    //procedure sub_00487F0C(?:TWinControl; ?:?; ?:?);//00487F0C
    //procedure sub_00487FB4(?:TWinControl; ?:?);//00487FB4
    //procedure sub_00488034(?:?);//00488034
    procedure CreateWnd;//004881C0
    //procedure sub_004883D8(?:?);//004883D8
    //function sub_004884F4(?:?; ?:?):?;//004884F4
    function DoWriteDesignSize:Boolean;//0048852C
    procedure DefineProperties(Filer:TFiler);//00488648
    procedure sub_004886A4;//004886A4
    procedure DestroyWindowHandle;//00488714
    //function sub_00488778(?:TWinControl; ?:TWinControl):?;//00488778
    procedure sub_004887E4;//004887E4
    //function sub_004888A4(?:?; ?:?):?;//004888A4
    //procedure sub_004888C0(?:?; ?:?; ?:?);//004888C0
    procedure sub_004888E4(?:TControl);//004888E4
    //procedure CMRecreateWnd(?:?);//00488978
    procedure sub_004889CC(?:Pointer);//004889CC
    procedure sub_00488ADC(?:TWinControl);//00488ADC
    procedure sub_00488B38(?:TWinControl; ?:HWND);//00488B38
    //function sub_00488C74(?:Pointer; ?:?):?;//00488C74
    //function sub_00488D4C(?:TWinControl; ?:?; ?:?; ?:?):?;//00488D4C
    //function sub_00488E08(?:TWinControl; ?:?):?;//00488E08
    //procedure sub_00488EC8(?:?);//00488EC8
    procedure DefaultHandler(var Message:void );//00489060
    //function sub_004891DC(?:?; ?:?):?;//004891DC
    //procedure sub_0048939C(?:?);//0048939C
    //procedure sub_004893D0(?:TWinControl; ?:HDC; ?:?);//004893D0
    //procedure sub_004896B4(?:Pointer; ?:?; ?:?; ?:?);//004896B4
    procedure WMPaint(var Message:TWMPaint);//0048985C
    //procedure WMCommand(?:?);//004899E0
    //procedure WMNotify(?:?);//00489A10
    //procedure WMSysColorChange(?:?);//00489A40
    //procedure WMSettingChange(?:?);//00489A68
    //procedure WMFontChange(?:?);//00489A94
    //procedure WMTimeChange(?:?);//00489AB8
    //procedure WMHScroll(?:?);//00489ADC
    //procedure WMVScroll(?:?);//00489B0C
    //procedure WMCompareItem(?:?);//00489B3C
    //procedure WMDeleteItem(?:?);//00489B6C
    //procedure WMDrawItem(?:?);//00489B9C
    //procedure WMMeasureItem(?:?);//00489BCC
    //procedure WMEraseBkgnd(?:?);//00489BFC
    //procedure WMWindowPosChangedMsg(?:?);//00489CA0
    //procedure WMWindowPosChangingMsg(?:?);//00489D88
    //procedure WMSize(?:?);//00489DF8
    //procedure WMMove(?:?);//00489E3C
    //procedure WMSetCursor(?:?);//00489E60
    //procedure WMSetFocus(?:?);//00489F9C
    //procedure WMKillFocus(?:?);//00489FC0
    //procedure sub_00489FE4(?:?);//00489FE4
    //procedure sub_0048A00C(?:?);//0048A00C
    procedure sub_0048A034(?:TWinControl);//0048A034
    procedure sub_0048A140(?:TWinControl);//0048A140
    //procedure sub_0048A1E8(?:?; ?:?);//0048A1E8
    //procedure sub_0048A208(?:?);//0048A208
    procedure sub_0048A218;//0048A218
    procedure sub_0048A244;//0048A244
    //procedure sub_0048A270(?:?; ?:?; ?:?);//0048A270
    //procedure sub_0048A2D4(?:?; ?:?; ?:?; ?:?; ?:?);//0048A2D4
    //procedure sub_0048A320(?:?; ?:?; ?:?; ?:?; ?:?);//0048A320
    //procedure sub_0048A364(?:?; ?:?);//0048A364
    //procedure sub_0048A3D4(?:?; ?:?);//0048A3D4
    //function sub_0048A408(?:TWinControl):?;//0048A408
    //function sub_0048A43C(?:TWinControl; ?:?):?;//0048A43C
    //procedure sub_0048A478(?:?; ?:?; ?:?; ?:?);//0048A478
    //function sub_0048A4E8(?:Pointer):?;//0048A4E8
    procedure sub_0048A538;//0048A538
    //procedure sub_0048A544(?:?);//0048A544
    procedure SetDockSite(Value:Boolean);//0048A5CC
    //procedure CMDockClient(?:?);//0048A6B0
    //procedure CMUndockClient(?:?);//0048A7AC
    //procedure CMFloat(?:?);//0048A7F0
    //procedure sub_0048A878(?:?; ?:?);//0048A878
    //function sub_0048A8B4(?:TWinControl; ?:?):?;//0048A8B4
    //procedure WMKeyDown(?:?);//0048A93C
    //procedure WMSysKeyDown(?:?);//0048A978
    //procedure sub_0048A9B4(?:?; ?:?);//0048A9B4
    //function sub_0048A9F0(?:TWinControl; ?:?):?;//0048A9F0
    //procedure WMKeyUp(?:?);//0048AA78
    //procedure WMSysKeyUp(?:?);//0048AAA4
    //procedure sub_0048AAD0(?:?);//0048AAD0
    //function sub_0048AB04(?:TWinControl; ?:?):?;//0048AB04
    //procedure WMChar(?:?);//0048AB8C
    //function sub_0048ABB8(?:TWinControl; ?:?):?;//0048ABB8
    //procedure WMSysCommand(?:?);//0048AC80
    //procedure WMCharToItem(?:?);//0048AD34
    //procedure WMParentNotify(?:?);//0048AD64
    //procedure WMVKeyToItem(?:?);//0048ADA8
    //procedure WMDestroy(?:?);//0048ADD8
    //procedure WMNCDestroy(?:?);//0048AE24
    //procedure WMNCHitTest(?:?);//0048AE54
    //procedure sub_0048251C(?:?);//0048AE90
    //procedure WMQueryNewPalette(?:?);//0048AEFC
    //procedure WMPaletteChanged(?:?);//0048AF30
    //procedure CMShowHintChanged(?:?);//0048AF5C
    procedure CMBiDiModeChanged(var Message:TMessage);//0048AF84
    //procedure CMEnter(?:?);//0048AFC8
    //procedure CMExit(?:?);//0048B048
    //procedure CMDesignHitTest(?:?);//0048B068
    //procedure CMChanged(?:?);//0048B094
    //procedure CMChildKey(?:?);//0048B0C0
    //procedure CMDialogKey(?:?);//0048B0EC
    //procedure CMDialogChar(?:?);//0048B108
    //procedure CMFocusChenged(?:?);//0048B124
    //procedure CMVisibleChanged(?:?);//0048B140
    //procedure CMShowingChanged(?:?);//0048B188
    //procedure CMEnabledChanged(?:?);//0048B1C4
    //procedure CMColorChanged(?:?);//0048B224
    //procedure CMFontChanged(?:?);//0048B260
    //procedure CMCursorChanged(?:?);//0048B2B0
    //procedure CMBorderChanged(?:?);//0048B2FC
    //procedure CMCtl3DChanged(?:?);//0048B350
    //procedure CMParentCtl3DChanged(?:?);//0048B3A8
    //procedure CMSysColorChange(?:?);//0048B400
    //procedure CMWinIniChange(?:?);//0048B41C
    //procedure CMFontChange(?:?);//0048B438
    //procedure CMTimeChange(?:?);//0048B454
    //procedure CMDrag(?:?);//0048B470
    //procedure CMControlLIstChange(?:?);//0048B4EC
    //procedure CMSysFontChanged(?:?);//0048B518
    //function sub_0048B540(?:TWinControl; ?:?):?;//0048B540
    //procedure sub_0048B5F4(?:?);//0048B5F4
    //procedure sub_0048B70C(?:?);//0048B70C
    //procedure sub_0048B770(?:?);//0048B770
    //procedure sub_0048B7D4(?:?);//0048B7D4
    //procedure sub_0048B850(?:?);//0048B850
    //procedure sub_0048B89C(?:?; ?:?; ?:?; ?:?);//0048B89C
    //procedure sub_0048B9B0(?:TWinControl; ?:?; ?:Integer);//0048B9B0
    //procedure sub_00483238(?:?; ?:?);//0048BA00
    //procedure sub_0048BAC0(?:TScrollingWinControl; ?:?; ?:?);//0048BAC0
    //procedure sub_0048BBC8(?:?);//0048BBC8
    //procedure sub_0048BBF4(?:TWinControl; ?:?);//0048BBF4
    //procedure sub_00483CD4(?:?);//0048BD54
    //function sub_0048BDF8(?:?):?;//0048BDF8
    procedure sub_0048BE68;//0048BE68
    //procedure CMInvalidate(?:?);//0048BE84
    procedure sub_0048BF40;//0048BF40
    procedure sub_0048BF68;//0048BF68
    procedure sub_0048BF88(?:TWinControl);//0048BF88
    procedure sub_0048BFC8;//0048BFC8
    procedure sub_0048C028;//0048C028
    procedure sub_0048C078;//0048C078
    procedure sub_0048C0B0(?:TWinControl);//0048C0B0
    //procedure sub_0048C10C(?:?);//0048C10C
    //procedure sub_0048C208(?:?);//0048C208
    //procedure sub_0048C23C(?:?);//0048C23C
    procedure sub_0048673C;//0048C260
    procedure SetBorderWidth(Value:TBorderWidth);//0048C2B4
    procedure SetCtl3D(Value:Boolean);//0048C2F0
    function IsStoredCtl3D(Value:Boolean):Boolean;//0048C338
    procedure SetParentCtl3D(Value:Boolean);//0048C358
    //function GetTabOrder:?;//0048C3A8
    //procedure sub_0048C3E4(?:Pointer; ?:?);//0048C3E4
    procedure SetTabOrder(Value:TTabOrder);//0048C470
    procedure SetTabStop(Value:Boolean);//0048C4A8
    procedure SetUseDockManager(Value:Boolean);//0048C52C
    procedure sub_0048C5D8(?:TWinControl);//0048C5D8
    //procedure sub_0048C6B4(?:?);//0048C6B4
    //function sub_0048C724(?:TCustomGroupBox; ?:?; ?:?; ?:?; ?:?):?;//0048C724
    //procedure sub_0048C850(?:TWinControl; ?:TWinControl; ?:?; ?:?);//0048C850
    procedure sub_0048C894(?:TCustomGroupBox);//0048C894
    //procedure sub_0042A788(?:?; ?:?);//0048C8F0
    //procedure sub_0042A808(?:?; ?:?);//0048C944
    //function sub_0048C994(?:?; ?:?):?;//0048C994
    //procedure sub_0048C9BC(?:?; ?:?; ?:?; ?:?; ?:?);//0048C9BC
    //procedure sub_0048CA78(?:TWinControl; ?:?; ?:?; ?:?; ?:?);//0048CA78
    //procedure sub_0048CEBC(?:?; ?:?; ?:?; ?:?);//0048CEBC
    //procedure sub_00486204(?:?; ?:?);//0048CF00
    procedure sub_00486368;//0048CF54
    //procedure sub_0048CF6C(?:?);//0048CF6C
    //function sub_0048CFAC(?:?; ?:?):?;//0048CFAC
    //procedure SetBevelInner(Value:TBevelCut; ?:?);//0048D1B4
    procedure SetBevelEdges(Value:TBevelEdges);//0048D22C
    procedure SetBevelKind(Value:TBevelKind);//0048D268
    procedure SetBevelWidth(Value:TBevelWidth);//0048D2A4
    //procedure WMNCCalcSize(?:?);//0048D2E0
    //procedure WMNCPaint(?:?);//0048D3C4
    //procedure WMContextMenu(?:?);//0048D684
    //procedure sub_0048D704(?:TWinControl; ?:?);//0048D704
    //procedure sub_0048D780(?:?);//0048D780
    //function GetParentBackground:?;//0048D7D0
    procedure SetParentBackground(Value:Boolean);//0048D7F0
    constructor sub_0048D848;//0048D848
    destructor Destroy;//0048D8B8
    //procedure WMPaint(?:?);//0048D908
    procedure sub_0048D9B8;//0048D9B8
    constructor sub_0048D9C4;//0048D9C4
    //procedure sub_0048DA48(?:?);//0048DA48
    //procedure WMNCHitTest(?:?);//0048DAC8
    //procedure WMNCPaint(?:?);//0048DAE4
    procedure sub_0048DB48;//0048DB48
    //function sub_0048DBF8(?:?):?;//0048DBF8
    //procedure sub_0048DC8C(?:?);//0048DC8C
    //procedure CMTextChanged(?:?);//0048DCA0
    //procedure sub_0048DD54(?:?; ?:?);//0048DD54
    //procedure sub_0048DF6C(?:?; ?:?);//0048DF6C
    //procedure sub_0048DFA0(?:?; ?:?; ?:?);//0048DFA0
    //procedure sub_0048E008(?:?);//0048E008
    //procedure sub_0048E07C(?:?);//0048E07C
    //procedure sub_0048E0B0(?:?; ?:?; ?:?; ?:?);//0048E0B0
    procedure sub_0048E104;//0048E104
    procedure sub_0048E124(?:TDragImageList);//0048E124
    //function sub_0048E1F8(?:TDragImageList; ?:?; ?:?; ?:?):?;//0048E1F8
    //procedure sub_0048E264(?:TDragImageList; ?:?);//0048E264
    //procedure sub_0048E2A0(?:?);//0048E2A0
    //function sub_0048E2DC(?:?; ?:HWND; ?:?; ?:?):?;//0048E2DC
    //function sub_0048E354(?:?; ?:HWND; ?:?; ?:?):?;//0048E354
    procedure sub_0048E3CC(?:TDragImageList);//0048E3CC
    //function sub_0048E400(?:?; ?:?; ?:?):?;//0048E400
    //procedure sub_0048E454(?:?);//0048E454
    //procedure sub_0048E474(?:?);//0048E474
    //function sub_0048E494(?:TDragImageList):?;//0048E494
    constructor sub_0048E4F0;//0048E4F0
    destructor Destroy;//0048E560
    procedure WMPaint(Message:TWMPaint);//0048E5A0
    //procedure sub_0048E5D0(?:?);//0048E5D0
    procedure sub_0048E67C;//0048E67C
    //function sub_0048E688(?:?):?;//0048E688
    //function sub_0048E6BC(?:?):?;//0048E6BC
    //function sub_0048E748(?:TDockZone):?;//0048E748
    //function sub_0048E780(?:?):?;//0048E780
    //function sub_0048E7BC(?:?):?;//0048E7BC
    //function sub_0048E818(?:?):?;//0048E818
    //function sub_0048E890(?:TDockZone):?;//0048E890
    //function sub_0048E908(?:?; ?:?):?;//0048E908
    //function sub_0048E9A8(?:TDockZone; ?:?):?;//0048E9A8
    procedure sub_0048EAB0(?:TDockZone);//0048EAB0
    //procedure sub_0048EB80(?:?; ?:?);//0048EB80
    //function sub_0048EBD8(?:TDockZone; ?:?):?;//0048EBD8
    //function sub_0048EC64(?:?):?;//0048EC64
    procedure sub_0048ECA8(?:TDockZone);//0048ECA8
    //function sub_0048EE38(?:TDockZone):?;//0048EE38
    procedure sub_0048EE78(?:TDockZone; ?:Integer);//0048EE78
    //function sub_0048EE94(?:?):?;//0048EE94
    procedure sub_0048EEC4(?:TDockZone; ?:Integer);//0048EEC4
    procedure sub_0048EF24(?:TDockZone);//0048EF24
    //function sub_0048EFA8(?:?):?;//0048EFA8
    //function sub_0048F000(?:TDockZone):?;//0048F000
    constructor sub_0048F020;//0048F020
    destructor Destroy;//0048F194
    //procedure sub_0048F208(?:?; ?:?);//0048F208
    procedure sub_0048F238(?:TDockTree);//0048F238
    procedure sub_0048F248(?:TDockTree);//0048F248
    //procedure sub_0048F274(?:?; ?:?);//0048F274
    //function sub_0048F2DC(?:TDockTree; ?:?):?;//0048F2DC
    //procedure sub_0048F318(?:?; ?:?);//0048F318
    procedure sub_0048F364(?:TDockTree; ?:TDockZone);//0048F364
    //procedure sub_0048F390(?:?; ?:?; ?:?);//0048F390
    //function sub_0048F41C(?:?; ?:?):?;//0048F41C
    //procedure sub_0048F45C(?:?; ?:?; ?:?);//0048F45C
    //procedure sub_0048F708(?:TDockTree; ?:TDockZone; ?:?; ?:?; ?:?);//0048F708
    //procedure sub_0048F994(?:TDockTree; ?:TDockZone; ?:?; ?:?);//0048F994
    //procedure sub_0048FA8C(?:?; ?:?);//0048FA8C
    //function sub_0048FD04(?:?; ?:?):?;//0048FD04
    //function sub_0048FDBC(?:TDockTree; ?:?; ?:?):?;//0048FDBC
    //procedure sub_0048FE50(?:?; ?:?);//0048FE50
    //procedure sub_0048FEA0(?:?);//0048FEA0
    //procedure sub_00490100(?:?; ?:?; ?:?);//00490100
    //procedure sub_00490158(?:?; ?:?; ?:?; ?:?; ?:?);//00490158
    //procedure sub_004901EC(?:?; ?:?; ?:?);//004901EC
    //procedure sub_00490300(?:?);//00490300
    //procedure sub_00490490(?:?; ?:?; ?:?; ?:?);//00490490
    //procedure sub_00490634(?:TDockZone; ?:?);//00490634
    procedure sub_00490678(?:TDockTree; ?:TDockZone);//00490678
    //procedure sub_0049070C(?:?);//0049070C
    procedure sub_00490768(?:TDockTree; ?:TDockZone);//00490768
    //procedure sub_00490AFC(?:?);//00490AFC
    procedure WriteControlName(ControlName:AnsiString);//00490C64
    //procedure sub_00490CDC(?:TDockZone; ?:?; ?:?);//00490CDC
    //procedure sub_00490DB0(?:?);//00490DB0
    //procedure sub_00490F18(?:TDockZone; ?:?);//00490F18
    //procedure sub_00490FB4(?:TDockTree; ?:?);//00490FB4
    //procedure sub_00490FEC(?:?; ?:?);//00490FEC
    procedure sub_0049118C(?:TDockTree);//0049118C
    constructor sub_00491CCC;//00491CCC
    //procedure sub_00491DC4(?:TMouse; ?:?);//00491DC4
    //function sub_00491DE4(?:TMouse):?;//00491DE4
    procedure sub_00491E00(?:TMouse);//00491E00
    procedure sub_00491E24(?:TMouse);//00491E24
    procedure sub_00491E60(?:TMouse);//00491E60
    //procedure sub_00491EDC(?:TMouse; ?:?);//00491EDC
    procedure sub_00491F64;//00491F64
    //function sub_004921D0(?:HWND; ?:?):?;//004921D0
    //procedure sub_00492208(?:HWND; ?:?);//00492208
    //function sub_00492304(?:?):?;//00492304
    procedure DoneControls;//00492330
    procedure InitControls;//004923B8
    //procedure sub_00492588(?:?);//00492588

implementation

//0047F678
procedure sub_0047F678(?:TAlignment);
begin
{*
 0047F678    push        ebp
 0047F679    mov         ebp,esp
 0047F67B    push        ecx
 0047F67C    mov         dword ptr [ebp-4],eax
 0047F67F    mov         eax,dword ptr [ebp-4]
 0047F682    mov         al,byte ptr [eax]
 0047F684    sub         al,1
>0047F686    jb          0047F68C
>0047F688    je          0047F695
>0047F68A    jmp         0047F69B
 0047F68C    mov         eax,dword ptr [ebp-4]
 0047F68F    mov         byte ptr [eax],1
 0047F692    pop         ecx
 0047F693    pop         ebp
 0047F694    ret
 0047F695    mov         eax,dword ptr [ebp-4]
 0047F698    mov         byte ptr [eax],0
 0047F69B    pop         ecx
 0047F69C    pop         ebp
 0047F69D    ret
*}
end;

//0047F6A0
{*function sub_0047F6A0(?:?; ?:?; ?:?; ?:?):?;
begin
 0047F6A0    push        ebp
 0047F6A1    mov         ebp,esp
 0047F6A3    push        ecx
 0047F6A4    mov         eax,[0056C774];0x0 gvar_0056C774
 0047F6A9    mov         edx,dword ptr [ebp+8]
 0047F6AC    mov         dword ptr [eax+180],edx
 0047F6B2    mov         eax,[0056C774];0x0 gvar_0056C774
 0047F6B7    mov         eax,dword ptr [eax+18C]
 0047F6BD    push        eax
 0047F6BE    push        0FC
 0047F6C0    mov         eax,dword ptr [ebp+8]
 0047F6C3    push        eax
 0047F6C4    call        user32.SetWindowLongA
 0047F6C9    push        0F0
 0047F6CB    mov         eax,dword ptr [ebp+8]
 0047F6CE    push        eax
 0047F6CF    call        user32.GetWindowLongA
 0047F6D4    test        eax,40000000
>0047F6D9    je          0047F6F9
 0047F6DB    push        0F4
 0047F6DD    mov         eax,dword ptr [ebp+8]
 0047F6E0    push        eax
 0047F6E1    call        user32.GetWindowLongA
 0047F6E6    test        eax,eax
>0047F6E8    jne         0047F6F9
 0047F6EA    mov         eax,dword ptr [ebp+8]
 0047F6ED    push        eax
 0047F6EE    push        0F4
 0047F6F0    mov         eax,dword ptr [ebp+8]
 0047F6F3    push        eax
 0047F6F4    call        user32.SetWindowLongA
 0047F6F9    mov         eax,[0056C774];0x0 gvar_0056C774
 0047F6FE    push        eax
 0047F6FF    movzx       eax,word ptr ds:[571DAA];0x0 ControlAtom:TAtom
 0047F706    push        eax
 0047F707    mov         eax,dword ptr [ebp+8]
 0047F70A    push        eax
 0047F70B    call        user32.SetPropA
 0047F710    mov         eax,[0056C774];0x0 gvar_0056C774
 0047F715    push        eax
 0047F716    movzx       eax,word ptr ds:[571DA8];0x0 WindowAtom:TAtom
 0047F71D    push        eax
 0047F71E    mov         eax,dword ptr [ebp+8]
 0047F721    push        eax
 0047F722    call        user32.SetPropA
 0047F727    push        dword ptr [ebp+14]
 0047F72A    push        dword ptr [ebp+10]
 0047F72D    push        dword ptr [ebp+0C]
 0047F730    push        dword ptr [ebp+8]
 0047F733    mov         eax,[0056C774];0x0 gvar_0056C774
 0047F738    mov         dword ptr ds:[56C774],0;gvar_0056C774
 0047F742    call        dword ptr [eax+18C]
 0047F748    mov         dword ptr [ebp-4],eax
 0047F74B    mov         eax,dword ptr [ebp-4]
 0047F74E    pop         ecx
 0047F74F    pop         ebp
 0047F750    ret         10
end;*}

//0047F754
{*function sub_0047F754(?:?):?;
begin
 0047F754    push        ebp
 0047F755    mov         ebp,esp
 0047F757    add         esp,0FFFFFFF4
 0047F75A    mov         dword ptr [ebp-4],eax
 0047F75D    lea         eax,[ebp-0C]
 0047F760    push        eax
 0047F761    mov         eax,dword ptr [ebp-4]
 0047F764    push        eax
 0047F765    call        user32.GetWindowThreadProcessId
 0047F76A    test        eax,eax
>0047F76C    je          0047F790
 0047F76E    call        kernel32.GetCurrentProcessId
 0047F773    cmp         eax,dword ptr [ebp-0C]
>0047F776    jne         0047F790
 0047F778    push        0
 0047F77A    push        0
 0047F77C    mov         eax,[00571DB4];0x0 gvar_00571DB4
 0047F781    push        eax
 0047F782    mov         eax,dword ptr [ebp-4]
 0047F785    push        eax
 0047F786    call        user32.SendMessageA
 0047F78B    mov         dword ptr [ebp-8],eax
>0047F78E    jmp         0047F795
 0047F790    xor         eax,eax
 0047F792    mov         dword ptr [ebp-8],eax
 0047F795    mov         eax,dword ptr [ebp-8]
 0047F798    mov         esp,ebp
 0047F79A    pop         ebp
 0047F79B    ret
end;*}

//0047F79C
{*function sub_0047F79C(?:HWND):?;
begin
 0047F79C    push        ebp
 0047F79D    mov         ebp,esp
 0047F79F    add         esp,0FFFFFFF4
 0047F7A2    mov         dword ptr [ebp-4],eax
 0047F7A5    xor         eax,eax
 0047F7A7    mov         dword ptr [ebp-8],eax
 0047F7AA    cmp         dword ptr [ebp-4],0
>0047F7AE    je          0047F805
 0047F7B0    lea         eax,[ebp-0C]
 0047F7B3    push        eax
 0047F7B4    mov         eax,dword ptr [ebp-4]
 0047F7B7    push        eax
 0047F7B8    call        user32.GetWindowThreadProcessId
 0047F7BD    test        eax,eax
>0047F7BF    je          0047F805
 0047F7C1    call        kernel32.GetCurrentProcessId
 0047F7C6    cmp         eax,dword ptr [ebp-0C]
>0047F7C9    jne         0047F805
 0047F7CB    mov         eax,[00571DB0];0x0 ControlAtomString:AnsiString
 0047F7D0    call        @LStrToPChar
 0047F7D5    push        eax
 0047F7D6    call        kernel32.GlobalFindAtomA
 0047F7DB    cmp         ax,word ptr ds:[571DAA];0x0 ControlAtom:TAtom
>0047F7E2    jne         0047F7FA
 0047F7E4    movzx       eax,word ptr ds:[571DAA];0x0 ControlAtom:TAtom
 0047F7EB    push        eax
 0047F7EC    mov         eax,dword ptr [ebp-4]
 0047F7EF    push        eax
 0047F7F0    call        user32.GetPropA
 0047F7F5    mov         dword ptr [ebp-8],eax
>0047F7F8    jmp         0047F805
 0047F7FA    mov         eax,dword ptr [ebp-4]
 0047F7FD    call        0047F754
 0047F802    mov         dword ptr [ebp-8],eax
 0047F805    mov         eax,dword ptr [ebp-8]
 0047F808    mov         esp,ebp
 0047F80A    pop         ebp
 0047F80B    ret
end;*}

//0047F80C
{*function sub_0047F80C(?:?; ?:?; ?:?):?;
begin
 0047F80C    push        ebp
 0047F80D    mov         ebp,esp
 0047F80F    add         esp,0FFFFFFF0
 0047F812    mov         dword ptr [ebp-0C],ecx
 0047F815    mov         dword ptr [ebp-8],edx
 0047F818    mov         dword ptr [ebp-4],eax
 0047F81B    mov         eax,[0056E3C0];^Application:TApplication
 0047F820    mov         eax,dword ptr [eax]
 0047F822    cmp         dword ptr [eax+30],0;TApplication.FHandle:HWND
>0047F826    je          0047F849
 0047F828    mov         eax,dword ptr [ebp-0C]
 0047F82B    push        eax
 0047F82C    mov         eax,dword ptr [ebp-8]
 0047F82F    push        eax
 0047F830    mov         eax,dword ptr [ebp-4]
 0047F833    push        eax
 0047F834    mov         eax,[0056E3C0];^Application:TApplication
 0047F839    mov         eax,dword ptr [eax]
 0047F83B    mov         eax,dword ptr [eax+30];TApplication.FHandle:HWND
 0047F83E    push        eax
 0047F83F    call        user32.SendMessageA
 0047F844    mov         dword ptr [ebp-10],eax
>0047F847    jmp         0047F84E
 0047F849    xor         eax,eax
 0047F84B    mov         dword ptr [ebp-10],eax
 0047F84E    mov         eax,dword ptr [ebp-10]
 0047F851    mov         esp,ebp
 0047F853    pop         ebp
 0047F854    ret
end;*}

//0047F9F4
{*function sub_0047F9F4(?:?; ?:?):?;
begin
 0047F9F4    push        ebp
 0047F9F5    mov         ebp,esp
 0047F9F7    add         esp,0FFFFFFF4
 0047F9FA    mov         dword ptr [ebp-8],edx
 0047F9FD    mov         dword ptr [ebp-4],eax
 0047FA00    push        15
 0047FA02    mov         ecx,56C784
 0047FA07    mov         edx,dword ptr [ebp-8]
 0047FA0A    mov         eax,dword ptr [ebp-4]
 0047FA0D    call        0041F9C8
 0047FA12    mov         byte ptr [ebp-9],al
 0047FA15    mov         al,byte ptr [ebp-9]
 0047FA18    mov         esp,ebp
 0047FA1A    pop         ebp
 0047FA1B    ret
end;*}

//0047FA1C
{*function sub_0047FA1C(?:?; ?:?):?;
begin
 0047FA1C    push        ebp
 0047FA1D    mov         ebp,esp
 0047FA1F    add         esp,0FFFFFFF4
 0047FA22    mov         dword ptr [ebp-8],edx
 0047FA25    mov         dword ptr [ebp-4],eax
 0047FA28    push        15
 0047FA2A    mov         ecx,56C784
 0047FA2F    mov         edx,dword ptr [ebp-8]
 0047FA32    mov         eax,dword ptr [ebp-4]
 0047FA35    call        0041F968
 0047FA3A    mov         byte ptr [ebp-9],al
 0047FA3D    mov         al,byte ptr [ebp-9]
 0047FA40    mov         esp,ebp
 0047FA42    pop         ebp
 0047FA43    ret
end;*}

//0047FA44
{*procedure sub_0047FA44(?:?; ?:?);
begin
 0047FA44    push        ebp
 0047FA45    mov         ebp,esp
 0047FA47    add         esp,0FFFFFFF4
 0047FA4A    mov         dword ptr [ebp-8],edx
 0047FA4D    mov         dword ptr [ebp-4],eax
 0047FA50    mov         edx,dword ptr [ebp-4]
 0047FA53    mov         eax,47FA94;'|'
 0047FA58    call        00411664
 0047FA5D    mov         dword ptr [ebp-0C],eax
 0047FA60    cmp         dword ptr [ebp-0C],0
>0047FA64    jne         0047FA73
 0047FA66    mov         eax,dword ptr [ebp-8]
 0047FA69    mov         edx,dword ptr [ebp-4]
 0047FA6C    call        @LStrAsg
>0047FA71    jmp         0047FA88
 0047FA73    mov         eax,dword ptr [ebp-8]
 0047FA76    push        eax
 0047FA77    mov         ecx,dword ptr [ebp-0C]
 0047FA7A    dec         ecx
 0047FA7B    mov         edx,1
 0047FA80    mov         eax,dword ptr [ebp-4]
 0047FA83    call        @LStrCopy
 0047FA88    mov         esp,ebp
 0047FA8A    pop         ebp
 0047FA8B    ret
end;*}

//0047FA98
{*procedure sub_0047FA98(?:?; ?:?);
begin
 0047FA98    push        ebp
 0047FA99    mov         ebp,esp
 0047FA9B    add         esp,0FFFFFFF4
 0047FA9E    mov         dword ptr [ebp-8],edx
 0047FAA1    mov         dword ptr [ebp-4],eax
 0047FAA4    mov         edx,dword ptr [ebp-4]
 0047FAA7    mov         eax,47FAE8;'|'
 0047FAAC    call        00411664
 0047FAB1    mov         dword ptr [ebp-0C],eax
 0047FAB4    cmp         dword ptr [ebp-0C],0
>0047FAB8    jne         0047FAC7
 0047FABA    mov         eax,dword ptr [ebp-8]
 0047FABD    mov         edx,dword ptr [ebp-4]
 0047FAC0    call        @LStrAsg
>0047FAC5    jmp         0047FADC
 0047FAC7    mov         eax,dword ptr [ebp-8]
 0047FACA    push        eax
 0047FACB    mov         edx,dword ptr [ebp-0C]
 0047FACE    inc         edx
 0047FACF    mov         ecx,7FFFFFFF
 0047FAD4    mov         eax,dword ptr [ebp-4]
 0047FAD7    call        @LStrCopy
 0047FADC    mov         esp,ebp
 0047FADE    pop         ebp
 0047FADF    ret
end;*}

//0047FAEC
{*procedure sub_0047FAEC(?:TSpeedButton; ?:?);
begin
 0047FAEC    push        ebp
 0047FAED    mov         ebp,esp
 0047FAEF    add         esp,0FFFFFFF0
 0047FAF2    mov         dword ptr [ebp-8],edx
 0047FAF5    mov         dword ptr [ebp-4],eax
 0047FAF8    lea         eax,[ebp-10]
 0047FAFB    push        eax
 0047FAFC    mov         eax,dword ptr [ebp-8]
 0047FAFF    push        eax
 0047FB00    call        gdi32.GetWindowOrgEx
 0047FB05    push        0
 0047FB07    mov         eax,dword ptr [ebp-0C]
 0047FB0A    mov         edx,dword ptr [ebp-4]
 0047FB0D    add         eax,dword ptr [edx+44];TSpeedButton.Top:Integer
 0047FB10    push        eax
 0047FB11    mov         eax,dword ptr [ebp-10]
 0047FB14    mov         edx,dword ptr [ebp-4]
 0047FB17    add         eax,dword ptr [edx+40];TSpeedButton.Left:Integer
 0047FB1A    push        eax
 0047FB1B    mov         eax,dword ptr [ebp-8]
 0047FB1E    push        eax
 0047FB1F    call        gdi32.SetWindowOrgEx
 0047FB24    mov         eax,dword ptr [ebp-8]
 0047FB27    push        eax
 0047FB28    mov         ecx,dword ptr [ebp-8]
 0047FB2B    mov         edx,14
 0047FB30    mov         eax,dword ptr [ebp-4]
 0047FB33    mov         eax,dword ptr [eax+30];TSpeedButton.FParent:TWinControl
 0047FB36    call        00484FFC
 0047FB3B    push        0
 0047FB3D    mov         eax,dword ptr [ebp-0C]
 0047FB40    push        eax
 0047FB41    mov         eax,dword ptr [ebp-10]
 0047FB44    push        eax
 0047FB45    mov         eax,dword ptr [ebp-8]
 0047FB48    push        eax
 0047FB49    call        gdi32.SetWindowOrgEx
 0047FB4E    mov         esp,ebp
 0047FB50    pop         ebp
 0047FB51    ret
end;*}

//0047FB54
{*function sub_0047FB54:?;
begin
 0047FB54    push        ebp
 0047FB55    mov         ebp,esp
 0047FB57    push        ecx
 0047FB58    call        user32.GetCapture
 0047FB5D    call        0047F79C
 0047FB62    mov         dword ptr [ebp-4],eax
 0047FB65    cmp         dword ptr [ebp-4],0
>0047FB69    je          0047FB89
 0047FB6B    cmp         dword ptr ds:[56C834],0;gvar_0056C834
>0047FB72    je          0047FB89
 0047FB74    mov         eax,[0056C834];0x0 gvar_0056C834
 0047FB79    mov         eax,dword ptr [eax+30]
 0047FB7C    cmp         eax,dword ptr [ebp-4]
>0047FB7F    jne         0047FB89
 0047FB81    mov         eax,[0056C834];0x0 gvar_0056C834
 0047FB86    mov         dword ptr [ebp-4],eax
 0047FB89    mov         eax,dword ptr [ebp-4]
 0047FB8C    pop         ecx
 0047FB8D    pop         ebp
 0047FB8E    ret
end;*}

//0047FB90
procedure sub_0047FB90(?:TWinControl);
begin
{*
 0047FB90    push        ebp
 0047FB91    mov         ebp,esp
 0047FB93    push        ecx
 0047FB94    mov         dword ptr [ebp-4],eax
 0047FB97    call        user32.ReleaseCapture
 0047FB9C    xor         eax,eax
 0047FB9E    mov         [0056C834],eax;gvar_0056C834
 0047FBA3    cmp         dword ptr [ebp-4],0
>0047FBA7    je          0047FBE3
 0047FBA9    mov         eax,dword ptr [ebp-4]
 0047FBAC    mov         edx,dword ptr ds:[47E678];TWinControl
 0047FBB2    call        @IsClass
 0047FBB7    test        al,al
>0047FBB9    jne         0047FBD5
 0047FBBB    mov         eax,dword ptr [ebp-4]
 0047FBBE    cmp         dword ptr [eax+30],0
>0047FBC2    je          0047FBE3
 0047FBC4    mov         eax,dword ptr [ebp-4]
 0047FBC7    mov         [0056C834],eax;gvar_0056C834
 0047FBCC    mov         eax,dword ptr [ebp-4]
 0047FBCF    mov         eax,dword ptr [eax+30]
 0047FBD2    mov         dword ptr [ebp-4],eax
 0047FBD5    mov         eax,dword ptr [ebp-4]
 0047FBD8    call        TWinControl.GetHandle
 0047FBDD    push        eax
 0047FBDE    call        user32.SetCapture
 0047FBE3    pop         ecx
 0047FBE4    pop         ebp
 0047FBE5    ret
*}
end;

//0047FC50
{*function sub_0047FC50(?:?; ?:HWND; ?:?):?;
begin
 0047FC50    push        ebp
 0047FC51    mov         ebp,esp
 0047FC53    add         esp,0FFFFFFF0
 0047FC56    mov         dword ptr [ebp-0C],ecx
 0047FC59    mov         dword ptr [ebp-8],edx
 0047FC5C    mov         dword ptr [ebp-4],eax
 0047FC5F    mov         eax,dword ptr [ebp-0C]
 0047FC62    xor         edx,edx
 0047FC64    mov         dword ptr [eax],edx
 0047FC66    mov         byte ptr [ebp-0D],0
>0047FC6A    jmp         0047FC8E
 0047FC6C    mov         edx,dword ptr [ebp-0C]
 0047FC6F    mov         edx,dword ptr [edx]
 0047FC71    mov         eax,dword ptr [ebp-4]
 0047FC74    call        TList.Get
 0047FC79    mov         eax,dword ptr [eax+4]
 0047FC7C    cmp         eax,dword ptr [ebp-8]
 0047FC7F    sete        byte ptr [ebp-0D]
 0047FC83    cmp         byte ptr [ebp-0D],0
>0047FC87    jne         0047FC9B
 0047FC89    mov         eax,dword ptr [ebp-0C]
 0047FC8C    inc         dword ptr [eax]
 0047FC8E    mov         eax,dword ptr [ebp-0C]
 0047FC91    mov         eax,dword ptr [eax]
 0047FC93    mov         edx,dword ptr [ebp-4]
 0047FC96    cmp         eax,dword ptr [edx+8]
>0047FC99    jl          0047FC6C
 0047FC9B    mov         al,byte ptr [ebp-0D]
 0047FC9E    mov         esp,ebp
 0047FCA0    pop         ebp
 0047FCA1    ret
end;*}

//0047FCA4
{*function sub_0047FCA4(?:?):?;
begin
 0047FCA4    push        ebp
 0047FCA5    mov         ebp,esp
 0047FCA7    add         esp,0FFFFFFF8
 0047FCAA    mov         eax,dword ptr [ebp+8]
 0047FCAD    mov         eax,dword ptr [eax-4]
 0047FCB0    call        TWinControl.GetHandle
 0047FCB5    mov         dword ptr [ebp-8],eax
 0047FCB8    mov         eax,dword ptr [ebp-8]
 0047FCBB    mov         dword ptr [ebp-4],eax
 0047FCBE    cmp         dword ptr [ebp-8],0
>0047FCC2    je          0047FCDC
 0047FCC4    mov         eax,dword ptr [ebp-8]
 0047FCC7    mov         dword ptr [ebp-4],eax
 0047FCCA    mov         eax,dword ptr [ebp-8]
 0047FCCD    push        eax
 0047FCCE    call        user32.GetParent
 0047FCD3    mov         dword ptr [ebp-8],eax
 0047FCD6    cmp         dword ptr [ebp-8],0
>0047FCDA    jne         0047FCC4
 0047FCDC    mov         eax,dword ptr [ebp-4]
 0047FCDF    pop         ecx
 0047FCE0    pop         ecx
 0047FCE1    pop         ebp
 0047FCE2    ret
end;*}

//0047FCE4
{*procedure sub_0047FCE4(?:?; ?:Pointer);
begin
 0047FCE4    push        ebp
 0047FCE5    mov         ebp,esp
 0047FCE7    add         esp,0FFFFFFF0
 0047FCEA    mov         dword ptr [ebp-4],edx
 0047FCED    mov         dword ptr [ebp-8],eax
 0047FCF0    mov         eax,8
 0047FCF5    call        @GetMem
 0047FCFA    mov         dword ptr [ebp-0C],eax
 0047FCFD    mov         eax,dword ptr [ebp-4]
 0047FD00    mov         edx,dword ptr [ebp-0C]
 0047FD03    mov         dword ptr [edx],eax
 0047FD05    push        ebp
 0047FD06    call        0047FCA4
 0047FD0B    pop         ecx
 0047FD0C    mov         edx,dword ptr [ebp-0C]
 0047FD0F    mov         dword ptr [edx+4],eax
 0047FD12    lea         ecx,[ebp-10]
 0047FD15    mov         eax,dword ptr [ebp-0C]
 0047FD18    mov         edx,dword ptr [eax+4]
 0047FD1B    mov         eax,dword ptr [ebp-8]
 0047FD1E    call        0047FC50
 0047FD23    test        al,al
>0047FD25    je          0047FD37
 0047FD27    mov         ecx,dword ptr [ebp-0C]
 0047FD2A    mov         edx,dword ptr [ebp-10]
 0047FD2D    mov         eax,dword ptr [ebp-8]
 0047FD30    call        00420308
>0047FD35    jmp         0047FD42
 0047FD37    mov         edx,dword ptr [ebp-0C]
 0047FD3A    mov         eax,dword ptr [ebp-8]
 0047FD3D    call        TList.Add
 0047FD42    mov         esp,ebp
 0047FD44    pop         ebp
 0047FD45    ret
end;*}

//0047FD48
procedure sub_0047FD48;
begin
{*
 0047FD48    push        ebp
 0047FD49    mov         ebp,esp
 0047FD4B    add         esp,0FFFFFFF4
 0047FD4E    mov         dword ptr [ebp-4],eax
 0047FD51    mov         eax,dword ptr [ebp-4]
 0047FD54    mov         eax,dword ptr [eax+8];TSiteList.FCount:Integer
 0047FD57    dec         eax
 0047FD58    test        eax,eax
>0047FD5A    jl          0047FD84
 0047FD5C    inc         eax
 0047FD5D    mov         dword ptr [ebp-0C],eax
 0047FD60    mov         dword ptr [ebp-8],0
 0047FD67    mov         edx,dword ptr [ebp-8]
 0047FD6A    mov         eax,dword ptr [ebp-4]
 0047FD6D    call        TList.Get
 0047FD72    mov         edx,8
 0047FD77    call        @FreeMem
 0047FD7C    inc         dword ptr [ebp-8]
 0047FD7F    dec         dword ptr [ebp-0C]
>0047FD82    jne         0047FD67
 0047FD84    mov         eax,dword ptr [ebp-4]
 0047FD87    call        00420074
 0047FD8C    mov         esp,ebp
 0047FD8E    pop         ebp
 0047FD8F    ret
*}
end;

//0047FD90
{*function sub_0047FD90(?:?):?;
begin
 0047FD90    push        ebp
 0047FD91    mov         ebp,esp
 0047FD93    add         esp,0FFFFFFEC
 0047FD96    mov         dword ptr [ebp-4],eax
 0047FD99    xor         eax,eax
 0047FD9B    mov         dword ptr [ebp-8],eax
 0047FD9E    mov         eax,dword ptr [ebp-4]
 0047FDA1    cmp         dword ptr [eax+8],0
>0047FDA5    je          0047FE16
 0047FDA7    mov         eax,dword ptr [ebp-4]
 0047FDAA    cmp         dword ptr [eax+8],1
>0047FDAE    jne         0047FDC1
 0047FDB0    xor         edx,edx
 0047FDB2    mov         eax,dword ptr [ebp-4]
 0047FDB5    call        TList.Get
 0047FDBA    mov         eax,dword ptr [eax]
 0047FDBC    mov         dword ptr [ebp-8],eax
>0047FDBF    jmp         0047FE16
 0047FDC1    call        user32.GetDesktopWindow
 0047FDC6    mov         dword ptr [ebp-10],eax
 0047FDC9    mov         eax,dword ptr [ebp-10]
 0047FDCC    push        eax
 0047FDCD    call        user32.GetTopWindow
 0047FDD2    mov         dword ptr [ebp-14],eax
>0047FDD5    jmp         0047FE0A
 0047FDD7    lea         ecx,[ebp-0C]
 0047FDDA    mov         edx,dword ptr [ebp-14]
 0047FDDD    mov         eax,dword ptr [ebp-4]
 0047FDE0    call        0047FC50
 0047FDE5    test        al,al
>0047FDE7    je          0047FDFC
 0047FDE9    mov         eax,dword ptr [ebp-4]
 0047FDEC    mov         eax,dword ptr [eax+4]
 0047FDEF    mov         edx,dword ptr [ebp-0C]
 0047FDF2    mov         eax,dword ptr [eax+edx*4]
 0047FDF5    mov         eax,dword ptr [eax]
 0047FDF7    mov         dword ptr [ebp-8],eax
>0047FDFA    jmp         0047FE0A
 0047FDFC    push        2
 0047FDFE    mov         eax,dword ptr [ebp-14]
 0047FE01    push        eax
 0047FE02    call        user32.GetWindow
 0047FE07    mov         dword ptr [ebp-14],eax
 0047FE0A    cmp         dword ptr [ebp-8],0
>0047FE0E    jne         0047FE16
 0047FE10    cmp         dword ptr [ebp-14],0
>0047FE14    jne         0047FDD7
 0047FE16    mov         eax,dword ptr [ebp-8]
 0047FE19    mov         esp,ebp
 0047FE1B    pop         ebp
 0047FE1C    ret
end;*}

//0047FE20
{*procedure sub_0047FE20(?:?);
begin
 0047FE20    push        ebp
 0047FE21    mov         ebp,esp
 0047FE23    add         esp,0FFFFFFF8
 0047FE26    mov         dword ptr [ebp-8],edx
 0047FE29    mov         dword ptr [ebp-4],eax
 0047FE2C    mov         eax,dword ptr [ebp-8]
 0047FE2F    mov         eax,dword ptr [eax+4]
 0047FE32    mov         edx,dword ptr [ebp-4]
 0047FE35    mov         dword ptr [edx+4],eax;TDragObject.FDragTarget:Pointer
 0047FE38    mov         eax,dword ptr [ebp-8]
 0047FE3B    mov         eax,dword ptr [eax+8]
 0047FE3E    mov         edx,dword ptr [ebp-4]
 0047FE41    mov         dword ptr [edx+8],eax;TDragObject.FDragHandle:HWND
 0047FE44    mov         eax,dword ptr [ebp-4]
 0047FE47    mov         edx,dword ptr [ebp-8]
 0047FE4A    mov         ecx,dword ptr [edx+0C]
 0047FE4D    mov         dword ptr [eax+0C],ecx;TDragObject.FDragPos:TPoint
 0047FE50    mov         ecx,dword ptr [edx+10]
 0047FE53    mov         dword ptr [eax+10],ecx
 0047FE56    mov         eax,dword ptr [ebp-4]
 0047FE59    mov         edx,dword ptr [ebp-8]
 0047FE5C    mov         ecx,dword ptr [edx+14]
 0047FE5F    mov         dword ptr [eax+14],ecx;TDragObject.FDragTargetPos:TPoint
 0047FE62    mov         ecx,dword ptr [edx+18]
 0047FE65    mov         dword ptr [eax+18],ecx
 0047FE68    mov         eax,dword ptr [ebp-4]
 0047FE6B    mov         edx,dword ptr [ebp-8]
 0047FE6E    mov         ecx,dword ptr [edx+20]
 0047FE71    mov         dword ptr [eax+20],ecx;TDragObject.FMouseDeltaX:Double
 0047FE74    mov         ecx,dword ptr [edx+24]
 0047FE77    mov         dword ptr [eax+24],ecx;TDragObject.?f24:dword
 0047FE7A    mov         eax,dword ptr [ebp-4]
 0047FE7D    mov         edx,dword ptr [ebp-8]
 0047FE80    mov         ecx,dword ptr [edx+28]
 0047FE83    mov         dword ptr [eax+28],ecx;TDragObject.FMouseDeltaY:Double
 0047FE86    mov         ecx,dword ptr [edx+2C]
 0047FE89    mov         dword ptr [eax+2C],ecx;TDragObject.?f2C:dword
 0047FE8C    pop         ecx
 0047FE8D    pop         ecx
 0047FE8E    pop         ebp
 0047FE8F    ret
end;*}

//0047FE90
{*function sub_0047FE90(?:?):?;
begin
 0047FE90    push        ebp
 0047FE91    mov         ebp,esp
 0047FE93    add         esp,0FFFFFFF8
 0047FE96    mov         dword ptr [ebp-4],eax
 0047FE99    mov         eax,dword ptr [ebp-4]
 0047FE9C    push        eax
 0047FE9D    push        4800B0
 0047FEA2    call        0042BAC0
 0047FEA7    mov         dword ptr [ebp-8],eax
 0047FEAA    mov         eax,dword ptr [ebp-8]
 0047FEAD    push        eax
 0047FEAE    call        user32.SetCapture
 0047FEB3    mov         eax,dword ptr [ebp-8]
 0047FEB6    pop         ecx
 0047FEB7    pop         ecx
 0047FEB8    pop         ebp
 0047FEB9    ret
end;*}

//0047FEBC
{*procedure sub_0047FEBC(?:?; ?:?);
begin
 0047FEBC    push        ebp
 0047FEBD    mov         ebp,esp
 0047FEBF    add         esp,0FFFFFFF4
 0047FEC2    mov         dword ptr [ebp-0C],ecx
 0047FEC5    mov         dword ptr [ebp-8],edx
 0047FEC8    mov         dword ptr [ebp-4],eax
 0047FECB    mov         esp,ebp
 0047FECD    pop         ebp
 0047FECE    ret         8
end;*}

//0047FED4
{*procedure sub_0047FED4(?:?);
begin
 0047FED4    push        ebp
 0047FED5    mov         ebp,esp
 0047FED7    add         esp,0FFFFFEF8
 0047FEDD    mov         dword ptr [ebp-8],edx
 0047FEE0    mov         dword ptr [ebp-4],eax
 0047FEE3    lea         edx,[ebp-108]
 0047FEE9    mov         eax,dword ptr [ebp-4]
 0047FEEC    mov         eax,dword ptr [eax]
 0047FEEE    call        TObject.ClassName
 0047FEF3    lea         edx,[ebp-108]
 0047FEF9    mov         eax,dword ptr [ebp-8]
 0047FEFC    call        @LStrFromString
 0047FF01    mov         esp,ebp
 0047FF03    pop         ebp
 0047FF04    ret
end;*}

//0047FF08
{*procedure sub_0047FF08(?:?; ?:?);
begin
 0047FF08    push        ebp
 0047FF09    mov         ebp,esp
 0047FF0B    add         esp,0FFFFFFF8
 0047FF0E    mov         dword ptr [ebp-8],edx
 0047FF11    mov         dword ptr [ebp-4],eax
 0047FF14    call        user32.ReleaseCapture
 0047FF19    mov         eax,dword ptr [ebp-8]
 0047FF1C    call        0042BB7C
 0047FF21    pop         ecx
 0047FF22    pop         ecx
 0047FF23    pop         ebp
 0047FF24    ret
end;*}

//0047FF28
{*procedure sub_0047FF28(?:?);
begin
 0047FF28    push        ebp
 0047FF29    mov         ebp,esp
 0047FF2B    add         esp,0FFFFFFF0
 0047FF2E    push        ebx
 0047FF2F    push        esi
 0047FF30    push        edi
 0047FF31    mov         dword ptr [ebp-8],edx
 0047FF34    mov         dword ptr [ebp-4],eax
 0047FF37    xor         eax,eax
 0047FF39    push        ebp
 0047FF3A    push        480005
 0047FF3F    push        dword ptr fs:[eax]
 0047FF42    mov         dword ptr fs:[eax],esp
 0047FF45    mov         eax,dword ptr [ebp-8]
 0047FF48    mov         eax,dword ptr [eax]
 0047FF4A    cmp         eax,215
>0047FF4F    jg          0047FF69
>0047FF51    je          0047FF9F
 0047FF53    sub         eax,200
>0047FF58    je          0047FF78
 0047FF5A    sub         eax,2
>0047FF5D    je          0047FFA8
 0047FF5F    sub         eax,3
>0047FF62    je          0047FFA8
>0047FF64    jmp         0047FFFB
 0047FF69    sub         eax,0BD00
>0047FF6E    je          0047FFC9
 0047FF70    dec         eax
>0047FF71    je          0047FFB1
>0047FF73    jmp         0047FFFB
 0047FF78    lea         edx,[ebp-10]
 0047FF7B    mov         eax,dword ptr [ebp-8]
 0047FF7E    mov         eax,dword ptr [eax+8]
 0047FF81    call        00408640
 0047FF86    lea         eax,[ebp-10]
 0047FF89    push        eax
 0047FF8A    mov         eax,[00571DC4];0x0 gvar_00571DC4
 0047FF8F    push        eax
 0047FF90    call        user32.ClientToScreen
 0047FF95    lea         eax,[ebp-10]
 0047FF98    call        00480CF8
>0047FF9D    jmp         0047FFFB
 0047FF9F    xor         eax,eax
 0047FFA1    call        DragDone
>0047FFA6    jmp         0047FFFB
 0047FFA8    mov         al,1
 0047FFAA    call        DragDone
>0047FFAF    jmp         0047FFFB
 0047FFB1    mov         eax,dword ptr [ebp-8]
 0047FFB4    cmp         dword ptr [eax+4],11
>0047FFB8    jne         0047FFFB
 0047FFBA    mov         eax,[00571DBC];0x0 gvar_00571DBC
 0047FFBF    add         eax,0C
 0047FFC2    call        00480CF8
>0047FFC7    jmp         0047FFFB
 0047FFC9    mov         eax,dword ptr [ebp-8]
 0047FFCC    mov         eax,dword ptr [eax+4]
 0047FFCF    sub         eax,11
>0047FFD2    je          0047FFDB
 0047FFD4    sub         eax,0A
>0047FFD7    je          0047FFEA
>0047FFD9    jmp         0047FFFB
 0047FFDB    mov         eax,[00571DBC];0x0 gvar_00571DBC
 0047FFE0    add         eax,0C
 0047FFE3    call        00480CF8
>0047FFE8    jmp         0047FFFB
 0047FFEA    mov         eax,dword ptr [ebp-8]
 0047FFED    mov         dword ptr [eax+0C],1
 0047FFF4    xor         eax,eax
 0047FFF6    call        DragDone
 0047FFFB    xor         eax,eax
 0047FFFD    pop         edx
 0047FFFE    pop         ecx
 0047FFFF    pop         ecx
 00480000    mov         dword ptr fs:[eax],edx
>00480003    jmp         0048002E
>00480005    jmp         @HandleAnyException
 0048000A    cmp         dword ptr ds:[571DB8],0;DragControl:TControl
>00480011    je          0048001A
 00480013    xor         eax,eax
 00480015    call        DragDone
 0048001A    mov         eax,[0056E3C0];^Application:TApplication
 0048001F    mov         eax,dword ptr [eax]
 00480021    mov         edx,dword ptr [ebp-4]
 00480024    call        TApplication.HandleException
 00480029    call        @DoneExcept
 0048002E    pop         edi
 0048002F    pop         esi
 00480030    pop         ebx
 00480031    mov         esp,ebp
 00480033    pop         ebp
 00480034    ret
end;*}

//00480038
{*function sub_00480038:?;
begin
 00480038    push        ebp
 00480039    mov         ebp,esp
 0048003B    add         esp,0FFFFFFF8
 0048003E    mov         dword ptr [ebp-4],eax
 00480041    xor         eax,eax
 00480043    mov         dword ptr [ebp-8],eax
 00480046    mov         eax,dword ptr [ebp-8]
 00480049    pop         ecx
 0048004A    pop         ecx
 0048004B    pop         ebp
 0048004C    ret
end;*}

//00480050
{*function sub_00480050(?:?; ?:?):?;
begin
 00480050    push        ebp
 00480051    mov         ebp,esp
 00480053    add         esp,0FFFFFFF4
 00480056    mov         dword ptr [ebp-0C],ecx
 00480059    mov         byte ptr [ebp-5],dl
 0048005C    mov         dword ptr [ebp-4],eax
 0048005F    cmp         byte ptr [ebp-5],0
>00480063    je          0048006D
 00480065    mov         word ptr [ebp-8],0FFF4
>0048006B    jmp         00480073
 0048006D    mov         word ptr [ebp-8],0FFF3
 00480073    mov         ax,word ptr [ebp-8]
 00480077    mov         esp,ebp
 00480079    pop         ebp
 0048007A    ret         4
end;*}

//00480080
procedure sub_00480080;
begin
{*
 00480080    push        ebp
 00480081    mov         ebp,esp
 00480083    push        ecx
 00480084    mov         dword ptr [ebp-4],eax
 00480087    pop         ecx
 00480088    pop         ebp
 00480089    ret
*}
end;

//0048008C
{*function sub_0048008C:?;
begin
 0048008C    push        ebp
 0048008D    mov         ebp,esp
 0048008F    add         esp,0FFFFFFF8
 00480092    mov         dword ptr [ebp-4],eax
 00480095    mov         eax,[0056F668];0x0 HInstance:LongWord
 0048009A    mov         dword ptr [ebp-8],eax
 0048009D    mov         eax,dword ptr [ebp-8]
 004800A0    pop         ecx
 004800A1    pop         ecx
 004800A2    pop         ebp
 004800A3    ret
end;*}

//004800A4
procedure sub_004800A4;
begin
{*
 004800A4    push        ebp
 004800A5    mov         ebp,esp
 004800A7    push        ecx
 004800A8    mov         dword ptr [ebp-4],eax
 004800AB    pop         ecx
 004800AC    pop         ebp
 004800AD    ret
*}
end;

//00480104
procedure TDragObject.BeforeDestruction;
begin
{*
 00480104    push        ebp
 00480105    mov         ebp,esp
 00480107    push        ecx
 00480108    mov         dword ptr [ebp-4],eax
 0048010B    mov         eax,dword ptr [ebp-4];{DragSave:TDragObject}
 0048010E    call        TCustomVariantType.BeforeDestruction
 00480113    xor         eax,eax
 00480115    mov         [00571DE8],eax
 0048011A    pop         ecx
 0048011B    pop         ebp
 0048011C    ret
*}
end;

//00480120
procedure TDragObject.AfterConstruction;
begin
{*
 00480120    push        ebp
 00480121    mov         ebp,esp
 00480123    push        ecx
 00480124    mov         dword ptr [ebp-4],eax
 00480127    mov         eax,dword ptr [ebp-4];{DragSave:TDragObject}
 0048012A    call        TCustomVariantType.AfterConstruction
 0048012F    xor         eax,eax
 00480131    mov         [00571DE8],eax
 00480136    pop         ecx
 00480137    pop         ebp
 00480138    ret
*}
end;

//0048013C
procedure TDragObjectEx.BeforeDestruction;
begin
{*
 0048013C    push        ebp
 0048013D    mov         ebp,esp
 0048013F    push        ecx
 00480140    mov         dword ptr [ebp-4],eax
 00480143    pop         ecx
 00480144    pop         ebp
 00480145    ret
*}
end;

//00480148
constructor TDragControlObjectEx.Create;
begin
{*
 00480148    push        ebp
 00480149    mov         ebp,esp
 0048014B    add         esp,0FFFFFFF4
 0048014E    test        dl,dl
>00480150    je          0048015A
 00480152    add         esp,0FFFFFFF0
 00480155    call        @ClassCreate
 0048015A    mov         dword ptr [ebp-0C],ecx
 0048015D    mov         byte ptr [ebp-5],dl
 00480160    mov         dword ptr [ebp-4],eax
 00480163    mov         eax,dword ptr [ebp-4]
 00480166    mov         edx,dword ptr [ebp-0C]
 00480169    mov         dword ptr [eax+38],edx;TBaseDragControlObject.......................................FCon...
 0048016C    mov         eax,dword ptr [ebp-4]
 0048016F    cmp         byte ptr [ebp-5],0
>00480173    je          00480184
 00480175    call        @AfterConstruction
 0048017A    pop         dword ptr fs:[0]
 00480181    add         esp,0C
 00480184    mov         eax,dword ptr [ebp-4]
 00480187    mov         esp,ebp
 00480189    pop         ebp
 0048018A    ret
*}
end;

//0048018C
{*procedure sub_0048018C(?:?);
begin
 0048018C    push        ebp
 0048018D    mov         ebp,esp
 0048018F    add         esp,0FFFFFFF8
 00480192    mov         dword ptr [ebp-8],edx
 00480195    mov         dword ptr [ebp-4],eax
 00480198    mov         edx,dword ptr [ebp-8]
 0048019B    mov         eax,dword ptr [ebp-4]
 0048019E    call        0047FE20
 004801A3    mov         eax,dword ptr [ebp-8]
 004801A6    mov         edx,dword ptr ds:[47D084];TBaseDragControlObject
 004801AC    call        @IsClass
 004801B1    test        al,al
>004801B3    je          004801C1
 004801B5    mov         eax,dword ptr [ebp-8]
 004801B8    mov         eax,dword ptr [eax+38]
 004801BB    mov         edx,dword ptr [ebp-4]
 004801BE    mov         dword ptr [edx+38],eax;TBaseDragControlObject........................................FCo...
 004801C1    pop         ecx
 004801C2    pop         ecx
 004801C3    pop         ebp
 004801C4    ret
end;*}

//004801C8
{*procedure sub_004801C8(?:?; ?:?; ?:?);
begin
 004801C8    push        ebp
 004801C9    mov         ebp,esp
 004801CB    add         esp,0FFFFFFF4
 004801CE    push        esi
 004801CF    mov         dword ptr [ebp-0C],ecx
 004801D2    mov         dword ptr [ebp-8],edx
 004801D5    mov         dword ptr [ebp-4],eax
 004801D8    mov         eax,dword ptr [ebp+8]
 004801DB    push        eax
 004801DC    mov         ecx,dword ptr [ebp-0C]
 004801DF    mov         edx,dword ptr [ebp-8]
 004801E2    mov         eax,dword ptr [ebp-4]
 004801E5    mov         eax,dword ptr [eax+38];TBaseDragControlObject.........................................FC...
 004801E8    mov         si,0FFDD
 004801EC    call        @CallDynaInst;TControl.sub_004843B0
 004801F1    pop         esi
 004801F2    mov         esp,ebp
 004801F4    pop         ebp
 004801F5    ret         4
end;*}

//004801F8
{*procedure sub_004801F8(?:?; ?:?; ?:?; ?:?);
begin
 004801F8    push        ebp
 004801F9    mov         ebp,esp
 004801FB    add         esp,0FFFFFFF4
 004801FE    push        ebx
 004801FF    push        esi
 00480200    mov         dword ptr [ebp-0C],ecx
 00480203    mov         dword ptr [ebp-8],edx
 00480206    mov         dword ptr [ebp-4],eax
 00480209    cmp         byte ptr [ebp+8],0
>0048020D    jne         00480223
 0048020F    mov         eax,dword ptr [ebp-4]
 00480212    mov         eax,dword ptr [eax+38];TBaseDragControlObject..........................................F...
 00480215    mov         si,0FFDF
 00480219    call        @CallDynaInst;TControl.sub_004842B8
 0048021E    xor         eax,eax
 00480220    mov         dword ptr [ebp-8],eax
 00480223    mov         eax,dword ptr [ebp+0C]
 00480226    push        eax
 00480227    mov         ecx,dword ptr [ebp-0C]
 0048022A    mov         edx,dword ptr [ebp-8]
 0048022D    mov         eax,dword ptr [ebp-4]
 00480230    mov         ebx,dword ptr [eax]
 00480232    call        dword ptr [ebx+24];TBaseDragControlObject.sub_004801C8
 00480235    pop         esi
 00480236    pop         ebx
 00480237    mov         esp,ebp
 00480239    pop         ebp
 0048023A    ret         8
end;*}

//00480240
{*function sub_00480240(?:?; ?:?):?;
begin
 00480240    push        ebp
 00480241    mov         ebp,esp
 00480243    add         esp,0FFFFFFF4
 00480246    mov         dword ptr [ebp-0C],ecx
 00480249    mov         byte ptr [ebp-5],dl
 0048024C    mov         dword ptr [ebp-4],eax
 0048024F    cmp         byte ptr [ebp-5],0
>00480253    je          00480265
 00480255    mov         eax,dword ptr [ebp-4]
 00480258    mov         eax,dword ptr [eax+38];TDragControlObject...........................................FCon...
 0048025B    mov         ax,word ptr [eax+7A];TControl.FDragCursor:TCursor
 0048025F    mov         word ptr [ebp-8],ax
>00480263    jmp         0048026B
 00480265    mov         word ptr [ebp-8],0FFF3
 0048026B    mov         ax,word ptr [ebp-8]
 0048026F    mov         esp,ebp
 00480271    pop         ebp
 00480272    ret         4
end;*}

//00480278
{*function sub_00480278:?;
begin
 00480278    push        ebp
 00480279    mov         ebp,esp
 0048027B    add         esp,0FFFFFFF8
 0048027E    mov         dword ptr [ebp-4],eax
 00480281    mov         eax,dword ptr [ebp-4]
 00480284    mov         eax,dword ptr [eax+38];TDragControlObject............................................FCo...
 00480287    mov         edx,dword ptr [eax]
 00480289    call        dword ptr [edx+4C];TControl.sub_00482460
 0048028C    mov         dword ptr [ebp-8],eax
 0048028F    mov         eax,dword ptr [ebp-8]
 00480292    pop         ecx
 00480293    pop         ecx
 00480294    pop         ebp
 00480295    ret
end;*}

//00480298
procedure sub_00480298;
begin
{*
 00480298    push        ebp
 00480299    mov         ebp,esp
 0048029B    push        ecx
 0048029C    mov         dword ptr [ebp-4],eax
 0048029F    mov         eax,dword ptr [ebp-4]
 004802A2    mov         eax,dword ptr [eax+38];TDragControlObject.............................................FC...
 004802A5    mov         edx,dword ptr [eax]
 004802A7    call        dword ptr [edx+4C];TControl.sub_00482460
 004802AA    test        eax,eax
>004802AC    je          004802BE
 004802AE    mov         eax,dword ptr [ebp-4]
 004802B1    mov         eax,dword ptr [eax+38];TDragControlObject..............................................F...
 004802B4    mov         edx,dword ptr [eax]
 004802B6    call        dword ptr [edx+4C];TControl.sub_00482460
 004802B9    call        0048E474
 004802BE    pop         ecx
 004802BF    pop         ebp
 004802C0    ret
*}
end;

//004802C4
procedure sub_004802C4;
begin
{*
 004802C4    push        ebp
 004802C5    mov         ebp,esp
 004802C7    push        ecx
 004802C8    mov         dword ptr [ebp-4],eax
 004802CB    mov         eax,dword ptr [ebp-4]
 004802CE    mov         eax,dword ptr [eax+38];TDragControlObject..................................................
 004802D1    mov         edx,dword ptr [eax]
 004802D3    call        dword ptr [edx+4C];TControl.sub_00482460
 004802D6    test        eax,eax
>004802D8    je          004802EA
 004802DA    mov         eax,dword ptr [ebp-4]
 004802DD    mov         eax,dword ptr [eax+38];TDragControlObject..................................................
 004802E0    mov         edx,dword ptr [eax]
 004802E2    call        dword ptr [edx+4C];TControl.sub_00482460
 004802E5    call        0048E454
 004802EA    pop         ecx
 004802EB    pop         ebp
 004802EC    ret
*}
end;

//004802F0
procedure TDragControlObjectEx.BeforeDestruction;
begin
{*
 004802F0    push        ebp
 004802F1    mov         ebp,esp
 004802F3    push        ecx
 004802F4    mov         dword ptr [ebp-4],eax
 004802F7    pop         ecx
 004802F8    pop         ebp
 004802F9    ret
*}
end;

//004802FC
constructor TDragDockObject.Create;
begin
{*
 004802FC    push        ebp
 004802FD    mov         ebp,esp
 004802FF    add         esp,0FFFFFFF4
 00480302    test        dl,dl
>00480304    je          0048030E
 00480306    add         esp,0FFFFFFF0
 00480309    call        @ClassCreate
 0048030E    mov         dword ptr [ebp-0C],ecx
 00480311    mov         byte ptr [ebp-5],dl
 00480314    mov         dword ptr [ebp-4],eax
 00480317    mov         ecx,dword ptr [ebp-0C]
 0048031A    xor         edx,edx
 0048031C    mov         eax,dword ptr [ebp-4]
 0048031F    call        TDragControlObjectEx.Create
 00480324    mov         dl,1
 00480326    mov         eax,[0042C774];TBrush
 0048032B    call        TBrush.Create;TBrush.Create
 00480330    mov         edx,dword ptr [ebp-4]
 00480333    mov         dword ptr [edx+40],eax;TDragDockObject.FBrush:TBrush
 00480336    mov         edx,0FFFFFF
 0048033B    xor         eax,eax
 0048033D    call        00436FC8
 00480342    mov         edx,eax
 00480344    mov         eax,dword ptr [ebp-4]
 00480347    mov         eax,dword ptr [eax+40];TDragDockObject.FBrush:TBrush
 0048034A    call        0042EA6C
 0048034F    mov         eax,dword ptr [ebp-4]
 00480352    cmp         byte ptr [ebp-5],0
>00480356    je          00480367
 00480358    call        @AfterConstruction
 0048035D    pop         dword ptr fs:[0]
 00480364    add         esp,0C
 00480367    mov         eax,dword ptr [ebp-4]
 0048036A    mov         esp,ebp
 0048036C    pop         ebp
 0048036D    ret
*}
end;

//00480370
destructor TDragDockObject.Destroy;
begin
{*
 00480370    push        ebp
 00480371    mov         ebp,esp
 00480373    add         esp,0FFFFFFF8
 00480376    call        @BeforeDestruction
 0048037B    mov         byte ptr [ebp-5],dl
 0048037E    mov         dword ptr [ebp-4],eax
 00480381    mov         eax,dword ptr [ebp-4]
 00480384    mov         eax,dword ptr [eax+40];TDragDockObject.FBrush:TBrush
 00480387    call        TObject.Free
 0048038C    mov         dl,byte ptr [ebp-5]
 0048038F    and         dl,0FC
 00480392    mov         eax,dword ptr [ebp-4]
 00480395    call        TObject.Destroy
 0048039A    cmp         byte ptr [ebp-5],0
>0048039E    jle         004803A8
 004803A0    mov         eax,dword ptr [ebp-4]
 004803A3    call        @ClassDestroy
 004803A8    pop         ecx
 004803A9    pop         ecx
 004803AA    pop         ebp
 004803AB    ret
*}
end;

//004803AC
{*procedure sub_004803AC(?:?);
begin
 004803AC    push        ebp
 004803AD    mov         ebp,esp
 004803AF    add         esp,0FFFFFFF8
 004803B2    push        esi
 004803B3    push        edi
 004803B4    mov         dword ptr [ebp-8],edx
 004803B7    mov         dword ptr [ebp-4],eax
 004803BA    mov         edx,dword ptr [ebp-8]
 004803BD    mov         eax,dword ptr [ebp-4]
 004803C0    call        0048018C
 004803C5    mov         eax,dword ptr [ebp-8]
 004803C8    mov         edx,dword ptr ds:[47D264];TDragDockObject
 004803CE    call        @IsClass
 004803D3    test        al,al
>004803D5    je          0048042C
 004803D7    mov         eax,dword ptr [ebp-8]
 004803DA    mov         al,byte ptr [eax+54]
 004803DD    mov         edx,dword ptr [ebp-4]
 004803E0    mov         byte ptr [edx+54],al;TDragDockObject.FDropAlign:TAlign
 004803E3    mov         eax,dword ptr [ebp-8]
 004803E6    mov         eax,dword ptr [eax+58]
 004803E9    mov         edx,dword ptr [ebp-4]
 004803EC    mov         dword ptr [edx+58],eax;TDragDockObject.FDropOnControl:TControl
 004803EF    mov         eax,dword ptr [ebp-8]
 004803F2    mov         al,byte ptr [eax+6C]
 004803F5    mov         edx,dword ptr [ebp-4]
 004803F8    mov         byte ptr [edx+6C],al;TDragDockObject.FFloating:Boolean
 004803FB    mov         eax,dword ptr [ebp-8]
 004803FE    mov         edx,dword ptr [ebp-4]
 00480401    lea         esi,[eax+44]
 00480404    lea         edi,[edx+44];TDragDockObject.FDockRect:TRect
 00480407    movs        dword ptr [edi],dword ptr [esi]
 00480408    movs        dword ptr [edi],dword ptr [esi]
 00480409    movs        dword ptr [edi],dword ptr [esi]
 0048040A    movs        dword ptr [edi],dword ptr [esi]
 0048040B    mov         eax,dword ptr [ebp-8]
 0048040E    mov         edx,dword ptr [ebp-4]
 00480411    lea         esi,[eax+5C]
 00480414    lea         edi,[edx+5C];TDragDockObject.FEraseDockRect:TRect
 00480417    movs        dword ptr [edi],dword ptr [esi]
 00480418    movs        dword ptr [edi],dword ptr [esi]
 00480419    movs        dword ptr [edi],dword ptr [esi]
 0048041A    movs        dword ptr [edi],dword ptr [esi]
 0048041B    mov         eax,dword ptr [ebp-8]
 0048041E    mov         edx,dword ptr [eax+40]
 00480421    mov         eax,dword ptr [ebp-4]
 00480424    mov         eax,dword ptr [eax+40];TDragDockObject.FBrush:TBrush
 00480427    mov         ecx,dword ptr [eax]
 00480429    call        dword ptr [ecx+8];TBrush.sub_0042E938
 0048042C    pop         edi
 0048042D    pop         esi
 0048042E    pop         ecx
 0048042F    pop         ecx
 00480430    pop         ebp
 00480431    ret
end;*}

//00480434
{*procedure sub_00480434(?:?; ?:?; ?:?);
begin
 00480434    push        ebp
 00480435    mov         ebp,esp
 00480437    add         esp,0FFFFFFF4
 0048043A    push        esi
 0048043B    mov         dword ptr [ebp-0C],ecx
 0048043E    mov         dword ptr [ebp-8],edx
 00480441    mov         dword ptr [ebp-4],eax
 00480444    mov         eax,dword ptr [ebp+8]
 00480447    push        eax
 00480448    mov         ecx,dword ptr [ebp-0C]
 0048044B    mov         edx,dword ptr [ebp-8]
 0048044E    mov         eax,dword ptr [ebp-4]
 00480451    mov         eax,dword ptr [eax+38];TDragDockObject.................................................F...
 00480454    mov         si,0FFE5
 00480458    call        @CallDynaInst;TControl.sub_00484544
 0048045D    pop         esi
 0048045E    mov         esp,ebp
 00480460    pop         ebp
 00480461    ret         4
end;*}

//00480464
{*function sub_00480464(?:?; ?:?):?;
begin
 00480464    push        ebp
 00480465    mov         ebp,esp
 00480467    add         esp,0FFFFFFF4
 0048046A    mov         dword ptr [ebp-8],edx
 0048046D    mov         dword ptr [ebp-4],eax
 00480470    mov         eax,dword ptr [ebp-4]
 00480473    cdq
 00480474    xor         eax,edx
 00480476    sub         eax,edx
 00480478    mov         ecx,eax
 0048047A    mov         eax,dword ptr [ebp-8]
 0048047D    cdq
 0048047E    xor         eax,edx
 00480480    sub         eax,edx
 00480482    cmp         ecx,eax
>00480484    jge         0048048E
 00480486    mov         eax,dword ptr [ebp-4]
 00480489    mov         dword ptr [ebp-0C],eax
>0048048C    jmp         00480494
 0048048E    mov         eax,dword ptr [ebp-8]
 00480491    mov         dword ptr [ebp-0C],eax
 00480494    mov         eax,dword ptr [ebp-0C]
 00480497    mov         esp,ebp
 00480499    pop         ebp
 0048049A    ret
end;*}

//0048049C
{*procedure sub_0048049C(?:?);
begin
 0048049C    push        ebp
 0048049D    mov         ebp,esp
 0048049F    add         esp,0FFFFFFE4
 004804A2    push        esi
 004804A3    push        edi
 004804A4    mov         esi,edx
 004804A6    lea         edi,[ebp-1C]
 004804A9    movs        dword ptr [edi],dword ptr [esi]
 004804AA    movs        dword ptr [edi],dword ptr [esi]
 004804AB    movs        dword ptr [edi],dword ptr [esi]
 004804AC    movs        dword ptr [edi],dword ptr [esi]
 004804AD    mov         dword ptr [ebp-4],eax
 004804B0    mov         eax,dword ptr [ebp-1C]
 004804B3    mov         edx,dword ptr [ebp-4]
 004804B6    cmp         eax,dword ptr [edx+0C];TDragDockObject.FDragPos:TPoint
>004804B9    jg          004804C6
 004804BB    mov         eax,dword ptr [ebp-14]
 004804BE    mov         edx,dword ptr [ebp-4]
 004804C1    cmp         eax,dword ptr [edx+0C];TDragDockObject.FDragPos:TPoint
>004804C4    jge         004804E4
 004804C6    push        ebp
 004804C7    mov         edx,dword ptr [ebp-14]
 004804CA    mov         eax,dword ptr [ebp-4]
 004804CD    sub         edx,dword ptr [eax+0C]
 004804D0    mov         eax,dword ptr [ebp-1C]
 004804D3    mov         ecx,dword ptr [ebp-4]
 004804D6    sub         eax,dword ptr [ecx+0C]
 004804D9    call        00480464
 004804DE    pop         ecx
 004804DF    mov         dword ptr [ebp-8],eax
>004804E2    jmp         004804E9
 004804E4    xor         eax,eax
 004804E6    mov         dword ptr [ebp-8],eax
 004804E9    mov         eax,dword ptr [ebp-18]
 004804EC    mov         edx,dword ptr [ebp-4]
 004804EF    cmp         eax,dword ptr [edx+10]
>004804F2    jg          004804FF
 004804F4    mov         eax,dword ptr [ebp-10]
 004804F7    mov         edx,dword ptr [ebp-4]
 004804FA    cmp         eax,dword ptr [edx+10]
>004804FD    jge         0048051D
 004804FF    push        ebp
 00480500    mov         edx,dword ptr [ebp-10]
 00480503    mov         eax,dword ptr [ebp-4]
 00480506    sub         edx,dword ptr [eax+10]
 00480509    mov         eax,dword ptr [ebp-18]
 0048050C    mov         ecx,dword ptr [ebp-4]
 0048050F    sub         eax,dword ptr [ecx+10]
 00480512    call        00480464
 00480517    pop         ecx
 00480518    mov         dword ptr [ebp-0C],eax
>0048051B    jmp         00480522
 0048051D    xor         eax,eax
 0048051F    mov         dword ptr [ebp-0C],eax
 00480522    cmp         dword ptr [ebp-8],0
>00480526    jne         0048052E
 00480528    cmp         dword ptr [ebp-0C],0
>0048052C    je          00480546
 0048052E    mov         eax,dword ptr [ebp-0C]
 00480531    neg         eax
 00480533    push        eax
 00480534    mov         eax,dword ptr [ebp-8]
 00480537    neg         eax
 00480539    push        eax
 0048053A    mov         eax,dword ptr [ebp-4]
 0048053D    add         eax,44;TDragDockObject.FDockRect:TRect
 00480540    push        eax
 00480541    call        user32.OffsetRect
 00480546    pop         edi
 00480547    pop         esi
 00480548    mov         esp,ebp
 0048054A    pop         ebp
 0048054B    ret
end;*}

//0048054C
procedure sub_0048054C;
begin
{*
 0048054C    push        ebp
 0048054D    mov         ebp,esp
 0048054F    push        ecx
 00480550    push        esi
 00480551    mov         dword ptr [ebp-4],eax
 00480554    mov         edx,dword ptr [ebp-4]
 00480557    mov         eax,dword ptr [ebp-4]
 0048055A    mov         eax,dword ptr [eax+38];TDragDockObject.....................................................
 0048055D    mov         si,0FFDB
 00480561    call        @CallDynaInst;TControl.sub_004848A4
 00480566    pop         esi
 00480567    pop         ecx
 00480568    pop         ebp
 00480569    ret
*}
end;

//0048056C
procedure sub_0048056C;
begin
{*
 0048056C    push        ebp
 0048056D    mov         ebp,esp
 0048056F    push        ecx
 00480570    push        esi
 00480571    mov         dword ptr [ebp-4],eax
 00480574    mov         edx,dword ptr [ebp-4]
 00480577    mov         eax,dword ptr [ebp-4]
 0048057A    mov         eax,dword ptr [eax+38];TDragDockObject.....................................................
 0048057D    mov         si,0FFDA
 00480581    call        @CallDynaInst;TControl.sub_004848C8
 00480586    pop         esi
 00480587    pop         ecx
 00480588    pop         ebp
 00480589    ret
*}
end;

//0048058C
{*function sub_0048058C(?:?; ?:?):?;
begin
 0048058C    push        ebp
 0048058D    mov         ebp,esp
 0048058F    add         esp,0FFFFFFF4
 00480592    mov         dword ptr [ebp-0C],ecx
 00480595    mov         byte ptr [ebp-7],dl
 00480598    mov         dword ptr [ebp-4],eax
 0048059B    mov         word ptr [ebp-6],0
 004805A1    mov         ax,word ptr [ebp-6]
 004805A5    mov         esp,ebp
 004805A7    pop         ebp
 004805A8    ret         4
end;*}

//004805AC
{*function sub_004805AC:?;
begin
 004805AC    push        ebp
 004805AD    mov         ebp,esp
 004805AF    add         esp,0FFFFFFF8
 004805B2    mov         dword ptr [ebp-4],eax
 004805B5    mov         dword ptr [ebp-8],4
 004805BC    mov         eax,dword ptr [ebp-8]
 004805BF    pop         ecx
 004805C0    pop         ecx
 004805C1    pop         ebp
 004805C2    ret
end;*}

//004805C4
procedure TDragDockObjectEx.BeforeDestruction;
begin
{*
 004805C4    push        ebp
 004805C5    mov         ebp,esp
 004805C7    push        ecx
 004805C8    mov         dword ptr [ebp-4],eax
 004805CB    pop         ecx
 004805CC    pop         ebp
 004805CD    ret
*}
end;

//00480664
{*function sub_00480664(?:?; ?:?):?;
begin
 00480664    push        ebp
 00480665    mov         ebp,esp
 00480667    add         esp,0FFFFFFBC
 0048066A    push        esi
 0048066B    mov         dword ptr [ebp-4],eax
 0048066E    mov         byte ptr [ebp-5],1
 00480672    mov         eax,dword ptr [ebp+8]
 00480675    add         eax,0FFFFFFF7
 00480678    call        00480B28
 0048067D    mov         dword ptr [ebp-1C],eax
 00480680    push        4
 00480682    mov         eax,dword ptr [ebp-1C]
 00480685    push        eax
 00480686    call        user32.GetWindow
 0048068B    mov         edx,dword ptr ds:[56E3C0];^Application:TApplication
 00480691    mov         edx,dword ptr [edx]
 00480693    cmp         eax,dword ptr [edx+30];TApplication.FHandle:HWND
>00480696    je          004806CC
 00480698    mov         eax,dword ptr [ebp-1C]
 0048069B    call        0047F79C
 004806A0    mov         dword ptr [ebp-0C],eax
 004806A3    cmp         dword ptr [ebp-0C],0
>004806A7    je          0048081F
>004806AD    jmp         004806B8
 004806AF    mov         eax,dword ptr [ebp-0C]
 004806B2    mov         eax,dword ptr [eax+30]
 004806B5    mov         dword ptr [ebp-0C],eax
 004806B8    mov         eax,dword ptr [ebp-0C]
 004806BB    cmp         dword ptr [eax+30],0
>004806BF    jne         004806AF
 004806C1    mov         eax,dword ptr [ebp-0C]
 004806C4    call        TWinControl.GetHandle
 004806C9    mov         dword ptr [ebp-1C],eax
 004806CC    cmp         dword ptr [ebp-1C],0
>004806D0    je          0048081F
 004806D6    mov         eax,dword ptr [ebp-4]
 004806D9    mov         dword ptr [ebp-0C],eax
>004806DC    jmp         004806E7
 004806DE    mov         eax,dword ptr [ebp-0C]
 004806E1    mov         eax,dword ptr [eax+30]
 004806E4    mov         dword ptr [ebp-0C],eax
 004806E7    mov         eax,dword ptr [ebp-0C]
 004806EA    cmp         dword ptr [eax+30],0
>004806EE    jne         004806DE
 004806F0    mov         eax,dword ptr [ebp-0C]
 004806F3    call        TWinControl.GetHandle
 004806F8    mov         dword ptr [ebp-20],eax
 004806FB    mov         eax,dword ptr [ebp-1C]
 004806FE    cmp         eax,dword ptr [ebp-20]
>00480701    je          0048081F
 00480707    mov         eax,dword ptr [ebp+8]
 0048070A    mov         eax,dword ptr [eax-10]
 0048070D    cmp         dword ptr [eax+30],0
>00480711    je          00480740
 00480713    mov         eax,dword ptr [ebp+8]
 00480716    mov         eax,dword ptr [eax-10]
 00480719    mov         eax,dword ptr [eax+30]
 0048071C    mov         dword ptr [ebp-0C],eax
>0048071F    jmp         0048072A
 00480721    mov         eax,dword ptr [ebp-0C]
 00480724    mov         eax,dword ptr [eax+30]
 00480727    mov         dword ptr [ebp-0C],eax
 0048072A    mov         eax,dword ptr [ebp-0C]
 0048072D    cmp         dword ptr [eax+30],0
>00480731    jne         00480721
 00480733    mov         eax,dword ptr [ebp-0C]
 00480736    call        TWinControl.GetHandle
 0048073B    mov         dword ptr [ebp-24],eax
>0048073E    jmp         0048076A
 00480740    mov         eax,dword ptr [ebp+8]
 00480743    mov         eax,dword ptr [eax-10]
 00480746    mov         edx,dword ptr ds:[47E678];TWinControl
 0048074C    call        @IsClass
 00480751    test        al,al
>00480753    je          00480765
 00480755    mov         eax,dword ptr [ebp+8]
 00480758    mov         eax,dword ptr [eax-10]
 0048075B    call        TWinControl.GetHandle
 00480760    mov         dword ptr [ebp-24],eax
>00480763    jmp         0048076A
 00480765    xor         eax,eax
 00480767    mov         dword ptr [ebp-24],eax
 0048076A    mov         byte ptr [ebp-10],0
 0048076E    mov         eax,dword ptr [ebp+8]
 00480771    mov         edx,dword ptr [eax-9]
 00480774    mov         dword ptr [ebp-18],edx
 00480777    mov         edx,dword ptr [eax-5]
 0048077A    mov         dword ptr [ebp-14],edx
 0048077D    lea         eax,[ebp-24]
 00480780    push        eax
 00480781    push        4805D0
 00480786    call        kernel32.GetCurrentThreadId
 0048078B    push        eax
 0048078C    call        user32.EnumThreadWindows
 00480791    cmp         byte ptr [ebp-10],0
>00480795    je          0048081F
 0048079B    lea         eax,[ebp-34]
 0048079E    push        eax
 0048079F    mov         eax,dword ptr [ebp-1C]
 004807A2    push        eax
 004807A3    call        user32.GetWindowRect
 004807A8    mov         eax,dword ptr [ebp+8]
 004807AB    add         eax,0FFFFFFF7
 004807AE    push        eax
 004807AF    mov         eax,dword ptr [ebp+8]
 004807B2    dec         eax
 004807B3    push        eax
 004807B4    lea         ecx,[ebp-44]
 004807B7    mov         eax,dword ptr [ebp+8]
 004807BA    mov         edx,dword ptr [eax-10]
 004807BD    mov         eax,dword ptr [ebp-4]
 004807C0    mov         si,0FFBD
 004807C4    call        @CallDynaInst
 004807C9    mov         eax,[00571DBC];0x0 gvar_00571DBC
 004807CE    mov         edx,dword ptr ds:[47D264];TDragDockObject
 004807D4    call        @IsClass
 004807D9    test        al,al
>004807DB    je          00480806
 004807DD    mov         eax,[00571DBC];0x0 gvar_00571DBC
 004807E2    mov         eax,dword ptr [eax+38]
 004807E5    cmp         dword ptr [eax+0A0],0
>004807EC    je          00480806
 004807EE    mov         eax,[00571DBC];0x0 gvar_00571DBC
 004807F3    mov         eax,dword ptr [eax+38]
 004807F6    mov         eax,dword ptr [eax+0A0]
 004807FC    call        TWinControl.GetHandle
 00480801    cmp         eax,dword ptr [ebp-1C]
>00480804    je          0048081F
 00480806    lea         eax,[ebp-44]
 00480809    push        eax
 0048080A    lea         eax,[ebp-34]
 0048080D    push        eax
 0048080E    lea         eax,[ebp-34]
 00480811    push        eax
 00480812    call        user32.IntersectRect
 00480817    test        eax,eax
>00480819    je          0048081F
 0048081B    mov         byte ptr [ebp-5],0
 0048081F    mov         al,byte ptr [ebp-5]
 00480822    pop         esi
 00480823    mov         esp,ebp
 00480825    pop         ebp
 00480826    ret
end;*}

//00480828
{*function sub_00480828(?:?):?;
begin
 00480828    push        ebp
 00480829    mov         ebp,esp
 0048082B    push        ecx
 0048082C    mov         eax,dword ptr [ebp+8]
 0048082F    mov         eax,dword ptr [eax-10]
 00480832    mov         edx,dword ptr ds:[47E678];TWinControl
 00480838    call        @IsClass
 0048083D    test        al,al
>0048083F    je          00480869
 00480841    mov         eax,dword ptr [ebp+8]
 00480844    mov         eax,dword ptr [eax-14]
 00480847    call        TWinControl.GetHandle
 0048084C    push        eax
 0048084D    mov         eax,dword ptr [ebp+8]
 00480850    mov         eax,dword ptr [eax-10]
 00480853    call        TWinControl.GetHandle
 00480858    push        eax
 00480859    call        user32.IsChild
 0048085E    cmp         eax,1
 00480861    sbb         eax,eax
 00480863    inc         eax
 00480864    mov         byte ptr [ebp-1],al
>00480867    jmp         0048086D
 00480869    mov         byte ptr [ebp-1],0
 0048086D    mov         al,byte ptr [ebp-1]
 00480870    pop         ecx
 00480871    pop         ebp
 00480872    ret
end;*}

//00480874
{*function sub_00480874(?:?; ?:?):?;
begin
 00480874    push        ebp
 00480875    mov         ebp,esp
 00480877    add         esp,0FFFFFFD0
 0048087A    push        esi
 0048087B    push        edi
 0048087C    mov         esi,eax
 0048087E    lea         edi,[ebp-9]
 00480881    movs        dword ptr [edi],dword ptr [esi]
 00480882    movs        dword ptr [edi],dword ptr [esi]
 00480883    mov         dword ptr [ebp-10],edx
 00480886    xor         eax,eax
 00480888    mov         dword ptr [ebp-18],eax
 0048088B    cmp         dword ptr ds:[571DE0],0;DockSiteList:TList
>00480892    je          004809CF
 00480898    push        11
 0048089A    call        user32.GetKeyState
 0048089F    test        ax,8000
 004808A3    setne       al
 004808A6    mov         edx,dword ptr ds:[56E3C0];^Application:TApplication
 004808AC    mov         edx,dword ptr [edx]
 004808AE    xor         al,byte ptr [edx+0B4];TApplication.FAutoDragDocking:Boolean
>004808B4    je          004809CF
 004808BA    mov         eax,[00571DE4];0x0 gvar_00571DE4:TSiteList
 004808BF    mov         edx,dword ptr [eax]
 004808C1    call        dword ptr [edx+8]
 004808C4    mov         eax,[00571DE0];0x0 DockSiteList:TList
 004808C9    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004808CC    dec         eax
 004808CD    test        eax,eax
>004808CF    jl          0048099E
 004808D5    inc         eax
 004808D6    mov         dword ptr [ebp-20],eax
 004808D9    mov         dword ptr [ebp-1C],0
 004808E0    mov         edx,dword ptr [ebp-1C]
 004808E3    mov         eax,[00571DE0];0x0 DockSiteList:TList
 004808E8    call        TList.Get
 004808ED    mov         dword ptr [ebp-14],eax
 004808F0    mov         eax,dword ptr [ebp-14]
 004808F3    cmp         eax,dword ptr [ebp-10]
>004808F6    je          00480992
 004808FC    mov         eax,dword ptr [ebp-14]
 004808FF    cmp         byte ptr [eax+1A6],0
>00480906    je          00480992
 0048090C    mov         eax,dword ptr [ebp-14]
 0048090F    mov         edx,dword ptr [eax]
 00480911    call        dword ptr [edx+50]
 00480914    test        al,al
>00480916    je          00480992
 00480918    mov         eax,dword ptr [ebp-14]
 0048091B    call        TWinControl.GetHandle
 00480920    push        eax
 00480921    call        user32.IsWindowVisible
 00480926    test        eax,eax
>00480928    je          00480992
 0048092A    push        ebp
 0048092B    call        00480828
 00480930    pop         ecx
 00480931    test        al,al
>00480933    jne         00480992
 00480935    mov         eax,dword ptr [ebp-10]
 00480938    mov         eax,dword ptr [eax+0A0]
 0048093E    cmp         eax,dword ptr [ebp-14]
>00480941    jne         0048094E
 00480943    mov         eax,dword ptr [ebp-14]
 00480946    call        0048A4E8
 0048094B    dec         eax
>0048094C    jle         00480992
 0048094E    mov         byte ptr [ebp-1],1
 00480952    lea         eax,[ebp-9]
 00480955    push        eax
 00480956    lea         eax,[ebp-1]
 00480959    push        eax
 0048095A    lea         ecx,[ebp-30]
 0048095D    mov         edx,dword ptr [ebp-10]
 00480960    mov         eax,dword ptr [ebp-14]
 00480963    mov         si,0FFBD
 00480967    call        @CallDynaInst
 0048096C    cmp         byte ptr [ebp-1],0
>00480970    je          00480992
 00480972    push        dword ptr [ebp-5]
 00480975    push        dword ptr [ebp-9]
 00480978    lea         eax,[ebp-30]
 0048097B    push        eax
 0048097C    call        user32.PtInRect
 00480981    test        eax,eax
>00480983    je          00480992
 00480985    mov         edx,dword ptr [ebp-14]
 00480988    mov         eax,[00571DE4];0x0 gvar_00571DE4:TSiteList
 0048098D    call        0047FCE4
 00480992    inc         dword ptr [ebp-1C]
 00480995    dec         dword ptr [ebp-20]
>00480998    jne         004808E0
 0048099E    mov         eax,[00571DE4];0x0 gvar_00571DE4:TSiteList
 004809A3    cmp         dword ptr [eax+8],0
>004809A7    jle         004809B6
 004809A9    mov         eax,[00571DE4];0x0 gvar_00571DE4:TSiteList
 004809AE    call        0047FD90
 004809B3    mov         dword ptr [ebp-18],eax
 004809B6    cmp         dword ptr [ebp-18],0
>004809BA    je          004809CF
 004809BC    push        ebp
 004809BD    mov         eax,dword ptr [ebp-18]
 004809C0    call        00480664
 004809C5    pop         ecx
 004809C6    test        al,al
>004809C8    jne         004809CF
 004809CA    xor         eax,eax
 004809CC    mov         dword ptr [ebp-18],eax
 004809CF    mov         eax,dword ptr [ebp-18]
 004809D2    pop         edi
 004809D3    pop         esi
 004809D4    mov         esp,ebp
 004809D6    pop         ebp
 004809D7    ret
end;*}

//004809D8
{*procedure sub_004809D8(?:TPanel; ?:?);
begin
 004809D8    push        ebp
 004809D9    mov         ebp,esp
 004809DB    add         esp,0FFFFFFF4
 004809DE    mov         byte ptr [ebp-5],dl
 004809E1    mov         dword ptr [ebp-4],eax
 004809E4    cmp         dword ptr [ebp-4],0
>004809E8    je          00480A42
 004809EA    cmp         dword ptr ds:[571DE0],0;DockSiteList:TList
>004809F1    jne         00480A04
 004809F3    mov         dl,1
 004809F5    mov         eax,[0041D46C];TList
 004809FA    call        TObject.Create;TList.Create
 004809FF    mov         [00571DE0],eax;DockSiteList:TList
 00480A04    mov         edx,dword ptr [ebp-4]
 00480A07    mov         eax,[00571DE0];0x0 DockSiteList:TList
 00480A0C    call        004202BC
 00480A11    mov         dword ptr [ebp-0C],eax
 00480A14    cmp         byte ptr [ebp-5],0
>00480A18    je          00480A2F
 00480A1A    cmp         dword ptr [ebp-0C],0FFFFFFFF
>00480A1E    jne         00480A42
 00480A20    mov         edx,dword ptr [ebp-4]
 00480A23    mov         eax,[00571DE0];0x0 DockSiteList:TList
 00480A28    call        TList.Add
>00480A2D    jmp         00480A42
 00480A2F    cmp         dword ptr [ebp-0C],0FFFFFFFF
>00480A33    je          00480A42
 00480A35    mov         edx,dword ptr [ebp-0C]
 00480A38    mov         eax,[00571DE0];0x0 DockSiteList:TList
 00480A3D    call        00420094
 00480A42    mov         esp,ebp
 00480A44    pop         ebp
 00480A45    ret
end;*}

//00480A48
{*function sub_00480A48(?:?; ?:?; ?:?; ?:?; ?:?):?;
begin
 00480A48    push        ebp
 00480A49    mov         ebp,esp
 00480A4B    add         esp,0FFFFFFDC
 00480A4E    mov         dword ptr [ebp-0C],ecx
 00480A51    mov         byte ptr [ebp-5],dl
 00480A54    mov         dword ptr [ebp-4],eax
 00480A57    xor         eax,eax
 00480A59    mov         dword ptr [ebp-10],eax
 00480A5C    cmp         dword ptr [ebp-4],0
>00480A60    je          00480AA4
 00480A62    mov         eax,dword ptr [ebp+8]
 00480A65    mov         edx,dword ptr [eax]
 00480A67    mov         dword ptr [ebp-24],edx
 00480A6A    mov         edx,dword ptr [eax+4]
 00480A6D    mov         dword ptr [ebp-20],edx
 00480A70    mov         eax,dword ptr [ebp+0C]
 00480A73    mov         dword ptr [ebp-18],eax
 00480A76    mov         eax,dword ptr [ebp-0C]
 00480A79    mov         dword ptr [ebp-1C],eax
 00480A7C    cmp         byte ptr ds:[571DD8],2;gvar_00571DD8
 00480A83    sete        al
 00480A86    mov         byte ptr [ebp-14],al
 00480A89    lea         eax,[ebp-24]
 00480A8C    push        eax
 00480A8D    xor         eax,eax
 00480A8F    mov         al,byte ptr [ebp-5]
 00480A92    push        eax
 00480A93    push        0B02F
 00480A98    mov         eax,dword ptr [ebp-4]
 00480A9B    push        eax
 00480A9C    call        user32.SendMessageA
 00480AA1    mov         dword ptr [ebp-10],eax
 00480AA4    mov         eax,dword ptr [ebp-10]
 00480AA7    mov         esp,ebp
 00480AA9    pop         ebp
 00480AAA    ret         8
end;*}

//00480AB0
{*function sub_00480AB0(?:HWND):?;
begin
 00480AB0    push        ebp
 00480AB1    mov         ebp,esp
 00480AB3    add         esp,0FFFFFFF4
 00480AB6    mov         dword ptr [ebp-4],eax
 00480AB9    mov         byte ptr [ebp-5],0
 00480ABD    cmp         dword ptr [ebp-4],0
>00480AC1    je          00480B1E
 00480AC3    lea         eax,[ebp-0C]
 00480AC6    push        eax
 00480AC7    mov         eax,dword ptr [ebp-4]
 00480ACA    push        eax
 00480ACB    call        user32.GetWindowThreadProcessId
 00480AD0    test        eax,eax
>00480AD2    je          00480B1E
 00480AD4    call        kernel32.GetCurrentProcessId
 00480AD9    cmp         eax,dword ptr [ebp-0C]
>00480ADC    jne         00480B1E
 00480ADE    mov         eax,[00571DAC];0x0 WindowAtomString:AnsiString
 00480AE3    call        @LStrToPChar
 00480AE8    push        eax
 00480AE9    call        kernel32.GlobalFindAtomA
 00480AEE    cmp         ax,word ptr ds:[571DA8];0x0 WindowAtom:TAtom
>00480AF5    jne         00480B10
 00480AF7    movzx       eax,word ptr ds:[571DA8];0x0 WindowAtom:TAtom
 00480AFE    push        eax
 00480AFF    mov         eax,dword ptr [ebp-4]
 00480B02    push        eax
 00480B03    call        user32.GetPropA
 00480B08    test        eax,eax
 00480B0A    setne       byte ptr [ebp-5]
>00480B0E    jmp         00480B1E
 00480B10    mov         eax,dword ptr [ebp-4]
 00480B13    call        0047F754
 00480B18    test        eax,eax
 00480B1A    setne       byte ptr [ebp-5]
 00480B1E    mov         al,byte ptr [ebp-5]
 00480B21    mov         esp,ebp
 00480B23    pop         ebp
 00480B24    ret
end;*}

//00480B28
{*function sub_00480B28(?:?):?;
begin
 00480B28    push        ebp
 00480B29    mov         ebp,esp
 00480B2B    add         esp,0FFFFFFF8
 00480B2E    mov         dword ptr [ebp-4],eax
 00480B31    mov         eax,dword ptr [ebp-4]
 00480B34    push        dword ptr [eax+4]
 00480B37    push        dword ptr [eax]
 00480B39    call        user32.WindowFromPoint
 00480B3E    mov         dword ptr [ebp-8],eax
 00480B41    cmp         dword ptr [ebp-8],0
>00480B45    je          00480B65
 00480B47    mov         eax,dword ptr [ebp-8]
 00480B4A    call        00480AB0
 00480B4F    test        al,al
>00480B51    jne         00480B65
 00480B53    mov         eax,dword ptr [ebp-8]
 00480B56    push        eax
 00480B57    call        user32.GetParent
 00480B5C    mov         dword ptr [ebp-8],eax
 00480B5F    cmp         dword ptr [ebp-8],0
>00480B63    jne         00480B47
 00480B65    mov         eax,dword ptr [ebp-8]
 00480B68    pop         ecx
 00480B69    pop         ecx
 00480B6A    pop         ebp
 00480B6B    ret
end;*}

//00480B6C
{*function sub_00480B6C(?:?; ?:?; ?:?; ?:?):?;
begin
 00480B6C    push        ebp
 00480B6D    mov         ebp,esp
 00480B6F    add         esp,0FFFFFFF0
 00480B72    mov         byte ptr [ebp-9],cl
 00480B75    mov         dword ptr [ebp-8],edx
 00480B78    mov         dword ptr [ebp-4],eax
 00480B7B    cmp         byte ptr [ebp-9],0
>00480B7F    jne         00480BAB
 00480B81    mov         eax,dword ptr [ebp-4]
 00480B84    call        00480B28
 00480B89    mov         edx,dword ptr [ebp-8]
 00480B8C    mov         dword ptr [edx],eax
 00480B8E    push        0
 00480B90    mov         eax,dword ptr [ebp-4]
 00480B93    push        eax
 00480B94    mov         eax,dword ptr [ebp-8]
 00480B97    mov         eax,dword ptr [eax]
 00480B99    mov         ecx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480B9F    mov         dl,5
 00480BA1    call        00480A48
 00480BA6    mov         dword ptr [ebp-10],eax
>00480BA9    jmp         00480BCC
 00480BAB    mov         eax,dword ptr [ebp-4]
 00480BAE    mov         edx,dword ptr [ebp+8]
 00480BB1    call        00480874
 00480BB6    mov         dword ptr [ebp-10],eax
 00480BB9    cmp         dword ptr [ebp-10],0
>00480BBD    je          00480BCC
 00480BBF    mov         eax,dword ptr [ebp-10]
 00480BC2    call        TWinControl.GetHandle
 00480BC7    mov         edx,dword ptr [ebp-8]
 00480BCA    mov         dword ptr [edx],eax
 00480BCC    mov         eax,dword ptr [ebp-10]
 00480BCF    mov         esp,ebp
 00480BD1    pop         ebp
 00480BD2    ret         4
end;*}

//00480BD8
{*function sub_00480BD8(?:?):?;
begin
 00480BD8    push        ebp
 00480BD9    mov         ebp,esp
 00480BDB    push        ecx
 00480BDC    mov         byte ptr [ebp-1],al
 00480BDF    mov         byte ptr [ebp-2],0
 00480BE3    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480BE8    cmp         dword ptr [eax+4],0
>00480BEC    je          00480C1F
 00480BEE    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480BF3    mov         eax,dword ptr [eax+4]
 00480BF6    push        eax
 00480BF7    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480BFC    add         eax,0C
 00480BFF    push        eax
 00480C00    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480C05    mov         eax,dword ptr [eax+8]
 00480C08    mov         ecx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480C0E    mov         dl,byte ptr [ebp-1]
 00480C11    call        00480A48
 00480C16    cmp         eax,1
 00480C19    sbb         eax,eax
 00480C1B    inc         eax
 00480C1C    mov         byte ptr [ebp-2],al
 00480C1F    mov         al,byte ptr [ebp-2]
 00480C22    pop         ecx
 00480C23    pop         ebp
 00480C24    ret
end;*}

//00480C28
{*function sub_00480C28:?;
begin
 00480C28    push        ebp
 00480C29    mov         ebp,esp
 00480C2B    add         esp,0FFFFFFF0
 00480C2E    xor         eax,eax
 00480C30    mov         dword ptr [ebp-4],eax
 00480C33    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480C38    mov         eax,dword ptr [eax+4]
 00480C3B    mov         dword ptr [ebp-0C],eax
 00480C3E    cmp         dword ptr [ebp-0C],0
>00480C42    je          00480CEF
 00480C48    mov         eax,dword ptr [ebp-0C]
 00480C4B    cmp         byte ptr [eax+1A7],0
>00480C52    je          00480CEF
 00480C58    mov         eax,dword ptr [ebp-0C]
 00480C5B    cmp         dword ptr [eax+178],0
>00480C62    je          00480CEF
 00480C68    mov         eax,dword ptr [ebp-0C]
 00480C6B    call        0048A408
 00480C70    test        eax,eax
>00480C72    je          00480CEF
 00480C74    mov         eax,dword ptr [ebp-0C]
 00480C77    call        0048A408
 00480C7C    dec         eax
>00480C7D    jne         00480C9A
 00480C7F    xor         edx,edx
 00480C81    mov         eax,dword ptr [ebp-0C]
 00480C84    mov         eax,dword ptr [eax+178]
 00480C8A    call        TList.Get
 00480C8F    mov         edx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480C95    cmp         eax,dword ptr [edx+38]
>00480C98    je          00480CEF
 00480C9A    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480C9F    add         eax,0C
 00480CA2    xor         edx,edx
 00480CA4    call        00481798
 00480CA9    mov         dword ptr [ebp-8],eax
>00480CAC    jmp         00480CE1
 00480CAE    mov         edx,dword ptr [ebp-8]
 00480CB1    mov         eax,dword ptr [ebp-0C]
 00480CB4    mov         eax,dword ptr [eax+178]
 00480CBA    call        004202BC
 00480CBF    mov         dword ptr [ebp-10],eax
 00480CC2    cmp         dword ptr [ebp-10],0FFFFFFFF
>00480CC6    je          00480CD8
 00480CC8    mov         edx,dword ptr [ebp-10]
 00480CCB    mov         eax,dword ptr [ebp-0C]
 00480CCE    call        0048A43C
 00480CD3    mov         dword ptr [ebp-4],eax
>00480CD6    jmp         00480CEF
 00480CD8    mov         eax,dword ptr [ebp-8]
 00480CDB    mov         eax,dword ptr [eax+30]
 00480CDE    mov         dword ptr [ebp-8],eax
 00480CE1    cmp         dword ptr [ebp-8],0
>00480CE5    je          00480CEF
 00480CE7    mov         eax,dword ptr [ebp-8]
 00480CEA    cmp         eax,dword ptr [ebp-0C]
>00480CED    jne         00480CAE
 00480CEF    mov         eax,dword ptr [ebp-4]
 00480CF2    mov         esp,ebp
 00480CF4    pop         ebp
 00480CF5    ret
end;*}

//00480CF8
{*procedure sub_00480CF8(?:?);
begin
 00480CF8    push        ebp
 00480CF9    mov         ebp,esp
 00480CFB    add         esp,0FFFFFFE4
 00480CFE    push        ebx
 00480CFF    push        esi
 00480D00    push        edi
 00480D01    mov         dword ptr [ebp-4],eax
 00480D04    cmp         byte ptr ds:[571DD8],0;gvar_00571DD8
>00480D0B    jne         00480D46
 00480D0D    mov         eax,dword ptr [ebp-4]
 00480D10    push        dword ptr [eax]
 00480D12    mov         eax,[00571DC8];0x0 gvar_00571DC8
 00480D17    pop         edx
 00480D18    sub         eax,edx
 00480D1A    cdq
 00480D1B    xor         eax,edx
 00480D1D    sub         eax,edx
 00480D1F    cmp         eax,dword ptr ds:[571DD4];0x0 gvar_00571DD4
>00480D25    jge         00480D46
 00480D27    mov         eax,dword ptr [ebp-4]
 00480D2A    push        dword ptr [eax+4]
 00480D2D    mov         eax,[00571DCC];0x0 gvar_00571DCC
 00480D32    pop         edx
 00480D33    sub         eax,edx
 00480D35    cdq
 00480D36    xor         eax,edx
 00480D38    sub         eax,edx
 00480D3A    cmp         eax,dword ptr ds:[571DD4];0x0 gvar_00571DD4
>00480D40    jl          0048101E
 00480D46    mov         eax,[00571DB8];0x0 DragControl:TControl
 00480D4B    push        eax
 00480D4C    mov         eax,[00571DB8];0x0 DragControl:TControl
 00480D51    mov         cl,byte ptr [eax+9B];TControl.FDragKind:TDragKind
 00480D57    lea         edx,[ebp-10]
 00480D5A    mov         eax,dword ptr [ebp-4]
 00480D5D    call        00480B6C
 00480D62    mov         dword ptr [ebp-0C],eax
 00480D65    cmp         byte ptr ds:[571DD8],0;gvar_00571DD8
>00480D6C    jne         00480D94
 00480D6E    cmp         dword ptr ds:[571DDC],0;gvar_00571DDC
>00480D75    je          00480D94
 00480D77    mov         eax,[00571DCC];0x0 gvar_00571DCC
 00480D7C    push        eax
 00480D7D    call        user32.GetDesktopWindow
 00480D82    mov         edx,eax
 00480D84    mov         ecx,dword ptr ds:[571DC8];0x0 gvar_00571DC8
 00480D8A    mov         eax,[00571DDC];0x0 gvar_00571DDC
 00480D8F    call        0048E2DC
 00480D94    mov         eax,[00571DB8];0x0 DragControl:TControl
 00480D99    cmp         byte ptr [eax+9B],0;TControl.FDragKind:TDragKind
>00480DA0    jne         00480DAF
 00480DA2    mov         byte ptr ds:[571DD8],1;gvar_00571DD8
 00480DA9    mov         byte ptr [ebp-11],0
>00480DAD    jmp         00480DC1
 00480DAF    cmp         byte ptr ds:[571DD8],0;gvar_00571DD8
 00480DB6    setne       byte ptr [ebp-11]
 00480DBA    mov         byte ptr ds:[571DD8],2;gvar_00571DD8
 00480DC1    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480DC6    mov         eax,dword ptr [eax+4]
 00480DC9    cmp         eax,dword ptr [ebp-0C]
>00480DCC    je          00480E1F
 00480DCE    mov         al,1
 00480DD0    call        00480BD8
 00480DD5    cmp         dword ptr ds:[571DBC],0;gvar_00571DBC
>00480DDC    je          0048101E
 00480DE2    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480DE7    mov         edx,dword ptr [ebp-0C]
 00480DEA    mov         dword ptr [eax+4],edx
 00480DED    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480DF2    mov         edx,dword ptr [ebp-10]
 00480DF5    mov         dword ptr [eax+8],edx
 00480DF8    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480DFD    mov         edx,dword ptr [ebp-4]
 00480E00    mov         ecx,dword ptr [edx]
 00480E02    mov         dword ptr [eax+0C],ecx
 00480E05    mov         ecx,dword ptr [edx+4]
 00480E08    mov         dword ptr [eax+10],ecx
 00480E0B    xor         eax,eax
 00480E0D    call        00480BD8
 00480E12    cmp         dword ptr ds:[571DBC],0;gvar_00571DBC
>00480E19    je          0048101E
 00480E1F    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480E24    mov         edx,dword ptr [ebp-4]
 00480E27    mov         ecx,dword ptr [edx]
 00480E29    mov         dword ptr [eax+0C],ecx
 00480E2C    mov         ecx,dword ptr [edx+4]
 00480E2F    mov         dword ptr [eax+10],ecx
 00480E32    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480E37    cmp         dword ptr [eax+4],0
>00480E3B    je          00480E61
 00480E3D    lea         ecx,[ebp-1C]
 00480E40    mov         edx,dword ptr [ebp-4]
 00480E43    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480E48    mov         eax,dword ptr [eax+4]
 00480E4B    call        TControl.ScreenToClient
 00480E50    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480E55    mov         edx,dword ptr [ebp-1C]
 00480E58    mov         dword ptr [eax+14],edx
 00480E5B    mov         edx,dword ptr [ebp-18]
 00480E5E    mov         dword ptr [eax+18],edx
 00480E61    mov         eax,dword ptr [ebp-4]
 00480E64    mov         eax,dword ptr [eax+4]
 00480E67    push        eax
 00480E68    mov         al,2
 00480E6A    call        00480BD8
 00480E6F    mov         edx,eax
 00480E71    mov         ecx,dword ptr [ebp-4]
 00480E74    mov         ecx,dword ptr [ecx]
 00480E76    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480E7B    mov         ebx,dword ptr [eax]
 00480E7D    call        dword ptr [ebx+4]
 00480E80    mov         word ptr [ebp-6],ax
 00480E84    cmp         dword ptr ds:[571DDC],0;gvar_00571DDC
>00480E8B    je          00480F0B
 00480E8D    cmp         dword ptr [ebp-0C],0
>00480E91    je          00480E9C
 00480E93    mov         eax,dword ptr [ebp-0C]
 00480E96    test        byte ptr [eax+51],20
>00480E9A    je          00480EEB
 00480E9C    mov         dx,word ptr [ebp-6]
 00480EA0    mov         eax,[00571DDC];0x0 gvar_00571DDC
 00480EA5    call        0048E264
 00480EAA    mov         eax,[00571DDC];0x0 gvar_00571DDC
 00480EAF    cmp         byte ptr [eax+6A],0
>00480EB3    jne         00480ED4
 00480EB5    mov         eax,dword ptr [ebp-4]
 00480EB8    mov         eax,dword ptr [eax+4]
 00480EBB    push        eax
 00480EBC    call        user32.GetDesktopWindow
 00480EC1    mov         edx,eax
 00480EC3    mov         ecx,dword ptr [ebp-4]
 00480EC6    mov         ecx,dword ptr [ecx]
 00480EC8    mov         eax,[00571DDC];0x0 gvar_00571DDC
 00480ECD    call        0048E2DC
>00480ED2    jmp         00480F0B
 00480ED4    mov         ecx,dword ptr [ebp-4]
 00480ED7    mov         ecx,dword ptr [ecx+4]
 00480EDA    mov         edx,dword ptr [ebp-4]
 00480EDD    mov         edx,dword ptr [edx]
 00480EDF    mov         eax,[00571DDC];0x0 gvar_00571DDC
 00480EE4    call        0048E400
>00480EE9    jmp         00480F0B
 00480EEB    mov         eax,[00571DDC];0x0 gvar_00571DDC
 00480EF0    call        0048E494
 00480EF5    movsx       edx,word ptr [ebp-6]
 00480EF9    mov         eax,[0056E604];^Screen:TScreen
 00480EFE    mov         eax,dword ptr [eax]
 00480F00    call        004A9008
 00480F05    push        eax
 00480F06    call        user32.SetCursor
 00480F0B    movsx       edx,word ptr [ebp-6]
 00480F0F    mov         eax,[0056E604];^Screen:TScreen
 00480F14    mov         eax,dword ptr [eax]
 00480F16    call        004A9008
 00480F1B    push        eax
 00480F1C    call        user32.SetCursor
 00480F21    cmp         byte ptr ds:[571DD8],2;gvar_00571DD8
>00480F28    jne         0048101E
 00480F2E    cmp         dword ptr [ebp-0C],0
>00480F32    jne         00480F59
 00480F34    mov         eax,dword ptr [ebp-4]
 00480F37    mov         eax,dword ptr [eax+4]
 00480F3A    push        eax
 00480F3B    mov         ecx,dword ptr [ebp-4]
 00480F3E    mov         ecx,dword ptr [ecx]
 00480F40    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480F45    mov         eax,dword ptr [eax+38]
 00480F48    mov         edx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480F4E    mov         si,0FFE7
 00480F52    call        @CallDynaInst
>00480F57    jmp         00480FC8
 00480F59    push        ebp
 00480F5A    call        00480C28
 00480F5F    pop         ecx
 00480F60    mov         edx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480F66    mov         dword ptr [edx+58],eax
 00480F69    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480F6E    cmp         dword ptr [eax+58],0
>00480F72    jne         00480F98
 00480F74    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480F79    lea         edx,[eax+14]
 00480F7C    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480F81    mov         eax,dword ptr [eax+4]
 00480F84    mov         si,0FFD8
 00480F88    call        @CallDynaInst
 00480F8D    mov         edx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480F93    mov         byte ptr [edx+54],al
>00480F96    jmp         00480FC8
 00480F98    lea         ecx,[ebp-1C]
 00480F9B    mov         edx,dword ptr [ebp-4]
 00480F9E    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480FA3    mov         eax,dword ptr [eax+58]
 00480FA6    call        TControl.ScreenToClient
 00480FAB    lea         edx,[ebp-1C]
 00480FAE    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480FB3    mov         eax,dword ptr [eax+58]
 00480FB6    mov         si,0FFD8
 00480FBA    call        @CallDynaInst
 00480FBF    mov         edx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00480FC5    mov         byte ptr [edx+54],al
 00480FC8    cmp         dword ptr ds:[571DBC],0;gvar_00571DBC
>00480FCF    je          0048101E
 00480FD1    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480FD6    lea         edx,[eax+5C]
 00480FD9    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480FDE    add         eax,44
 00480FE1    mov         ecx,10
 00480FE6    call        CompareMem
 00480FEB    test        al,al
>00480FED    jne         0048101E
 00480FEF    cmp         byte ptr [ebp-11],0
>00480FF3    je          00480FFF
 00480FF5    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00480FFA    mov         edx,dword ptr [eax]
 00480FFC    call        dword ptr [edx+34]
 00480FFF    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00481004    mov         edx,dword ptr [eax]
 00481006    call        dword ptr [edx+30]
 00481009    mov         eax,[00571DBC];0x0 gvar_00571DBC
 0048100E    mov         edx,dword ptr ds:[571DBC];0x0 gvar_00571DBC
 00481014    lea         esi,[eax+44]
 00481017    lea         edi,[edx+5C]
 0048101A    movs        dword ptr [edi],dword ptr [esi]
 0048101B    movs        dword ptr [edi],dword ptr [esi]
 0048101C    movs        dword ptr [edi],dword ptr [esi]
 0048101D    movs        dword ptr [edi],dword ptr [esi]
 0048101E    pop         edi
 0048101F    pop         esi
 00481020    pop         ebx
 00481021    mov         esp,ebp
 00481023    pop         ebp
 00481024    ret
end;*}

//00481028
{*procedure sub_00481028(?:TDragDockObjectEx; ?:?; ?:?);
begin
 00481028    push        ebp
 00481029    mov         ebp,esp
 0048102B    add         esp,0FFFFFFE8
 0048102E    mov         dword ptr [ebp-0C],ecx
 00481031    mov         byte ptr [ebp-5],dl
 00481034    mov         dword ptr [ebp-4],eax
 00481037    mov         eax,dword ptr [ebp-4]
 0048103A    mov         [00571DBC],eax;gvar_00571DBC
 0048103F    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00481044    xor         edx,edx
 00481046    mov         dword ptr [eax+4],edx
 00481049    push        571DC8;gvar_00571DC8
 0048104E    call        user32.GetCursorPos
 00481053    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00481058    mov         edx,dword ptr ds:[571DC8];0x0 gvar_00571DC8
 0048105E    mov         dword ptr [eax+0C],edx
 00481061    mov         edx,dword ptr ds:[571DCC];0x0 gvar_00571DCC
 00481067    mov         dword ptr [eax+10],edx
 0048106A    call        user32.GetCursor
 0048106F    mov         [00571DD0],eax;gvar_00571DD0:HICON
 00481074    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00481079    call        0047FE90
 0048107E    mov         [00571DC4],eax;gvar_00571DC4
 00481083    mov         eax,dword ptr [ebp-0C]
 00481086    mov         [00571DD4],eax;gvar_00571DD4
 0048108B    mov         eax,dword ptr [ebp-4]
 0048108E    mov         edx,dword ptr ds:[47D264];TDragDockObject
 00481094    call        @IsClass
 00481099    test        al,al
>0048109B    je          0048115B
 004810A1    mov         eax,dword ptr [ebp-4]
 004810A4    add         eax,44
 004810A7    mov         dword ptr [ebp-10],eax
 004810AA    mov         eax,dword ptr [ebp-10]
 004810AD    mov         eax,dword ptr [eax+8]
 004810B0    mov         edx,dword ptr [ebp-10]
 004810B3    sub         eax,dword ptr [edx]
 004810B5    test        eax,eax
>004810B7    jle         004810E6
 004810B9    mov         eax,dword ptr [ebp-4]
 004810BC    mov         eax,dword ptr [eax+0C]
 004810BF    mov         edx,dword ptr [ebp-10]
 004810C2    sub         eax,dword ptr [edx]
 004810C4    mov         dword ptr [ebp-14],eax
 004810C7    fild        dword ptr [ebp-14]
 004810CA    mov         eax,dword ptr [ebp-10]
 004810CD    mov         eax,dword ptr [eax+8]
 004810D0    mov         edx,dword ptr [ebp-10]
 004810D3    sub         eax,dword ptr [edx]
 004810D5    mov         dword ptr [ebp-18],eax
 004810D8    fild        dword ptr [ebp-18]
 004810DB    fdivp       st(1),st
 004810DD    mov         eax,dword ptr [ebp-4]
 004810E0    fstp        qword ptr [eax+20]
 004810E3    wait
>004810E4    jmp         004810F1
 004810E6    mov         eax,dword ptr [ebp-4]
 004810E9    xor         edx,edx
 004810EB    mov         dword ptr [eax+20],edx
 004810EE    mov         dword ptr [eax+24],edx
 004810F1    mov         eax,dword ptr [ebp-10]
 004810F4    mov         eax,dword ptr [eax+0C]
 004810F7    mov         edx,dword ptr [ebp-10]
 004810FA    sub         eax,dword ptr [edx+4]
 004810FD    test        eax,eax
>004810FF    jle         00481130
 00481101    mov         eax,dword ptr [ebp-4]
 00481104    mov         eax,dword ptr [eax+10]
 00481107    mov         edx,dword ptr [ebp-10]
 0048110A    sub         eax,dword ptr [edx+4]
 0048110D    mov         dword ptr [ebp-14],eax
 00481110    fild        dword ptr [ebp-14]
 00481113    mov         eax,dword ptr [ebp-10]
 00481116    mov         eax,dword ptr [eax+0C]
 00481119    mov         edx,dword ptr [ebp-10]
 0048111C    sub         eax,dword ptr [edx+4]
 0048111F    mov         dword ptr [ebp-18],eax
 00481122    fild        dword ptr [ebp-18]
 00481125    fdivp       st(1),st
 00481127    mov         eax,dword ptr [ebp-4]
 0048112A    fstp        qword ptr [eax+28]
 0048112D    wait
>0048112E    jmp         0048113B
 00481130    mov         eax,dword ptr [ebp-4]
 00481133    xor         edx,edx
 00481135    mov         dword ptr [eax+28],edx
 00481138    mov         dword ptr [eax+2C],edx
 0048113B    cmp         byte ptr [ebp-5],0
>0048113F    je          00481152
 00481141    mov         byte ptr ds:[571DD8],2;gvar_00571DD8
 00481148    mov         eax,dword ptr [ebp-4]
 0048114B    mov         edx,dword ptr [eax]
 0048114D    call        dword ptr [edx+30]
>00481150    jmp         00481171
 00481152    mov         byte ptr ds:[571DD8],0;gvar_00571DD8
>00481159    jmp         00481171
 0048115B    cmp         byte ptr [ebp-5],0
>0048115F    je          0048116A
 00481161    mov         byte ptr ds:[571DD8],1;gvar_00571DD8
>00481168    jmp         00481171
 0048116A    mov         byte ptr ds:[571DD8],0;gvar_00571DD8
 00481171    mov         eax,[00571DBC];0x0 gvar_00571DBC
 00481176    mov         edx,dword ptr [eax]
 00481178    call        dword ptr [edx+8]
 0048117B    mov         [00571DDC],eax;gvar_00571DDC
 00481180    cmp         dword ptr ds:[571DDC],0;gvar_00571DDC
>00481187    je          004811A6
 00481189    mov         eax,[00571DCC];0x0 gvar_00571DCC
 0048118E    push        eax
 0048118F    call        user32.GetDesktopWindow
 00481194    mov         edx,eax
 00481196    mov         ecx,dword ptr ds:[571DC8];0x0 gvar_00571DC8
 0048119C    mov         eax,[00571DDC];0x0 gvar_00571DDC
 004811A1    call        0048E2DC
 004811A6    mov         dl,1
 004811A8    mov         eax,[0047FBE8];TSiteList
 004811AD    call        TObject.Create;TSiteList.Create
 004811B2    mov         [00571DE4],eax;gvar_00571DE4:TSiteList
 004811B7    cmp         byte ptr ds:[571DD8],0;gvar_00571DD8
>004811BE    je          004811CA
 004811C0    mov         eax,571DC8;gvar_00571DC8
 004811C5    call        00480CF8
 004811CA    mov         esp,ebp
 004811CC    pop         ebp
 004811CD    ret
end;*}

//004811D0
{*procedure sub_004811D0(?:TControl; ?:?; ?:Integer);
begin
 004811D0    push        ebp
 004811D1    mov         ebp,esp
 004811D3    add         esp,0FFFFFFD8
 004811D6    push        ebx
 004811D7    push        esi
 004811D8    push        edi
 004811D9    mov         dword ptr [ebp-0C],ecx
 004811DC    mov         byte ptr [ebp-5],dl
 004811DF    mov         dword ptr [ebp-4],eax
 004811E2    mov         eax,dword ptr [ebp-4]
 004811E5    mov         [00571DB8],eax;DragControl:TControl
 004811EA    xor         eax,eax
 004811EC    push        ebp
 004811ED    push        481397
 004811F2    push        dword ptr fs:[eax]
 004811F5    mov         dword ptr fs:[eax],esp
 004811F8    xor         eax,eax
 004811FA    mov         dword ptr [ebp-10],eax
 004811FD    mov         byte ptr ds:[571DC0],0;gvar_00571DC0
 00481204    mov         eax,dword ptr [ebp-4]
 00481207    cmp         byte ptr [eax+9B],0
>0048120E    jne         0048125D
 00481210    lea         edx,[ebp-10]
 00481213    mov         eax,dword ptr [ebp-4]
 00481216    mov         si,0FFDC
 0048121A    call        @CallDynaInst
 0048121F    cmp         dword ptr ds:[571DB8],0;DragControl:TControl
>00481226    jne         00481235
 00481228    xor         eax,eax
 0048122A    pop         edx
 0048122B    pop         ecx
 0048122C    pop         ecx
 0048122D    mov         dword ptr fs:[eax],edx
>00481230    jmp         004813AD
 00481235    cmp         dword ptr [ebp-10],0
>00481239    jne         0048137F
 0048123F    mov         ecx,dword ptr [ebp-4]
 00481242    mov         dl,1
 00481244    mov         eax,[0047D1D4];TDragControlObjectEx
 00481249    call        TDragControlObjectEx.Create;TDragControlObjectEx.Create
 0048124E    mov         dword ptr [ebp-10],eax
 00481251    mov         byte ptr ds:[571DC0],1;gvar_00571DC0
>00481258    jmp         0048137F
 0048125D    lea         edx,[ebp-10]
 00481260    mov         eax,dword ptr [ebp-4]
 00481263    mov         si,0FFE3
 00481267    call        @CallDynaInst
 0048126C    cmp         dword ptr ds:[571DB8],0;DragControl:TControl
>00481273    jne         00481282
 00481275    xor         eax,eax
 00481277    pop         edx
 00481278    pop         ecx
 00481279    pop         ecx
 0048127A    mov         dword ptr fs:[eax],edx
>0048127D    jmp         004813AD
 00481282    cmp         dword ptr [ebp-10],0
>00481286    jne         004812A1
 00481288    mov         ecx,dword ptr [ebp-4]
 0048128B    mov         dl,1
 0048128D    mov         eax,[0047D328];TDragDockObjectEx
 00481292    call        TDragDockObject.Create;TDragDockObjectEx.Create
 00481297    mov         dword ptr [ebp-10],eax
 0048129A    mov         byte ptr ds:[571DC0],1;gvar_00571DC0
 004812A1    mov         eax,dword ptr [ebp-10]
 004812A4    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004812A7    mov         edx,dword ptr ds:[47E678];TWinControl
 004812AD    call        @IsClass
 004812B2    test        al,al
>004812B4    je          004812D3
 004812B6    mov         eax,dword ptr [ebp-10]
 004812B9    add         eax,44;TDragDockObjectEx.FDockRect:TRect
 004812BC    push        eax
 004812BD    mov         eax,dword ptr [ebp-10]
 004812C0    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004812C3    call        TWinControl.GetHandle
 004812C8    push        eax
 004812C9    call        user32.GetWindowRect
>004812CE    jmp         0048136F
 004812D3    mov         eax,dword ptr [ebp-10]
 004812D6    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004812D9    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004812DD    jne         0048130E
 004812DF    mov         eax,dword ptr [ebp-10]
 004812E2    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004812E5    mov         edx,dword ptr ds:[47E678];TWinControl
 004812EB    call        @IsClass
 004812F0    test        al,al
>004812F2    jne         0048130E
 004812F4    lea         eax,[ebp-18]
 004812F7    push        eax
 004812F8    call        user32.GetCursorPos
 004812FD    mov         eax,dword ptr [ebp-10]
 00481300    mov         edx,dword ptr [ebp-18]
 00481303    mov         dword ptr [eax+44],edx;TDragDockObjectEx.FDockRect:TRect
 00481306    mov         edx,dword ptr [ebp-14]
 00481309    mov         dword ptr [eax+48],edx;TDragDockObjectEx.FDockRect.Top:Longint
>0048130C    jmp         0048133A
 0048130E    lea         ecx,[ebp-28]
 00481311    xor         edx,edx
 00481313    xor         eax,eax
 00481315    call        Point
 0048131A    lea         edx,[ebp-28]
 0048131D    lea         ecx,[ebp-20]
 00481320    mov         eax,dword ptr [ebp-10]
 00481323    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 00481326    call        TControl.ClientToScreen
 0048132B    mov         eax,dword ptr [ebp-10]
 0048132E    mov         edx,dword ptr [ebp-20]
 00481331    mov         dword ptr [eax+44],edx;TDragDockObjectEx.FDockRect:TRect
 00481334    mov         edx,dword ptr [ebp-1C]
 00481337    mov         dword ptr [eax+48],edx;TDragDockObjectEx.FDockRect.Top:Longint
 0048133A    mov         eax,dword ptr [ebp-10]
 0048133D    mov         edx,dword ptr [eax+48];TDragDockObjectEx.FDockRect.Top:Longint
 00481340    mov         eax,dword ptr [ebp-10]
 00481343    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 00481346    add         edx,dword ptr [eax+4C];TControl.Height:Integer
 00481349    mov         eax,dword ptr [ebp-10]
 0048134C    mov         eax,dword ptr [eax+44];TDragDockObjectEx.FDockRect:TRect
 0048134F    mov         ecx,dword ptr [ebp-10]
 00481352    mov         ecx,dword ptr [ecx+38];TDragDockObjectEx...................................................
 00481355    add         eax,dword ptr [ecx+48];TControl.Width:Integer
 00481358    lea         ecx,[ebp-20]
 0048135B    call        Point
 00481360    mov         eax,dword ptr [ebp-10]
 00481363    mov         edx,dword ptr [ebp-20]
 00481366    mov         dword ptr [eax+4C],edx;TDragDockObjectEx.FDockRect.Right:Longint
 00481369    mov         edx,dword ptr [ebp-1C]
 0048136C    mov         dword ptr [eax+50],edx
 0048136F    mov         eax,dword ptr [ebp-10]
 00481372    mov         edx,dword ptr [ebp-10]
 00481375    lea         esi,[eax+44];TDragDockObjectEx.FDockRect:TRect
 00481378    lea         edi,[edx+5C];TDragDockObjectEx.FEraseDockRect:TRect
 0048137B    movs        dword ptr [edi],dword ptr [esi]
 0048137C    movs        dword ptr [edi],dword ptr [esi]
 0048137D    movs        dword ptr [edi],dword ptr [esi]
 0048137E    movs        dword ptr [edi],dword ptr [esi]
 0048137F    mov         ecx,dword ptr [ebp-0C]
 00481382    mov         dl,byte ptr [ebp-5]
 00481385    mov         eax,dword ptr [ebp-10]
 00481388    call        00481028
 0048138D    xor         eax,eax
 0048138F    pop         edx
 00481390    pop         ecx
 00481391    pop         ecx
 00481392    mov         dword ptr fs:[eax],edx
>00481395    jmp         004813AD
>00481397    jmp         @HandleAnyException
 0048139C    xor         eax,eax
 0048139E    mov         [00571DB8],eax;DragControl:TControl
 004813A3    call        @RaiseAgain
 004813A8    call        @DoneExcept
 004813AD    pop         edi
 004813AE    pop         esi
 004813AF    pop         ebx
 004813B0    mov         esp,ebp
 004813B2    pop         ebp
 004813B3    ret
end;*}

//004813B4
{*function sub_004813B4(?:?):?;
begin
 004813B4    push        ebp
 004813B5    mov         ebp,esp
 004813B7    push        ecx
 004813B8    push        esi
 004813B9    mov         eax,[00571DBC];0x0 gvar_00571DBC
 004813BE    cmp         dword ptr [eax+4],0
 004813C2    setne       byte ptr [ebp-1]
 004813C6    mov         eax,dword ptr [ebp+8]
 004813C9    cmp         byte ptr [eax-1],0
>004813CD    je          0048142D
 004813CF    cmp         byte ptr ds:[571DD8],2;gvar_00571DD8
>004813D6    jne         0048142D
 004813D8    mov         eax,[00571DB8];0x0 DragControl:TControl
 004813DD    mov         edx,dword ptr [eax]
 004813DF    call        dword ptr [edx+54];TControl.sub_004866DC
 004813E2    test        al,al
>004813E4    jne         004813F4
 004813E6    mov         eax,[00571DB8];0x0 DragControl:TControl
 004813EB    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>004813F2    jne         004813FA
 004813F4    mov         byte ptr [ebp-1],1
>004813F8    jmp         0048142D
 004813FA    mov         eax,[00571DB8];0x0 DragControl:TControl
 004813FF    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>00481406    je          0048142D
 00481408    mov         eax,[00571DBC];0x0 gvar_00571DBC
 0048140D    mov         edx,dword ptr [eax+4]
 00481410    mov         eax,[00571DB8];0x0 DragControl:TControl
 00481415    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 0048141B    mov         ecx,dword ptr ds:[571DB8];0x0 DragControl:TControl
 00481421    mov         si,0FFBE
 00481425    call        @CallDynaInst;TWinControl.sub_0048A364
 0048142A    mov         byte ptr [ebp-1],al
 0048142D    mov         al,byte ptr [ebp-1]
 00481430    pop         esi
 00481431    pop         ecx
 00481432    pop         ebp
 00481433    ret
end;*}

//00481434
procedure DragDone(Drop:Boolean);
begin
{*
 00481434    push        ebp
 00481435    mov         ebp,esp
 00481437    add         esp,0FFFFFFE8
 0048143A    push        ebx
 0048143B    mov         byte ptr [ebp-1],al
 0048143E    xor         eax,eax
 00481440    mov         dword ptr [ebp-8],eax
 00481443    mov         byte ptr [ebp-9],0
 00481447    cmp         dword ptr ds:[571DBC],0;gvar_00571DBC
>0048144E    je          0048172A
 00481454    mov         eax,[00571DBC];gvar_00571DBC
 00481459    cmp         byte ptr [eax+30],0
>0048145D    jne         0048172A
 00481463    xor         eax,eax
 00481465    push        ebp
 00481466    push        481723
 0048146B    push        dword ptr fs:[eax]
 0048146E    mov         dword ptr fs:[eax],esp
 00481471    mov         eax,[00571DBC];gvar_00571DBC
 00481476    mov         [00571DE8],eax
 0048147B    xor         eax,eax
 0048147D    push        ebp
 0048147E    push        4816B1
 00481483    push        dword ptr fs:[eax]
 00481486    mov         dword ptr fs:[eax],esp
 00481489    mov         eax,[00571DBC];gvar_00571DBC
 0048148E    mov         byte ptr [eax+30],1
 00481492    mov         eax,[00571DBC];gvar_00571DBC
 00481497    mov         dl,byte ptr [ebp-1]
 0048149A    mov         byte ptr [eax+1C],dl
 0048149D    mov         edx,dword ptr ds:[571DC4];gvar_00571DC4
 004814A3    mov         eax,[00571DBC];gvar_00571DBC
 004814A8    call        0047FF08
 004814AD    cmp         byte ptr ds:[571DD8],2;gvar_00571DD8
>004814B4    jne         004814E1
 004814B6    mov         eax,[00571DBC];gvar_00571DBC
 004814BB    mov         edx,dword ptr ds:[47D264];TDragDockObject
 004814C1    call        @AsClass
 004814C6    mov         dword ptr [ebp-8],eax
 004814C9    mov         eax,dword ptr [ebp-8]
 004814CC    mov         edx,dword ptr [eax]
 004814CE    call        dword ptr [edx+34]
 004814D1    mov         eax,dword ptr [ebp-8]
 004814D4    cmp         dword ptr [eax+4],0
 004814D8    sete        al
 004814DB    mov         edx,dword ptr [ebp-8]
 004814DE    mov         byte ptr [edx+6C],al
 004814E1    mov         eax,[00571DBC];gvar_00571DBC
 004814E6    cmp         dword ptr [eax+4],0
>004814EA    je          00481516
 004814EC    mov         eax,[00571DBC];gvar_00571DBC
 004814F1    mov         eax,dword ptr [eax+4]
 004814F4    mov         edx,dword ptr ds:[47DF94];TControl
 004814FA    call        @IsClass
 004814FF    test        al,al
>00481501    je          00481516
 00481503    mov         eax,[00571DBC];gvar_00571DBC
 00481508    mov         edx,dword ptr [eax+14]
 0048150B    mov         dword ptr [ebp-12],edx
 0048150E    mov         edx,dword ptr [eax+18]
 00481511    mov         dword ptr [ebp-0E],edx
>00481514    jmp         00481527
 00481516    mov         eax,[00571DBC];gvar_00571DBC
 0048151B    mov         edx,dword ptr [eax+0C]
 0048151E    mov         dword ptr [ebp-12],edx
 00481521    mov         edx,dword ptr [eax+10]
 00481524    mov         dword ptr [ebp-0E],edx
 00481527    push        ebp
 00481528    call        004813B4
 0048152D    pop         ecx
 0048152E    test        al,al
>00481530    je          0048155E
 00481532    cmp         byte ptr ds:[571DD8],2;gvar_00571DD8
>00481539    jne         00481544
 0048153B    mov         eax,dword ptr [ebp-8]
 0048153E    cmp         byte ptr [eax+6C],0
>00481542    jne         00481558
 00481544    cmp         byte ptr ds:[571DD8],0;gvar_00571DD8
>0048154B    je          0048155E
 0048154D    mov         al,1
 0048154F    call        00480BD8
 00481554    test        al,al
>00481556    je          0048155E
 00481558    cmp         byte ptr [ebp-1],0
>0048155C    jne         00481562
 0048155E    xor         eax,eax
>00481560    jmp         00481564
 00481562    mov         al,1
 00481564    mov         byte ptr [ebp-9],al
 00481567    cmp         byte ptr ds:[571DD8],2;gvar_00571DD8
>0048156E    jne         004815C7
 00481570    cmp         byte ptr [ebp-9],0
>00481574    je          004815E7
 00481576    mov         eax,dword ptr [ebp-8]
 00481579    cmp         byte ptr [eax+6C],0
>0048157D    je          004815E7
 0048157F    mov         eax,dword ptr [ebp-8]
 00481582    mov         eax,dword ptr [eax+38]
 00481585    call        004A0740
 0048158A    mov         dword ptr [ebp-18],eax
 0048158D    cmp         dword ptr [ebp-18],0
>00481591    je          004815AE
 00481593    mov         eax,dword ptr [ebp-18]
 00481596    mov         eax,dword ptr [eax+220]
 0048159C    mov         edx,dword ptr [ebp-8]
 0048159F    cmp         eax,dword ptr [edx+38]
>004815A2    jne         004815AE
 004815A4    xor         edx,edx
 004815A6    mov         eax,dword ptr [ebp-18]
 004815A9    call        TForm.SetActiveControl
 004815AE    mov         eax,[00571DBC];gvar_00571DBC
 004815B3    push        eax
 004815B4    xor         ecx,ecx
 004815B6    mov         edx,0B03A
 004815BB    mov         eax,[00571DB8];DragControl:TControl
 004815C0    call        00484FFC
>004815C5    jmp         004815E7
 004815C7    cmp         dword ptr ds:[571DDC],0;gvar_00571DDC
>004815CE    je          004815DC
 004815D0    mov         eax,[00571DDC];gvar_00571DDC
 004815D5    call        0048E494
>004815DA    jmp         004815E7
 004815DC    mov         eax,[00571DD0];gvar_00571DD0:HICON
 004815E1    push        eax
 004815E2    call        user32.SetCursor
 004815E7    xor         eax,eax
 004815E9    mov         [00571DB8],eax;DragControl:TControl
 004815EE    xor         eax,eax
 004815F0    mov         [00571DBC],eax;gvar_00571DBC
 004815F5    cmp         dword ptr ds:[571DE8],0
>004815FC    je          0048165D
 004815FE    mov         eax,[00571DE8]
 00481603    cmp         dword ptr [eax+4],0
>00481607    je          0048165D
 00481609    mov         byte ptr [ebp-0A],3
 0048160D    cmp         byte ptr [ebp-9],0
>00481611    jne         00481635
 00481613    mov         byte ptr [ebp-0A],4
 00481617    mov         eax,[00571DE8]
 0048161C    xor         edx,edx
 0048161E    mov         dword ptr [eax+0C],edx
 00481621    mov         eax,[00571DE8]
 00481626    xor         edx,edx
 00481628    mov         dword ptr [eax+10],edx
 0048162B    xor         eax,eax
 0048162D    mov         dword ptr [ebp-12],eax
 00481630    xor         eax,eax
 00481632    mov         dword ptr [ebp-0E],eax
 00481635    mov         eax,[00571DE8]
 0048163A    mov         eax,dword ptr [eax+4]
 0048163D    push        eax
 0048163E    mov         eax,[00571DE8]
 00481643    add         eax,0C
 00481646    push        eax
 00481647    mov         eax,[00571DE8]
 0048164C    mov         eax,dword ptr [eax+8]
 0048164F    mov         ecx,dword ptr ds:[571DE8]
 00481655    mov         dl,byte ptr [ebp-0A]
 00481658    call        00480A48
 0048165D    xor         eax,eax
 0048165F    pop         edx
 00481660    pop         ecx
 00481661    pop         ecx
 00481662    mov         dword ptr fs:[eax],edx
 00481665    push        4816B8
 0048166A    mov         eax,[00571DE4];gvar_00571DE4:TSiteList
 0048166F    call        TObject.Free
 00481674    xor         eax,eax
 00481676    mov         [00571DE4],eax;gvar_00571DE4:TSiteList
 0048167B    cmp         dword ptr ds:[571DE8],0
>00481682    je          004816A9
 00481684    mov         eax,[00571DE8]
 00481689    mov         byte ptr [eax+30],0
 0048168D    mov         eax,dword ptr [ebp-0E]
 00481690    push        eax
 00481691    mov         al,byte ptr [ebp-9]
 00481694    push        eax
 00481695    mov         eax,[00571DE8]
 0048169A    mov         edx,dword ptr [eax+4]
 0048169D    mov         ecx,dword ptr [ebp-12]
 004816A0    mov         eax,[00571DE8]
 004816A5    mov         ebx,dword ptr [eax]
 004816A7    call        dword ptr [ebx]
 004816A9    xor         eax,eax
 004816AB    mov         [00571DBC],eax;gvar_00571DBC
 004816B0    ret
>004816B1    jmp         @HandleFinally
>004816B6    jmp         0048166A
 004816B8    xor         eax,eax
 004816BA    pop         edx
 004816BB    pop         ecx
 004816BC    pop         ecx
 004816BD    mov         dword ptr fs:[eax],edx
 004816C0    push        48172A
 004816C5    xor         eax,eax
 004816C7    mov         [00571DB8],eax;DragControl:TControl
 004816CC    cmp         dword ptr ds:[571DE8],0
>004816D3    je          0048171B
 004816D5    mov         eax,[00571DE8]
 004816DA    mov         edx,dword ptr ds:[47D1D4];TDragControlObjectEx
 004816E0    call        @IsClass
 004816E5    test        al,al
>004816E7    jne         00481711
 004816E9    mov         eax,[00571DE8]
 004816EE    mov         edx,dword ptr ds:[47D004];TDragObjectEx
 004816F4    call        @IsClass
 004816F9    test        al,al
>004816FB    jne         00481711
 004816FD    mov         eax,[00571DE8]
 00481702    mov         edx,dword ptr ds:[47D328];TDragDockObjectEx
 00481708    call        @IsClass
 0048170D    test        al,al
>0048170F    je          0048171B
 00481711    mov         eax,[00571DE8]
 00481716    call        TObject.Free
 0048171B    mov         byte ptr ds:[571DD8],0;gvar_00571DD8
 00481722    ret
>00481723    jmp         @HandleFinally
>00481728    jmp         004816C5
 0048172A    pop         ebx
 0048172B    mov         esp,ebp
 0048172D    pop         ebp
 0048172E    ret
*}
end;

//00481730
procedure CancelDrag;
begin
{*
 00481730    cmp         dword ptr ds:[571DBC],0;gvar_00571DBC
>00481737    je          00481740
 00481739    xor         eax,eax
 0048173B    call        DragDone
 00481740    xor         eax,eax
 00481742    mov         [00571DB8],eax;DragControl:TControl
 00481747    ret
*}
end;

//00481748
{*function sub_00481748(?:?):?;
begin
 00481748    push        ebp
 00481749    mov         ebp,esp
 0048174B    add         esp,0FFFFFFF4
 0048174E    mov         dword ptr [ebp-4],eax
 00481751    mov         eax,dword ptr [ebp-4]
 00481754    push        dword ptr [eax+4]
 00481757    push        dword ptr [eax]
 00481759    call        user32.WindowFromPoint
 0048175E    mov         dword ptr [ebp-0C],eax
 00481761    xor         eax,eax
 00481763    mov         dword ptr [ebp-8],eax
 00481766    cmp         dword ptr [ebp-0C],0
>0048176A    je          0048178F
 0048176C    mov         eax,dword ptr [ebp-0C]
 0048176F    call        0047F79C
 00481774    mov         dword ptr [ebp-8],eax
 00481777    cmp         dword ptr [ebp-8],0
>0048177B    jne         0048178F
 0048177D    mov         eax,dword ptr [ebp-0C]
 00481780    push        eax
 00481781    call        user32.GetParent
 00481786    mov         dword ptr [ebp-0C],eax
 00481789    cmp         dword ptr [ebp-0C],0
>0048178D    jne         0048176C
 0048178F    mov         eax,dword ptr [ebp-8]
 00481792    mov         esp,ebp
 00481794    pop         ebp
 00481795    ret
end;*}

//00481798
{*function sub_00481798(?:?; ?:?):?;
begin
 00481798    push        ebp
 00481799    mov         ebp,esp
 0048179B    add         esp,0FFFFFFE4
 0048179E    mov         byte ptr [ebp-5],dl
 004817A1    mov         dword ptr [ebp-4],eax
 004817A4    xor         eax,eax
 004817A6    mov         dword ptr [ebp-0C],eax
 004817A9    mov         eax,dword ptr [ebp-4]
 004817AC    call        00481748
 004817B1    mov         dword ptr [ebp-10],eax
 004817B4    cmp         dword ptr [ebp-10],0
>004817B8    je          004817ED
 004817BA    mov         eax,dword ptr [ebp-10]
 004817BD    mov         dword ptr [ebp-0C],eax
 004817C0    push        0
 004817C2    lea         ecx,[ebp-1C]
 004817C5    mov         edx,dword ptr [ebp-4]
 004817C8    mov         eax,dword ptr [ebp-10]
 004817CB    call        TControl.ScreenToClient
 004817D0    lea         edx,[ebp-1C]
 004817D3    mov         cl,byte ptr [ebp-5]
 004817D6    mov         eax,dword ptr [ebp-10]
 004817D9    call        00488D4C
 004817DE    mov         dword ptr [ebp-14],eax
 004817E1    cmp         dword ptr [ebp-14],0
>004817E5    je          004817ED
 004817E7    mov         eax,dword ptr [ebp-14]
 004817EA    mov         dword ptr [ebp-0C],eax
 004817ED    mov         eax,dword ptr [ebp-0C]
 004817F0    mov         esp,ebp
 004817F2    pop         ebp
 004817F3    ret
end;*}

//004817F4
{*procedure sub_004817F4(?:?; ?:?);
begin
 004817F4    push        ebp
 004817F5    mov         ebp,esp
 004817F7    add         esp,0FFFFFFF8
 004817FA    mov         dword ptr [ebp-8],edx
 004817FD    mov         dword ptr [ebp-4],eax
 00481800    mov         eax,dword ptr [ebp-4]
 00481803    cmp         dword ptr [eax],0
>00481806    jne         00481819
 00481808    mov         dl,1
 0048180A    mov         eax,[0041D46C];TList
 0048180F    call        TObject.Create;TList.Create
 00481814    mov         edx,dword ptr [ebp-4]
 00481817    mov         dword ptr [edx],eax
 00481819    mov         eax,dword ptr [ebp-4]
 0048181C    mov         eax,dword ptr [eax]
 0048181E    mov         edx,dword ptr [ebp-8]
 00481821    call        TList.Add
 00481826    pop         ecx
 00481827    pop         ecx
 00481828    pop         ebp
 00481829    ret
end;*}

//0048182C
{*procedure sub_0048182C(?:?; ?:?);
begin
 0048182C    push        ebp
 0048182D    mov         ebp,esp
 0048182F    add         esp,0FFFFFFF8
 00481832    mov         dword ptr [ebp-8],edx
 00481835    mov         dword ptr [ebp-4],eax
 00481838    mov         eax,dword ptr [ebp-4]
 0048183B    mov         eax,dword ptr [eax]
 0048183D    mov         edx,dword ptr [ebp-8]
 00481840    call        004204F0
 00481845    mov         eax,dword ptr [ebp-4]
 00481848    mov         eax,dword ptr [eax]
 0048184A    cmp         dword ptr [eax+8],0
>0048184E    jne         00481861
 00481850    mov         eax,dword ptr [ebp-4]
 00481853    mov         eax,dword ptr [eax]
 00481855    call        TObject.Free
 0048185A    mov         eax,dword ptr [ebp-4]
 0048185D    xor         edx,edx
 0048185F    mov         dword ptr [eax],edx
 00481861    pop         ecx
 00481862    pop         ecx
 00481863    pop         ebp
 00481864    ret
end;*}

//00481868
procedure MoveWindowOrg(DC:HDC; DX:Integer; DY:Integer);
begin
{*
 00481868    push        ebp
 00481869    mov         ebp,esp
 0048186B    add         esp,0FFFFFFEC
 0048186E    mov         dword ptr [ebp-0C],ecx
 00481871    mov         dword ptr [ebp-8],edx
 00481874    mov         dword ptr [ebp-4],eax
 00481877    lea         eax,[ebp-14]
 0048187A    push        eax
 0048187B    mov         eax,dword ptr [ebp-4]
 0048187E    push        eax
 0048187F    call        gdi32.GetWindowOrgEx
 00481884    push        0
 00481886    mov         eax,dword ptr [ebp-10]
 00481889    sub         eax,dword ptr [ebp-0C]
 0048188C    push        eax
 0048188D    mov         eax,dword ptr [ebp-14]
 00481890    sub         eax,dword ptr [ebp-8]
 00481893    push        eax
 00481894    mov         eax,dword ptr [ebp-4]
 00481897    push        eax
 00481898    call        gdi32.SetWindowOrgEx
 0048189D    mov         esp,ebp
 0048189F    pop         ebp
 004818A0    ret
*}
end;

//004818A4
procedure FreeDeviceContext;
begin
{*
 004818A4    push        ebp
 004818A5    mov         ebp,esp
 004818A7    add         esp,0FFFFFFF0
 004818AA    mov         eax,[00571DEC];CanvasList:TThreadList
 004818AF    call        TThreadList.LockList
 004818B4    mov         dword ptr [ebp-8],eax
 004818B7    xor         eax,eax
 004818B9    push        ebp
 004818BA    push        481954
 004818BF    push        dword ptr fs:[eax]
 004818C2    mov         dword ptr fs:[eax],esp
 004818C5    mov         eax,dword ptr [ebp-8]
 004818C8    mov         eax,dword ptr [eax+8]
 004818CB    dec         eax
 004818CC    test        eax,eax
>004818CE    jl          0048193C
 004818D0    inc         eax
 004818D1    mov         dword ptr [ebp-0C],eax
 004818D4    mov         dword ptr [ebp-4],0
 004818DB    mov         edx,dword ptr [ebp-4]
 004818DE    mov         eax,dword ptr [ebp-8]
 004818E1    call        TList.Get
 004818E6    mov         dword ptr [ebp-10],eax
 004818E9    mov         eax,dword ptr [ebp-10]
 004818EC    call        TCanvas.TryLock
 004818F1    test        al,al
>004818F3    je          00481934
 004818F5    xor         eax,eax
 004818F7    push        ebp
 004818F8    push        48192D
 004818FD    push        dword ptr fs:[eax]
 00481900    mov         dword ptr fs:[eax],esp
 00481903    mov         eax,dword ptr [ebp-10]
 00481906    call        TControlCanvas.FreeHandle
 0048190B    call        @TryFinallyExit
 00481910    call        @TryFinallyExit
>00481915    jmp         0048195B
 00481917    xor         eax,eax
 00481919    pop         edx
 0048191A    pop         ecx
 0048191B    pop         ecx
 0048191C    mov         dword ptr fs:[eax],edx
 0048191F    push        481934
 00481924    mov         eax,dword ptr [ebp-10]
 00481927    call        TCanvas.Unlock
 0048192C    ret
>0048192D    jmp         @HandleFinally
>00481932    jmp         00481924
 00481934    inc         dword ptr [ebp-4]
 00481937    dec         dword ptr [ebp-0C]
>0048193A    jne         004818DB
 0048193C    xor         eax,eax
 0048193E    pop         edx
 0048193F    pop         ecx
 00481940    pop         ecx
 00481941    mov         dword ptr fs:[eax],edx
 00481944    push        48195B
 00481949    mov         eax,[00571DEC];CanvasList:TThreadList
 0048194E    call        TThreadList.UnlockList
 00481953    ret
>00481954    jmp         @HandleFinally
>00481959    jmp         00481949
 0048195B    mov         esp,ebp
 0048195D    pop         ebp
 0048195E    ret
*}
end;

//00481960
procedure FreeDeviceContexts;
begin
{*
 00481960    push        ebp
 00481961    mov         ebp,esp
 00481963    add         esp,0FFFFFFF4
 00481966    mov         eax,[00571DEC];CanvasList:TThreadList
 0048196B    call        TThreadList.LockList
 00481970    mov         dword ptr [ebp-8],eax
 00481973    xor         eax,eax
 00481975    push        ebp
 00481976    push        4819FE
 0048197B    push        dword ptr fs:[eax]
 0048197E    mov         dword ptr fs:[eax],esp
 00481981    mov         eax,dword ptr [ebp-8]
 00481984    mov         eax,dword ptr [eax+8]
 00481987    dec         eax
 00481988    cmp         eax,0
>0048198B    jl          004819E6
 0048198D    mov         dword ptr [ebp-4],eax
 00481990    mov         edx,dword ptr [ebp-4]
 00481993    mov         eax,dword ptr [ebp-8]
 00481996    call        TList.Get
 0048199B    mov         dword ptr [ebp-0C],eax
 0048199E    mov         eax,dword ptr [ebp-0C]
 004819A1    call        TCanvas.TryLock
 004819A6    test        al,al
>004819A8    je          004819DD
 004819AA    xor         eax,eax
 004819AC    push        ebp
 004819AD    push        4819D6
 004819B2    push        dword ptr fs:[eax]
 004819B5    mov         dword ptr fs:[eax],esp
 004819B8    mov         eax,dword ptr [ebp-0C]
 004819BB    call        TControlCanvas.FreeHandle
 004819C0    xor         eax,eax
 004819C2    pop         edx
 004819C3    pop         ecx
 004819C4    pop         ecx
 004819C5    mov         dword ptr fs:[eax],edx
 004819C8    push        4819DD
 004819CD    mov         eax,dword ptr [ebp-0C]
 004819D0    call        TCanvas.Unlock
 004819D5    ret
>004819D6    jmp         @HandleFinally
>004819DB    jmp         004819CD
 004819DD    dec         dword ptr [ebp-4]
 004819E0    cmp         dword ptr [ebp-4],0FFFFFFFF
>004819E4    jne         00481990
 004819E6    xor         eax,eax
 004819E8    pop         edx
 004819E9    pop         ecx
 004819EA    pop         ecx
 004819EB    mov         dword ptr fs:[eax],edx
 004819EE    push        481A05
 004819F3    mov         eax,[00571DEC];CanvasList:TThreadList
 004819F8    call        TThreadList.UnlockList
 004819FD    ret
>004819FE    jmp         @HandleFinally
>00481A03    jmp         004819F3
 00481A05    mov         esp,ebp
 00481A07    pop         ebp
 00481A08    ret
*}
end;

//00481A0C
destructor TControlCanvas.Destroy;
begin
{*
 00481A0C    push        ebp
 00481A0D    mov         ebp,esp
 00481A0F    add         esp,0FFFFFFF8
 00481A12    call        @BeforeDestruction
 00481A17    mov         byte ptr [ebp-5],dl
 00481A1A    mov         dword ptr [ebp-4],eax
 00481A1D    mov         eax,dword ptr [ebp-4]
 00481A20    call        TControlCanvas.FreeHandle
 00481A25    mov         dl,byte ptr [ebp-5]
 00481A28    and         dl,0FC
 00481A2B    mov         eax,dword ptr [ebp-4]
 00481A2E    call        TCanvas.Destroy
 00481A33    cmp         byte ptr [ebp-5],0
>00481A37    jle         00481A41
 00481A39    mov         eax,dword ptr [ebp-4]
 00481A3C    call        @ClassDestroy
 00481A41    pop         ecx
 00481A42    pop         ecx
 00481A43    pop         ebp
 00481A44    ret
*}
end;

//00481A48
procedure sub_00481A48;
begin
{*
 00481A48    push        ebp
 00481A49    mov         ebp,esp
 00481A4B    add         esp,0FFFFFFF8
 00481A4E    mov         dword ptr [ebp-4],eax
 00481A51    mov         eax,dword ptr [ebp-4]
 00481A54    cmp         dword ptr [eax+58],0;TControlCanvas.FControl:TControl
>00481A58    jne         00481A67
 00481A5A    mov         eax,dword ptr [ebp-4]
 00481A5D    call        0042F74C
>00481A62    jmp         00481AF0
 00481A67    mov         eax,dword ptr [ebp-4]
 00481A6A    cmp         dword ptr [eax+5C],0;TControlCanvas.FDeviceContext:HDC
>00481A6E    jne         00481ADA
 00481A70    mov         eax,[00571DEC];0x0 CanvasList:TThreadList
 00481A75    call        TThreadList.LockList
 00481A7A    mov         dword ptr [ebp-8],eax
 00481A7D    xor         eax,eax
 00481A7F    push        ebp
 00481A80    push        481AD3
 00481A85    push        dword ptr fs:[eax]
 00481A88    mov         dword ptr fs:[eax],esp
 00481A8B    mov         eax,dword ptr [ebp-8]
 00481A8E    cmp         dword ptr [eax+8],4;TList.FCount:Integer
>00481A92    jl          00481A99
 00481A94    call        FreeDeviceContext
 00481A99    mov         eax,dword ptr [ebp-4]
 00481A9C    lea         edx,[eax+60];TControlCanvas.FWindowHandle:HWND
 00481A9F    mov         eax,dword ptr [ebp-4]
 00481AA2    mov         eax,dword ptr [eax+58];TControlCanvas.FControl:TControl
 00481AA5    mov         ecx,dword ptr [eax]
 00481AA7    call        dword ptr [ecx+48];TControl.sub_00483D18
 00481AAA    mov         edx,dword ptr [ebp-4]
 00481AAD    mov         dword ptr [edx+5C],eax;TControlCanvas.FDeviceContext:HDC
 00481AB0    mov         edx,dword ptr [ebp-4]
 00481AB3    mov         eax,dword ptr [ebp-8]
 00481AB6    call        TList.Add
 00481ABB    xor         eax,eax
 00481ABD    pop         edx
 00481ABE    pop         ecx
 00481ABF    pop         ecx
 00481AC0    mov         dword ptr fs:[eax],edx
 00481AC3    push        481ADA
 00481AC8    mov         eax,[00571DEC];0x0 CanvasList:TThreadList
 00481ACD    call        TThreadList.UnlockList
 00481AD2    ret
>00481AD3    jmp         @HandleFinally
>00481AD8    jmp         00481AC8
 00481ADA    mov         eax,dword ptr [ebp-4]
 00481ADD    mov         edx,dword ptr [eax+5C];TControlCanvas.FDeviceContext:HDC
 00481AE0    mov         eax,dword ptr [ebp-4]
 00481AE3    call        TCanvas.SetHandle
 00481AE8    mov         eax,dword ptr [ebp-4]
 00481AEB    call        00481B68
 00481AF0    pop         ecx
 00481AF1    pop         ecx
 00481AF2    pop         ebp
 00481AF3    ret
*}
end;

//00481AF4
procedure TControlCanvas.FreeHandle;
begin
{*
 00481AF4    push        ebp
 00481AF5    mov         ebp,esp
 00481AF7    push        ecx
 00481AF8    mov         dword ptr [ebp-4],eax
 00481AFB    mov         eax,dword ptr [ebp-4]
 00481AFE    cmp         dword ptr [eax+5C],0
>00481B02    je          00481B36
 00481B04    xor         edx,edx
 00481B06    mov         eax,dword ptr [ebp-4]
 00481B09    call        TCanvas.SetHandle
 00481B0E    mov         edx,dword ptr [ebp-4]
 00481B11    mov         eax,[00571DEC];CanvasList:TThreadList
 00481B16    call        004207D4
 00481B1B    mov         eax,dword ptr [ebp-4]
 00481B1E    mov         eax,dword ptr [eax+5C]
 00481B21    push        eax
 00481B22    mov         eax,dword ptr [ebp-4]
 00481B25    mov         eax,dword ptr [eax+60]
 00481B28    push        eax
 00481B29    call        user32.ReleaseDC
 00481B2E    mov         eax,dword ptr [ebp-4]
 00481B31    xor         edx,edx
 00481B33    mov         dword ptr [eax+5C],edx
 00481B36    pop         ecx
 00481B37    pop         ebp
 00481B38    ret
*}
end;

//00481B3C
procedure sub_00481B3C(?:TCanvas; ?:TControl);
begin
{*
 00481B3C    push        ebp
 00481B3D    mov         ebp,esp
 00481B3F    add         esp,0FFFFFFF8
 00481B42    mov         dword ptr [ebp-8],edx
 00481B45    mov         dword ptr [ebp-4],eax
 00481B48    mov         eax,dword ptr [ebp-4]
 00481B4B    mov         eax,dword ptr [eax+58]
 00481B4E    cmp         eax,dword ptr [ebp-8]
>00481B51    je          00481B64
 00481B53    mov         eax,dword ptr [ebp-4]
 00481B56    call        TControlCanvas.FreeHandle
 00481B5B    mov         eax,dword ptr [ebp-8]
 00481B5E    mov         edx,dword ptr [ebp-4]
 00481B61    mov         dword ptr [edx+58],eax
 00481B64    pop         ecx
 00481B65    pop         ecx
 00481B66    pop         ebp
 00481B67    ret
*}
end;

//00481B68
procedure sub_00481B68(?:TCanvas);
begin
{*
 00481B68    push        ebp
 00481B69    mov         ebp,esp
 00481B6B    push        ecx
 00481B6C    mov         dword ptr [ebp-4],eax
 00481B6F    mov         eax,dword ptr [ebp-4]
 00481B72    cmp         dword ptr [eax+58],0
>00481B76    je          00481B9D
 00481B78    mov         eax,dword ptr [ebp-4]
 00481B7B    mov         eax,dword ptr [eax+58]
 00481B7E    call        0048412C
 00481B83    test        al,al
>00481B85    je          00481B93
 00481B87    mov         eax,dword ptr [ebp-4]
 00481B8A    or          dword ptr [eax+54],80;TCanvas.FTextFlags:Longint
>00481B91    jmp         00481B9D
 00481B93    mov         eax,dword ptr [ebp-4]
 00481B96    and         dword ptr [eax+54],0FFFFFF7F;TCanvas.FTextFlags:Longint
 00481B9D    pop         ecx
 00481B9E    pop         ebp
 00481B9F    ret
*}
end;

//00481BA0
constructor TSizeConstraints.Create;
begin
{*
 00481BA0    push        ebp
 00481BA1    mov         ebp,esp
 00481BA3    add         esp,0FFFFFFF4
 00481BA6    test        dl,dl
>00481BA8    je          00481BB2
 00481BAA    add         esp,0FFFFFFF0
 00481BAD    call        @ClassCreate
 00481BB2    mov         dword ptr [ebp-0C],ecx
 00481BB5    mov         byte ptr [ebp-5],dl
 00481BB8    mov         dword ptr [ebp-4],eax
 00481BBB    xor         edx,edx
 00481BBD    mov         eax,dword ptr [ebp-4]
 00481BC0    call        TObject.Create
 00481BC5    mov         eax,dword ptr [ebp-4]
 00481BC8    mov         edx,dword ptr [ebp-0C]
 00481BCB    mov         dword ptr [eax+4],edx;TSizeConstraints.FControl:TControl
 00481BCE    mov         eax,dword ptr [ebp-4]
 00481BD1    cmp         byte ptr [ebp-5],0
>00481BD5    je          00481BE6
 00481BD7    call        @AfterConstruction
 00481BDC    pop         dword ptr fs:[0]
 00481BE3    add         esp,0C
 00481BE6    mov         eax,dword ptr [ebp-4]
 00481BE9    mov         esp,ebp
 00481BEB    pop         ebp
 00481BEC    ret
*}
end;

//00481BF0
{*procedure sub_00481BF0(?:?);
begin
 00481BF0    push        ebp
 00481BF1    mov         ebp,esp
 00481BF3    add         esp,0FFFFFFF8
 00481BF6    mov         dword ptr [ebp-8],edx
 00481BF9    mov         dword ptr [ebp-4],eax
 00481BFC    mov         eax,dword ptr [ebp-8]
 00481BFF    mov         edx,dword ptr ds:[47D6E0];TSizeConstraints
 00481C05    call        @IsClass
 00481C0A    test        al,al
>00481C0C    je          00481C48
 00481C0E    mov         eax,dword ptr [ebp-8]
 00481C11    mov         edx,dword ptr [ebp-4]
 00481C14    mov         edx,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
 00481C17    mov         dword ptr [eax+10],edx
 00481C1A    mov         eax,dword ptr [ebp-8]
 00481C1D    mov         edx,dword ptr [ebp-4]
 00481C20    mov         edx,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
 00481C23    mov         dword ptr [eax+8],edx
 00481C26    mov         eax,dword ptr [ebp-8]
 00481C29    mov         edx,dword ptr [ebp-4]
 00481C2C    mov         edx,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
 00481C2F    mov         dword ptr [eax+14],edx
 00481C32    mov         eax,dword ptr [ebp-8]
 00481C35    mov         edx,dword ptr [ebp-4]
 00481C38    mov         edx,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
 00481C3B    mov         dword ptr [eax+0C],edx
 00481C3E    mov         eax,dword ptr [ebp-8]
 00481C41    mov         edx,dword ptr [eax]
 00481C43    call        dword ptr [edx+0C]
>00481C46    jmp         00481C53
 00481C48    mov         edx,dword ptr [ebp-8]
 00481C4B    mov         eax,dword ptr [ebp-4]
 00481C4E    call        00420BD8
 00481C53    pop         ecx
 00481C54    pop         ecx
 00481C55    pop         ebp
 00481C56    ret
end;*}

//00481C58
{*procedure TSizeConstraints.SetMaxHeight(Value:TConstraintSize; ?:?);
begin
 00481C58    push        ebp
 00481C59    mov         ebp,esp
 00481C5B    add         esp,0FFFFFFF4
 00481C5E    mov         dword ptr [ebp-0C],ecx
 00481C61    mov         dword ptr [ebp-8],edx
 00481C64    mov         dword ptr [ebp-4],eax
 00481C67    mov         eax,dword ptr [ebp-8]
 00481C6A    sub         eax,1
>00481C6D    jb          00481C84
>00481C6F    je          00481CC3
 00481C71    dec         eax
>00481C72    je          00481CFF
 00481C78    dec         eax
>00481C79    je          00481D3A
>00481C7F    jmp         00481D73
 00481C84    mov         eax,dword ptr [ebp-0C]
 00481C87    mov         edx,dword ptr [ebp-4]
 00481C8A    cmp         eax,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
>00481C8D    je          00481D73
 00481C93    mov         eax,dword ptr [ebp-0C]
 00481C96    mov         edx,dword ptr [ebp-4]
 00481C99    mov         dword ptr [edx+8],eax;TSizeConstraints.MaxHeight:TConstraintSize
 00481C9C    cmp         dword ptr [ebp-0C],0
>00481CA0    jbe         00481CB6
 00481CA2    mov         eax,dword ptr [ebp-0C]
 00481CA5    mov         edx,dword ptr [ebp-4]
 00481CA8    cmp         eax,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
>00481CAB    jae         00481CB6
 00481CAD    mov         eax,dword ptr [ebp-0C]
 00481CB0    mov         edx,dword ptr [ebp-4]
 00481CB3    mov         dword ptr [edx+10],eax;TSizeConstraints.MinHeight:TConstraintSize
 00481CB6    mov         eax,dword ptr [ebp-4]
 00481CB9    mov         edx,dword ptr [eax]
 00481CBB    call        dword ptr [edx+0C];TSizeConstraints.sub_00481D78
>00481CBE    jmp         00481D73
 00481CC3    mov         eax,dword ptr [ebp-0C]
 00481CC6    mov         edx,dword ptr [ebp-4]
 00481CC9    cmp         eax,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
>00481CCC    je          00481D73
 00481CD2    mov         eax,dword ptr [ebp-0C]
 00481CD5    mov         edx,dword ptr [ebp-4]
 00481CD8    mov         dword ptr [edx+0C],eax;TSizeConstraints.MaxWidth:TConstraintSize
 00481CDB    cmp         dword ptr [ebp-0C],0
>00481CDF    jbe         00481CF5
 00481CE1    mov         eax,dword ptr [ebp-0C]
 00481CE4    mov         edx,dword ptr [ebp-4]
 00481CE7    cmp         eax,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
>00481CEA    jae         00481CF5
 00481CEC    mov         eax,dword ptr [ebp-0C]
 00481CEF    mov         edx,dword ptr [ebp-4]
 00481CF2    mov         dword ptr [edx+14],eax;TSizeConstraints.MinWidth:TConstraintSize
 00481CF5    mov         eax,dword ptr [ebp-4]
 00481CF8    mov         edx,dword ptr [eax]
 00481CFA    call        dword ptr [edx+0C];TSizeConstraints.sub_00481D78
>00481CFD    jmp         00481D73
 00481CFF    mov         eax,dword ptr [ebp-0C]
 00481D02    mov         edx,dword ptr [ebp-4]
 00481D05    cmp         eax,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
>00481D08    je          00481D73
 00481D0A    mov         eax,dword ptr [ebp-0C]
 00481D0D    mov         edx,dword ptr [ebp-4]
 00481D10    mov         dword ptr [edx+10],eax;TSizeConstraints.MinHeight:TConstraintSize
 00481D13    mov         eax,dword ptr [ebp-4]
 00481D16    cmp         dword ptr [eax+8],0;TSizeConstraints.MaxHeight:TConstraintSize
>00481D1A    jbe         00481D30
 00481D1C    mov         eax,dword ptr [ebp-0C]
 00481D1F    mov         edx,dword ptr [ebp-4]
 00481D22    cmp         eax,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
>00481D25    jbe         00481D30
 00481D27    mov         eax,dword ptr [ebp-0C]
 00481D2A    mov         edx,dword ptr [ebp-4]
 00481D2D    mov         dword ptr [edx+8],eax;TSizeConstraints.MaxHeight:TConstraintSize
 00481D30    mov         eax,dword ptr [ebp-4]
 00481D33    mov         edx,dword ptr [eax]
 00481D35    call        dword ptr [edx+0C];TSizeConstraints.sub_00481D78
>00481D38    jmp         00481D73
 00481D3A    mov         eax,dword ptr [ebp-0C]
 00481D3D    mov         edx,dword ptr [ebp-4]
 00481D40    cmp         eax,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
>00481D43    je          00481D73
 00481D45    mov         eax,dword ptr [ebp-0C]
 00481D48    mov         edx,dword ptr [ebp-4]
 00481D4B    mov         dword ptr [edx+14],eax;TSizeConstraints.MinWidth:TConstraintSize
 00481D4E    mov         eax,dword ptr [ebp-4]
 00481D51    cmp         dword ptr [eax+0C],0;TSizeConstraints.MaxWidth:TConstraintSize
>00481D55    jbe         00481D6B
 00481D57    mov         eax,dword ptr [ebp-0C]
 00481D5A    mov         edx,dword ptr [ebp-4]
 00481D5D    cmp         eax,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
>00481D60    jbe         00481D6B
 00481D62    mov         eax,dword ptr [ebp-0C]
 00481D65    mov         edx,dword ptr [ebp-4]
 00481D68    mov         dword ptr [edx+0C],eax;TSizeConstraints.MaxWidth:TConstraintSize
 00481D6B    mov         eax,dword ptr [ebp-4]
 00481D6E    mov         edx,dword ptr [eax]
 00481D70    call        dword ptr [edx+0C];TSizeConstraints.sub_00481D78
 00481D73    mov         esp,ebp
 00481D75    pop         ebp
 00481D76    ret
end;*}

//00481D78
procedure sub_00481D78;
begin
{*
 00481D78    push        ebp
 00481D79    mov         ebp,esp
 00481D7B    push        ecx
 00481D7C    push        ebx
 00481D7D    mov         dword ptr [ebp-4],eax
 00481D80    mov         eax,dword ptr [ebp-4]
 00481D83    cmp         word ptr [eax+1A],0;TSizeConstraints.?f1A:word
>00481D88    je          00481D96
 00481D8A    mov         ebx,dword ptr [ebp-4]
 00481D8D    mov         edx,dword ptr [ebp-4]
 00481D90    mov         eax,dword ptr [ebx+1C];TSizeConstraints.?f1C:TControl
 00481D93    call        dword ptr [ebx+18];TSizeConstraints.FOnChange
 00481D96    pop         ebx
 00481D97    pop         ecx
 00481D98    pop         ebp
 00481D99    ret
*}
end;

//00481D9C
{*procedure sub_00481D9C(?:?);
begin
 00481D9C    push        ebp
 00481D9D    mov         ebp,esp
 00481D9F    add         esp,0FFFFFFF8
 00481DA2    mov         dword ptr [ebp-8],edx
 00481DA5    mov         dword ptr [ebp-4],eax
 00481DA8    mov         eax,dword ptr [ebp-8]
 00481DAB    mov         edx,dword ptr ds:[47DF94];TControl
 00481DB1    call        @AsClass
 00481DB6    mov         edx,dword ptr [ebp-4]
 00481DB9    mov         dword ptr [edx+18],eax;TControlActionLink...................FClient:TControl
 00481DBC    pop         ecx
 00481DBD    pop         ecx
 00481DBE    pop         ebp
 00481DBF    ret
end;*}

//00481DC0
{*function sub_00481DC0(?:?):?;
begin
 00481DC0    push        ebp
 00481DC1    mov         ebp,esp
 00481DC3    add         esp,0FFFFFFDC
 00481DC6    push        esi
 00481DC7    xor         ecx,ecx
 00481DC9    mov         dword ptr [ebp-10],ecx
 00481DCC    mov         dword ptr [ebp-24],ecx
 00481DCF    mov         dword ptr [ebp-8],edx
 00481DD2    mov         dword ptr [ebp-4],eax
 00481DD5    xor         eax,eax
 00481DD7    push        ebp
 00481DD8    push        481EA5
 00481DDD    push        dword ptr fs:[eax]
 00481DE0    mov         dword ptr fs:[eax],esp
 00481DE3    mov         byte ptr [ebp-9],1
 00481DE7    mov         eax,dword ptr [ebp-4]
 00481DEA    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481DED    mov         edx,dword ptr ds:[492C28];TCustomAction
 00481DF3    call        @IsClass
 00481DF8    test        al,al
>00481DFA    je          00481E87
 00481E00    mov         edx,dword ptr [ebp-8]
 00481E03    mov         eax,dword ptr [ebp-4]
 00481E06    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481E09    mov         si,0FFEE
 00481E0D    call        @CallDynaInst
 00481E12    test        al,al
>00481E14    je          00481E87
 00481E16    mov         eax,[0056E3C0];^Application:TApplication
 00481E1B    mov         eax,dword ptr [eax]
 00481E1D    cmp         byte ptr [eax+7C],0;TApplication.FHintShortCuts:Boolean
>00481E21    je          00481E87
 00481E23    mov         eax,dword ptr [ebp-4]
 00481E26    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481E29    cmp         word ptr [eax+84],0
>00481E31    je          00481E87
 00481E33    mov         eax,dword ptr [ebp-8]
 00481E36    cmp         dword ptr [eax],0
>00481E39    je          00481E87
 00481E3B    lea         eax,[ebp-10]
 00481E3E    push        eax
 00481E3F    mov         eax,dword ptr [ebp-8]
 00481E42    mov         eax,dword ptr [eax]
 00481E44    mov         dword ptr [ebp-20],eax
 00481E47    mov         byte ptr [ebp-1C],0B
 00481E4B    lea         edx,[ebp-24]
 00481E4E    mov         eax,dword ptr [ebp-4]
 00481E51    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481E54    mov         ax,word ptr [eax+84]
 00481E5B    call        0049795C
 00481E60    mov         eax,dword ptr [ebp-24]
 00481E63    mov         dword ptr [ebp-18],eax
 00481E66    mov         byte ptr [ebp-14],0B
 00481E6A    lea         edx,[ebp-20]
 00481E6D    mov         ecx,1
 00481E72    mov         eax,481EBC;'%s (%s)'
 00481E77    call        0040D630
 00481E7C    mov         edx,dword ptr [ebp-10]
 00481E7F    mov         eax,dword ptr [ebp-8]
 00481E82    call        @LStrAsg
 00481E87    xor         eax,eax
 00481E89    pop         edx
 00481E8A    pop         ecx
 00481E8B    pop         ecx
 00481E8C    mov         dword ptr fs:[eax],edx
 00481E8F    push        481EAC
 00481E94    lea         eax,[ebp-24]
 00481E97    call        @LStrClr
 00481E9C    lea         eax,[ebp-10]
 00481E9F    call        @LStrClr
 00481EA4    ret
>00481EA5    jmp         @HandleFinally
>00481EAA    jmp         00481E94
 00481EAC    mov         al,byte ptr [ebp-9]
 00481EAF    pop         esi
 00481EB0    mov         esp,ebp
 00481EB2    pop         ebp
 00481EB3    ret
end;*}

//00481EC4
{*function sub_00481EC4:?;
begin
 00481EC4    push        ebp
 00481EC5    mov         ebp,esp
 00481EC7    add         esp,0FFFFFFF4
 00481ECA    xor         edx,edx
 00481ECC    mov         dword ptr [ebp-0C],edx
 00481ECF    mov         dword ptr [ebp-4],eax
 00481ED2    xor         eax,eax
 00481ED4    push        ebp
 00481ED5    push        481F39
 00481EDA    push        dword ptr fs:[eax]
 00481EDD    mov         dword ptr fs:[eax],esp
 00481EE0    mov         eax,dword ptr [ebp-4]
 00481EE3    call        004939F8
 00481EE8    test        al,al
>00481EEA    je          00481F1A
 00481EEC    lea         edx,[ebp-0C]
 00481EEF    mov         eax,dword ptr [ebp-4]
 00481EF2    mov         eax,dword ptr [eax+18];TControlActionLink....................FClient:TControl
 00481EF5    call        TPanel.GetCaption
 00481EFA    mov         eax,dword ptr [ebp-0C]
 00481EFD    push        eax
 00481EFE    mov         eax,dword ptr [ebp-4]
 00481F01    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481F04    mov         edx,dword ptr ds:[492C28];TCustomAction
 00481F0A    call        @AsClass
 00481F0F    mov         edx,dword ptr [eax+64];TCustomAction.FCaption:String
 00481F12    pop         eax
 00481F13    call        @LStrCmp
>00481F18    je          00481F1E
 00481F1A    xor         eax,eax
>00481F1C    jmp         00481F20
 00481F1E    mov         al,1
 00481F20    mov         byte ptr [ebp-5],al
 00481F23    xor         eax,eax
 00481F25    pop         edx
 00481F26    pop         ecx
 00481F27    pop         ecx
 00481F28    mov         dword ptr fs:[eax],edx
 00481F2B    push        481F40
 00481F30    lea         eax,[ebp-0C]
 00481F33    call        @LStrClr
 00481F38    ret
>00481F39    jmp         @HandleFinally
>00481F3E    jmp         00481F30
 00481F40    mov         al,byte ptr [ebp-5]
 00481F43    mov         esp,ebp
 00481F45    pop         ebp
 00481F46    ret
end;*}

//00481F48
{*function sub_00481F48:?;
begin
 00481F48    push        ebp
 00481F49    mov         ebp,esp
 00481F4B    add         esp,0FFFFFFF8
 00481F4E    push        ebx
 00481F4F    mov         dword ptr [ebp-4],eax
 00481F52    mov         eax,dword ptr [ebp-4]
 00481F55    call        00493A40
 00481F5A    test        al,al
>00481F5C    je          00481F81
 00481F5E    mov         eax,dword ptr [ebp-4]
 00481F61    mov         eax,dword ptr [eax+18];TControlActionLink.....................FClient:TControl
 00481F64    mov         edx,dword ptr [eax]
 00481F66    call        dword ptr [edx+50];TImage.GetEnabled
 00481F69    mov         ebx,eax
 00481F6B    mov         eax,dword ptr [ebp-4]
 00481F6E    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481F71    mov         edx,dword ptr ds:[492C28];TCustomAction
 00481F77    call        @AsClass
 00481F7C    cmp         bl,byte ptr [eax+6A];TCustomAction.FEnabled:Boolean
>00481F7F    je          00481F85
 00481F81    xor         eax,eax
>00481F83    jmp         00481F87
 00481F85    mov         al,1
 00481F87    mov         byte ptr [ebp-5],al
 00481F8A    mov         al,byte ptr [ebp-5]
 00481F8D    pop         ebx
 00481F8E    pop         ecx
 00481F8F    pop         ecx
 00481F90    pop         ebp
 00481F91    ret
end;*}

//00481F94
{*function sub_00481F94:?;
begin
 00481F94    push        ebp
 00481F95    mov         ebp,esp
 00481F97    add         esp,0FFFFFFF8
 00481F9A    mov         dword ptr [ebp-4],eax
 00481F9D    mov         eax,dword ptr [ebp-4]
 00481FA0    call        00493AD0
 00481FA5    test        al,al
>00481FA7    je          00481FD0
 00481FA9    mov         eax,dword ptr [ebp-4]
 00481FAC    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481FAF    mov         edx,dword ptr ds:[492C28];TCustomAction
 00481FB5    call        @AsClass
 00481FBA    mov         edx,dword ptr [eax+7C];TCustomAction.FHint:String
 00481FBD    mov         eax,dword ptr [ebp-4]
 00481FC0    mov         eax,dword ptr [eax+18];TControlActionLink......................FClient:TControl
 00481FC3    mov         eax,dword ptr [eax+80];TControl.Hint:String
 00481FC9    call        @LStrCmp
>00481FCE    je          00481FD4
 00481FD0    xor         eax,eax
>00481FD2    jmp         00481FD6
 00481FD4    mov         al,1
 00481FD6    mov         byte ptr [ebp-5],al
 00481FD9    mov         al,byte ptr [ebp-5]
 00481FDC    pop         ecx
 00481FDD    pop         ecx
 00481FDE    pop         ebp
 00481FDF    ret
end;*}

//00481FE0
{*function sub_00481FE0:?;
begin
 00481FE0    push        ebp
 00481FE1    mov         ebp,esp
 00481FE3    add         esp,0FFFFFFF8
 00481FE6    mov         dword ptr [ebp-4],eax
 00481FE9    mov         eax,dword ptr [ebp-4]
 00481FEC    call        00493B3C
 00481FF1    test        al,al
>00481FF3    je          00482017
 00481FF5    mov         eax,dword ptr [ebp-4]
 00481FF8    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00481FFB    mov         edx,dword ptr ds:[492C28];TCustomAction
 00482001    call        @AsClass
 00482006    mov         al,byte ptr [eax+86];TCustomAction.FVisible:Boolean
 0048200C    mov         edx,dword ptr [ebp-4]
 0048200F    mov         edx,dword ptr [edx+18];TControlActionLink.......................FClient:TControl
 00482012    cmp         al,byte ptr [edx+57];TControl.FVisible:Boolean
>00482015    je          0048201B
 00482017    xor         eax,eax
>00482019    jmp         0048201D
 0048201B    mov         al,1
 0048201D    mov         byte ptr [ebp-5],al
 00482020    mov         al,byte ptr [ebp-5]
 00482023    pop         ecx
 00482024    pop         ecx
 00482025    pop         ebp
 00482026    ret
end;*}

//00482028
{*function sub_00482028:?;
begin
 00482028    push        ebp
 00482029    mov         ebp,esp
 0048202B    add         esp,0FFFFFFF8
 0048202E    mov         dword ptr [ebp-4],eax
 00482031    mov         eax,dword ptr [ebp-4]
 00482034    call        0042AFA0
 00482039    test        al,al
>0048203B    je          00482054
 0048203D    mov         eax,dword ptr [ebp-4]
 00482040    mov         eax,dword ptr [eax+18];TControlActionLink........................FClient:TControl
 00482043    mov         eax,dword ptr [eax+120];TControl.FOnClick:TNotifyEvent
 00482049    mov         edx,dword ptr [ebp-4]
 0048204C    mov         edx,dword ptr [edx+10];TControlActionLink.FAction:TBasicAction
 0048204F    cmp         eax,dword ptr [edx+40];TBasicAction.FOnExecute:TNotifyEvent
>00482052    je          00482058
 00482054    xor         eax,eax
>00482056    jmp         0048205A
 00482058    mov         al,1
 0048205A    mov         byte ptr [ebp-5],al
 0048205D    mov         al,byte ptr [ebp-5]
 00482060    pop         ecx
 00482061    pop         ecx
 00482062    pop         ebp
 00482063    ret
end;*}

//00482064
{*procedure sub_00482064(?:?);
begin
 00482064    push        ebp
 00482065    mov         ebp,esp
 00482067    add         esp,0FFFFFFF8
 0048206A    mov         dword ptr [ebp-8],edx
 0048206D    mov         dword ptr [ebp-4],eax
 00482070    mov         eax,dword ptr [ebp-4]
 00482073    mov         edx,dword ptr [eax]
 00482075    call        dword ptr [edx+20];TControlActionLink.sub_00481EC4
 00482078    test        al,al
>0048207A    je          0048208A
 0048207C    mov         edx,dword ptr [ebp-8]
 0048207F    mov         eax,dword ptr [ebp-4]
 00482082    mov         eax,dword ptr [eax+18];TControlActionLink.........................FClient:TControl
 00482085    call        TPanel.SetCaption
 0048208A    pop         ecx
 0048208B    pop         ecx
 0048208C    pop         ebp
 0048208D    ret
end;*}

//00482090
{*procedure sub_00482090(?:?);
begin
 00482090    push        ebp
 00482091    mov         ebp,esp
 00482093    add         esp,0FFFFFFF8
 00482096    mov         byte ptr [ebp-5],dl
 00482099    mov         dword ptr [ebp-4],eax
 0048209C    mov         eax,dword ptr [ebp-4]
 0048209F    mov         edx,dword ptr [eax]
 004820A1    call        dword ptr [edx+28];TControlActionLink.sub_00481F48
 004820A4    test        al,al
>004820A6    je          004820B6
 004820A8    mov         dl,byte ptr [ebp-5]
 004820AB    mov         eax,dword ptr [ebp-4]
 004820AE    mov         eax,dword ptr [eax+18];TControlActionLink..........................FClient:TControl
 004820B1    mov         ecx,dword ptr [eax]
 004820B3    call        dword ptr [ecx+64];TImage.SetEnabled
 004820B6    pop         ecx
 004820B7    pop         ecx
 004820B8    pop         ebp
 004820B9    ret
end;*}

//004820BC
{*procedure sub_004820BC(?:?);
begin
 004820BC    push        ebp
 004820BD    mov         ebp,esp
 004820BF    add         esp,0FFFFFFF8
 004820C2    mov         dword ptr [ebp-8],edx
 004820C5    mov         dword ptr [ebp-4],eax
 004820C8    mov         eax,dword ptr [ebp-4]
 004820CB    mov         edx,dword ptr [eax]
 004820CD    call        dword ptr [edx+38];TControlActionLink.sub_00481F94
 004820D0    test        al,al
>004820D2    je          004820E7
 004820D4    mov         eax,dword ptr [ebp-4]
 004820D7    mov         eax,dword ptr [eax+18];TControlActionLink...........................FClient:TControl
 004820DA    add         eax,80;TControl.Hint:String
 004820DF    mov         edx,dword ptr [ebp-8]
 004820E2    call        @LStrAsg
 004820E7    pop         ecx
 004820E8    pop         ecx
 004820E9    pop         ebp
 004820EA    ret
end;*}

//004820EC
{*procedure sub_004820EC(?:?);
begin
 004820EC    push        ebp
 004820ED    mov         ebp,esp
 004820EF    add         esp,0FFFFFFF8
 004820F2    mov         byte ptr [ebp-5],dl
 004820F5    mov         dword ptr [ebp-4],eax
 004820F8    mov         eax,dword ptr [ebp-4]
 004820FB    mov         edx,dword ptr [eax]
 004820FD    call        dword ptr [edx+44];TControlActionLink.sub_00481FE0
 00482100    test        al,al
>00482102    je          00482112
 00482104    mov         dl,byte ptr [ebp-5]
 00482107    mov         eax,dword ptr [ebp-4]
 0048210A    mov         eax,dword ptr [eax+18];TControlActionLink............................FClient:TControl
 0048210D    call        TImage.SetVisible
 00482112    pop         ecx
 00482113    pop         ecx
 00482114    pop         ebp
 00482115    ret
end;*}

//00482118
{*procedure sub_00482118(?:?; ?:?);
begin
 00482118    push        ebp
 00482119    mov         ebp,esp
 0048211B    push        ecx
 0048211C    mov         dword ptr [ebp-4],eax
 0048211F    mov         eax,dword ptr [ebp-4]
 00482122    mov         edx,dword ptr [eax]
 00482124    call        dword ptr [edx+8];TControlActionLink.sub_00482028
 00482127    test        al,al
>00482129    je          00482143
 0048212B    mov         eax,dword ptr [ebp-4]
 0048212E    mov         eax,dword ptr [eax+18];TControlActionLink.............................FClient:TControl
 00482131    mov         edx,dword ptr [ebp+8]
 00482134    mov         dword ptr [eax+120],edx;TControl.FOnClick:TNotifyEvent
 0048213A    mov         edx,dword ptr [ebp+0C]
 0048213D    mov         dword ptr [eax+124],edx;TControl.?f124:TMessageForm
 00482143    pop         ecx
 00482144    pop         ebp
 00482145    ret         8
end;*}

//00482148
{*function sub_00482148:?;
begin
 00482148    push        ebp
 00482149    mov         ebp,esp
 0048214B    add         esp,0FFFFFFF8
 0048214E    mov         dword ptr [ebp-4],eax
 00482151    mov         eax,dword ptr [ebp-4]
 00482154    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00482157    mov         edx,dword ptr ds:[492C28];TCustomAction
 0048215D    call        @AsClass
 00482162    mov         eax,dword ptr [eax+74];TCustomAction.FHelpContext:THelpContext
 00482165    mov         edx,dword ptr [ebp-4]
 00482168    mov         edx,dword ptr [edx+18];TControlActionLink..............................FClient:TControl
 0048216B    cmp         eax,dword ptr [edx+158];TControl.HelpContext:THelpContext
>00482171    jne         004821BC
 00482173    mov         eax,dword ptr [ebp-4]
 00482176    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 00482179    mov         edx,dword ptr ds:[492C28];TCustomAction
 0048217F    call        @AsClass
 00482184    mov         edx,dword ptr [eax+78];TCustomAction.FHelpKeyword:String
 00482187    mov         eax,dword ptr [ebp-4]
 0048218A    mov         eax,dword ptr [eax+18];TControlActionLink...............................FClient:TControl
 0048218D    mov         eax,dword ptr [eax+154];TControl.HelpKeyword:String
 00482193    call        @LStrCmp
>00482198    jne         004821BC
 0048219A    mov         eax,dword ptr [ebp-4]
 0048219D    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004821A0    mov         edx,dword ptr ds:[492C28];TCustomAction
 004821A6    call        @AsClass
 004821AB    mov         al,byte ptr [eax+70];TCustomAction.FHelpType:THelpType
 004821AE    mov         edx,dword ptr [ebp-4]
 004821B1    mov         edx,dword ptr [edx+18];TControlActionLink................................FClient:TContro...
 004821B4    cmp         al,byte ptr [edx+150];TControl.HelpType:THelpType
>004821BA    je          004821C0
 004821BC    xor         eax,eax
>004821BE    jmp         004821C2
 004821C0    mov         al,1
 004821C2    mov         byte ptr [ebp-5],al
 004821C5    mov         al,byte ptr [ebp-5]
 004821C8    pop         ecx
 004821C9    pop         ecx
 004821CA    pop         ebp
 004821CB    ret
end;*}

//004821CC
{*procedure sub_004821CC(?:?);
begin
 004821CC    push        ebp
 004821CD    mov         ebp,esp
 004821CF    add         esp,0FFFFFFF8
 004821D2    mov         dword ptr [ebp-8],edx
 004821D5    mov         dword ptr [ebp-4],eax
 004821D8    mov         eax,dword ptr [ebp-4]
 004821DB    mov         edx,dword ptr [eax]
 004821DD    call        dword ptr [edx+34];TControlActionLink.sub_00482148
 004821E0    test        al,al
>004821E2    je          004821F2
 004821E4    mov         edx,dword ptr [ebp-8]
 004821E7    mov         eax,dword ptr [ebp-4]
 004821EA    mov         eax,dword ptr [eax+18];TControlActionLink.................................FClient:TContr...
 004821ED    call        TControl.SetHelpKeyword
 004821F2    pop         ecx
 004821F3    pop         ecx
 004821F4    pop         ebp
 004821F5    ret
end;*}

//004821F8
{*procedure sub_004821F8(?:?);
begin
 004821F8    push        ebp
 004821F9    mov         ebp,esp
 004821FB    add         esp,0FFFFFFF8
 004821FE    mov         dword ptr [ebp-8],edx
 00482201    mov         dword ptr [ebp-4],eax
 00482204    mov         eax,dword ptr [ebp-4]
 00482207    mov         edx,dword ptr [eax]
 00482209    call        dword ptr [edx+34];TControlActionLink.sub_00482148
 0048220C    test        al,al
>0048220E    je          0048221E
 00482210    mov         edx,dword ptr [ebp-8]
 00482213    mov         eax,dword ptr [ebp-4]
 00482216    mov         eax,dword ptr [eax+18];TControlActionLink..................................FClient:TCont...
 00482219    call        TControl.SetHelpContext
 0048221E    pop         ecx
 0048221F    pop         ecx
 00482220    pop         ebp
 00482221    ret
end;*}

//00482224
{*procedure sub_00482224(?:?);
begin
 00482224    push        ebp
 00482225    mov         ebp,esp
 00482227    add         esp,0FFFFFFF8
 0048222A    mov         byte ptr [ebp-5],dl
 0048222D    mov         dword ptr [ebp-4],eax
 00482230    mov         eax,dword ptr [ebp-4]
 00482233    mov         edx,dword ptr [eax]
 00482235    call        dword ptr [edx+34];TControlActionLink.sub_00482148
 00482238    test        al,al
>0048223A    je          0048224B
 0048223C    mov         eax,dword ptr [ebp-4]
 0048223F    mov         eax,dword ptr [eax+18];TControlActionLink...................................FClient:TCon...
 00482242    mov         dl,byte ptr [ebp-5]
 00482245    mov         byte ptr [eax+150],dl;TControl.HelpType:THelpType
 0048224B    pop         ecx
 0048224C    pop         ecx
 0048224D    pop         ebp
 0048224E    ret
end;*}

//00482250
constructor sub_00482250;
begin
{*
 00482250    push        ebp
 00482251    mov         ebp,esp
 00482253    add         esp,0FFFFFFF4
 00482256    test        dl,dl
>00482258    je          00482262
 0048225A    add         esp,0FFFFFFF0
 0048225D    call        @ClassCreate
 00482262    mov         dword ptr [ebp-0C],ecx
 00482265    mov         byte ptr [ebp-5],dl
 00482268    mov         dword ptr [ebp-4],eax
 0048226B    mov         ecx,dword ptr [ebp-0C]
 0048226E    xor         edx,edx
 00482270    mov         eax,dword ptr [ebp-4]
 00482273    call        0042A1B0
 00482278    mov         eax,dword ptr [ebp-4]
 0048227B    mov         edx,dword ptr [ebp-4]
 0048227E    mov         dword ptr [eax+3C],edx;TControl.?f3C:TControl
 00482281    mov         edx,dword ptr [edx]
 00482283    mov         edx,dword ptr [edx+74];TControl.FConstraints:TSizeConstraints
 00482286    mov         dword ptr [eax+38],edx;TControl.FWindowProc:TWndMethod
 00482289    mov         eax,dword ptr [ebp-4]
 0048228C    mov         edx,dword ptr ds:[482370];0xAA gvar_00482370
 00482292    mov         dword ptr [eax+50],edx;TControl.FControlStyle:TControlStyle
 00482295    mov         dl,1
 00482297    mov         eax,[0042C4F8];TFont
 0048229C    call        TFont.Create;TFont.Create
 004822A1    mov         edx,dword ptr [ebp-4]
 004822A4    mov         dword ptr [edx+68],eax;TControl.FFont:TFont
 004822A7    mov         eax,dword ptr [ebp-4]
 004822AA    mov         eax,dword ptr [eax+68];TControl.FFont:TFont
 004822AD    mov         edx,dword ptr [ebp-4]
 004822B0    mov         dword ptr [eax+0C],edx;TFont.?fC:TCustomListView
 004822B3    mov         dword ptr [eax+8],4838A4;TFont.FOnChange:TNotifyEvent sub_004838A4
 004822BA    mov         eax,dword ptr [ebp-4]
 004822BD    mov         dl,byte ptr ds:[482374];0x3 gvar_00482374
 004822C3    mov         byte ptr [eax+61],dl;TControl.FAnchors:TAnchors
 004822C6    mov         ecx,dword ptr [ebp-4]
 004822C9    mov         dl,1
 004822CB    mov         eax,[0047D6E0];TSizeConstraints
 004822D0    call        TSizeConstraints.Create;TSizeConstraints.Create
 004822D5    mov         edx,dword ptr [ebp-4]
 004822D8    mov         dword ptr [edx+74],eax;TControl.FConstraints:TSizeConstraints
 004822DB    mov         eax,dword ptr [ebp-4]
 004822DE    mov         eax,dword ptr [eax+74];TControl.FConstraints:TSizeConstraints
 004822E1    mov         edx,dword ptr [ebp-4]
 004822E4    mov         dword ptr [eax+1C],edx;TSizeConstraints.?f1C:TControl
 004822E7    mov         dword ptr [eax+18],484CE4;TSizeConstraints.FOnChange:TNotifyEvent sub_00484CE4
 004822EE    mov         eax,dword ptr [ebp-4]
 004822F1    mov         dword ptr [eax+70],0FF000005;TControl.FColor:TColor
 004822F8    mov         eax,dword ptr [ebp-4]
 004822FB    mov         byte ptr [eax+57],1;TControl.FVisible:Boolean
 004822FF    mov         eax,dword ptr [ebp-4]
 00482302    mov         byte ptr [eax+58],1;TControl.FEnabled:Boolean
 00482306    mov         eax,dword ptr [ebp-4]
 00482309    mov         byte ptr [eax+59],1;TControl.FParentFont:Boolean
 0048230D    mov         eax,dword ptr [ebp-4]
 00482310    mov         byte ptr [eax+5A],1;TControl.FParentColor:Boolean
 00482314    mov         eax,dword ptr [ebp-4]
 00482317    mov         byte ptr [eax+9A],1;TControl.FParentShowHint:Boolean
 0048231E    mov         eax,dword ptr [ebp-4]
 00482321    mov         byte ptr [eax+60],1;TControl.FParentBiDiMode:Boolean
 00482325    mov         eax,dword ptr [ebp-4]
 00482328    mov         byte ptr [eax+5E],0;TControl.FIsControl:Boolean
 0048232C    mov         eax,dword ptr [ebp-4]
 0048232F    mov         word ptr [eax+7A],0FFF4;TControl.FDragCursor:TCursor
 00482335    mov         eax,dword ptr [ebp-4]
 00482338    mov         edx,dword ptr ds:[49FD10];TCustomDockForm
 0048233E    mov         dword ptr [eax+0B8],edx;TControl.FFloatingDockSiteClass:TWinControlClass
 00482344    mov         eax,dword ptr [ebp-4]
 00482347    mov         byte ptr [eax+150],1;TControl.HelpType:THelpType
 0048234E    mov         eax,dword ptr [ebp-4]
 00482351    cmp         byte ptr [ebp-5],0
>00482355    je          00482366
 00482357    call        @AfterConstruction
 0048235C    pop         dword ptr fs:[0]
 00482363    add         esp,0C
 00482366    mov         eax,dword ptr [ebp-4]
 00482369    mov         esp,ebp
 0048236B    pop         ebp
 0048236C    ret
*}
end;

//00482378
destructor TControl.Destroy;
begin
{*
 00482378    push        ebp
 00482379    mov         ebp,esp
 0048237B    add         esp,0FFFFFFE8
 0048237E    push        esi
 0048237F    call        @BeforeDestruction
 00482384    mov         byte ptr [ebp-5],dl
 00482387    mov         dword ptr [ebp-4],eax
 0048238A    mov         eax,[0056E3C0];^Application:TApplication
 0048238F    mov         eax,dword ptr [eax]
 00482391    mov         edx,dword ptr [ebp-4]
 00482394    call        004AA1CC
 00482399    mov         eax,dword ptr [ebp-4]
 0048239C    cmp         dword ptr [eax+0A0],0
>004823A3    je          00482401
 004823A5    mov         eax,dword ptr [ebp-4]
 004823A8    mov         eax,dword ptr [eax+0A0]
 004823AE    test        byte ptr [eax+1C],8
>004823B2    jne         00482401
 004823B4    mov         eax,dword ptr [ebp-4]
 004823B7    push        eax
 004823B8    mov         eax,dword ptr [ebp-4]
 004823BB    mov         eax,dword ptr [eax+0A0]
 004823C1    xor         ecx,ecx
 004823C3    mov         edx,0B039
 004823C8    call        00484FFC
 004823CD    xor         edx,edx
 004823CF    mov         eax,dword ptr [ebp-4]
 004823D2    mov         ecx,dword ptr [eax]
 004823D4    call        dword ptr [ecx+68]
 004823D7    lea         edx,[ebp-18]
 004823DA    mov         eax,dword ptr [ebp-4]
 004823DD    call        00482ECC
 004823E2    lea         ecx,[ebp-18]
 004823E5    or          edx,0FFFFFFFF
 004823E8    mov         eax,dword ptr [ebp-4]
 004823EB    mov         si,0FFCC
 004823EF    call        @CallDynaInst
 004823F4    mov         eax,dword ptr [ebp-4]
 004823F7    xor         edx,edx
 004823F9    mov         dword ptr [eax+0A0],edx
>004823FF    jmp         0048240B
 00482401    xor         edx,edx
 00482403    mov         eax,dword ptr [ebp-4]
 00482406    mov         ecx,dword ptr [eax]
 00482408    call        dword ptr [ecx+68]
 0048240B    mov         eax,dword ptr [ebp-4]
 0048240E    mov         eax,dword ptr [eax+6C]
 00482411    call        TObject.Free
 00482416    mov         eax,dword ptr [ebp-4]
 00482419    xor         edx,edx
 0048241B    mov         dword ptr [eax+6C],edx
 0048241E    mov         eax,dword ptr [ebp-4]
 00482421    mov         eax,dword ptr [eax+74]
 00482424    call        TObject.Free
 00482429    mov         eax,dword ptr [ebp-4]
 0048242C    mov         eax,dword ptr [eax+68]
 0048242F    call        TObject.Free
 00482434    mov         eax,dword ptr [ebp-4]
 00482437    mov         eax,dword ptr [eax+64]
 0048243A    call        0040D12C
 0048243F    mov         dl,byte ptr [ebp-5]
 00482442    and         dl,0FC
 00482445    mov         eax,dword ptr [ebp-4]
 00482448    call        TComponent.Destroy
 0048244D    cmp         byte ptr [ebp-5],0
>00482451    jle         0048245B
 00482453    mov         eax,dword ptr [ebp-4]
 00482456    call        @ClassDestroy
 0048245B    pop         esi
 0048245C    mov         esp,ebp
 0048245E    pop         ebp
 0048245F    ret
*}
end;

//00482460
{*function sub_00482460:?;
begin
 00482460    push        ebp
 00482461    mov         ebp,esp
 00482463    add         esp,0FFFFFFF8
 00482466    mov         dword ptr [ebp-4],eax
 00482469    xor         eax,eax
 0048246B    mov         dword ptr [ebp-8],eax
 0048246E    mov         eax,dword ptr [ebp-8]
 00482471    pop         ecx
 00482472    pop         ecx
 00482473    pop         ebp
 00482474    ret
end;*}

//00482478
function TImage.GetEnabled:Boolean;
begin
{*
 00482478    push        ebp
 00482479    mov         ebp,esp
 0048247B    add         esp,0FFFFFFF8
 0048247E    mov         dword ptr [ebp-4],eax
 00482481    mov         eax,dword ptr [ebp-4]
 00482484    mov         al,byte ptr [eax+58];TImage.FEnabled:Boolean
 00482487    mov         byte ptr [ebp-5],al
 0048248A    mov         al,byte ptr [ebp-5]
 0048248D    pop         ecx
 0048248E    pop         ecx
 0048248F    pop         ebp
 00482490    ret
*}
end;

//00482494
procedure TControl.sub_00482494;
begin
{*
 00482494    push        ebp
 00482495    mov         ebp,esp
 00482497    add         esp,0FFFFFFF8
 0048249A    mov         dword ptr [ebp-4],eax
 0048249D    xor         eax,eax
 0048249F    mov         dword ptr [ebp-8],eax
 004824A2    mov         eax,dword ptr [ebp-8]
 004824A5    pop         ecx
 004824A6    pop         ecx
 004824A7    pop         ebp
 004824A8    ret
*}
end;

//004824AC
procedure TControl.sub_0042A774;
begin
{*
 004824AC    push        ebp
 004824AD    mov         ebp,esp
 004824AF    add         esp,0FFFFFFF8
 004824B2    mov         dword ptr [ebp-4],eax
 004824B5    mov         eax,dword ptr [ebp-4]
 004824B8    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
 004824BC    setne       byte ptr [ebp-5]
 004824C0    mov         al,byte ptr [ebp-5]
 004824C3    pop         ecx
 004824C4    pop         ecx
 004824C5    pop         ebp
 004824C6    ret
*}
end;

//004824C8
procedure TControl.sub_0042A81C;
begin
{*
 004824C8    push        ebp
 004824C9    mov         ebp,esp
 004824CB    add         esp,0FFFFFFF8
 004824CE    mov         dword ptr [ebp-4],eax
 004824D1    mov         eax,dword ptr [ebp-4]
 004824D4    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004824D7    mov         dword ptr [ebp-8],eax
 004824DA    mov         eax,dword ptr [ebp-8]
 004824DD    pop         ecx
 004824DE    pop         ecx
 004824DF    pop         ebp
 004824E0    ret
*}
end;

//004824E4
{*procedure TControl.sub_0042A834(?:?);
begin
 004824E4    push        ebp
 004824E5    mov         ebp,esp
 004824E7    add         esp,0FFFFFFF8
 004824EA    mov         dword ptr [ebp-8],edx
 004824ED    mov         dword ptr [ebp-4],eax
 004824F0    mov         eax,dword ptr [ebp-4]
 004824F3    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004824F6    cmp         eax,dword ptr [ebp-8]
>004824F9    je          00482518
 004824FB    mov         eax,dword ptr [ebp-8]
 004824FE    mov         edx,dword ptr ds:[47E678];TWinControl
 00482504    call        @IsClass
 00482509    test        al,al
>0048250B    je          00482518
 0048250D    mov         edx,dword ptr [ebp-8]
 00482510    mov         eax,dword ptr [ebp-4]
 00482513    mov         ecx,dword ptr [eax]
 00482515    call        dword ptr [ecx+68];TControl.sub_0048359C
 00482518    pop         ecx
 00482519    pop         ecx
 0048251A    pop         ebp
 0048251B    ret
end;*}

//0048251C
{*procedure TControl.sub_0048251C(?:?);
begin
 0048251C    push        ebp
 0048251D    mov         ebp,esp
 0048251F    add         esp,0FFFFFFE8
 00482522    push        esi
 00482523    mov         byte ptr [ebp-5],dl
 00482526    mov         dword ptr [ebp-4],eax
 00482529    mov         byte ptr [ebp-6],0
 0048252D    mov         eax,dword ptr [ebp-4]
 00482530    cmp         byte ptr [eax+57],0;TControl.FVisible:Boolean
>00482534    je          004825A8
 00482536    mov         eax,dword ptr [ebp-4]
 00482539    mov         si,0FFD7
 0048253D    call        @CallDynaInst;TControl.sub_00482494
 00482542    mov         dword ptr [ebp-10],eax
 00482545    cmp         dword ptr [ebp-10],0
>00482549    je          004825A8
 0048254B    lea         edx,[ebp-14]
 0048254E    mov         eax,dword ptr [ebp-4]
 00482551    mov         ecx,dword ptr [eax]
 00482553    call        dword ptr [ecx+48];TControl.sub_00483D18
 00482556    mov         dword ptr [ebp-18],eax
 00482559    mov         al,byte ptr [ebp-5]
 0048255C    xor         al,1
 0048255E    neg         al
 00482560    sbb         eax,eax
 00482562    push        eax
 00482563    mov         eax,dword ptr [ebp-10]
 00482566    push        eax
 00482567    mov         eax,dword ptr [ebp-18]
 0048256A    push        eax
 0048256B    call        gdi32.SelectPalette
 00482570    mov         dword ptr [ebp-0C],eax
 00482573    mov         eax,dword ptr [ebp-18]
 00482576    push        eax
 00482577    call        gdi32.RealizePalette
 0048257C    test        eax,eax
>0048257E    je          00482588
 00482580    mov         eax,dword ptr [ebp-4]
 00482583    mov         edx,dword ptr [eax]
 00482585    call        dword ptr [edx+7C];TControl.sub_00483F08
 00482588    push        0FF
 0048258A    mov         eax,dword ptr [ebp-0C]
 0048258D    push        eax
 0048258E    mov         eax,dword ptr [ebp-18]
 00482591    push        eax
 00482592    call        gdi32.SelectPalette
 00482597    mov         eax,dword ptr [ebp-18]
 0048259A    push        eax
 0048259B    mov         eax,dword ptr [ebp-14]
 0048259E    push        eax
 0048259F    call        user32.ReleaseDC
 004825A4    mov         byte ptr [ebp-6],1
 004825A8    mov         al,byte ptr [ebp-6]
 004825AB    pop         esi
 004825AC    mov         esp,ebp
 004825AE    pop         ebp
 004825AF    ret
end;*}

//004825B0
function TSpeedButton.GetAction:TBasicAction;
begin
{*
 004825B0    push        ebp
 004825B1    mov         ebp,esp
 004825B3    add         esp,0FFFFFFF8
 004825B6    mov         dword ptr [ebp-4],eax
 004825B9    mov         eax,dword ptr [ebp-4]
 004825BC    cmp         dword ptr [eax+6C],0;TSpeedButton.FActionLink:TControlActionLink
>004825C0    je          004825D0
 004825C2    mov         eax,dword ptr [ebp-4]
 004825C5    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 004825C8    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004825CB    mov         dword ptr [ebp-8],eax
>004825CE    jmp         004825D5
 004825D0    xor         eax,eax
 004825D2    mov         dword ptr [ebp-8],eax
 004825D5    mov         eax,dword ptr [ebp-8]
 004825D8    pop         ecx
 004825D9    pop         ecx
 004825DA    pop         ebp
 004825DB    ret
*}
end;

//004825DC
procedure TImage.SetAnchors(Value:TAnchors);
begin
{*
 004825DC    push        ebp
 004825DD    mov         ebp,esp
 004825DF    add         esp,0FFFFFFF8
 004825E2    mov         byte ptr [ebp-5],dl
 004825E5    mov         dword ptr [ebp-4],eax
 004825E8    mov         al,byte ptr [ebp-5]
 004825EB    mov         edx,dword ptr [ebp-4]
 004825EE    cmp         al,byte ptr [edx+61];TImage.FAnchors:TAnchors
>004825F1    je          00482604
 004825F3    mov         al,byte ptr [ebp-5]
 004825F6    mov         edx,dword ptr [ebp-4]
 004825F9    mov         byte ptr [edx+61],al;TImage.FAnchors:TAnchors
 004825FC    mov         eax,dword ptr [ebp-4]
 004825FF    call        00482A00
 00482604    pop         ecx
 00482605    pop         ecx
 00482606    pop         ebp
 00482607    ret
*}
end;

//00482608
procedure TSpeedButton.SetAction(Value:TBasicAction);
begin
{*
 00482608    push        ebp
 00482609    mov         ebp,esp
 0048260B    add         esp,0FFFFFFF8
 0048260E    push        esi
 0048260F    mov         dword ptr [ebp-8],edx
 00482612    mov         dword ptr [ebp-4],eax
 00482615    cmp         dword ptr [ebp-8],0
>00482619    jne         0048263A
 0048261B    mov         eax,dword ptr [ebp-4]
 0048261E    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 00482621    call        TObject.Free
 00482626    mov         eax,dword ptr [ebp-4]
 00482629    xor         edx,edx
 0048262B    mov         dword ptr [eax+6C],edx;TSpeedButton.FActionLink:TControlActionLink
 0048262E    mov         eax,dword ptr [ebp-4]
 00482631    and         dword ptr [eax+50],0FFFF7FFF;TSpeedButton.FControlStyle:TControlStyle
>00482638    jmp         004826AC
 0048263A    mov         eax,dword ptr [ebp-4]
 0048263D    or          dword ptr [eax+50],8000;TSpeedButton.FControlStyle:TControlStyle
 00482644    mov         eax,dword ptr [ebp-4]
 00482647    cmp         dword ptr [eax+6C],0;TSpeedButton.FActionLink:TControlActionLink
>0048264B    jne         00482667
 0048264D    mov         eax,dword ptr [ebp-4]
 00482650    mov         si,0FFD9
 00482654    call        @CallDynaInst;TSpeedButton.sub_00448D68
 00482659    mov         ecx,dword ptr [ebp-4]
 0048265C    mov         dl,1
 0048265E    call        dword ptr [eax+14]
 00482661    mov         edx,dword ptr [ebp-4]
 00482664    mov         dword ptr [edx+6C],eax;TSpeedButton.FActionLink:TControlActionLink
 00482667    mov         edx,dword ptr [ebp-8]
 0048266A    mov         eax,dword ptr [ebp-4]
 0048266D    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 00482670    mov         ecx,dword ptr [eax]
 00482672    call        dword ptr [ecx+0C];TControlActionLink.sub_0042AF54
 00482675    mov         eax,dword ptr [ebp-4]
 00482678    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 0048267B    mov         edx,dword ptr [ebp-4]
 0048267E    mov         dword ptr [eax+0C],edx;TControlActionLink.?fC:TSpeedButton
 00482681    mov         dword ptr [eax+8],486338;TControlActionLink.FOnChange:TNotifyEvent sub_00486338
 00482688    mov         eax,dword ptr [ebp-8]
 0048268B    test        byte ptr [eax+1C],1;TBasicAction.FComponentState:TComponentState
 0048268F    setne       cl
 00482692    mov         edx,dword ptr [ebp-8]
 00482695    mov         eax,dword ptr [ebp-4]
 00482698    mov         si,0FFEF
 0048269C    call        @CallDynaInst;TSpeedButton.sub_004494D8
 004826A1    mov         edx,dword ptr [ebp-4]
 004826A4    mov         eax,dword ptr [ebp-8]
 004826A7    call        0042A2CC
 004826AC    pop         esi
 004826AD    pop         ecx
 004826AE    pop         ecx
 004826AF    pop         ebp
 004826B0    ret
*}
end;

//004826B4
function TImage.IsStoredAnchors(Value:TAnchors):Boolean;
begin
{*
 004826B4    push        ebp
 004826B5    mov         ebp,esp
 004826B7    add         esp,0FFFFFFF8
 004826BA    mov         dword ptr [ebp-4],eax
 004826BD    mov         eax,dword ptr [ebp-4]
 004826C0    movzx       eax,byte ptr [eax+5B];TImage.FAlign:TAlign
 004826C4    mov         al,byte ptr [eax+56C77C]
 004826CA    mov         edx,dword ptr [ebp-4]
 004826CD    cmp         al,byte ptr [edx+61];TImage.FAnchors:TAnchors
 004826D0    setne       byte ptr [ebp-5]
 004826D4    mov         al,byte ptr [ebp-5]
 004826D7    pop         ecx
 004826D8    pop         ecx
 004826D9    pop         ebp
 004826DA    ret
*}
end;

//004826DC
procedure TImage.SetDragMode(Value:TDragMode);
begin
{*
 004826DC    push        ebp
 004826DD    mov         ebp,esp
 004826DF    add         esp,0FFFFFFF8
 004826E2    mov         byte ptr [ebp-5],dl
 004826E5    mov         dword ptr [ebp-4],eax
 004826E8    mov         al,byte ptr [ebp-5]
 004826EB    mov         edx,dword ptr [ebp-4]
 004826EE    mov         byte ptr [edx+5D],al;TImage.FDragMode:TDragMode
 004826F1    pop         ecx
 004826F2    pop         ecx
 004826F3    pop         ebp
 004826F4    ret
*}
end;

//004826F8
procedure TControl.sub_004826F8;
begin
{*
 004826F8    push        ebp
 004826F9    mov         ebp,esp
 004826FB    push        ecx
 004826FC    mov         dword ptr [ebp-4],eax
 004826FF    mov         eax,dword ptr [ebp-4]
 00482702    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00482706    je          00482716
 00482708    mov         edx,dword ptr [ebp-4]
 0048270B    mov         eax,dword ptr [ebp-4]
 0048270E    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482711    call        004877DC
 00482716    pop         ecx
 00482717    pop         ebp
 00482718    ret
*}
end;

//0048271C
procedure TControl.sub_0048271C;
begin
{*
 0048271C    push        ebp
 0048271D    mov         ebp,esp
 0048271F    push        ecx
 00482720    push        ebx
 00482721    mov         dword ptr [ebp-4],eax
 00482724    mov         eax,dword ptr [ebp-4]
 00482727    cmp         word ptr [eax+0FA],0;TControl.?fFA:word
>0048272F    je          00482743
 00482731    mov         ebx,dword ptr [ebp-4]
 00482734    mov         edx,dword ptr [ebp-4]
 00482737    mov         eax,dword ptr [ebx+0FC];TControl.?fFC:dword
 0048273D    call        dword ptr [ebx+0F8];TControl.FOnResize
 00482743    pop         ebx
 00482744    pop         ecx
 00482745    pop         ebp
 00482746    ret
*}
end;

//00482748
{*procedure sub_00482748(?:?);
begin
 00482748    push        ebp
 00482749    mov         ebp,esp
 0048274B    add         esp,0FFFFFFF8
 0048274E    mov         dword ptr [ebp-8],edx
 00482751    mov         dword ptr [ebp-4],eax
 00482754    mov         eax,dword ptr [ebp-4]
 00482757    or          word ptr [eax+54],8;TControl.FControlState:TControlState
 0048275C    mov         eax,dword ptr [ebp-8]
 0048275F    mov         eax,dword ptr [eax+2C]
 00482762    mov         edx,dword ptr ds:[47E678];TWinControl
 00482768    call        @IsClass
 0048276D    test        al,al
>0048276F    je          0048277F
 00482771    mov         eax,dword ptr [ebp-8]
 00482774    mov         edx,dword ptr [eax+2C]
 00482777    mov         eax,dword ptr [ebp-4]
 0048277A    mov         ecx,dword ptr [eax]
 0048277C    call        dword ptr [ecx+68];TControl.sub_0048359C
 0048277F    mov         edx,dword ptr [ebp-8]
 00482782    mov         eax,dword ptr [ebp-4]
 00482785    call        0042A88C
 0048278A    mov         eax,dword ptr [ebp-4]
 0048278D    and         word ptr [eax+54],0FFFFFFF7;TControl.FControlState:TControlState
 00482792    mov         eax,dword ptr [ebp-4]
 00482795    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00482799    je          004827F0
 0048279B    push        0
 0048279D    xor         ecx,ecx
 0048279F    mov         edx,0B009
 004827A4    mov         eax,dword ptr [ebp-4]
 004827A7    call        00484FFC
 004827AC    push        0
 004827AE    xor         ecx,ecx
 004827B0    mov         edx,0B008
 004827B5    mov         eax,dword ptr [ebp-4]
 004827B8    call        00484FFC
 004827BD    push        0
 004827BF    xor         ecx,ecx
 004827C1    mov         edx,0B023
 004827C6    mov         eax,dword ptr [ebp-4]
 004827C9    call        00484FFC
 004827CE    push        0
 004827D0    xor         ecx,ecx
 004827D2    mov         edx,0B035
 004827D7    mov         eax,dword ptr [ebp-4]
 004827DA    call        00484FFC
 004827DF    push        0
 004827E1    xor         ecx,ecx
 004827E3    mov         edx,0B03D
 004827E8    mov         eax,dword ptr [ebp-4]
 004827EB    call        00484FFC
 004827F0    pop         ecx
 004827F1    pop         ecx
 004827F2    pop         ebp
 004827F3    ret
end;*}

//004827F4
{*procedure sub_004827F4(?:?; ?:?);
begin
 004827F4    push        ebp
 004827F5    mov         ebp,esp
 004827F7    add         esp,0FFFFFFF4
 004827FA    mov         byte ptr [ebp-9],cl
 004827FD    mov         dword ptr [ebp-8],edx
 00482800    mov         dword ptr [ebp-4],eax
 00482803    mov         cl,byte ptr [ebp-9]
 00482806    mov         edx,dword ptr [ebp-8]
 00482809    mov         eax,dword ptr [ebp-4]
 0048280C    call        0042A644
 00482811    cmp         byte ptr [ebp-9],1
>00482815    jne         00482845
 00482817    mov         eax,dword ptr [ebp-8]
 0048281A    mov         edx,dword ptr [ebp-4]
 0048281D    cmp         eax,dword ptr [edx+7C];TControl.FPopupMenu:TPopupMenu
>00482820    jne         0048282E
 00482822    xor         edx,edx
 00482824    mov         eax,dword ptr [ebp-4]
 00482827    call        TImage.SetPopupMenu
>0048282C    jmp         00482845
 0048282E    mov         eax,dword ptr [ebp-4]
 00482831    mov         edx,dword ptr [eax]
 00482833    call        dword ptr [edx+3C];TSpeedButton.GetAction
 00482836    cmp         eax,dword ptr [ebp-8]
>00482839    jne         00482845
 0048283B    xor         edx,edx
 0048283D    mov         eax,dword ptr [ebp-4]
 00482840    call        TSpeedButton.SetAction
 00482845    mov         esp,ebp
 00482847    pop         ebp
 00482848    ret
end;*}

//0048284C
procedure TImage.SetAlign(Value:TAlign);
begin
{*
 0048284C    push        ebp
 0048284D    mov         ebp,esp
 0048284F    add         esp,0FFFFFFF8
 00482852    push        ebx
 00482853    push        esi
 00482854    mov         byte ptr [ebp-5],dl
 00482857    mov         dword ptr [ebp-4],eax
 0048285A    mov         eax,dword ptr [ebp-4]
 0048285D    mov         al,byte ptr [eax+5B];TImage.FAlign:TAlign
 00482860    cmp         al,byte ptr [ebp-5]
>00482863    je          0048291B
 00482869    mov         eax,dword ptr [ebp-4]
 0048286C    mov         al,byte ptr [eax+5B];TImage.FAlign:TAlign
 0048286F    mov         byte ptr [ebp-6],al
 00482872    mov         al,byte ptr [ebp-5]
 00482875    mov         edx,dword ptr [ebp-4]
 00482878    mov         byte ptr [edx+5B],al;TImage.FAlign:TAlign
 0048287B    xor         eax,eax
 0048287D    mov         al,byte ptr [ebp-5]
 00482880    mov         dl,byte ptr [eax+56C77C]
 00482886    mov         eax,dword ptr [ebp-4]
 00482889    call        TImage.SetAnchors
 0048288E    mov         eax,dword ptr [ebp-4]
 00482891    test        byte ptr [eax+1C],1;TImage.FComponentState:TComponentState
>00482895    jne         0048291B
 0048289B    mov         eax,dword ptr [ebp-4]
 0048289E    test        byte ptr [eax+1C],10;TImage.FComponentState:TComponentState
>004828A2    je          004828AD
 004828A4    mov         eax,dword ptr [ebp-4]
 004828A7    cmp         dword ptr [eax+30],0;TImage.FParent:TWinControl
>004828AB    je          0048291B
 004828AD    cmp         byte ptr [ebp-5],6
>004828B1    je          0048291B
 004828B3    cmp         byte ptr [ebp-6],6
>004828B7    je          0048291B
 004828B9    mov         al,byte ptr [ebp-6]
 004828BC    dec         eax
 004828BD    sub         al,2
 004828BF    setb        al
 004828C2    mov         dl,byte ptr [ebp-5]
 004828C5    add         dl,0FD
 004828C8    sub         dl,2
 004828CB    setb        dl
 004828CE    cmp         al,dl
>004828D0    jne         0048290F
 004828D2    mov         al,byte ptr [ebp-6]
 004828D5    test        al,al
>004828D7    je          0048290F
 004828D9    sub         al,5
>004828DB    je          0048290F
 004828DD    mov         al,byte ptr [ebp-5]
 004828E0    test        al,al
>004828E2    je          0048290F
 004828E4    sub         al,5
>004828E6    je          0048290F
 004828E8    mov         eax,dword ptr [ebp-4]
 004828EB    mov         eax,dword ptr [eax+4C];TImage.Height:Integer
 004828EE    push        eax
 004828EF    mov         eax,dword ptr [ebp-4]
 004828F2    mov         eax,dword ptr [eax+48];TImage.Width:Integer
 004828F5    push        eax
 004828F6    mov         eax,dword ptr [ebp-4]
 004828F9    mov         ecx,dword ptr [eax+44];TImage.Top:Integer
 004828FC    mov         eax,dword ptr [ebp-4]
 004828FF    mov         edx,dword ptr [eax+40];TImage.Left:Integer
 00482902    mov         eax,dword ptr [ebp-4]
 00482905    mov         ebx,dword ptr [eax]
 00482907    call        dword ptr [ebx+84];TImage.sub_00482930
>0048290D    jmp         0048291B
 0048290F    mov         eax,dword ptr [ebp-4]
 00482912    mov         si,0FFEE
 00482916    call        @CallDynaInst;TControl.sub_0048673C
 0048291B    mov         eax,dword ptr [ebp-4]
 0048291E    mov         si,0FFD0
 00482922    call        @CallDynaInst;TControl.sub_004826F8
 00482927    pop         esi
 00482928    pop         ebx
 00482929    pop         ecx
 0048292A    pop         ecx
 0048292B    pop         ebp
 0048292C    ret
*}
end;

//00482930
{*procedure sub_00482930(?:?; ?:?; ?:?; ?:?);
begin
 00482930    push        ebp
 00482931    mov         ebp,esp
 00482933    add         esp,0FFFFFFF4
 00482936    push        esi
 00482937    mov         dword ptr [ebp-0C],ecx
 0048293A    mov         dword ptr [ebp-8],edx
 0048293D    mov         dword ptr [ebp-4],eax
 00482940    lea         ecx,[ebp+8]
 00482943    lea         edx,[ebp+0C]
 00482946    mov         eax,dword ptr [ebp-4]
 00482949    call        00485780
 0048294E    test        al,al
>00482950    je          004829F8
 00482956    mov         eax,dword ptr [ebp-8]
 00482959    mov         edx,dword ptr [ebp-4]
 0048295C    cmp         eax,dword ptr [edx+40];TControl.Left:Integer
>0048295F    jne         00482982
 00482961    mov         eax,dword ptr [ebp-0C]
 00482964    mov         edx,dword ptr [ebp-4]
 00482967    cmp         eax,dword ptr [edx+44];TControl.Top:Integer
>0048296A    jne         00482982
 0048296C    mov         eax,dword ptr [ebp+0C]
 0048296F    mov         edx,dword ptr [ebp-4]
 00482972    cmp         eax,dword ptr [edx+48];TControl.Width:Integer
>00482975    jne         00482982
 00482977    mov         eax,dword ptr [ebp+8]
 0048297A    mov         edx,dword ptr [ebp-4]
 0048297D    cmp         eax,dword ptr [edx+4C];TControl.Height:Integer
>00482980    je          004829F8
 00482982    xor         ecx,ecx
 00482984    mov         eax,dword ptr [ebp-4]
 00482987    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 0048298A    mov         eax,dword ptr [ebp-4]
 0048298D    call        00483E7C
 00482992    mov         eax,dword ptr [ebp-8]
 00482995    mov         edx,dword ptr [ebp-4]
 00482998    mov         dword ptr [edx+40],eax;TControl.Left:Integer
 0048299B    mov         eax,dword ptr [ebp-0C]
 0048299E    mov         edx,dword ptr [ebp-4]
 004829A1    mov         dword ptr [edx+44],eax;TControl.Top:Integer
 004829A4    mov         eax,dword ptr [ebp+0C]
 004829A7    mov         edx,dword ptr [ebp-4]
 004829AA    mov         dword ptr [edx+48],eax;TControl.Width:Integer
 004829AD    mov         eax,dword ptr [ebp+8]
 004829B0    mov         edx,dword ptr [ebp-4]
 004829B3    mov         dword ptr [edx+4C],eax;TControl.Height:Integer
 004829B6    mov         eax,dword ptr [ebp-4]
 004829B9    call        00482A00
 004829BE    mov         eax,dword ptr [ebp-4]
 004829C1    mov         edx,dword ptr [eax]
 004829C3    call        dword ptr [edx+7C];TControl.sub_00483F08
 004829C6    push        0
 004829C8    xor         ecx,ecx
 004829CA    mov         edx,47
 004829CF    mov         eax,dword ptr [ebp-4]
 004829D2    call        00484FFC
 004829D7    mov         eax,dword ptr [ebp-4]
 004829DA    mov         si,0FFD0
 004829DE    call        @CallDynaInst;TControl.sub_004826F8
 004829E3    mov         eax,dword ptr [ebp-4]
 004829E6    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004829EA    jne         004829F8
 004829EC    mov         eax,dword ptr [ebp-4]
 004829EF    mov         si,0FFCF
 004829F3    call        @CallDynaInst;TControl.sub_0048271C
 004829F8    pop         esi
 004829F9    mov         esp,ebp
 004829FB    pop         ebp
 004829FC    ret         8
end;*}

//00482A00
procedure sub_00482A00(?:TControl);
begin
{*
 00482A00    push        ebp
 00482A01    mov         ebp,esp
 00482A03    add         esp,0FFFFFFE8
 00482A06    mov         dword ptr [ebp-4],eax
 00482A09    mov         eax,dword ptr [ebp-4]
 00482A0C    cmp         byte ptr [eax+62],0;TControl.FAnchorMove:Boolean
>00482A10    jne         00482B82
 00482A16    mov         eax,dword ptr [ebp-4]
 00482A19    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>00482A1D    jne         00482B82
 00482A23    mov         eax,dword ptr [ebp-4]
 00482A26    mov         al,byte ptr [eax+61];TControl.FAnchors:TAnchors
 00482A29    mov         byte ptr [ebp-5],al
 00482A2C    mov         al,[00482B88];0x3 gvar_00482B88
 00482A31    cmp         al,byte ptr [ebp-5]
>00482A34    jne         00482A51
 00482A36    mov         eax,dword ptr [ebp-4]
 00482A39    xor         edx,edx
 00482A3B    mov         dword ptr [eax+90],edx;TControl.FOriginalParentSize:TPoint
 00482A41    mov         eax,dword ptr [ebp-4]
 00482A44    xor         edx,edx
 00482A46    mov         dword ptr [eax+94],edx
>00482A4C    jmp         00482B82
 00482A51    test        byte ptr [ebp-5],4
>00482A55    je          00482A7F
 00482A57    test        byte ptr [ebp-5],1
>00482A5B    je          00482A6E
 00482A5D    mov         eax,dword ptr [ebp-4]
 00482A60    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00482A63    mov         edx,dword ptr [ebp-4]
 00482A66    mov         dword ptr [edx+88],eax;TControl.FAnchorRules:TPoint
>00482A6C    jmp         00482A9B
 00482A6E    mov         eax,dword ptr [ebp-4]
 00482A71    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 00482A74    mov         edx,dword ptr [ebp-4]
 00482A77    mov         dword ptr [edx+88],eax;TControl.FAnchorRules:TPoint
>00482A7D    jmp         00482A9B
 00482A7F    mov         eax,dword ptr [ebp-4]
 00482A82    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00482A85    sar         eax,1
>00482A87    jns         00482A8C
 00482A89    adc         eax,0
 00482A8C    mov         edx,dword ptr [ebp-4]
 00482A8F    add         eax,dword ptr [edx+40];TControl.Left:Integer
 00482A92    mov         edx,dword ptr [ebp-4]
 00482A95    mov         dword ptr [edx+88],eax;TControl.FAnchorRules:TPoint
 00482A9B    test        byte ptr [ebp-5],8
>00482A9F    je          00482AC9
 00482AA1    test        byte ptr [ebp-5],2
>00482AA5    je          00482AB8
 00482AA7    mov         eax,dword ptr [ebp-4]
 00482AAA    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00482AAD    mov         edx,dword ptr [ebp-4]
 00482AB0    mov         dword ptr [edx+8C],eax
>00482AB6    jmp         00482AE5
 00482AB8    mov         eax,dword ptr [ebp-4]
 00482ABB    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 00482ABE    mov         edx,dword ptr [ebp-4]
 00482AC1    mov         dword ptr [edx+8C],eax
>00482AC7    jmp         00482AE5
 00482AC9    mov         eax,dword ptr [ebp-4]
 00482ACC    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00482ACF    sar         eax,1
>00482AD1    jns         00482AD6
 00482AD3    adc         eax,0
 00482AD6    mov         edx,dword ptr [ebp-4]
 00482AD9    add         eax,dword ptr [edx+44];TControl.Top:Integer
 00482ADC    mov         edx,dword ptr [ebp-4]
 00482ADF    mov         dword ptr [edx+8C],eax
 00482AE5    mov         eax,dword ptr [ebp-4]
 00482AE8    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00482AEC    je          00482B82
 00482AF2    mov         eax,dword ptr [ebp-4]
 00482AF5    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482AF8    test        byte ptr [eax+1C],2;TWinControl.FComponentState:TComponentState
>00482AFC    je          00482B2A
 00482AFE    mov         eax,dword ptr [ebp-4]
 00482B01    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>00482B05    jne         00482B82
 00482B07    mov         eax,dword ptr [ebp-4]
 00482B0A    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482B0D    mov         edx,dword ptr [ebp-4]
 00482B10    mov         ecx,dword ptr [eax+1FA];TWinControl.FDesignSize:TPoint
 00482B16    mov         dword ptr [edx+90],ecx;TControl.FOriginalParentSize:TPoint
 00482B1C    mov         ecx,dword ptr [eax+1FE]
 00482B22    mov         dword ptr [edx+94],ecx
>00482B28    jmp         00482B82
 00482B2A    mov         eax,dword ptr [ebp-4]
 00482B2D    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482B30    call        TWinControl.HandleAllocated
 00482B35    test        al,al
>00482B37    je          00482B5E
 00482B39    lea         edx,[ebp-18]
 00482B3C    mov         eax,dword ptr [ebp-4]
 00482B3F    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482B42    mov         ecx,dword ptr [eax]
 00482B44    call        dword ptr [ecx+44];TWinControl.sub_0048C23C
 00482B47    mov         eax,dword ptr [ebp-4]
 00482B4A    mov         edx,dword ptr [ebp-10]
 00482B4D    mov         dword ptr [eax+90],edx;TControl.FOriginalParentSize:TPoint
 00482B53    mov         edx,dword ptr [ebp-0C]
 00482B56    mov         dword ptr [eax+94],edx
>00482B5C    jmp         00482B82
 00482B5E    mov         eax,dword ptr [ebp-4]
 00482B61    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482B64    mov         eax,dword ptr [eax+48];TWinControl.Width:Integer
 00482B67    mov         edx,dword ptr [ebp-4]
 00482B6A    mov         dword ptr [edx+90],eax;TControl.FOriginalParentSize:TPoint
 00482B70    mov         eax,dword ptr [ebp-4]
 00482B73    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482B76    mov         eax,dword ptr [eax+4C];TWinControl.Height:Integer
 00482B79    mov         edx,dword ptr [ebp-4]
 00482B7C    mov         dword ptr [edx+94],eax
 00482B82    mov         esp,ebp
 00482B84    pop         ebp
 00482B85    ret
*}
end;

//00482B8C
procedure TControl.SetLeft(Value:Integer);
begin
{*
 00482B8C    push        ebp
 00482B8D    mov         ebp,esp
 00482B8F    add         esp,0FFFFFFF8
 00482B92    push        ebx
 00482B93    mov         dword ptr [ebp-8],edx
 00482B96    mov         dword ptr [ebp-4],eax
 00482B99    mov         eax,dword ptr [ebp-4]
 00482B9C    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00482B9F    push        eax
 00482BA0    mov         eax,dword ptr [ebp-4]
 00482BA3    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00482BA6    push        eax
 00482BA7    mov         eax,dword ptr [ebp-4]
 00482BAA    mov         ecx,dword ptr [eax+44];TControl.Top:Integer
 00482BAD    mov         edx,dword ptr [ebp-8]
 00482BB0    mov         eax,dword ptr [ebp-4]
 00482BB3    mov         ebx,dword ptr [eax]
 00482BB5    call        dword ptr [ebx+84];TControl.sub_00482930
 00482BBB    mov         eax,dword ptr [ebp-4]
 00482BBE    or          byte ptr [eax+98],1;TControl.FScalingFlags:TScalingFlags
 00482BC5    pop         ebx
 00482BC6    pop         ecx
 00482BC7    pop         ecx
 00482BC8    pop         ebp
 00482BC9    ret
*}
end;

//00482BCC
procedure TControl.SetTop(Value:Integer);
begin
{*
 00482BCC    push        ebp
 00482BCD    mov         ebp,esp
 00482BCF    add         esp,0FFFFFFF8
 00482BD2    push        ebx
 00482BD3    mov         dword ptr [ebp-8],edx
 00482BD6    mov         dword ptr [ebp-4],eax
 00482BD9    mov         eax,dword ptr [ebp-4]
 00482BDC    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00482BDF    push        eax
 00482BE0    mov         eax,dword ptr [ebp-4]
 00482BE3    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00482BE6    push        eax
 00482BE7    mov         ecx,dword ptr [ebp-8]
 00482BEA    mov         eax,dword ptr [ebp-4]
 00482BED    mov         edx,dword ptr [eax+40];TControl.Left:Integer
 00482BF0    mov         eax,dword ptr [ebp-4]
 00482BF3    mov         ebx,dword ptr [eax]
 00482BF5    call        dword ptr [ebx+84];TControl.sub_00482930
 00482BFB    mov         eax,dword ptr [ebp-4]
 00482BFE    or          byte ptr [eax+98],2;TControl.FScalingFlags:TScalingFlags
 00482C05    pop         ebx
 00482C06    pop         ecx
 00482C07    pop         ecx
 00482C08    pop         ebp
 00482C09    ret
*}
end;

//00482C0C
procedure TSplitter.SetWidth(Value:Integer);
begin
{*
 00482C0C    push        ebp
 00482C0D    mov         ebp,esp
 00482C0F    add         esp,0FFFFFFF8
 00482C12    push        ebx
 00482C13    mov         dword ptr [ebp-8],edx
 00482C16    mov         dword ptr [ebp-4],eax
 00482C19    mov         eax,dword ptr [ebp-8]
 00482C1C    push        eax
 00482C1D    mov         eax,dword ptr [ebp-4]
 00482C20    mov         eax,dword ptr [eax+4C];TSplitter.Height:Integer
 00482C23    push        eax
 00482C24    mov         eax,dword ptr [ebp-4]
 00482C27    mov         ecx,dword ptr [eax+44];TSplitter.Top:Integer
 00482C2A    mov         eax,dword ptr [ebp-4]
 00482C2D    mov         edx,dword ptr [eax+40];TSplitter.Left:Integer
 00482C30    mov         eax,dword ptr [ebp-4]
 00482C33    mov         ebx,dword ptr [eax]
 00482C35    call        dword ptr [ebx+84];TSplitter.sub_00482930
 00482C3B    mov         eax,dword ptr [ebp-4]
 00482C3E    or          byte ptr [eax+98],4;TSplitter.FScalingFlags:TScalingFlags
 00482C45    pop         ebx
 00482C46    pop         ecx
 00482C47    pop         ecx
 00482C48    pop         ebp
 00482C49    ret
*}
end;

//00482C4C
procedure TToolButton.SetHeight(Value:Integer);
begin
{*
 00482C4C    push        ebp
 00482C4D    mov         ebp,esp
 00482C4F    add         esp,0FFFFFFF8
 00482C52    push        ebx
 00482C53    mov         dword ptr [ebp-8],edx
 00482C56    mov         dword ptr [ebp-4],eax
 00482C59    mov         eax,dword ptr [ebp-4]
 00482C5C    mov         eax,dword ptr [eax+48];TToolButton.Width:Integer
 00482C5F    push        eax
 00482C60    mov         eax,dword ptr [ebp-8]
 00482C63    push        eax
 00482C64    mov         eax,dword ptr [ebp-4]
 00482C67    mov         ecx,dword ptr [eax+44];TToolButton.Top:Integer
 00482C6A    mov         eax,dword ptr [ebp-4]
 00482C6D    mov         edx,dword ptr [eax+40];TToolButton.Left:Integer
 00482C70    mov         eax,dword ptr [ebp-4]
 00482C73    mov         ebx,dword ptr [eax]
 00482C75    call        dword ptr [ebx+84];TToolButton.sub_00460D3C
 00482C7B    mov         eax,dword ptr [ebp-4]
 00482C7E    or          byte ptr [eax+98],8;TToolButton.FScalingFlags:TScalingFlags
 00482C85    pop         ebx
 00482C86    pop         ecx
 00482C87    pop         ecx
 00482C88    pop         ebp
 00482C89    ret
*}
end;

//00482C8C
{*procedure TControl.sub_00482C8C(?:?; ?:?);
begin
 00482C8C    push        ebp
 00482C8D    mov         ebp,esp
 00482C8F    add         esp,0FFFFFFE4
 00482C92    push        esi
 00482C93    push        edi
 00482C94    mov         esi,ecx
 00482C96    lea         edi,[ebp-1C]
 00482C99    movs        dword ptr [edi],dword ptr [esi]
 00482C9A    movs        dword ptr [edi],dword ptr [esi]
 00482C9B    movs        dword ptr [edi],dword ptr [esi]
 00482C9C    movs        dword ptr [edi],dword ptr [esi]
 00482C9D    mov         dword ptr [ebp-8],edx
 00482CA0    mov         dword ptr [ebp-4],eax
 00482CA3    mov         eax,dword ptr [ebp-4]
 00482CA6    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 00482CAC    cmp         eax,dword ptr [ebp-8]
>00482CAF    je          00482D0F
 00482CB1    mov         eax,dword ptr [ebp-4]
 00482CB4    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>00482CBB    je          00482CE6
 00482CBD    mov         eax,dword ptr [ebp-4]
 00482CC0    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 00482CC6    cmp         dword ptr [eax+178],0;TWinControl.FDockClients:TList
>00482CCD    je          00482CE6
 00482CCF    mov         eax,dword ptr [ebp-4]
 00482CD2    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 00482CD8    mov         eax,dword ptr [eax+178];TWinControl.FDockClients:TList
 00482CDE    mov         edx,dword ptr [ebp-4]
 00482CE1    call        004204F0
 00482CE6    cmp         dword ptr [ebp-8],0
>00482CEA    je          00482D0F
 00482CEC    cmp         dword ptr [ebp-8],0FFFFFFFF
>00482CF0    je          00482D0F
 00482CF2    mov         eax,dword ptr [ebp-8]
 00482CF5    cmp         dword ptr [eax+178],0
>00482CFC    je          00482D0F
 00482CFE    mov         eax,dword ptr [ebp-8]
 00482D01    mov         eax,dword ptr [eax+178]
 00482D07    mov         edx,dword ptr [ebp-4]
 00482D0A    call        TList.Add
 00482D0F    mov         eax,dword ptr [ebp-4]
 00482D12    or          word ptr [eax+54],400;TControl.FControlState:TControlState
 00482D18    xor         eax,eax
 00482D1A    push        ebp
 00482D1B    push        482DBB
 00482D20    push        dword ptr fs:[eax]
 00482D23    mov         dword ptr fs:[eax],esp
 00482D26    cmp         dword ptr [ebp-8],0FFFFFFFF
>00482D2A    je          00482D3E
 00482D2C    lea         ecx,[ebp-1C]
 00482D2F    mov         edx,dword ptr [ebp-8]
 00482D32    mov         eax,dword ptr [ebp-4]
 00482D35    mov         si,0FFE4
 00482D39    call        @CallDynaInst;TControl.sub_00482DC8
 00482D3E    mov         eax,dword ptr [ebp-4]
 00482D41    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 00482D47    cmp         eax,dword ptr [ebp-8]
>00482D4A    je          00482DA4
 00482D4C    mov         eax,dword ptr [ebp-4]
 00482D4F    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 00482D55    mov         dword ptr [ebp-0C],eax
 00482D58    cmp         dword ptr [ebp-8],0FFFFFFFF
>00482D5C    je          00482D84
 00482D5E    mov         eax,dword ptr [ebp-4]
 00482D61    mov         edx,dword ptr [ebp-8]
 00482D64    mov         dword ptr [eax+0A0],edx;TControl.FHostDockSite:TWinControl
 00482D6A    cmp         dword ptr [ebp-8],0
>00482D6E    je          00482D8F
 00482D70    lea         ecx,[ebp-1C]
 00482D73    mov         edx,dword ptr [ebp-4]
 00482D76    mov         eax,dword ptr [ebp-8]
 00482D79    mov         si,0FFC5
 00482D7D    call        @CallDynaInst
>00482D82    jmp         00482D8F
 00482D84    mov         eax,dword ptr [ebp-4]
 00482D87    xor         edx,edx
 00482D89    mov         dword ptr [eax+0A0],edx;TControl.FHostDockSite:TWinControl
 00482D8F    cmp         dword ptr [ebp-0C],0
>00482D93    je          00482DA4
 00482D95    mov         edx,dword ptr [ebp-4]
 00482D98    mov         eax,dword ptr [ebp-0C]
 00482D9B    mov         si,0FFBF
 00482D9F    call        @CallDynaInst;TWinControl.sub_0048A208
 00482DA4    xor         eax,eax
 00482DA6    pop         edx
 00482DA7    pop         ecx
 00482DA8    pop         ecx
 00482DA9    mov         dword ptr fs:[eax],edx
 00482DAC    push        482DC2
 00482DB1    mov         eax,dword ptr [ebp-4]
 00482DB4    and         word ptr [eax+54],0FBFF;TControl.FControlState:TControlState
 00482DBA    ret
>00482DBB    jmp         @HandleFinally
>00482DC0    jmp         00482DB1
 00482DC2    pop         edi
 00482DC3    pop         esi
 00482DC4    mov         esp,ebp
 00482DC6    pop         ebp
 00482DC7    ret
end;*}

//00482DC8
{*procedure TControl.sub_00482DC8(?:?; ?:?);
begin
 00482DC8    push        ebp
 00482DC9    mov         ebp,esp
 00482DCB    add         esp,0FFFFFFF4
 00482DCE    mov         dword ptr [ebp-0C],ecx
 00482DD1    mov         dword ptr [ebp-8],edx
 00482DD4    mov         dword ptr [ebp-4],eax
 00482DD7    mov         eax,dword ptr [ebp-4]
 00482DDA    mov         edx,dword ptr ds:[47E678];TWinControl
 00482DE0    call        @IsClass
 00482DE5    test        al,al
>00482DE7    jne         00482DF9
 00482DE9    xor         ecx,ecx
 00482DEB    mov         eax,dword ptr [ebp-4]
 00482DEE    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 00482DF1    mov         eax,dword ptr [ebp-4]
 00482DF4    call        00483E7C
 00482DF9    mov         eax,dword ptr [ebp-4]
 00482DFC    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00482DFF    cmp         eax,dword ptr [ebp-8]
>00482E02    je          00482E11
 00482E04    mov         edx,dword ptr [ebp-0C]
 00482E07    mov         eax,dword ptr [ebp-4]
 00482E0A    call        004850E8
>00482E0F    jmp         00482E1C
 00482E11    mov         edx,dword ptr [ebp-0C]
 00482E14    mov         eax,dword ptr [ebp-4]
 00482E17    call        00482F18
 00482E1C    cmp         dword ptr [ebp-8],0
>00482E20    je          00482E28
 00482E22    cmp         dword ptr [ebp-8],0FFFFFFFF
>00482E26    jne         00482E32
 00482E28    xor         edx,edx
 00482E2A    mov         eax,dword ptr [ebp-4]
 00482E2D    mov         ecx,dword ptr [eax]
 00482E2F    call        dword ptr [ecx+68];TControl.sub_0048359C
 00482E32    mov         esp,ebp
 00482E34    pop         ebp
 00482E35    ret
end;*}

//00482E38
procedure TControl.SetHelpContext(Value:THelpContext);
begin
{*
 00482E38    push        ebp
 00482E39    mov         ebp,esp
 00482E3B    add         esp,0FFFFFFF8
 00482E3E    mov         dword ptr [ebp-8],edx
 00482E41    mov         dword ptr [ebp-4],eax
 00482E44    mov         eax,dword ptr [ebp-4]
 00482E47    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>00482E4B    jne         00482E57
 00482E4D    mov         eax,dword ptr [ebp-4]
 00482E50    mov         byte ptr [eax+150],1;TControl.HelpType:THelpType
 00482E57    mov         eax,dword ptr [ebp-8]
 00482E5A    mov         edx,dword ptr [ebp-4]
 00482E5D    mov         dword ptr [edx+158],eax;TControl.HelpContext:THelpContext
 00482E63    pop         ecx
 00482E64    pop         ecx
 00482E65    pop         ebp
 00482E66    ret
*}
end;

//00482E68
procedure TControl.SetHelpKeyword(Value:String);
begin
{*
 00482E68    push        ebp
 00482E69    mov         ebp,esp
 00482E6B    add         esp,0FFFFFFF8
 00482E6E    mov         dword ptr [ebp-8],edx
 00482E71    mov         dword ptr [ebp-4],eax
 00482E74    mov         eax,dword ptr [ebp-4]
 00482E77    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>00482E7B    jne         00482E87
 00482E7D    mov         eax,dword ptr [ebp-4]
 00482E80    mov         byte ptr [eax+150],0;TControl.HelpType:THelpType
 00482E87    mov         eax,dword ptr [ebp-4]
 00482E8A    add         eax,154;TControl.HelpKeyword:String
 00482E8F    mov         edx,dword ptr [ebp-8]
 00482E92    call        @LStrAsg
 00482E97    pop         ecx
 00482E98    pop         ecx
 00482E99    pop         ebp
 00482E9A    ret
*}
end;

//00482E9C
{*procedure sub_00482E9C(?:?; ?:TToolWindow);
begin
 00482E9C    push        ebp
 00482E9D    mov         ebp,esp
 00482E9F    add         esp,0FFFFFFE8
 00482EA2    push        esi
 00482EA3    mov         dword ptr [ebp-8],edx
 00482EA6    mov         dword ptr [ebp-4],eax
 00482EA9    lea         edx,[ebp-18]
 00482EAC    mov         eax,dword ptr [ebp-4]
 00482EAF    call        00482ECC
 00482EB4    lea         ecx,[ebp-18]
 00482EB7    mov         edx,dword ptr [ebp-8]
 00482EBA    mov         eax,dword ptr [ebp-4]
 00482EBD    mov         si,0FFCC
 00482EC1    call        @CallDynaInst
 00482EC6    pop         esi
 00482EC7    mov         esp,ebp
 00482EC9    pop         ebp
 00482ECA    ret
end;*}

//00482ECC
procedure sub_00482ECC(?:TControl; ?:TPoint);
begin
{*
 00482ECC    push        ebp
 00482ECD    mov         ebp,esp
 00482ECF    add         esp,0FFFFFFF8
 00482ED2    mov         dword ptr [ebp-8],edx
 00482ED5    mov         dword ptr [ebp-4],eax
 00482ED8    mov         eax,dword ptr [ebp-8]
 00482EDB    mov         edx,dword ptr [ebp-4]
 00482EDE    mov         edx,dword ptr [edx+40];TWinControl.Left:Integer
 00482EE1    mov         dword ptr [eax],edx
 00482EE3    mov         eax,dword ptr [ebp-8]
 00482EE6    mov         edx,dword ptr [ebp-4]
 00482EE9    mov         edx,dword ptr [edx+44];TWinControl.Top:Integer
 00482EEC    mov         dword ptr [eax+4],edx
 00482EEF    mov         eax,dword ptr [ebp-4]
 00482EF2    mov         eax,dword ptr [eax+40];TWinControl.Left:Integer
 00482EF5    mov         edx,dword ptr [ebp-4]
 00482EF8    add         eax,dword ptr [edx+48];TWinControl.Width:Integer
 00482EFB    mov         edx,dword ptr [ebp-8]
 00482EFE    mov         dword ptr [edx+8],eax
 00482F01    mov         eax,dword ptr [ebp-4]
 00482F04    mov         eax,dword ptr [eax+44];TWinControl.Top:Integer
 00482F07    mov         edx,dword ptr [ebp-4]
 00482F0A    add         eax,dword ptr [edx+4C];TWinControl.Height:Integer
 00482F0D    mov         edx,dword ptr [ebp-8]
 00482F10    mov         dword ptr [edx+0C],eax
 00482F13    pop         ecx
 00482F14    pop         ecx
 00482F15    pop         ebp
 00482F16    ret
*}
end;

//00482F18
{*procedure sub_00482F18(?:TControl; ?:?);
begin
 00482F18    push        ebp
 00482F19    mov         ebp,esp
 00482F1B    add         esp,0FFFFFFF8
 00482F1E    push        ebx
 00482F1F    mov         dword ptr [ebp-8],edx
 00482F22    mov         dword ptr [ebp-4],eax
 00482F25    mov         eax,dword ptr [ebp-8]
 00482F28    mov         eax,dword ptr [eax+8]
 00482F2B    mov         edx,dword ptr [ebp-8]
 00482F2E    sub         eax,dword ptr [edx]
 00482F30    push        eax
 00482F31    mov         eax,dword ptr [ebp-8]
 00482F34    mov         eax,dword ptr [eax+0C]
 00482F37    mov         edx,dword ptr [ebp-8]
 00482F3A    sub         eax,dword ptr [edx+4]
 00482F3D    push        eax
 00482F3E    mov         ecx,dword ptr [ebp-8]
 00482F41    mov         ecx,dword ptr [ecx+4]
 00482F44    mov         edx,dword ptr [ebp-8]
 00482F47    mov         edx,dword ptr [edx]
 00482F49    mov         eax,dword ptr [ebp-4]
 00482F4C    mov         ebx,dword ptr [eax]
 00482F4E    call        dword ptr [ebx+84];TControl.sub_00482930
 00482F54    pop         ebx
 00482F55    pop         ecx
 00482F56    pop         ecx
 00482F57    pop         ebp
 00482F58    ret
end;*}

//00482F5C
{*procedure sub_00482F5C(?:?);
begin
 00482F5C    push        ebp
 00482F5D    mov         ebp,esp
 00482F5F    add         esp,0FFFFFFF8
 00482F62    mov         dword ptr [ebp-8],edx
 00482F65    mov         dword ptr [ebp-4],eax
 00482F68    mov         eax,dword ptr [ebp-8]
 00482F6B    xor         edx,edx
 00482F6D    mov         dword ptr [eax],edx
 00482F6F    mov         eax,dword ptr [ebp-8]
 00482F72    xor         edx,edx
 00482F74    mov         dword ptr [eax+4],edx
 00482F77    mov         eax,dword ptr [ebp-8]
 00482F7A    mov         edx,dword ptr [ebp-4]
 00482F7D    mov         edx,dword ptr [edx+48];TControl.Width:Integer
 00482F80    mov         dword ptr [eax+8],edx
 00482F83    mov         eax,dword ptr [ebp-8]
 00482F86    mov         edx,dword ptr [ebp-4]
 00482F89    mov         edx,dword ptr [edx+4C];TControl.Height:Integer
 00482F8C    mov         dword ptr [eax+0C],edx
 00482F8F    pop         ecx
 00482F90    pop         ecx
 00482F91    pop         ebp
 00482F92    ret
end;*}

//00482F94
function TControl.GetClientWidth:Integer;
begin
{*
 00482F94    push        ebp
 00482F95    mov         ebp,esp
 00482F97    add         esp,0FFFFFFE8
 00482F9A    mov         dword ptr [ebp-4],eax
 00482F9D    lea         edx,[ebp-18]
 00482FA0    mov         eax,dword ptr [ebp-4]
 00482FA3    mov         ecx,dword ptr [eax]
 00482FA5    call        dword ptr [ecx+44]
 00482FA8    mov         eax,dword ptr [ebp-10]
 00482FAB    mov         dword ptr [ebp-8],eax
 00482FAE    mov         eax,dword ptr [ebp-8]
 00482FB1    mov         esp,ebp
 00482FB3    pop         ebp
 00482FB4    ret
*}
end;

//00482FB8
procedure sub_00482FB8(?:TCustomForm; ?:Integer);
begin
{*
 00482FB8    push        ebp
 00482FB9    mov         ebp,esp
 00482FBB    add         esp,0FFFFFFF0
 00482FBE    mov         dword ptr [ebp-8],edx
 00482FC1    mov         dword ptr [ebp-4],eax
 00482FC4    mov         eax,dword ptr [ebp-4]
 00482FC7    call        TControl.GetClientHeight
 00482FCC    mov         edx,eax
 00482FCE    lea         ecx,[ebp-10]
 00482FD1    mov         eax,dword ptr [ebp-8]
 00482FD4    call        Point
 00482FD9    lea         edx,[ebp-10]
 00482FDC    mov         eax,dword ptr [ebp-4]
 00482FDF    call        00483544
 00482FE4    mov         esp,ebp
 00482FE6    pop         ebp
 00482FE7    ret
*}
end;

//00482FE8
function TControl.GetClientHeight:Integer;
begin
{*
 00482FE8    push        ebp
 00482FE9    mov         ebp,esp
 00482FEB    add         esp,0FFFFFFE8
 00482FEE    mov         dword ptr [ebp-4],eax
 00482FF1    lea         edx,[ebp-18]
 00482FF4    mov         eax,dword ptr [ebp-4]
 00482FF7    mov         ecx,dword ptr [eax]
 00482FF9    call        dword ptr [ecx+44]
 00482FFC    mov         eax,dword ptr [ebp-0C]
 00482FFF    mov         dword ptr [ebp-8],eax
 00483002    mov         eax,dword ptr [ebp-8]
 00483005    mov         esp,ebp
 00483007    pop         ebp
 00483008    ret
*}
end;

//0048300C
procedure sub_0048300C(?:TCustomForm; ?:Integer);
begin
{*
 0048300C    push        ebp
 0048300D    mov         ebp,esp
 0048300F    add         esp,0FFFFFFF0
 00483012    mov         dword ptr [ebp-8],edx
 00483015    mov         dword ptr [ebp-4],eax
 00483018    mov         eax,dword ptr [ebp-4]
 0048301B    call        TControl.GetClientWidth
 00483020    lea         ecx,[ebp-10]
 00483023    mov         edx,dword ptr [ebp-8]
 00483026    call        Point
 0048302B    lea         edx,[ebp-10]
 0048302E    mov         eax,dword ptr [ebp-4]
 00483031    call        00483544
 00483036    mov         esp,ebp
 00483038    pop         ebp
 00483039    ret
*}
end;

//0048303C
{*procedure sub_0048303C(?:?);
begin
 0048303C    push        ebp
 0048303D    mov         ebp,esp
 0048303F    add         esp,0FFFFFFEC
 00483042    xor         ecx,ecx
 00483044    mov         dword ptr [ebp-14],ecx
 00483047    mov         dword ptr [ebp-8],edx
 0048304A    mov         dword ptr [ebp-4],eax
 0048304D    xor         eax,eax
 0048304F    push        ebp
 00483050    push        4830D3
 00483055    push        dword ptr fs:[eax]
 00483058    mov         dword ptr fs:[eax],esp
 0048305B    mov         eax,dword ptr [ebp-4]
 0048305E    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00483062    jne         00483098
 00483064    mov         eax,dword ptr [ebp-4]
 00483067    mov         eax,dword ptr [eax+8];TControl.Name:TComponentName
 0048306A    mov         dword ptr [ebp-10],eax
 0048306D    mov         byte ptr [ebp-0C],0B
 00483071    lea         eax,[ebp-10]
 00483074    push        eax
 00483075    push        0
 00483077    lea         edx,[ebp-14]
 0048307A    mov         eax,[0056E43C];^SParentRequired:TResStringRec
 0048307F    call        LoadResString
 00483084    mov         ecx,dword ptr [ebp-14]
 00483087    mov         dl,1
 00483089    mov         eax,[0041D40C];EInvalidOperation
 0048308E    call        Exception.CreateFmt;EInvalidOperation.Create
 00483093    call        @RaiseExcept
 00483098    mov         edx,dword ptr [ebp-8]
 0048309B    mov         eax,dword ptr [ebp-4]
 0048309E    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004830A1    mov         ecx,dword ptr [eax]
 004830A3    call        dword ptr [ecx+40];TWinControl.sub_0048C208
 004830A6    mov         eax,dword ptr [ebp-8]
 004830A9    mov         edx,dword ptr [ebp-4]
 004830AC    mov         edx,dword ptr [edx+40];TControl.Left:Integer
 004830AF    add         dword ptr [eax],edx
 004830B1    mov         eax,dword ptr [ebp-8]
 004830B4    mov         edx,dword ptr [ebp-4]
 004830B7    mov         edx,dword ptr [edx+44];TControl.Top:Integer
 004830BA    add         dword ptr [eax+4],edx
 004830BD    xor         eax,eax
 004830BF    pop         edx
 004830C0    pop         ecx
 004830C1    pop         ecx
 004830C2    mov         dword ptr fs:[eax],edx
 004830C5    push        4830DA
 004830CA    lea         eax,[ebp-14]
 004830CD    call        @LStrClr
 004830D2    ret
>004830D3    jmp         @HandleFinally
>004830D8    jmp         004830CA
 004830DA    mov         esp,ebp
 004830DC    pop         ebp
 004830DD    ret
end;*}

//004830E0
function TControl.ClientToScreen(const Point:TPoint):TPoint;
begin
{*
 004830E0    push        ebp
 004830E1    mov         ebp,esp
 004830E3    add         esp,0FFFFFFEC
 004830E6    mov         dword ptr [ebp-0C],ecx
 004830E9    mov         dword ptr [ebp-8],edx
 004830EC    mov         dword ptr [ebp-4],eax
 004830EF    lea         edx,[ebp-14]
 004830F2    mov         eax,dword ptr [ebp-4]
 004830F5    mov         ecx,dword ptr [eax]
 004830F7    call        dword ptr [ecx+40]
 004830FA    mov         eax,dword ptr [ebp-8]
 004830FD    mov         eax,dword ptr [eax]
 004830FF    add         eax,dword ptr [ebp-14]
 00483102    mov         edx,dword ptr [ebp-0C]
 00483105    mov         dword ptr [edx],eax
 00483107    mov         eax,dword ptr [ebp-8]
 0048310A    mov         eax,dword ptr [eax+4]
 0048310D    add         eax,dword ptr [ebp-10]
 00483110    mov         edx,dword ptr [ebp-0C]
 00483113    mov         dword ptr [edx+4],eax
 00483116    mov         esp,ebp
 00483118    pop         ebp
 00483119    ret
*}
end;

//0048311C
function TControl.ScreenToClient(const Point:TPoint):TPoint;
begin
{*
 0048311C    push        ebp
 0048311D    mov         ebp,esp
 0048311F    add         esp,0FFFFFFEC
 00483122    mov         dword ptr [ebp-0C],ecx
 00483125    mov         dword ptr [ebp-8],edx
 00483128    mov         dword ptr [ebp-4],eax
 0048312B    lea         edx,[ebp-14]
 0048312E    mov         eax,dword ptr [ebp-4]
 00483131    mov         ecx,dword ptr [eax]
 00483133    call        dword ptr [ecx+40]
 00483136    mov         eax,dword ptr [ebp-8]
 00483139    mov         eax,dword ptr [eax]
 0048313B    sub         eax,dword ptr [ebp-14]
 0048313E    mov         edx,dword ptr [ebp-0C]
 00483141    mov         dword ptr [edx],eax
 00483143    mov         eax,dword ptr [ebp-8]
 00483146    mov         eax,dword ptr [eax+4]
 00483149    sub         eax,dword ptr [ebp-10]
 0048314C    mov         edx,dword ptr [ebp-0C]
 0048314F    mov         dword ptr [edx+4],eax
 00483152    mov         esp,ebp
 00483154    pop         ebp
 00483155    ret
*}
end;

//00483158
procedure sub_00483158(?:TControl; ?:TControl);
begin
{*
 00483158    push        ebp
 00483159    mov         ebp,esp
 0048315B    add         esp,0FFFFFFF4
 0048315E    mov         dword ptr [ebp-8],edx
 00483161    mov         dword ptr [ebp-4],eax
 00483164    mov         eax,dword ptr [ebp-4]
 00483167    mov         dword ptr [ebp-0C],eax
 0048316A    cmp         dword ptr [ebp-0C],0
>0048316E    je          0048319C
 00483170    mov         eax,dword ptr [ebp-0C]
 00483173    mov         edx,dword ptr ds:[49EC6C];TCustomForm
 00483179    call        @IsClass
 0048317E    test        al,al
>00483180    je          0048318D
 00483182    mov         edx,dword ptr [ebp-8]
 00483185    mov         eax,dword ptr [ebp-0C]
 00483188    call        004A582C
 0048318D    mov         eax,dword ptr [ebp-0C]
 00483190    mov         eax,dword ptr [eax+30];TToolBar.FParent:TWinControl
 00483193    mov         dword ptr [ebp-0C],eax
 00483196    cmp         dword ptr [ebp-0C],0
>0048319A    jne         00483170
 0048319C    mov         esp,ebp
 0048319E    pop         ebp
 0048319F    ret
*}
end;

//004831A0
{*procedure sub_004831A0(?:TControl; ?:?; ?:?; ?:?);
begin
 004831A0    push        ebp
 004831A1    mov         ebp,esp
 004831A3    add         esp,0FFFFFFE8
 004831A6    mov         dword ptr [ebp-0C],ecx
 004831A9    mov         dword ptr [ebp-8],edx
 004831AC    mov         dword ptr [ebp-4],eax
 004831AF    mov         eax,dword ptr [ebp-4]
 004831B2    cmp         dword ptr [eax+0A0],0
>004831B9    je          00483209
 004831BB    cmp         dword ptr ds:[571DBC],0;gvar_00571DBC
>004831C2    jne         00483209
 004831C4    mov         ax,[00483210];0x9 gvar_00483210
 004831CA    mov         edx,dword ptr [ebp-4]
 004831CD    and         ax,word ptr [edx+1C]
 004831D1    mov         dx,word ptr ds:[483214];0x0 gvar_00483214
 004831D8    cmp         dx,ax
>004831DB    jne         00483209
 004831DD    mov         eax,dword ptr [ebp-8]
 004831E0    mov         dword ptr [ebp-18],eax
 004831E3    mov         eax,dword ptr [ebp-0C]
 004831E6    mov         dword ptr [ebp-14],eax
 004831E9    mov         eax,dword ptr [ebp+8]
 004831EC    mov         dword ptr [ebp-10],eax
 004831EF    lea         eax,[ebp-18]
 004831F2    push        eax
 004831F3    mov         ecx,dword ptr [ebp-4]
 004831F6    mov         edx,0B042
 004831FB    mov         eax,dword ptr [ebp-4]
 004831FE    mov         eax,dword ptr [eax+0A0]
 00483204    call        00484FFC
 00483209    mov         esp,ebp
 0048320B    pop         ebp
 0048320C    ret         4
end;*}

//00483218
procedure sub_00483218(?:TWinControl);
begin
{*
 00483218    push        ebp
 00483219    mov         ebp,esp
 0048321B    push        ecx
 0048321C    mov         dword ptr [ebp-4],eax
 0048321F    mov         eax,dword ptr [ebp-4]
 00483222    push        eax
 00483223    xor         ecx,ecx
 00483225    mov         edx,0B037
 0048322A    mov         eax,dword ptr [ebp-4]
 0048322D    call        00484FFC
 00483232    pop         ecx
 00483233    pop         ebp
 00483234    ret
*}
end;

//00483238
{*procedure TControl.sub_00483238(?:?; ?:?);
begin
 00483238    push        ebp
 00483239    mov         ebp,esp
 0048323B    add         esp,0FFFFFFE0
 0048323E    push        ebx
 0048323F    mov         dword ptr [ebp-0C],ecx
 00483242    mov         dword ptr [ebp-8],edx
 00483245    mov         dword ptr [ebp-4],eax
 00483248    mov         eax,dword ptr [ebp-8]
 0048324B    cmp         eax,dword ptr [ebp-0C]
>0048324E    je          00483429
 00483254    mov         eax,dword ptr [ebp-4]
 00483257    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>0048325B    je          0048326B
 0048325D    mov         eax,dword ptr [ebp-4]
 00483260    mov         al,byte ptr [eax+98];TControl.FScalingFlags:TScalingFlags
 00483266    mov         byte ptr [ebp-1D],al
>00483269    jmp         00483273
 0048326B    mov         al,[00483440];0x1F gvar_00483440
 00483270    mov         byte ptr [ebp-1D],al
 00483273    test        byte ptr [ebp-1D],1
>00483277    je          00483292
 00483279    mov         eax,dword ptr [ebp-0C]
 0048327C    push        eax
 0048327D    mov         eax,dword ptr [ebp-8]
 00483280    push        eax
 00483281    mov         eax,dword ptr [ebp-4]
 00483284    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 00483287    push        eax
 00483288    call        kernel32.MulDiv
 0048328D    mov         dword ptr [ebp-10],eax
>00483290    jmp         0048329B
 00483292    mov         eax,dword ptr [ebp-4]
 00483295    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 00483298    mov         dword ptr [ebp-10],eax
 0048329B    test        byte ptr [ebp-1D],2
>0048329F    je          004832BA
 004832A1    mov         eax,dword ptr [ebp-0C]
 004832A4    push        eax
 004832A5    mov         eax,dword ptr [ebp-8]
 004832A8    push        eax
 004832A9    mov         eax,dword ptr [ebp-4]
 004832AC    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004832AF    push        eax
 004832B0    call        kernel32.MulDiv
 004832B5    mov         dword ptr [ebp-14],eax
>004832B8    jmp         004832C3
 004832BA    mov         eax,dword ptr [ebp-4]
 004832BD    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004832C0    mov         dword ptr [ebp-14],eax
 004832C3    test        byte ptr [ebp-1D],4
>004832C7    je          00483313
 004832C9    mov         eax,dword ptr [ebp-4]
 004832CC    test        byte ptr [eax+51],1;TControl.?f51:byte
>004832D0    jne         00483313
 004832D2    test        byte ptr [ebp-1D],1
>004832D6    je          004832FA
 004832D8    mov         eax,dword ptr [ebp-0C]
 004832DB    push        eax
 004832DC    mov         eax,dword ptr [ebp-8]
 004832DF    push        eax
 004832E0    mov         eax,dword ptr [ebp-4]
 004832E3    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004832E6    mov         edx,dword ptr [ebp-4]
 004832E9    add         eax,dword ptr [edx+48];TControl.Width:Integer
 004832EC    push        eax
 004832ED    call        kernel32.MulDiv
 004832F2    sub         eax,dword ptr [ebp-10]
 004832F5    mov         dword ptr [ebp-18],eax
>004832F8    jmp         0048331C
 004832FA    mov         eax,dword ptr [ebp-0C]
 004832FD    push        eax
 004832FE    mov         eax,dword ptr [ebp-8]
 00483301    push        eax
 00483302    mov         eax,dword ptr [ebp-4]
 00483305    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00483308    push        eax
 00483309    call        kernel32.MulDiv
 0048330E    mov         dword ptr [ebp-18],eax
>00483311    jmp         0048331C
 00483313    mov         eax,dword ptr [ebp-4]
 00483316    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00483319    mov         dword ptr [ebp-18],eax
 0048331C    test        byte ptr [ebp-1D],8
>00483320    je          0048336C
 00483322    mov         eax,dword ptr [ebp-4]
 00483325    test        byte ptr [eax+51],2;TControl.?f51:byte
>00483329    jne         0048336C
 0048332B    test        byte ptr [ebp-1D],8
>0048332F    je          00483353
 00483331    mov         eax,dword ptr [ebp-0C]
 00483334    push        eax
 00483335    mov         eax,dword ptr [ebp-8]
 00483338    push        eax
 00483339    mov         eax,dword ptr [ebp-4]
 0048333C    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 0048333F    mov         edx,dword ptr [ebp-4]
 00483342    add         eax,dword ptr [edx+4C];TControl.Height:Integer
 00483345    push        eax
 00483346    call        kernel32.MulDiv
 0048334B    sub         eax,dword ptr [ebp-14]
 0048334E    mov         dword ptr [ebp-1C],eax
>00483351    jmp         00483375
 00483353    mov         eax,dword ptr [ebp-0C]
 00483356    push        eax
 00483357    mov         eax,dword ptr [ebp-8]
 0048335A    push        eax
 0048335B    mov         eax,dword ptr [ebp-4]
 0048335E    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 00483361    push        eax
 00483362    call        kernel32.MulDiv
 00483367    mov         dword ptr [ebp-1C],eax
>0048336A    jmp         00483375
 0048336C    mov         eax,dword ptr [ebp-4]
 0048336F    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00483372    mov         dword ptr [ebp-1C],eax
 00483375    mov         eax,dword ptr [ebp-18]
 00483378    push        eax
 00483379    mov         eax,dword ptr [ebp-1C]
 0048337C    push        eax
 0048337D    mov         ecx,dword ptr [ebp-14]
 00483380    mov         edx,dword ptr [ebp-10]
 00483383    mov         eax,dword ptr [ebp-4]
 00483386    mov         ebx,dword ptr [eax]
 00483388    call        dword ptr [ebx+84];TControl.sub_00482930
 0048338E    mov         al,byte ptr [ebp-1D]
 00483391    and         al,byte ptr ds:[483444];0x5 gvar_00483444
 00483397    mov         dl,byte ptr ds:[483448];0x0 gvar_00483448
 0048339D    cmp         dl,al
>0048339F    je          004833C1
 004833A1    mov         eax,dword ptr [ebp-0C]
 004833A4    push        eax
 004833A5    mov         eax,dword ptr [ebp-8]
 004833A8    push        eax
 004833A9    mov         eax,dword ptr [ebp-4]
 004833AC    mov         eax,dword ptr [eax+90];TControl.FOriginalParentSize:TPoint
 004833B2    push        eax
 004833B3    call        kernel32.MulDiv
 004833B8    mov         edx,dword ptr [ebp-4]
 004833BB    mov         dword ptr [edx+90],eax;TControl.FOriginalParentSize:TPoint
 004833C1    mov         al,byte ptr [ebp-1D]
 004833C4    and         al,byte ptr ds:[48344C];0xA gvar_0048344C
 004833CA    mov         dl,byte ptr ds:[483448];0x0 gvar_00483448
 004833D0    cmp         dl,al
>004833D2    je          004833F4
 004833D4    mov         eax,dword ptr [ebp-0C]
 004833D7    push        eax
 004833D8    mov         eax,dword ptr [ebp-8]
 004833DB    push        eax
 004833DC    mov         eax,dword ptr [ebp-4]
 004833DF    mov         eax,dword ptr [eax+94]
 004833E5    push        eax
 004833E6    call        kernel32.MulDiv
 004833EB    mov         edx,dword ptr [ebp-4]
 004833EE    mov         dword ptr [edx+94],eax
 004833F4    mov         eax,dword ptr [ebp-4]
 004833F7    cmp         byte ptr [eax+59],0;TControl.FParentFont:Boolean
>004833FB    jne         00483429
 004833FD    test        byte ptr [ebp-1D],10
>00483401    je          00483429
 00483403    mov         eax,dword ptr [ebp-0C]
 00483406    push        eax
 00483407    mov         eax,dword ptr [ebp-8]
 0048340A    push        eax
 0048340B    mov         eax,dword ptr [ebp-4]
 0048340E    mov         eax,dword ptr [eax+68];TControl.FFont:TFont
 00483411    call        TFont.GetSize
 00483416    push        eax
 00483417    call        kernel32.MulDiv
 0048341C    mov         edx,eax
 0048341E    mov         eax,dword ptr [ebp-4]
 00483421    mov         eax,dword ptr [eax+68];TControl.FFont:TFont
 00483424    call        TFont.SetSize
 00483429    mov         eax,dword ptr [ebp-4]
 0048342C    mov         dl,byte ptr ds:[483448];0x0 gvar_00483448
 00483432    mov         byte ptr [eax+98],dl;TControl.FScalingFlags:TScalingFlags
 00483438    pop         ebx
 00483439    mov         esp,ebp
 0048343B    pop         ebp
 0048343C    ret
end;*}

//00483450
procedure TImage.SetAutoSize(Value:Boolean);
begin
{*
 00483450    push        ebp
 00483451    mov         ebp,esp
 00483453    add         esp,0FFFFFFF8
 00483456    push        esi
 00483457    mov         byte ptr [ebp-5],dl
 0048345A    mov         dword ptr [ebp-4],eax
 0048345D    mov         eax,dword ptr [ebp-4]
 00483460    mov         al,byte ptr [eax+5C];TImage.FAutoSize:Boolean
 00483463    cmp         al,byte ptr [ebp-5]
>00483466    je          00483483
 00483468    mov         al,byte ptr [ebp-5]
 0048346B    mov         edx,dword ptr [ebp-4]
 0048346E    mov         byte ptr [edx+5C],al;TImage.FAutoSize:Boolean
 00483471    cmp         byte ptr [ebp-5],0
>00483475    je          00483483
 00483477    mov         eax,dword ptr [ebp-4]
 0048347A    mov         si,0FFEE
 0048347E    call        @CallDynaInst;TControl.sub_0048673C
 00483483    pop         esi
 00483484    pop         ecx
 00483485    pop         ecx
 00483486    pop         ebp
 00483487    ret
*}
end;

//00483488
{*procedure sub_00483488(?:?);
begin
 00483488    push        ebp
 00483489    mov         ebp,esp
 0048348B    add         esp,0FFFFFFF0
 0048348E    xor         ecx,ecx
 00483490    mov         dword ptr [ebp-10],ecx
 00483493    mov         dword ptr [ebp-8],edx
 00483496    mov         dword ptr [ebp-4],eax
 00483499    xor         eax,eax
 0048349B    push        ebp
 0048349C    push        483539
 004834A1    push        dword ptr fs:[eax]
 004834A4    mov         dword ptr fs:[eax],esp
 004834A7    mov         eax,dword ptr [ebp-4]
 004834AA    test        byte ptr [eax+50],20;TControl.FControlStyle:TControlStyle
>004834AE    je          004834FE
 004834B0    mov         eax,dword ptr [ebp-4]
 004834B3    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004834B7    jne         004834FE
 004834B9    lea         edx,[ebp-10]
 004834BC    mov         eax,dword ptr [ebp-4]
 004834BF    call        TPanel.GetCaption
 004834C4    mov         edx,dword ptr [ebp-10]
 004834C7    mov         eax,dword ptr [ebp-4]
 004834CA    mov         eax,dword ptr [eax+8];TControl.Name:TComponentName
 004834CD    call        @LStrCmp
>004834D2    jne         004834FE
 004834D4    mov         eax,dword ptr [ebp-4]
 004834D7    cmp         dword ptr [eax+4],0;TControl.FOwner:TComponent
>004834DB    je          00483502
 004834DD    mov         eax,dword ptr [ebp-4]
 004834E0    mov         eax,dword ptr [eax+4];TControl.FOwner:TComponent
 004834E3    mov         edx,dword ptr ds:[47DF94];TControl
 004834E9    call        @IsClass
 004834EE    test        al,al
>004834F0    je          00483502
 004834F2    mov         eax,dword ptr [ebp-4]
 004834F5    mov         eax,dword ptr [eax+4];TControl.FOwner:TComponent
 004834F8    test        byte ptr [eax+1C],1;TComponent.FComponentState:TComponentState
>004834FC    je          00483502
 004834FE    xor         eax,eax
>00483500    jmp         00483504
 00483502    mov         al,1
 00483504    mov         byte ptr [ebp-9],al
 00483507    mov         edx,dword ptr [ebp-8]
 0048350A    mov         eax,dword ptr [ebp-4]
 0048350D    call        TComponent.SetName
 00483512    cmp         byte ptr [ebp-9],0
>00483516    je          00483523
 00483518    mov         edx,dword ptr [ebp-8]
 0048351B    mov         eax,dword ptr [ebp-4]
 0048351E    call        TPanel.SetCaption
 00483523    xor         eax,eax
 00483525    pop         edx
 00483526    pop         ecx
 00483527    pop         ecx
 00483528    mov         dword ptr fs:[eax],edx
 0048352B    push        483540
 00483530    lea         eax,[ebp-10]
 00483533    call        @LStrClr
 00483538    ret
>00483539    jmp         @HandleFinally
>0048353E    jmp         00483530
 00483540    mov         esp,ebp
 00483542    pop         ebp
 00483543    ret
end;*}

//00483544
{*procedure sub_00483544(?:?; ?:?);
begin
 00483544    push        ebp
 00483545    mov         ebp,esp
 00483547    add         esp,0FFFFFFE4
 0048354A    push        ebx
 0048354B    push        esi
 0048354C    push        edi
 0048354D    mov         esi,edx
 0048354F    lea         edi,[ebp-0C]
 00483552    movs        dword ptr [edi],dword ptr [esi]
 00483553    movs        dword ptr [edi],dword ptr [esi]
 00483554    mov         dword ptr [ebp-4],eax
 00483557    lea         edx,[ebp-1C]
 0048355A    mov         eax,dword ptr [ebp-4]
 0048355D    mov         ecx,dword ptr [eax]
 0048355F    call        dword ptr [ecx+44]
 00483562    mov         eax,dword ptr [ebp-4]
 00483565    mov         eax,dword ptr [eax+48]
 00483568    sub         eax,dword ptr [ebp-14]
 0048356B    add         eax,dword ptr [ebp-0C]
 0048356E    push        eax
 0048356F    mov         eax,dword ptr [ebp-4]
 00483572    mov         eax,dword ptr [eax+4C]
 00483575    sub         eax,dword ptr [ebp-10]
 00483578    add         eax,dword ptr [ebp-8]
 0048357B    push        eax
 0048357C    mov         eax,dword ptr [ebp-4]
 0048357F    mov         ecx,dword ptr [eax+44]
 00483582    mov         eax,dword ptr [ebp-4]
 00483585    mov         edx,dword ptr [eax+40]
 00483588    mov         eax,dword ptr [ebp-4]
 0048358B    mov         ebx,dword ptr [eax]
 0048358D    call        dword ptr [ebx+84]
 00483593    pop         edi
 00483594    pop         esi
 00483595    pop         ebx
 00483596    mov         esp,ebp
 00483598    pop         ebp
 00483599    ret
end;*}

//0048359C
{*procedure sub_0048359C(?:?);
begin
 0048359C    push        ebp
 0048359D    mov         ebp,esp
 0048359F    add         esp,0FFFFFFF8
 004835A2    mov         dword ptr [ebp-8],edx
 004835A5    mov         dword ptr [ebp-4],eax
 004835A8    mov         eax,dword ptr [ebp-4]
 004835AB    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004835AE    cmp         eax,dword ptr [ebp-8]
>004835B1    je          00483602
 004835B3    mov         eax,dword ptr [ebp-8]
 004835B6    cmp         eax,dword ptr [ebp-4]
>004835B9    jne         004835D2
 004835BB    mov         ecx,dword ptr ds:[56E440];^SControlParentSetToSelf:TResStringRec
 004835C1    mov         dl,1
 004835C3    mov         eax,[0041D40C];EInvalidOperation
 004835C8    call        Exception.Create;EInvalidOperation.Create
 004835CD    call        @RaiseExcept
 004835D2    mov         eax,dword ptr [ebp-4]
 004835D5    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004835D9    je          004835E9
 004835DB    mov         edx,dword ptr [ebp-4]
 004835DE    mov         eax,dword ptr [ebp-4]
 004835E1    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004835E4    call        00487D40
 004835E9    cmp         dword ptr [ebp-8],0
>004835ED    je          00483602
 004835EF    mov         edx,dword ptr [ebp-4]
 004835F2    mov         eax,dword ptr [ebp-8]
 004835F5    call        00487C50
 004835FA    mov         eax,dword ptr [ebp-4]
 004835FD    call        00482A00
 00483602    pop         ecx
 00483603    pop         ecx
 00483604    pop         ebp
 00483605    ret
end;*}

//00483608
procedure TImage.SetVisible(Value:Boolean);
begin
{*
 00483608    push        ebp
 00483609    mov         ebp,esp
 0048360B    add         esp,0FFFFFFF8
 0048360E    push        esi
 0048360F    mov         byte ptr [ebp-5],dl
 00483612    mov         dword ptr [ebp-4],eax
 00483615    mov         eax,dword ptr [ebp-4]
 00483618    mov         al,byte ptr [eax+57];TImage.FVisible:Boolean
 0048361B    cmp         al,byte ptr [ebp-5]
>0048361E    je          00483655
 00483620    mov         eax,dword ptr [ebp-4]
 00483623    mov         si,0FFCD
 00483627    call        @CallDynaInst;TControl.sub_0048513C
 0048362C    mov         al,byte ptr [ebp-5]
 0048362F    mov         edx,dword ptr [ebp-4]
 00483632    mov         byte ptr [edx+57],al;TImage.FVisible:Boolean
 00483635    push        0
 00483637    xor         ecx,ecx
 00483639    mov         cl,byte ptr [ebp-5]
 0048363C    mov         edx,0B00B
 00483641    mov         eax,dword ptr [ebp-4]
 00483644    call        00484FFC
 00483649    mov         eax,dword ptr [ebp-4]
 0048364C    mov         si,0FFD0
 00483650    call        @CallDynaInst;TControl.sub_004826F8
 00483655    pop         esi
 00483656    pop         ecx
 00483657    pop         ecx
 00483658    pop         ebp
 00483659    ret
*}
end;

//0048365C
procedure TImage.SetEnabled(Value:Boolean);
begin
{*
 0048365C    push        ebp
 0048365D    mov         ebp,esp
 0048365F    add         esp,0FFFFFFF8
 00483662    mov         byte ptr [ebp-5],dl
 00483665    mov         dword ptr [ebp-4],eax
 00483668    mov         eax,dword ptr [ebp-4]
 0048366B    mov         al,byte ptr [eax+58];TImage.FEnabled:Boolean
 0048366E    cmp         al,byte ptr [ebp-5]
>00483671    je          0048368D
 00483673    mov         al,byte ptr [ebp-5]
 00483676    mov         edx,dword ptr [ebp-4]
 00483679    mov         byte ptr [edx+58],al;TImage.FEnabled:Boolean
 0048367C    push        0
 0048367E    xor         ecx,ecx
 00483680    mov         edx,0B00C
 00483685    mov         eax,dword ptr [ebp-4]
 00483688    call        00484FFC
 0048368D    pop         ecx
 0048368E    pop         ecx
 0048368F    pop         ebp
 00483690    ret
*}
end;

//00483694
{*function sub_00483694(?:TControl):?;
begin
 00483694    push        ebp
 00483695    mov         ebp,esp
 00483697    add         esp,0FFFFFFF8
 0048369A    mov         dword ptr [ebp-4],eax
 0048369D    push        0
 0048369F    xor         ecx,ecx
 004836A1    mov         edx,0E
 004836A6    mov         eax,dword ptr [ebp-4]
 004836A9    call        00484FFC
 004836AE    mov         dword ptr [ebp-8],eax
 004836B1    mov         eax,dword ptr [ebp-8]
 004836B4    pop         ecx
 004836B5    pop         ecx
 004836B6    pop         ebp
 004836B7    ret
end;*}

//004836B8
{*function sub_004836B8(?:TWinControl; ?:PChar; ?:?):?;
begin
 004836B8    push        ebp
 004836B9    mov         ebp,esp
 004836BB    add         esp,0FFFFFFF0
 004836BE    mov         dword ptr [ebp-0C],ecx
 004836C1    mov         dword ptr [ebp-8],edx
 004836C4    mov         dword ptr [ebp-4],eax
 004836C7    mov         eax,dword ptr [ebp-8]
 004836CA    push        eax
 004836CB    mov         ecx,dword ptr [ebp-0C]
 004836CE    mov         edx,0D
 004836D3    mov         eax,dword ptr [ebp-4]
 004836D6    call        00484FFC
 004836DB    mov         dword ptr [ebp-10],eax
 004836DE    mov         eax,dword ptr [ebp-10]
 004836E1    mov         esp,ebp
 004836E3    pop         ebp
 004836E4    ret
end;*}

//004836E8
{*function sub_004836E8(?:?):?;
begin
 004836E8    push        ebp
 004836E9    mov         ebp,esp
 004836EB    add         esp,0FFFFFFF8
 004836EE    mov         dword ptr [ebp-4],eax
 004836F1    mov         eax,dword ptr [ebp-4]
 004836F4    cmp         dword ptr [eax+0AC],0
>004836FB    jle         0048370B
 004836FD    mov         eax,dword ptr [ebp-4]
 00483700    mov         eax,dword ptr [eax+0AC]
 00483706    mov         dword ptr [ebp-8],eax
>00483709    jmp         00483714
 0048370B    mov         eax,dword ptr [ebp-4]
 0048370E    mov         eax,dword ptr [eax+4C]
 00483711    mov         dword ptr [ebp-8],eax
 00483714    mov         eax,dword ptr [ebp-8]
 00483717    pop         ecx
 00483718    pop         ecx
 00483719    pop         ebp
 0048371A    ret
end;*}

//0048371C
{*function sub_0048371C(?:?):?;
begin
 0048371C    push        ebp
 0048371D    mov         ebp,esp
 0048371F    add         esp,0FFFFFFF8
 00483722    mov         dword ptr [ebp-4],eax
 00483725    mov         eax,dword ptr [ebp-4]
 00483728    cmp         dword ptr [eax+0A8],0
>0048372F    jle         0048373F
 00483731    mov         eax,dword ptr [ebp-4]
 00483734    mov         eax,dword ptr [eax+0A8]
 0048373A    mov         dword ptr [ebp-8],eax
>0048373D    jmp         00483748
 0048373F    mov         eax,dword ptr [ebp-4]
 00483742    mov         eax,dword ptr [eax+48]
 00483745    mov         dword ptr [ebp-8],eax
 00483748    mov         eax,dword ptr [ebp-8]
 0048374B    pop         ecx
 0048374C    pop         ecx
 0048374D    pop         ebp
 0048374E    ret
end;*}

//00483750
procedure TImage.SetPopupMenu(Value:TPopupMenu);
begin
{*
 00483750    push        ebp
 00483751    mov         ebp,esp
 00483753    add         esp,0FFFFFFF8
 00483756    mov         dword ptr [ebp-8],edx
 00483759    mov         dword ptr [ebp-4],eax
 0048375C    mov         eax,dword ptr [ebp-8]
 0048375F    mov         edx,dword ptr [ebp-4]
 00483762    mov         dword ptr [edx+7C],eax;TImage.FPopupMenu:TPopupMenu
 00483765    cmp         dword ptr [ebp-8],0
>00483769    je          00483781
 0048376B    mov         edx,dword ptr [ebp-4]
 0048376E    mov         eax,dword ptr [ebp-8]
 00483771    call        0049D2A0
 00483776    mov         edx,dword ptr [ebp-4]
 00483779    mov         eax,dword ptr [ebp-8]
 0048377C    call        0042A2CC
 00483781    pop         ecx
 00483782    pop         ecx
 00483783    pop         ebp
 00483784    ret
*}
end;

//00483788
procedure sub_00483788(?:TWinControl; ?:PChar);
begin
{*
 00483788    push        ebp
 00483789    mov         ebp,esp
 0048378B    add         esp,0FFFFFFF8
 0048378E    mov         dword ptr [ebp-8],edx
 00483791    mov         dword ptr [ebp-4],eax
 00483794    mov         eax,dword ptr [ebp-8]
 00483797    push        eax
 00483798    xor         ecx,ecx
 0048379A    mov         edx,0C
 0048379F    mov         eax,dword ptr [ebp-4]
 004837A2    call        00484FFC
 004837A7    push        0
 004837A9    xor         ecx,ecx
 004837AB    mov         edx,0B012
 004837B0    mov         eax,dword ptr [ebp-4]
 004837B3    call        00484FFC
 004837B8    pop         ecx
 004837B9    pop         ecx
 004837BA    pop         ebp
 004837BB    ret
*}
end;

//004837BC
procedure TPanel.GetCaption(?:AnsiString);
begin
{*
 004837BC    push        ebp
 004837BD    mov         ebp,esp
 004837BF    add         esp,0FFFFFFF4
 004837C2    mov         dword ptr [ebp-8],edx
 004837C5    mov         dword ptr [ebp-4],eax
 004837C8    mov         eax,dword ptr [ebp-4]
 004837CB    call        00483694
 004837D0    mov         dword ptr [ebp-0C],eax
 004837D3    mov         eax,dword ptr [ebp-8]
 004837D6    mov         ecx,dword ptr [ebp-0C]
 004837D9    xor         edx,edx
 004837DB    call        @LStrFromPCharLen
 004837E0    cmp         dword ptr [ebp-0C],0
>004837E4    je          004837F7
 004837E6    mov         ecx,dword ptr [ebp-0C]
 004837E9    inc         ecx
 004837EA    mov         edx,dword ptr [ebp-8]
 004837ED    mov         edx,dword ptr [edx]
 004837EF    mov         eax,dword ptr [ebp-4]
 004837F2    call        004836B8
 004837F7    mov         esp,ebp
 004837F9    pop         ebp
 004837FA    ret
*}
end;

//004837FC
procedure TPanel.SetCaption(Value:TCaption);
begin
{*
 004837FC    push        ebp
 004837FD    mov         ebp,esp
 004837FF    add         esp,0FFFFFFF4
 00483802    xor         ecx,ecx
 00483804    mov         dword ptr [ebp-0C],ecx
 00483807    mov         dword ptr [ebp-8],edx
 0048380A    mov         dword ptr [ebp-4],eax
 0048380D    xor         eax,eax
 0048380F    push        ebp
 00483810    push        48385B
 00483815    push        dword ptr fs:[eax]
 00483818    mov         dword ptr fs:[eax],esp
 0048381B    lea         edx,[ebp-0C]
 0048381E    mov         eax,dword ptr [ebp-4]
 00483821    call        TPanel.GetCaption
 00483826    mov         eax,dword ptr [ebp-0C]
 00483829    mov         edx,dword ptr [ebp-8]
 0048382C    call        @LStrCmp
>00483831    je          00483845
 00483833    mov         eax,dword ptr [ebp-8]
 00483836    call        @LStrToPChar
 0048383B    mov         edx,eax
 0048383D    mov         eax,dword ptr [ebp-4]
 00483840    call        00483788
 00483845    xor         eax,eax
 00483847    pop         edx
 00483848    pop         ecx
 00483849    pop         ecx
 0048384A    mov         dword ptr fs:[eax],edx
 0048384D    push        483862
 00483852    lea         eax,[ebp-0C]
 00483855    call        @LStrClr
 0048385A    ret
>0048385B    jmp         @HandleFinally
>00483860    jmp         00483852
 00483862    mov         esp,ebp
 00483864    pop         ebp
 00483865    ret
*}
end;

//00483868
procedure TPanel.SetBiDiMode(Value:TBiDiMode);
begin
{*
 00483868    push        ebp
 00483869    mov         ebp,esp
 0048386B    add         esp,0FFFFFFF8
 0048386E    mov         byte ptr [ebp-5],dl
 00483871    mov         dword ptr [ebp-4],eax
 00483874    mov         eax,dword ptr [ebp-4]
 00483877    mov         al,byte ptr [eax+5F];TPanel.FBiDiMode:TBiDiMode
 0048387A    cmp         al,byte ptr [ebp-5]
>0048387D    je          004838A0
 0048387F    mov         al,byte ptr [ebp-5]
 00483882    mov         edx,dword ptr [ebp-4]
 00483885    mov         byte ptr [edx+5F],al;TPanel.FBiDiMode:TBiDiMode
 00483888    mov         eax,dword ptr [ebp-4]
 0048388B    mov         byte ptr [eax+60],0;TPanel.FParentBiDiMode:Boolean
 0048388F    push        0
 00483891    xor         ecx,ecx
 00483893    mov         edx,0B03C
 00483898    mov         eax,dword ptr [ebp-4]
 0048389B    call        00484FFC
 004838A0    pop         ecx
 004838A1    pop         ecx
 004838A2    pop         ebp
 004838A3    ret
*}
end;

//004838A4
{*procedure sub_004838A4(?:?; ?:?);
begin
 004838A4    push        ebp
 004838A5    mov         ebp,esp
 004838A7    add         esp,0FFFFFFF8
 004838AA    mov         dword ptr [ebp-8],edx
 004838AD    mov         dword ptr [ebp-4],eax
 004838B0    mov         eax,dword ptr [ebp-4]
 004838B3    mov         byte ptr [eax+59],0
 004838B7    mov         eax,dword ptr [ebp-4]
 004838BA    mov         byte ptr [eax+56],0
 004838BE    mov         eax,dword ptr [ebp-4]
 004838C1    mov         eax,dword ptr [eax+68]
 004838C4    call        TFont.GetHeight
 004838C9    mov         edx,dword ptr [ebp-4]
 004838CC    cmp         eax,dword ptr [edx+84]
>004838D2    je          004838F2
 004838D4    mov         eax,dword ptr [ebp-4]
 004838D7    or          byte ptr [eax+98],10
 004838DE    mov         eax,dword ptr [ebp-4]
 004838E1    mov         eax,dword ptr [eax+68]
 004838E4    call        TFont.GetHeight
 004838E9    mov         edx,dword ptr [ebp-4]
 004838EC    mov         dword ptr [edx+84],eax
 004838F2    push        0
 004838F4    xor         ecx,ecx
 004838F6    mov         edx,0B00E
 004838FB    mov         eax,dword ptr [ebp-4]
 004838FE    call        00484FFC
 00483903    pop         ecx
 00483904    pop         ecx
 00483905    pop         ebp
 00483906    ret
end;*}

//00483908
procedure TPanel.SetFont(Value:TFont);
begin
{*
 00483908    push        ebp
 00483909    mov         ebp,esp
 0048390B    add         esp,0FFFFFFF8
 0048390E    mov         dword ptr [ebp-8],edx
 00483911    mov         dword ptr [ebp-4],eax
 00483914    mov         edx,dword ptr [ebp-8]
 00483917    mov         eax,dword ptr [ebp-4]
 0048391A    mov         eax,dword ptr [eax+68];TPanel.FFont:TFont
 0048391D    mov         ecx,dword ptr [eax]
 0048391F    call        dword ptr [ecx+8];TFont.sub_0042DF9C
 00483922    pop         ecx
 00483923    pop         ecx
 00483924    pop         ebp
 00483925    ret
*}
end;

//00483928
function TPanel.IsStoredFont(Value:TFont):Boolean;
begin
{*
 00483928    push        ebp
 00483929    mov         ebp,esp
 0048392B    add         esp,0FFFFFFF8
 0048392E    mov         dword ptr [ebp-4],eax
 00483931    mov         eax,dword ptr [ebp-4]
 00483934    cmp         byte ptr [eax+59],0;TPanel.FParentFont:Boolean
>00483938    jne         00483943
 0048393A    mov         eax,dword ptr [ebp-4]
 0048393D    cmp         byte ptr [eax+56],0;TPanel.FDesktopFont:Boolean
>00483941    je          00483947
 00483943    xor         eax,eax
>00483945    jmp         00483949
 00483947    mov         al,1
 00483949    mov         byte ptr [ebp-5],al
 0048394C    mov         al,byte ptr [ebp-5]
 0048394F    pop         ecx
 00483950    pop         ecx
 00483951    pop         ebp
 00483952    ret
*}
end;

//00483954
function TImage.IsStoredShowHint(Value:Boolean):Boolean;
begin
{*
 00483954    push        ebp
 00483955    mov         ebp,esp
 00483957    add         esp,0FFFFFFF8
 0048395A    mov         dword ptr [ebp-4],eax
 0048395D    mov         eax,dword ptr [ebp-4]
 00483960    mov         al,byte ptr [eax+9A];TImage.FParentShowHint:Boolean
 00483966    xor         al,1
 00483968    mov         byte ptr [ebp-5],al
 0048396B    mov         al,byte ptr [ebp-5]
 0048396E    pop         ecx
 0048396F    pop         ecx
 00483970    pop         ebp
 00483971    ret
*}
end;

//00483974
function TPanel.IsStoredBiDiMode(Value:TBiDiMode):Boolean;
begin
{*
 00483974    push        ebp
 00483975    mov         ebp,esp
 00483977    add         esp,0FFFFFFF8
 0048397A    mov         dword ptr [ebp-4],eax
 0048397D    mov         eax,dword ptr [ebp-4]
 00483980    mov         al,byte ptr [eax+60];TPanel.FParentBiDiMode:Boolean
 00483983    xor         al,1
 00483985    mov         byte ptr [ebp-5],al
 00483988    mov         al,byte ptr [ebp-5]
 0048398B    pop         ecx
 0048398C    pop         ecx
 0048398D    pop         ebp
 0048398E    ret
*}
end;

//00483990
procedure TPanel.SetParentFont(Value:Boolean);
begin
{*
 00483990    push        ebp
 00483991    mov         ebp,esp
 00483993    add         esp,0FFFFFFF8
 00483996    mov         byte ptr [ebp-5],dl
 00483999    mov         dword ptr [ebp-4],eax
 0048399C    mov         eax,dword ptr [ebp-4]
 0048399F    mov         al,byte ptr [eax+59];TPanel.FParentFont:Boolean
 004839A2    cmp         al,byte ptr [ebp-5]
>004839A5    je          004839D3
 004839A7    mov         al,byte ptr [ebp-5]
 004839AA    mov         edx,dword ptr [ebp-4]
 004839AD    mov         byte ptr [edx+59],al;TPanel.FParentFont:Boolean
 004839B0    mov         eax,dword ptr [ebp-4]
 004839B3    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>004839B7    je          004839D3
 004839B9    mov         eax,dword ptr [ebp-4]
 004839BC    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>004839C0    jne         004839D3
 004839C2    push        0
 004839C4    xor         ecx,ecx
 004839C6    mov         edx,0B008
 004839CB    mov         eax,dword ptr [ebp-4]
 004839CE    call        00484FFC
 004839D3    pop         ecx
 004839D4    pop         ecx
 004839D5    pop         ebp
 004839D6    ret
*}
end;

//004839D8
procedure TImage.SetShowHint(Value:Boolean);
begin
{*
 004839D8    push        ebp
 004839D9    mov         ebp,esp
 004839DB    add         esp,0FFFFFFF8
 004839DE    mov         byte ptr [ebp-5],dl
 004839E1    mov         dword ptr [ebp-4],eax
 004839E4    mov         eax,dword ptr [ebp-4]
 004839E7    mov         al,byte ptr [eax+99];TImage.FShowHint:Boolean
 004839ED    cmp         al,byte ptr [ebp-5]
>004839F0    je          00483A19
 004839F2    mov         al,byte ptr [ebp-5]
 004839F5    mov         edx,dword ptr [ebp-4]
 004839F8    mov         byte ptr [edx+99],al;TImage.FShowHint:Boolean
 004839FE    mov         eax,dword ptr [ebp-4]
 00483A01    mov         byte ptr [eax+9A],0;TImage.FParentShowHint:Boolean
 00483A08    push        0
 00483A0A    xor         ecx,ecx
 00483A0C    mov         edx,0B022
 00483A11    mov         eax,dword ptr [ebp-4]
 00483A14    call        00484FFC
 00483A19    pop         ecx
 00483A1A    pop         ecx
 00483A1B    pop         ebp
 00483A1C    ret
*}
end;

//00483A20
procedure TImage.SetParentShowHint(Value:Boolean);
begin
{*
 00483A20    push        ebp
 00483A21    mov         ebp,esp
 00483A23    add         esp,0FFFFFFF8
 00483A26    mov         byte ptr [ebp-5],dl
 00483A29    mov         dword ptr [ebp-4],eax
 00483A2C    mov         eax,dword ptr [ebp-4]
 00483A2F    mov         al,byte ptr [eax+9A];TImage.FParentShowHint:Boolean
 00483A35    cmp         al,byte ptr [ebp-5]
>00483A38    je          00483A69
 00483A3A    mov         al,byte ptr [ebp-5]
 00483A3D    mov         edx,dword ptr [ebp-4]
 00483A40    mov         byte ptr [edx+9A],al;TImage.FParentShowHint:Boolean
 00483A46    mov         eax,dword ptr [ebp-4]
 00483A49    cmp         dword ptr [eax+30],0;TImage.FParent:TWinControl
>00483A4D    je          00483A69
 00483A4F    mov         eax,dword ptr [ebp-4]
 00483A52    test        byte ptr [eax+1C],2;TImage.FComponentState:TComponentState
>00483A56    jne         00483A69
 00483A58    push        0
 00483A5A    xor         ecx,ecx
 00483A5C    mov         edx,0B023
 00483A61    mov         eax,dword ptr [ebp-4]
 00483A64    call        00484FFC
 00483A69    pop         ecx
 00483A6A    pop         ecx
 00483A6B    pop         ebp
 00483A6C    ret
*}
end;

//00483A70
procedure TPanel.SetColor(Value:TColor);
begin
{*
 00483A70    push        ebp
 00483A71    mov         ebp,esp
 00483A73    add         esp,0FFFFFFF8
 00483A76    mov         dword ptr [ebp-8],edx
 00483A79    mov         dword ptr [ebp-4],eax
 00483A7C    mov         eax,dword ptr [ebp-4]
 00483A7F    mov         eax,dword ptr [eax+70];TPanel.FColor:TColor
 00483A82    cmp         eax,dword ptr [ebp-8]
>00483A85    je          00483AA8
 00483A87    mov         eax,dword ptr [ebp-8]
 00483A8A    mov         edx,dword ptr [ebp-4]
 00483A8D    mov         dword ptr [edx+70],eax;TPanel.FColor:TColor
 00483A90    mov         eax,dword ptr [ebp-4]
 00483A93    mov         byte ptr [eax+5A],0;TPanel.FParentColor:Boolean
 00483A97    push        0
 00483A99    xor         ecx,ecx
 00483A9B    mov         edx,0B00D
 00483AA0    mov         eax,dword ptr [ebp-4]
 00483AA3    call        00484FFC
 00483AA8    pop         ecx
 00483AA9    pop         ecx
 00483AAA    pop         ebp
 00483AAB    ret
*}
end;

//00483AAC
function TPanel.IsStoredColor(Value:TColor):Boolean;
begin
{*
 00483AAC    push        ebp
 00483AAD    mov         ebp,esp
 00483AAF    add         esp,0FFFFFFF8
 00483AB2    mov         dword ptr [ebp-4],eax
 00483AB5    mov         eax,dword ptr [ebp-4]
 00483AB8    mov         al,byte ptr [eax+5A];TPanel.FParentColor:Boolean
 00483ABB    xor         al,1
 00483ABD    mov         byte ptr [ebp-5],al
 00483AC0    mov         al,byte ptr [ebp-5]
 00483AC3    pop         ecx
 00483AC4    pop         ecx
 00483AC5    pop         ebp
 00483AC6    ret
*}
end;

//00483AC8
procedure TPanel.SetParentColor(Value:Boolean);
begin
{*
 00483AC8    push        ebp
 00483AC9    mov         ebp,esp
 00483ACB    add         esp,0FFFFFFF8
 00483ACE    mov         byte ptr [ebp-5],dl
 00483AD1    mov         dword ptr [ebp-4],eax
 00483AD4    mov         eax,dword ptr [ebp-4]
 00483AD7    mov         al,byte ptr [eax+5A];TPanel.FParentColor:Boolean
 00483ADA    cmp         al,byte ptr [ebp-5]
>00483ADD    je          00483B0B
 00483ADF    mov         al,byte ptr [ebp-5]
 00483AE2    mov         edx,dword ptr [ebp-4]
 00483AE5    mov         byte ptr [edx+5A],al;TPanel.FParentColor:Boolean
 00483AE8    mov         eax,dword ptr [ebp-4]
 00483AEB    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>00483AEF    je          00483B0B
 00483AF1    mov         eax,dword ptr [ebp-4]
 00483AF4    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>00483AF8    jne         00483B0B
 00483AFA    push        0
 00483AFC    xor         ecx,ecx
 00483AFE    mov         edx,0B009
 00483B03    mov         eax,dword ptr [ebp-4]
 00483B06    call        00484FFC
 00483B0B    pop         ecx
 00483B0C    pop         ecx
 00483B0D    pop         ebp
 00483B0E    ret
*}
end;

//00483B10
procedure TPanel.SetParentBiDiMode(Value:Boolean);
begin
{*
 00483B10    push        ebp
 00483B11    mov         ebp,esp
 00483B13    add         esp,0FFFFFFF8
 00483B16    mov         byte ptr [ebp-5],dl
 00483B19    mov         dword ptr [ebp-4],eax
 00483B1C    mov         eax,dword ptr [ebp-4]
 00483B1F    mov         al,byte ptr [eax+60];TPanel.FParentBiDiMode:Boolean
 00483B22    cmp         al,byte ptr [ebp-5]
>00483B25    je          00483B53
 00483B27    mov         al,byte ptr [ebp-5]
 00483B2A    mov         edx,dword ptr [ebp-4]
 00483B2D    mov         byte ptr [edx+60],al;TPanel.FParentBiDiMode:Boolean
 00483B30    mov         eax,dword ptr [ebp-4]
 00483B33    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>00483B37    je          00483B53
 00483B39    mov         eax,dword ptr [ebp-4]
 00483B3C    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>00483B40    jne         00483B53
 00483B42    push        0
 00483B44    xor         ecx,ecx
 00483B46    mov         edx,0B03D
 00483B4B    mov         eax,dword ptr [ebp-4]
 00483B4E    call        00484FFC
 00483B53    pop         ecx
 00483B54    pop         ecx
 00483B55    pop         ebp
 00483B56    ret
*}
end;

//00483B58
procedure TSplitter.SetCursor(Value:TCursor);
begin
{*
 00483B58    push        ebp
 00483B59    mov         ebp,esp
 00483B5B    add         esp,0FFFFFFF8
 00483B5E    mov         word ptr [ebp-6],dx
 00483B62    mov         dword ptr [ebp-4],eax
 00483B65    mov         eax,dword ptr [ebp-4]
 00483B68    mov         ax,word ptr [eax+78];TSplitter.Cursor:TCursor
 00483B6C    cmp         ax,word ptr [ebp-6]
>00483B70    je          00483B8E
 00483B72    mov         ax,word ptr [ebp-6]
 00483B76    mov         edx,dword ptr [ebp-4]
 00483B79    mov         word ptr [edx+78],ax;TSplitter.Cursor:TCursor
 00483B7D    push        0
 00483B7F    xor         ecx,ecx
 00483B81    mov         edx,0B00F
 00483B86    mov         eax,dword ptr [ebp-4]
 00483B89    call        00484FFC
 00483B8E    pop         ecx
 00483B8F    pop         ecx
 00483B90    pop         ebp
 00483B91    ret
*}
end;

//00483B94
{*function sub_00483B94(?:TControl):?;
begin
 00483B94    push        ebp
 00483B95    mov         ebp,esp
 00483B97    add         esp,0FFFFFFF8
 00483B9A    mov         dword ptr [ebp-4],eax
 00483B9D    call        0047FB54
 00483BA2    cmp         eax,dword ptr [ebp-4]
 00483BA5    sete        byte ptr [ebp-5]
 00483BA9    mov         al,byte ptr [ebp-5]
 00483BAC    pop         ecx
 00483BAD    pop         ecx
 00483BAE    pop         ebp
 00483BAF    ret
end;*}

//00483BB0
{*procedure sub_00483BB0(?:TControl; ?:?);
begin
 00483BB0    push        ebp
 00483BB1    mov         ebp,esp
 00483BB3    add         esp,0FFFFFFF8
 00483BB6    mov         byte ptr [ebp-5],dl
 00483BB9    mov         dword ptr [ebp-4],eax
 00483BBC    mov         eax,dword ptr [ebp-4]
 00483BBF    call        00483B94
 00483BC4    cmp         al,byte ptr [ebp-5]
>00483BC7    je          00483BE0
 00483BC9    cmp         byte ptr [ebp-5],0
>00483BCD    je          00483BD9
 00483BCF    mov         eax,dword ptr [ebp-4]
 00483BD2    call        0047FB90
>00483BD7    jmp         00483BE0
 00483BD9    xor         eax,eax
 00483BDB    call        0047FB90
 00483BE0    pop         ecx
 00483BE1    pop         ecx
 00483BE2    pop         ebp
 00483BE3    ret
end;*}

//00483BE4
procedure sub_00483BE4(?:TWinControl);
begin
{*
 00483BE4    push        ebp
 00483BE5    mov         ebp,esp
 00483BE7    push        ecx
 00483BE8    push        esi
 00483BE9    mov         dword ptr [ebp-4],eax
 00483BEC    mov         dl,1
 00483BEE    mov         eax,dword ptr [ebp-4]
 00483BF1    mov         si,0FFCE
 00483BF5    call        @CallDynaInst
 00483BFA    pop         esi
 00483BFB    pop         ecx
 00483BFC    pop         ebp
 00483BFD    ret
*}
end;

//00483C00
{*procedure sub_00483C00(?:TControl; ?:?);
begin
 00483C00    push        ebp
 00483C01    mov         ebp,esp
 00483C03    add         esp,0FFFFFFEC
 00483C06    push        esi
 00483C07    mov         dword ptr [ebp-8],edx
 00483C0A    mov         dword ptr [ebp-4],eax
 00483C0D    mov         eax,dword ptr [ebp-4]
 00483C10    cmp         dword ptr [eax+30],0
>00483C14    je          00483CCC
 00483C1A    mov         eax,dword ptr [ebp-4]
 00483C1D    mov         eax,dword ptr [eax+30]
 00483C20    mov         eax,dword ptr [eax+198]
 00483C26    mov         edx,dword ptr [ebp-4]
 00483C29    call        004202BC
 00483C2E    mov         dword ptr [ebp-0C],eax
 00483C31    cmp         dword ptr [ebp-0C],0
>00483C35    jl          00483CCC
 00483C3B    mov         eax,dword ptr [ebp-4]
 00483C3E    mov         eax,dword ptr [eax+30]
 00483C41    mov         eax,dword ptr [eax+198]
 00483C47    mov         eax,dword ptr [eax+8]
 00483C4A    mov         dword ptr [ebp-10],eax
 00483C4D    cmp         dword ptr [ebp-8],0
>00483C51    jge         00483C58
 00483C53    xor         eax,eax
 00483C55    mov         dword ptr [ebp-8],eax
 00483C58    mov         eax,dword ptr [ebp-8]
 00483C5B    cmp         eax,dword ptr [ebp-10]
>00483C5E    jl          00483C67
 00483C60    mov         eax,dword ptr [ebp-10]
 00483C63    dec         eax
 00483C64    mov         dword ptr [ebp-8],eax
 00483C67    mov         eax,dword ptr [ebp-8]
 00483C6A    cmp         eax,dword ptr [ebp-0C]
>00483C6D    je          00483CCC
 00483C6F    mov         eax,dword ptr [ebp-4]
 00483C72    mov         eax,dword ptr [eax+30]
 00483C75    mov         eax,dword ptr [eax+198]
 00483C7B    mov         edx,dword ptr [ebp-0C]
 00483C7E    call        00420094
 00483C83    mov         eax,dword ptr [ebp-4]
 00483C86    mov         eax,dword ptr [eax+30]
 00483C89    mov         eax,dword ptr [eax+198]
 00483C8F    mov         ecx,dword ptr [ebp-4]
 00483C92    mov         edx,dword ptr [ebp-8]
 00483C95    call        00420308
 00483C9A    mov         cl,1
 00483C9C    mov         eax,dword ptr [ebp-4]
 00483C9F    mov         dl,byte ptr [eax+57]
 00483CA2    mov         eax,dword ptr [ebp-4]
 00483CA5    call        00483E7C
 00483CAA    mov         eax,dword ptr [ebp-4]
 00483CAD    call        004A0784
 00483CB2    mov         dword ptr [ebp-14],eax
 00483CB5    mov         eax,dword ptr [ebp-14]
 00483CB8    test        byte ptr [eax+54],4
>00483CBC    je          00483CCC
 00483CBE    mov         dl,1
 00483CC0    mov         eax,dword ptr [ebp-14]
 00483CC3    mov         si,0FFD1
 00483CC7    call        @CallDynaInst
 00483CCC    pop         esi
 00483CCD    mov         esp,ebp
 00483CCF    pop         ebp
 00483CD0    ret
end;*}

//00483CD4
{*procedure TControl.sub_00483CD4(?:?);
begin
 00483CD4    push        ebp
 00483CD5    mov         ebp,esp
 00483CD7    add         esp,0FFFFFFF8
 00483CDA    mov         byte ptr [ebp-5],dl
 00483CDD    mov         dword ptr [ebp-4],eax
 00483CE0    mov         eax,dword ptr [ebp-4]
 00483CE3    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00483CE7    je          00483D13
 00483CE9    cmp         byte ptr [ebp-5],0
>00483CED    je          00483D09
 00483CEF    mov         eax,dword ptr [ebp-4]
 00483CF2    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00483CF5    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00483CFB    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 00483CFE    dec         edx
 00483CFF    mov         eax,dword ptr [ebp-4]
 00483D02    call        00483C00
>00483D07    jmp         00483D13
 00483D09    xor         edx,edx
 00483D0B    mov         eax,dword ptr [ebp-4]
 00483D0E    call        00483C00
 00483D13    pop         ecx
 00483D14    pop         ecx
 00483D15    pop         ebp
 00483D16    ret
end;*}

//00483D18
{*function sub_00483D18(?:?):?;
begin
 00483D18    push        ebp
 00483D19    mov         ebp,esp
 00483D1B    add         esp,0FFFFFFE8
 00483D1E    xor         ecx,ecx
 00483D20    mov         dword ptr [ebp-18],ecx
 00483D23    mov         dword ptr [ebp-8],edx
 00483D26    mov         dword ptr [ebp-4],eax
 00483D29    xor         eax,eax
 00483D2B    push        ebp
 00483D2C    push        483DCF
 00483D31    push        dword ptr fs:[eax]
 00483D34    mov         dword ptr fs:[eax],esp
 00483D37    mov         eax,dword ptr [ebp-4]
 00483D3A    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00483D3E    jne         00483D74
 00483D40    mov         eax,dword ptr [ebp-4]
 00483D43    mov         eax,dword ptr [eax+8];TControl.Name:TComponentName
 00483D46    mov         dword ptr [ebp-14],eax
 00483D49    mov         byte ptr [ebp-10],0B
 00483D4D    lea         eax,[ebp-14]
 00483D50    push        eax
 00483D51    push        0
 00483D53    lea         edx,[ebp-18]
 00483D56    mov         eax,[0056E43C];^SParentRequired:TResStringRec
 00483D5B    call        LoadResString
 00483D60    mov         ecx,dword ptr [ebp-18]
 00483D63    mov         dl,1
 00483D65    mov         eax,[0041D40C];EInvalidOperation
 00483D6A    call        Exception.CreateFmt;EInvalidOperation.Create
 00483D6F    call        @RaiseExcept
 00483D74    mov         edx,dword ptr [ebp-8]
 00483D77    mov         eax,dword ptr [ebp-4]
 00483D7A    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00483D7D    mov         ecx,dword ptr [eax]
 00483D7F    call        dword ptr [ecx+48];TWinControl.sub_0048BDF8
 00483D82    mov         dword ptr [ebp-0C],eax
 00483D85    push        0
 00483D87    mov         eax,dword ptr [ebp-4]
 00483D8A    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 00483D8D    push        eax
 00483D8E    mov         eax,dword ptr [ebp-4]
 00483D91    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 00483D94    push        eax
 00483D95    mov         eax,dword ptr [ebp-0C]
 00483D98    push        eax
 00483D99    call        gdi32.SetViewportOrgEx
 00483D9E    mov         eax,dword ptr [ebp-4]
 00483DA1    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00483DA4    push        eax
 00483DA5    mov         eax,dword ptr [ebp-4]
 00483DA8    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00483DAB    push        eax
 00483DAC    push        0
 00483DAE    push        0
 00483DB0    mov         eax,dword ptr [ebp-0C]
 00483DB3    push        eax
 00483DB4    call        gdi32.IntersectClipRect
 00483DB9    xor         eax,eax
 00483DBB    pop         edx
 00483DBC    pop         ecx
 00483DBD    pop         ecx
 00483DBE    mov         dword ptr fs:[eax],edx
 00483DC1    push        483DD6
 00483DC6    lea         eax,[ebp-18]
 00483DC9    call        @LStrClr
 00483DCE    ret
>00483DCF    jmp         @HandleFinally
>00483DD4    jmp         00483DC6
 00483DD6    mov         eax,dword ptr [ebp-0C]
 00483DD9    mov         esp,ebp
 00483DDB    pop         ebp
 00483DDC    ret
end;*}

//00483DE0
{*function sub_00483DE0(?:?):?;
begin
 00483DE0    push        ebp
 00483DE1    mov         ebp,esp
 00483DE3    add         esp,0FFFFFFD0
 00483DE6    mov         byte ptr [ebp-1],1
 00483DEA    mov         eax,dword ptr [ebp+8]
 00483DED    mov         eax,dword ptr [eax-4]
 00483DF0    mov         eax,dword ptr [eax+30]
 00483DF3    mov         eax,dword ptr [eax+198]
 00483DF9    mov         dword ptr [ebp-8],eax
 00483DFC    mov         eax,dword ptr [ebp+8]
 00483DFF    mov         edx,dword ptr [eax-4]
 00483E02    mov         eax,dword ptr [ebp-8]
 00483E05    call        004202BC
 00483E0A    mov         dword ptr [ebp-0C],eax
 00483E0D    cmp         dword ptr [ebp-0C],0
>00483E11    jle         00483E6F
 00483E13    dec         dword ptr [ebp-0C]
 00483E16    mov         edx,dword ptr [ebp-0C]
 00483E19    mov         eax,dword ptr [ebp-8]
 00483E1C    call        TList.Get
 00483E21    mov         dword ptr [ebp-10],eax
 00483E24    mov         eax,dword ptr [ebp-10]
 00483E27    cmp         byte ptr [eax+57],0
>00483E2B    je          00483E69
 00483E2D    mov         eax,dword ptr [ebp-10]
 00483E30    test        byte ptr [eax+50],40
>00483E34    je          00483E69
 00483E36    lea         edx,[ebp-30]
 00483E39    mov         eax,dword ptr [ebp-10]
 00483E3C    call        00482ECC
 00483E41    lea         eax,[ebp-30]
 00483E44    push        eax
 00483E45    mov         eax,dword ptr [ebp+8]
 00483E48    add         eax,0FFFFFFEC
 00483E4B    push        eax
 00483E4C    lea         eax,[ebp-20]
 00483E4F    push        eax
 00483E50    call        user32.IntersectRect
 00483E55    mov         eax,dword ptr [ebp+8]
 00483E58    add         eax,0FFFFFFEC
 00483E5B    push        eax
 00483E5C    lea         eax,[ebp-20]
 00483E5F    push        eax
 00483E60    call        user32.EqualRect
 00483E65    test        eax,eax
>00483E67    jne         00483E73
 00483E69    cmp         dword ptr [ebp-0C],0
>00483E6D    jg          00483E13
 00483E6F    mov         byte ptr [ebp-1],0
 00483E73    mov         al,byte ptr [ebp-1]
 00483E76    mov         esp,ebp
 00483E78    pop         ebp
 00483E79    ret
end;*}

//00483E7C
{*procedure sub_00483E7C(?:TControl; ?:?; ?:?);
begin
 00483E7C    push        ebp
 00483E7D    mov         ebp,esp
 00483E7F    add         esp,0FFFFFFE8
 00483E82    mov         byte ptr [ebp-16],cl
 00483E85    mov         byte ptr [ebp-15],dl
 00483E88    mov         dword ptr [ebp-4],eax
 00483E8B    cmp         byte ptr [ebp-15],0
>00483E8F    jne         00483EA3
 00483E91    mov         eax,dword ptr [ebp-4]
 00483E94    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>00483E98    je          00483F03
 00483E9A    mov         eax,dword ptr [ebp-4]
 00483E9D    test        byte ptr [eax+51],4;TControl.?f51:byte
>00483EA1    jne         00483F03
 00483EA3    mov         eax,dword ptr [ebp-4]
 00483EA6    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00483EAA    je          00483F03
 00483EAC    mov         eax,dword ptr [ebp-4]
 00483EAF    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00483EB2    call        TWinControl.HandleAllocated
 00483EB7    test        al,al
>00483EB9    je          00483F03
 00483EBB    lea         edx,[ebp-14]
 00483EBE    mov         eax,dword ptr [ebp-4]
 00483EC1    call        00482ECC
 00483EC6    cmp         byte ptr [ebp-16],0
>00483ECA    jne         00483EE3
 00483ECC    mov         eax,dword ptr [ebp-4]
 00483ECF    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00483ED2    test        byte ptr [eax+50],40;TWinControl.FControlStyle:TControlStyle
>00483ED6    jne         00483EE3
 00483ED8    push        ebp
 00483ED9    call        00483DE0
 00483EDE    pop         ecx
 00483EDF    test        al,al
>00483EE1    je          00483EE7
 00483EE3    xor         eax,eax
>00483EE5    jmp         00483EE9
 00483EE7    mov         al,1
 00483EE9    neg         al
 00483EEB    sbb         eax,eax
 00483EED    push        eax
 00483EEE    lea         eax,[ebp-14]
 00483EF1    push        eax
 00483EF2    mov         eax,dword ptr [ebp-4]
 00483EF5    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00483EF8    call        TWinControl.GetHandle
 00483EFD    push        eax
 00483EFE    call        user32.InvalidateRect
 00483F03    mov         esp,ebp
 00483F05    pop         ebp
 00483F06    ret
end;*}

//00483F08
procedure sub_00483F08;
begin
{*
 00483F08    push        ebp
 00483F09    mov         ebp,esp
 00483F0B    push        ecx
 00483F0C    mov         dword ptr [ebp-4],eax
 00483F0F    mov         eax,dword ptr [ebp-4]
 00483F12    test        byte ptr [eax+50],40;TControl.FControlStyle:TControlStyle
 00483F16    setne       cl
 00483F19    mov         eax,dword ptr [ebp-4]
 00483F1C    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 00483F1F    mov         eax,dword ptr [ebp-4]
 00483F22    call        00483E7C
 00483F27    pop         ecx
 00483F28    pop         ebp
 00483F29    ret
*}
end;

//00483F2C
{*procedure TControl.sub_00483F2C(?:?);
begin
 00483F2C    push        ebp
 00483F2D    mov         ebp,esp
 00483F2F    add         esp,0FFFFFFF4
 00483F32    push        esi
 00483F33    mov         dword ptr [ebp-8],edx
 00483F36    mov         dword ptr [ebp-4],eax
 00483F39    mov         eax,dword ptr [ebp-4]
 00483F3C    call        004A0740
 00483F41    mov         dword ptr [ebp-0C],eax
 00483F44    cmp         dword ptr [ebp-0C],0
>00483F48    je          00483F63
 00483F4A    mov         eax,dword ptr [ebp-0C]
 00483F4D    cmp         eax,dword ptr [ebp-4]
>00483F50    je          00483F63
 00483F52    mov         edx,dword ptr [ebp-8]
 00483F55    mov         eax,dword ptr [ebp-0C]
 00483F58    mov         si,0FFC9
 00483F5C    call        @CallDynaInst
>00483F61    jmp         00483F83
 00483F63    mov         eax,dword ptr [ebp-8]
 00483F66    mov         eax,dword ptr [eax+8]
 00483F69    push        eax
 00483F6A    mov         ecx,dword ptr [ebp-8]
 00483F6D    mov         ecx,dword ptr [ecx+4]
 00483F70    mov         edx,0B043
 00483F75    mov         eax,dword ptr [ebp-4]
 00483F78    call        00484FFC
 00483F7D    mov         edx,dword ptr [ebp-8]
 00483F80    mov         dword ptr [edx+0C],eax
 00483F83    pop         esi
 00483F84    mov         esp,ebp
 00483F86    pop         ebp
 00483F87    ret
end;*}

//00483F88
procedure sub_00483F88(?:TWinControl);
begin
{*
 00483F88    push        ebp
 00483F89    mov         ebp,esp
 00483F8B    push        ecx
 00483F8C    mov         dword ptr [ebp-4],eax
 00483F8F    xor         edx,edx
 00483F91    mov         eax,dword ptr [ebp-4]
 00483F94    call        TImage.SetVisible
 00483F99    pop         ecx
 00483F9A    pop         ebp
 00483F9B    ret
*}
end;

//00483F9C
{*procedure sub_00483F9C(?:?);
begin
 00483F9C    push        ebp
 00483F9D    mov         ebp,esp
 00483F9F    push        ecx
 00483FA0    mov         dword ptr [ebp-4],eax
 00483FA3    mov         eax,dword ptr [ebp-4]
 00483FA6    cmp         dword ptr [eax+30],0
>00483FAA    je          00483FBD
 00483FAC    mov         edx,dword ptr [ebp-4]
 00483FAF    mov         eax,dword ptr [ebp-4]
 00483FB2    mov         eax,dword ptr [eax+30]
 00483FB5    mov         ecx,dword ptr [eax]
 00483FB7    call        dword ptr [ecx+0C0]
 00483FBD    mov         eax,dword ptr [ebp-4]
 00483FC0    test        byte ptr [eax+1C],10
>00483FC4    je          00483FCF
 00483FC6    mov         eax,dword ptr [ebp-4]
 00483FC9    test        byte ptr [eax+51],4
>00483FCD    je          00483FD9
 00483FCF    mov         dl,1
 00483FD1    mov         eax,dword ptr [ebp-4]
 00483FD4    call        TImage.SetVisible
 00483FD9    pop         ecx
 00483FDA    pop         ebp
 00483FDB    ret
end;*}

//00483FDC
procedure sub_00483FDC;
begin
{*
 00483FDC    push        ebp
 00483FDD    mov         ebp,esp
 00483FDF    push        ecx
 00483FE0    mov         dword ptr [ebp-4],eax
 00483FE3    mov         eax,dword ptr [ebp-4]
 00483FE6    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00483FEA    je          00483FFA
 00483FEC    mov         eax,dword ptr [ebp-4]
 00483FEF    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00483FF2    mov         edx,dword ptr [eax]
 00483FF4    call        dword ptr [edx+88];TWinControl.sub_0048BF40
 00483FFA    pop         ecx
 00483FFB    pop         ebp
 00483FFC    ret
*}
end;

//00484000
procedure sub_00484000(?:TWinControl);
begin
{*
 00484000    push        ebp
 00484001    mov         ebp,esp
 00484003    push        ecx
 00484004    mov         dword ptr [ebp-4],eax
 00484007    mov         eax,dword ptr [ebp-4]
 0048400A    mov         edx,dword ptr [eax]
 0048400C    call        dword ptr [edx+80];TWinControl.sub_0048BF68
 00484012    pop         ecx
 00484013    pop         ebp
 00484014    ret
*}
end;

//00484018
procedure sub_00484018;
begin
{*
 00484018    push        ebp
 00484019    mov         ebp,esp
 0048401B    add         esp,0FFFFFFF8
 0048401E    mov         dword ptr [ebp-4],eax
 00484021    mov         eax,dword ptr [ebp-4]
 00484024    cmp         byte ptr [eax+57],0;TControl.FVisible:Boolean
>00484028    jne         00484044
 0048402A    mov         eax,dword ptr [ebp-4]
 0048402D    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>00484031    je          00484112
 00484037    mov         eax,dword ptr [ebp-4]
 0048403A    test        byte ptr [eax+51],4;TControl.?f51:byte
>0048403E    jne         00484112
 00484044    mov         eax,dword ptr [ebp-4]
 00484047    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>0048404B    je          00484112
 00484051    mov         eax,dword ptr [ebp-4]
 00484054    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00484057    call        TWinControl.HandleAllocated
 0048405C    test        al,al
>0048405E    je          00484112
 00484064    mov         eax,dword ptr [ebp-4]
 00484067    test        byte ptr [eax+50],40;TControl.FControlStyle:TControlStyle
>0048406B    je          004840FF
 00484071    mov         eax,dword ptr [ebp-4]
 00484074    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00484077    call        TWinControl.GetHandle
 0048407C    push        eax
 0048407D    call        user32.GetDC
 00484082    mov         dword ptr [ebp-8],eax
 00484085    xor         eax,eax
 00484087    push        ebp
 00484088    push        4840F8
 0048408D    push        dword ptr fs:[eax]
 00484090    mov         dword ptr fs:[eax],esp
 00484093    mov         eax,dword ptr [ebp-4]
 00484096    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 00484099    mov         edx,dword ptr [ebp-4]
 0048409C    add         eax,dword ptr [edx+4C];TControl.Height:Integer
 0048409F    push        eax
 004840A0    mov         eax,dword ptr [ebp-4]
 004840A3    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004840A6    mov         edx,dword ptr [ebp-4]
 004840A9    add         eax,dword ptr [edx+48];TControl.Width:Integer
 004840AC    push        eax
 004840AD    mov         eax,dword ptr [ebp-4]
 004840B0    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004840B3    push        eax
 004840B4    mov         eax,dword ptr [ebp-4]
 004840B7    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004840BA    push        eax
 004840BB    mov         eax,dword ptr [ebp-8]
 004840BE    push        eax
 004840BF    call        gdi32.IntersectClipRect
 004840C4    mov         eax,dword ptr [ebp-4]
 004840C7    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004840CA    mov         ecx,dword ptr [ebp-4]
 004840CD    mov         edx,dword ptr [ebp-8]
 004840D0    call        004893D0
 004840D5    xor         eax,eax
 004840D7    pop         edx
 004840D8    pop         ecx
 004840D9    pop         ecx
 004840DA    mov         dword ptr fs:[eax],edx
 004840DD    push        484112
 004840E2    mov         eax,dword ptr [ebp-8]
 004840E5    push        eax
 004840E6    mov         eax,dword ptr [ebp-4]
 004840E9    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004840EC    call        TWinControl.GetHandle
 004840F1    push        eax
 004840F2    call        user32.ReleaseDC
 004840F7    ret
>004840F8    jmp         @HandleFinally
>004840FD    jmp         004840E2
 004840FF    mov         eax,dword ptr [ebp-4]
 00484102    mov         edx,dword ptr [eax]
 00484104    call        dword ptr [edx+7C];TControl.sub_00483F08
 00484107    mov         eax,dword ptr [ebp-4]
 0048410A    mov         edx,dword ptr [eax]
 0048410C    call        dword ptr [edx+88];TControl.sub_00483FDC
 00484112    pop         ecx
 00484113    pop         ecx
 00484114    pop         ebp
 00484115    ret
*}
end;

//00484118
procedure TControl.sub_00484118;
begin
{*
 00484118    push        ebp
 00484119    mov         ebp,esp
 0048411B    add         esp,0FFFFFFF8
 0048411E    mov         dword ptr [ebp-4],eax
 00484121    mov         byte ptr [ebp-5],0
 00484125    mov         al,byte ptr [ebp-5]
 00484128    pop         ecx
 00484129    pop         ecx
 0048412A    pop         ebp
 0048412B    ret
*}
end;

//0048412C
{*function sub_0048412C(?:TControl):?;
begin
 0048412C    push        ebp
 0048412D    mov         ebp,esp
 0048412F    add         esp,0FFFFFFF8
 00484132    mov         dword ptr [ebp-4],eax
 00484135    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048413A    cmp         byte ptr [eax+0D],0
>0048413E    je          00484149
 00484140    mov         eax,dword ptr [ebp-4]
 00484143    cmp         byte ptr [eax+5F],0
>00484147    jne         0048414D
 00484149    xor         eax,eax
>0048414B    jmp         0048414F
 0048414D    mov         al,1
 0048414F    mov         byte ptr [ebp-5],al
 00484152    mov         al,byte ptr [ebp-5]
 00484155    pop         ecx
 00484156    pop         ecx
 00484157    pop         ebp
 00484158    ret
end;*}

//0048415C
procedure TControl.sub_0048415C;
begin
{*
 0048415C    push        ebp
 0048415D    mov         ebp,esp
 0048415F    add         esp,0FFFFFFF8
 00484162    mov         dword ptr [ebp-4],eax
 00484165    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048416A    cmp         byte ptr [eax+0D],0
>0048416E    je          00484179
 00484170    mov         eax,dword ptr [ebp-4]
 00484173    cmp         byte ptr [eax+5F],1;TControl.FBiDiMode:TBiDiMode
>00484177    je          0048417D
 00484179    xor         eax,eax
>0048417B    jmp         0048417F
 0048417D    mov         al,1
 0048417F    mov         byte ptr [ebp-5],al
 00484182    mov         al,byte ptr [ebp-5]
 00484185    pop         ecx
 00484186    pop         ecx
 00484187    pop         ebp
 00484188    ret
*}
end;

//0048418C
{*function sub_0048418C(?:?):?;
begin
 0048418C    push        ebp
 0048418D    mov         ebp,esp
 0048418F    add         esp,0FFFFFFF8
 00484192    mov         dword ptr [ebp-4],eax
 00484195    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048419A    cmp         byte ptr [eax+0D],0
>0048419E    je          004841AB
 004841A0    mov         eax,dword ptr [ebp-4]
 004841A3    mov         al,byte ptr [eax+5F]
 004841A6    dec         eax
 004841A7    sub         al,2
>004841A9    jb          004841AF
 004841AB    xor         eax,eax
>004841AD    jmp         004841B1
 004841AF    mov         al,1
 004841B1    mov         byte ptr [ebp-5],al
 004841B4    mov         al,byte ptr [ebp-5]
 004841B7    pop         ecx
 004841B8    pop         ecx
 004841B9    pop         ebp
 004841BA    ret
end;*}

//004841BC
procedure TControl.sub_004841BC;
begin
{*
 004841BC    push        ebp
 004841BD    mov         ebp,esp
 004841BF    push        ecx
 004841C0    mov         dword ptr [ebp-4],eax
 004841C3    mov         eax,[00571D9C];0x0 Mouse:TMouse
 004841C8    mov         ecx,dword ptr [eax+8];TMouse.FDragThreshold:Integer
 004841CB    mov         eax,[00571D9C];0x0 Mouse:TMouse
 004841D0    mov         dl,byte ptr [eax+4];TMouse.FDragImmediate:Boolean
 004841D3    mov         eax,dword ptr [ebp-4]
 004841D6    call        004841E0
 004841DB    pop         ecx
 004841DC    pop         ebp
 004841DD    ret
*}
end;

//004841E0
{*procedure sub_004841E0(?:TControl; ?:?; ?:Integer);
begin
 004841E0    push        ebp
 004841E1    mov         ebp,esp
 004841E3    add         esp,0FFFFFFE4
 004841E6    mov         dword ptr [ebp-0C],ecx
 004841E9    mov         byte ptr [ebp-5],dl
 004841EC    mov         dword ptr [ebp-4],eax
 004841EF    mov         eax,dword ptr [ebp-4]
 004841F2    mov         edx,dword ptr ds:[49EC6C];TCustomForm
 004841F8    call        @IsClass
 004841FD    test        al,al
>004841FF    je          00484224
 00484201    mov         eax,dword ptr [ebp-4]
 00484204    cmp         byte ptr [eax+9B],1;TControl.FDragKind:TDragKind
>0048420B    je          00484224
 0048420D    mov         ecx,dword ptr ds:[56E434];^SCannotDragForm:TResStringRec
 00484213    mov         dl,1
 00484215    mov         eax,[0041D40C];EInvalidOperation
 0048421A    call        Exception.Create;EInvalidOperation.Create
 0048421F    call        @RaiseExcept
 00484224    mov         eax,dword ptr [ebp-4]
 00484227    call        00485048
 0048422C    cmp         dword ptr ds:[571DB8],0;DragControl:TControl
>00484233    je          0048423E
 00484235    cmp         dword ptr ds:[571DB8],0FFFFFFFF;DragControl:TControl
>0048423C    jne         004842B1
 0048423E    xor         eax,eax
 00484240    mov         [00571DB8],eax;DragControl:TControl
 00484245    mov         eax,dword ptr [ebp-4]
 00484248    test        byte ptr [eax+54],1;TControl.FControlState:TControlState
>0048424C    je          00484289
 0048424E    lea         eax,[ebp-14]
 00484251    push        eax
 00484252    call        user32.GetCursorPos
 00484257    lea         ecx,[ebp-1C]
 0048425A    lea         edx,[ebp-14]
 0048425D    mov         eax,dword ptr [ebp-4]
 00484260    call        TControl.ScreenToClient
 00484265    mov         eax,dword ptr [ebp-1C]
 00484268    mov         dword ptr [ebp-14],eax
 0048426B    mov         eax,dword ptr [ebp-18]
 0048426E    mov         dword ptr [ebp-10],eax
 00484271    lea         eax,[ebp-14]
 00484274    call        00408664
 00484279    push        eax
 0048427A    xor         ecx,ecx
 0048427C    mov         edx,202
 00484281    mov         eax,dword ptr [ebp-4]
 00484284    call        00484FFC
 00484289    cmp         dword ptr [ebp-0C],0
>0048428D    jge         0048429A
 0048428F    mov         eax,[00571D9C];0x0 Mouse:TMouse
 00484294    mov         eax,dword ptr [eax+8];TMouse.FDragThreshold:Integer
 00484297    mov         dword ptr [ebp-0C],eax
 0048429A    cmp         dword ptr ds:[571DB8],0FFFFFFFF;DragControl:TControl
>004842A1    je          004842B1
 004842A3    mov         ecx,dword ptr [ebp-0C]
 004842A6    mov         dl,byte ptr [ebp-5]
 004842A9    mov         eax,dword ptr [ebp-4]
 004842AC    call        004811D0
 004842B1    mov         esp,ebp
 004842B3    pop         ebp
 004842B4    ret
end;*}

//004842B8
procedure TControl.sub_004842B8;
begin
{*
 004842B8    push        ebp
 004842B9    mov         ebp,esp
 004842BB    push        ecx
 004842BC    mov         dword ptr [ebp-4],eax
 004842BF    pop         ecx
 004842C0    pop         ebp
 004842C1    ret
*}
end;

//004842C4
{*function sub_004842C4(?:TWinControl):?;
begin
 004842C4    push        ebp
 004842C5    mov         ebp,esp
 004842C7    add         esp,0FFFFFFF8
 004842CA    mov         dword ptr [ebp-4],eax
 004842CD    mov         eax,[00571DB8];0x0 DragControl:TControl
 004842D2    cmp         eax,dword ptr [ebp-4]
 004842D5    sete        byte ptr [ebp-5]
 004842D9    mov         al,byte ptr [ebp-5]
 004842DC    pop         ecx
 004842DD    pop         ecx
 004842DE    pop         ebp
 004842DF    ret
end;*}

//004842E0
{*procedure TControl.sub_004842E0(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004842E0    push        ebp
 004842E1    mov         ebp,esp
 004842E3    add         esp,0FFFFFFF4
 004842E6    push        ebx
 004842E7    mov         dword ptr [ebp-0C],ecx
 004842EA    mov         dword ptr [ebp-8],edx
 004842ED    mov         dword ptr [ebp-4],eax
 004842F0    mov         eax,dword ptr [ebp+8]
 004842F3    mov         byte ptr [eax],0
 004842F6    mov         eax,dword ptr [ebp-4]
 004842F9    cmp         word ptr [eax+0F2],0;TControl.?fF2:word
>00484301    je          0048432E
 00484303    mov         eax,dword ptr [ebp+8]
 00484306    mov         byte ptr [eax],1
 00484309    mov         eax,dword ptr [ebp-0C]
 0048430C    push        eax
 0048430D    mov         eax,dword ptr [ebp+10]
 00484310    push        eax
 00484311    mov         al,byte ptr [ebp+0C]
 00484314    push        eax
 00484315    mov         eax,dword ptr [ebp+8]
 00484318    push        eax
 00484319    mov         ebx,dword ptr [ebp-4]
 0048431C    mov         ecx,dword ptr [ebp-8]
 0048431F    mov         edx,dword ptr [ebp-4]
 00484322    mov         eax,dword ptr [ebx+0F4];TControl.?fF4:dword
 00484328    call        dword ptr [ebx+0F0];TControl.FOnDragOver
 0048432E    pop         ebx
 0048432F    mov         esp,ebp
 00484331    pop         ebp
 00484332    ret         0C
end;*}

//00484338
{*procedure TControl.sub_00484338(?:?; ?:?; ?:?);
begin
 00484338    push        ebp
 00484339    mov         ebp,esp
 0048433B    add         esp,0FFFFFFF4
 0048433E    push        ebx
 0048433F    mov         dword ptr [ebp-0C],ecx
 00484342    mov         dword ptr [ebp-8],edx
 00484345    mov         dword ptr [ebp-4],eax
 00484348    mov         eax,dword ptr [ebp-4]
 0048434B    cmp         word ptr [eax+0EA],0;TControl.?fEA:word
>00484353    je          00484372
 00484355    mov         eax,dword ptr [ebp-0C]
 00484358    push        eax
 00484359    mov         eax,dword ptr [ebp+8]
 0048435C    push        eax
 0048435D    mov         ebx,dword ptr [ebp-4]
 00484360    mov         ecx,dword ptr [ebp-8]
 00484363    mov         edx,dword ptr [ebp-4]
 00484366    mov         eax,dword ptr [ebx+0EC];TControl.?fEC:dword
 0048436C    call        dword ptr [ebx+0E8];TControl.FOnDragDrop
 00484372    pop         ebx
 00484373    mov         esp,ebp
 00484375    pop         ebp
 00484376    ret         4
end;*}

//0048437C
{*procedure TControl.sub_0048437C(?:?);
begin
 0048437C    push        ebp
 0048437D    mov         ebp,esp
 0048437F    add         esp,0FFFFFFF8
 00484382    push        ebx
 00484383    mov         dword ptr [ebp-8],edx
 00484386    mov         dword ptr [ebp-4],eax
 00484389    mov         eax,dword ptr [ebp-4]
 0048438C    cmp         word ptr [eax+112],0;TControl.?f112:word
>00484394    je          004843AB
 00484396    mov         ecx,dword ptr [ebp-8]
 00484399    mov         ebx,dword ptr [ebp-4]
 0048439C    mov         edx,dword ptr [ebp-4]
 0048439F    mov         eax,dword ptr [ebx+114];TControl.?f114:dword
 004843A5    call        dword ptr [ebx+110];TControl.FOnStartDrag
 004843AB    pop         ebx
 004843AC    pop         ecx
 004843AD    pop         ecx
 004843AE    pop         ebp
 004843AF    ret
end;*}

//004843B0
{*procedure TControl.sub_004843B0(?:?; ?:?; ?:?);
begin
 004843B0    push        ebp
 004843B1    mov         ebp,esp
 004843B3    add         esp,0FFFFFFF4
 004843B6    push        ebx
 004843B7    mov         dword ptr [ebp-0C],ecx
 004843BA    mov         dword ptr [ebp-8],edx
 004843BD    mov         dword ptr [ebp-4],eax
 004843C0    mov         eax,dword ptr [ebp-4]
 004843C3    cmp         word ptr [eax+11A],0;TControl.?f11A:word
>004843CB    je          004843EA
 004843CD    mov         eax,dword ptr [ebp-0C]
 004843D0    push        eax
 004843D1    mov         eax,dword ptr [ebp+8]
 004843D4    push        eax
 004843D5    mov         ebx,dword ptr [ebp-4]
 004843D8    mov         ecx,dword ptr [ebp-8]
 004843DB    mov         edx,dword ptr [ebp-4]
 004843DE    mov         eax,dword ptr [ebx+11C];TControl.?f11C:dword
 004843E4    call        dword ptr [ebx+118];TControl.FOnEndDrag
 004843EA    pop         ebx
 004843EB    mov         esp,ebp
 004843ED    pop         ebp
 004843EE    ret         4
end;*}

//004843F4
{*procedure TControl.sub_004843F4(?:?);
begin
 004843F4    push        ebp
 004843F5    mov         ebp,esp
 004843F7    add         esp,0FFFFFFDC
 004843FA    push        ebx
 004843FB    mov         dword ptr [ebp-8],edx
 004843FE    mov         dword ptr [ebp-4],eax
 00484401    mov         eax,dword ptr [ebp-8]
 00484404    cmp         dword ptr [eax+4],0
>00484408    je          0048441D
 0048440A    mov         eax,dword ptr [ebp-8]
 0048440D    mov         eax,dword ptr [eax+4]
 00484410    cmp         byte ptr [eax+1A7],0
>00484417    jne         004844B4
 0048441D    mov         eax,dword ptr [ebp-8]
 00484420    mov         eax,dword ptr [eax+38]
 00484423    call        0048371C
 00484428    mov         dword ptr [ebp-0C],eax
 0048442B    mov         eax,dword ptr [ebp-8]
 0048442E    mov         eax,dword ptr [eax+38]
 00484431    call        004836E8
 00484436    mov         dword ptr [ebp-10],eax
 00484439    fild        dword ptr [ebp-0C]
 0048443C    mov         eax,dword ptr [ebp-8]
 0048443F    fmul        qword ptr [eax+20]
 00484442    mov         eax,dword ptr [ebp-8]
 00484445    fild        dword ptr [eax+0C]
 00484448    fsubrp      st(1),st
 0048444A    fstp        qword ptr [ebp-18]
 0048444D    wait
 0048444E    fild        dword ptr [ebp-10]
 00484451    mov         eax,dword ptr [ebp-8]
 00484454    fmul        qword ptr [eax+28]
 00484457    mov         eax,dword ptr [ebp-8]
 0048445A    fild        dword ptr [eax+10]
 0048445D    fsubrp      st(1),st
 0048445F    fstp        qword ptr [ebp-20]
 00484462    wait
 00484463    mov         eax,dword ptr [ebp-8]
 00484466    add         eax,44
 00484469    mov         dword ptr [ebp-24],eax
 0048446C    fld         qword ptr [ebp-18]
 0048446F    call        @ROUND
 00484474    mov         edx,dword ptr [ebp-24]
 00484477    mov         dword ptr [edx],eax
 00484479    fld         qword ptr [ebp-20]
 0048447C    call        @ROUND
 00484481    mov         edx,dword ptr [ebp-24]
 00484484    mov         dword ptr [edx+4],eax
 00484487    mov         eax,dword ptr [ebp-24]
 0048448A    mov         eax,dword ptr [eax]
 0048448C    add         eax,dword ptr [ebp-0C]
 0048448F    mov         edx,dword ptr [ebp-24]
 00484492    mov         dword ptr [edx+8],eax
 00484495    mov         eax,dword ptr [ebp-24]
 00484498    mov         eax,dword ptr [eax+4]
 0048449B    add         eax,dword ptr [ebp-10]
 0048449E    mov         edx,dword ptr [ebp-24]
 004844A1    mov         dword ptr [edx+0C],eax
 004844A4    mov         eax,dword ptr [ebp-8]
 004844A7    lea         edx,[eax+44]
 004844AA    mov         eax,dword ptr [ebp-8]
 004844AD    mov         ecx,dword ptr [eax]
 004844AF    call        dword ptr [ecx+2C]
>004844B2    jmp         00484515
 004844B4    mov         eax,dword ptr [ebp-8]
 004844B7    add         eax,44
 004844BA    push        eax
 004844BB    mov         eax,dword ptr [ebp-8]
 004844BE    mov         eax,dword ptr [eax+4]
 004844C1    call        TWinControl.GetHandle
 004844C6    push        eax
 004844C7    call        user32.GetWindowRect
 004844CC    mov         eax,dword ptr [ebp-8]
 004844CF    mov         eax,dword ptr [eax+4]
 004844D2    cmp         byte ptr [eax+1A7],0
>004844D9    je          00484515
 004844DB    mov         eax,dword ptr [ebp-8]
 004844DE    mov         eax,dword ptr [eax+4]
 004844E1    cmp         dword ptr [eax+17C],0
>004844E8    je          00484515
 004844EA    mov         eax,dword ptr [ebp-8]
 004844ED    mov         al,byte ptr [eax+54]
 004844F0    push        eax
 004844F1    mov         eax,dword ptr [ebp-8]
 004844F4    add         eax,44
 004844F7    push        eax
 004844F8    mov         eax,dword ptr [ebp-8]
 004844FB    mov         eax,dword ptr [eax+4]
 004844FE    mov         eax,dword ptr [eax+17C]
 00484504    mov         edx,dword ptr [ebp-8]
 00484507    mov         ecx,dword ptr [edx+58]
 0048450A    mov         edx,dword ptr [ebp-8]
 0048450D    mov         edx,dword ptr [edx+38]
 00484510    mov         ebx,dword ptr [eax]
 00484512    call        dword ptr [ebx+24]
 00484515    pop         ebx
 00484516    mov         esp,ebp
 00484518    pop         ebp
 00484519    ret
end;*}

//0048451C
{*procedure TControl.sub_0048451C(?:?; ?:?);
begin
 0048451C    push        ebp
 0048451D    mov         ebp,esp
 0048451F    add         esp,0FFFFFFF4
 00484522    push        esi
 00484523    mov         dword ptr [ebp-0C],ecx
 00484526    mov         dword ptr [ebp-8],edx
 00484529    mov         dword ptr [ebp-4],eax
 0048452C    mov         edx,dword ptr [ebp-8]
 0048452F    mov         eax,dword ptr [ebp-4]
 00484532    mov         si,0FFD2
 00484536    call        @CallDynaInst;TControl.sub_004843F4
 0048453B    pop         esi
 0048453C    mov         esp,ebp
 0048453E    pop         ebp
 0048453F    ret         4
end;*}

//00484544
{*procedure TControl.sub_00484544(?:?; ?:?; ?:?);
begin
 00484544    push        ebp
 00484545    mov         ebp,esp
 00484547    add         esp,0FFFFFFF4
 0048454A    push        ebx
 0048454B    mov         dword ptr [ebp-0C],ecx
 0048454E    mov         dword ptr [ebp-8],edx
 00484551    mov         dword ptr [ebp-4],eax
 00484554    mov         eax,dword ptr [ebp-4]
 00484557    cmp         word ptr [eax+10A],0;TControl.?f10A:word
>0048455F    je          0048457E
 00484561    mov         eax,dword ptr [ebp-0C]
 00484564    push        eax
 00484565    mov         eax,dword ptr [ebp+8]
 00484568    push        eax
 00484569    mov         ebx,dword ptr [ebp-4]
 0048456C    mov         ecx,dword ptr [ebp-8]
 0048456F    mov         edx,dword ptr [ebp-4]
 00484572    mov         eax,dword ptr [ebx+10C];TControl.?f10C:dword
 00484578    call        dword ptr [ebx+108];TControl.FOnEndDock
 0048457E    pop         ebx
 0048457F    mov         esp,ebp
 00484581    pop         ebp
 00484582    ret         4
end;*}

//00484588
{*procedure TControl.sub_00484588(?:?);
begin
 00484588    push        ebp
 00484589    mov         ebp,esp
 0048458B    add         esp,0FFFFFFF8
 0048458E    push        ebx
 0048458F    mov         dword ptr [ebp-8],edx
 00484592    mov         dword ptr [ebp-4],eax
 00484595    mov         eax,dword ptr [ebp-4]
 00484598    cmp         word ptr [eax+102],0;TControl.?f102:word
>004845A0    je          004845B7
 004845A2    mov         ecx,dword ptr [ebp-8]
 004845A5    mov         ebx,dword ptr [ebp-4]
 004845A8    mov         edx,dword ptr [ebp-4]
 004845AB    mov         eax,dword ptr [ebx+104];TControl.?f104:dword
 004845B1    call        dword ptr [ebx+100];TControl.FOnStartDock
 004845B7    pop         ebx
 004845B8    pop         ecx
 004845B9    pop         ecx
 004845BA    pop         ebp
 004845BB    ret
end;*}

//004845BC
{*procedure TControl.sub_004845BC(?:?; ?:?; ?:?);
begin
 004845BC    push        ebp
 004845BD    mov         ebp,esp
 004845BF    add         esp,0FFFFFFE8
 004845C2    push        ebx
 004845C3    push        esi
 004845C4    push        edi
 004845C5    mov         esi,dword ptr [ebp+8]
 004845C8    lea         edi,[ebp-14]
 004845CB    movs        dword ptr [edi],dword ptr [esi]
 004845CC    movs        dword ptr [edi],dword ptr [esi]
 004845CD    mov         dword ptr [ebp-0C],ecx
 004845D0    mov         byte ptr [ebp-5],dl
 004845D3    mov         dword ptr [ebp-4],eax
 004845D6    mov         byte ptr [ebp-15],0
 004845DA    mov         eax,dword ptr [ebp-4]
 004845DD    cmp         word ptr [eax+13A],0;TControl.?f13A:word
>004845E5    je          00484608
 004845E7    mov         eax,dword ptr [ebp-0C]
 004845EA    push        eax
 004845EB    lea         eax,[ebp-14]
 004845EE    push        eax
 004845EF    lea         eax,[ebp-15]
 004845F2    push        eax
 004845F3    mov         ebx,dword ptr [ebp-4]
 004845F6    mov         cl,byte ptr [ebp-5]
 004845F9    mov         edx,dword ptr [ebp-4]
 004845FC    mov         eax,dword ptr [ebx+13C];TControl.?f13C:dword
 00484602    call        dword ptr [ebx+138];TControl.FOnMouseWheel
 00484608    cmp         byte ptr [ebp-15],0
>0048460C    jne         004846A6
 00484612    mov         eax,dword ptr [ebp-0C]
 00484615    mov         edx,dword ptr [ebp-4]
 00484618    add         dword ptr [edx+0A4],eax;TControl.FWheelAccumulator:Integer
>0048461E    jmp         0048468F
 00484620    mov         eax,dword ptr [ebp-4]
 00484623    cmp         dword ptr [eax+0A4],0;TControl.FWheelAccumulator:Integer
 0048462A    setl        byte ptr [ebp-16]
 0048462E    mov         eax,dword ptr [ebp-4]
 00484631    mov         eax,dword ptr [eax+0A4];TControl.FWheelAccumulator:Integer
 00484637    cdq
 00484638    xor         eax,edx
 0048463A    sub         eax,edx
 0048463C    sub         eax,78
 0048463F    mov         edx,dword ptr [ebp-4]
 00484642    mov         dword ptr [edx+0A4],eax;TControl.FWheelAccumulator:Integer
 00484648    cmp         byte ptr [ebp-16],0
>0048464C    je          0048467A
 0048464E    mov         eax,dword ptr [ebp-4]
 00484651    cmp         dword ptr [eax+0A4],0;TControl.FWheelAccumulator:Integer
>00484658    je          00484663
 0048465A    mov         eax,dword ptr [ebp-4]
 0048465D    neg         dword ptr [eax+0A4];TControl.FWheelAccumulator:Integer
 00484663    lea         ecx,[ebp-14]
 00484666    mov         dl,byte ptr [ebp-5]
 00484669    mov         eax,dword ptr [ebp-4]
 0048466C    mov         si,0FFE1
 00484670    call        @CallDynaInst;TControl.sub_004846B4
 00484675    mov         byte ptr [ebp-15],al
>00484678    jmp         0048468F
 0048467A    lea         ecx,[ebp-14]
 0048467D    mov         dl,byte ptr [ebp-5]
 00484680    mov         eax,dword ptr [ebp-4]
 00484683    mov         si,0FFE0
 00484687    call        @CallDynaInst;TControl.sub_00484704
 0048468C    mov         byte ptr [ebp-15],al
 0048468F    mov         eax,dword ptr [ebp-4]
 00484692    mov         eax,dword ptr [eax+0A4];TControl.FWheelAccumulator:Integer
 00484698    cdq
 00484699    xor         eax,edx
 0048469B    sub         eax,edx
 0048469D    cmp         eax,78
>004846A0    jge         00484620
 004846A6    mov         al,byte ptr [ebp-15]
 004846A9    pop         edi
 004846AA    pop         esi
 004846AB    pop         ebx
 004846AC    mov         esp,ebp
 004846AE    pop         ebp
 004846AF    ret         4
end;*}

//004846B4
{*procedure TControl.sub_004846B4(?:?; ?:?);
begin
 004846B4    push        ebp
 004846B5    mov         ebp,esp
 004846B7    add         esp,0FFFFFFF0
 004846BA    push        ebx
 004846BB    push        esi
 004846BC    push        edi
 004846BD    mov         esi,ecx
 004846BF    lea         edi,[ebp-0D]
 004846C2    movs        dword ptr [edi],dword ptr [esi]
 004846C3    movs        dword ptr [edi],dword ptr [esi]
 004846C4    mov         byte ptr [ebp-5],dl
 004846C7    mov         dword ptr [ebp-4],eax
 004846CA    mov         byte ptr [ebp-0E],0
 004846CE    mov         eax,dword ptr [ebp-4]
 004846D1    cmp         word ptr [eax+142],0;TControl.?f142:word
>004846D9    je          004846F8
 004846DB    lea         eax,[ebp-0D]
 004846DE    push        eax
 004846DF    lea         eax,[ebp-0E]
 004846E2    push        eax
 004846E3    mov         ebx,dword ptr [ebp-4]
 004846E6    mov         cl,byte ptr [ebp-5]
 004846E9    mov         edx,dword ptr [ebp-4]
 004846EC    mov         eax,dword ptr [ebx+144];TControl.?f144:dword
 004846F2    call        dword ptr [ebx+140];TControl.FOnMouseWheelDown
 004846F8    mov         al,byte ptr [ebp-0E]
 004846FB    pop         edi
 004846FC    pop         esi
 004846FD    pop         ebx
 004846FE    mov         esp,ebp
 00484700    pop         ebp
 00484701    ret
end;*}

//00484704
{*procedure TControl.sub_00484704(?:?; ?:?);
begin
 00484704    push        ebp
 00484705    mov         ebp,esp
 00484707    add         esp,0FFFFFFF0
 0048470A    push        ebx
 0048470B    push        esi
 0048470C    push        edi
 0048470D    mov         esi,ecx
 0048470F    lea         edi,[ebp-0D]
 00484712    movs        dword ptr [edi],dword ptr [esi]
 00484713    movs        dword ptr [edi],dword ptr [esi]
 00484714    mov         byte ptr [ebp-5],dl
 00484717    mov         dword ptr [ebp-4],eax
 0048471A    mov         byte ptr [ebp-0E],0
 0048471E    mov         eax,dword ptr [ebp-4]
 00484721    cmp         word ptr [eax+14A],0;TControl.?f14A:word
>00484729    je          00484748
 0048472B    lea         eax,[ebp-0D]
 0048472E    push        eax
 0048472F    lea         eax,[ebp-0E]
 00484732    push        eax
 00484733    mov         ebx,dword ptr [ebp-4]
 00484736    mov         cl,byte ptr [ebp-5]
 00484739    mov         edx,dword ptr [ebp-4]
 0048473C    mov         eax,dword ptr [ebx+14C];TControl.?f14C:dword
 00484742    call        dword ptr [ebx+148];TControl.FOnMouseWheelUp
 00484748    mov         al,byte ptr [ebp-0E]
 0048474B    pop         edi
 0048474C    pop         esi
 0048474D    pop         ebx
 0048474E    mov         esp,ebp
 00484750    pop         ebp
 00484751    ret
end;*}

//00484754
{*procedure TControl.sub_00484754(?:?; ?:?);
begin
 00484754    push        ebp
 00484755    mov         ebp,esp
 00484757    add         esp,0FFFFFFD4
 0048475A    push        esi
 0048475B    push        edi
 0048475C    mov         byte ptr [ebp-9],cl
 0048475F    mov         dword ptr [ebp-8],edx
 00484762    mov         dword ptr [ebp-4],eax
 00484765    mov         eax,dword ptr [ebp-8]
 00484768    mov         edx,dword ptr [eax]
 0048476A    call        dword ptr [edx+38]
 0048476D    mov         dword ptr [ebp-1C],eax
 00484770    cmp         byte ptr [ebp-9],0
>00484774    je          00484785
 00484776    mov         eax,dword ptr [ebp-8]
 00484779    lea         esi,[eax+5C]
 0048477C    lea         edi,[ebp-2C]
 0048477F    movs        dword ptr [edi],dword ptr [esi]
 00484780    movs        dword ptr [edi],dword ptr [esi]
 00484781    movs        dword ptr [edi],dword ptr [esi]
 00484782    movs        dword ptr [edi],dword ptr [esi]
>00484783    jmp         00484792
 00484785    mov         eax,dword ptr [ebp-8]
 00484788    lea         esi,[eax+44]
 0048478B    lea         edi,[ebp-2C]
 0048478E    movs        dword ptr [edi],dword ptr [esi]
 0048478F    movs        dword ptr [edi],dword ptr [esi]
 00484790    movs        dword ptr [edi],dword ptr [esi]
 00484791    movs        dword ptr [edi],dword ptr [esi]
 00484792    call        user32.GetDesktopWindow
 00484797    mov         dword ptr [ebp-10],eax
 0048479A    push        402
 0048479F    push        0
 004847A1    mov         eax,dword ptr [ebp-10]
 004847A4    push        eax
 004847A5    call        user32.GetDCEx
 004847AA    mov         dword ptr [ebp-14],eax
 004847AD    xor         eax,eax
 004847AF    push        ebp
 004847B0    push        484897
 004847B5    push        dword ptr fs:[eax]
 004847B8    mov         dword ptr fs:[eax],esp
 004847BB    mov         eax,dword ptr [ebp-8]
 004847BE    mov         eax,dword ptr [eax+40]
 004847C1    call        TBrush.GetHandle
 004847C6    push        eax
 004847C7    mov         eax,dword ptr [ebp-14]
 004847CA    push        eax
 004847CB    call        gdi32.SelectObject
 004847D0    mov         dword ptr [ebp-18],eax
 004847D3    push        5A0049
 004847D8    mov         eax,dword ptr [ebp-1C]
 004847DB    push        eax
 004847DC    mov         eax,dword ptr [ebp-24]
 004847DF    sub         eax,dword ptr [ebp-2C]
 004847E2    sub         eax,dword ptr [ebp-1C]
 004847E5    push        eax
 004847E6    mov         eax,dword ptr [ebp-28]
 004847E9    push        eax
 004847EA    mov         eax,dword ptr [ebp-2C]
 004847ED    add         eax,dword ptr [ebp-1C]
 004847F0    push        eax
 004847F1    mov         eax,dword ptr [ebp-14]
 004847F4    push        eax
 004847F5    call        gdi32.PatBlt
 004847FA    push        5A0049
 004847FF    mov         eax,dword ptr [ebp-20]
 00484802    sub         eax,dword ptr [ebp-28]
 00484805    sub         eax,dword ptr [ebp-1C]
 00484808    push        eax
 00484809    mov         eax,dword ptr [ebp-1C]
 0048480C    push        eax
 0048480D    mov         eax,dword ptr [ebp-28]
 00484810    add         eax,dword ptr [ebp-1C]
 00484813    push        eax
 00484814    mov         eax,dword ptr [ebp-24]
 00484817    sub         eax,dword ptr [ebp-1C]
 0048481A    push        eax
 0048481B    mov         eax,dword ptr [ebp-14]
 0048481E    push        eax
 0048481F    call        gdi32.PatBlt
 00484824    push        5A0049
 00484829    mov         eax,dword ptr [ebp-1C]
 0048482C    push        eax
 0048482D    mov         eax,dword ptr [ebp-24]
 00484830    sub         eax,dword ptr [ebp-2C]
 00484833    sub         eax,dword ptr [ebp-1C]
 00484836    push        eax
 00484837    mov         eax,dword ptr [ebp-20]
 0048483A    sub         eax,dword ptr [ebp-1C]
 0048483D    push        eax
 0048483E    mov         eax,dword ptr [ebp-2C]
 00484841    push        eax
 00484842    mov         eax,dword ptr [ebp-14]
 00484845    push        eax
 00484846    call        gdi32.PatBlt
 0048484B    push        5A0049
 00484850    mov         eax,dword ptr [ebp-20]
 00484853    sub         eax,dword ptr [ebp-28]
 00484856    sub         eax,dword ptr [ebp-1C]
 00484859    push        eax
 0048485A    mov         eax,dword ptr [ebp-1C]
 0048485D    push        eax
 0048485E    mov         eax,dword ptr [ebp-28]
 00484861    push        eax
 00484862    mov         eax,dword ptr [ebp-2C]
 00484865    push        eax
 00484866    mov         eax,dword ptr [ebp-14]
 00484869    push        eax
 0048486A    call        gdi32.PatBlt
 0048486F    mov         eax,dword ptr [ebp-18]
 00484872    push        eax
 00484873    mov         eax,dword ptr [ebp-14]
 00484876    push        eax
 00484877    call        gdi32.SelectObject
 0048487C    xor         eax,eax
 0048487E    pop         edx
 0048487F    pop         ecx
 00484880    pop         ecx
 00484881    mov         dword ptr fs:[eax],edx
 00484884    push        48489E
 00484889    mov         eax,dword ptr [ebp-14]
 0048488C    push        eax
 0048488D    mov         eax,dword ptr [ebp-10]
 00484890    push        eax
 00484891    call        user32.ReleaseDC
 00484896    ret
>00484897    jmp         @HandleFinally
>0048489C    jmp         00484889
 0048489E    pop         edi
 0048489F    pop         esi
 004848A0    mov         esp,ebp
 004848A2    pop         ebp
 004848A3    ret
end;*}

//004848A4
{*procedure TControl.sub_004848A4(?:?);
begin
 004848A4    push        ebp
 004848A5    mov         ebp,esp
 004848A7    add         esp,0FFFFFFF8
 004848AA    push        esi
 004848AB    mov         dword ptr [ebp-8],edx
 004848AE    mov         dword ptr [ebp-4],eax
 004848B1    xor         ecx,ecx
 004848B3    mov         edx,dword ptr [ebp-8]
 004848B6    mov         eax,dword ptr [ebp-4]
 004848B9    mov         si,0FFE8
 004848BD    call        @CallDynaInst;TControl.sub_00484754
 004848C2    pop         esi
 004848C3    pop         ecx
 004848C4    pop         ecx
 004848C5    pop         ebp
 004848C6    ret
end;*}

//004848C8
{*procedure TControl.sub_004848C8(?:?);
begin
 004848C8    push        ebp
 004848C9    mov         ebp,esp
 004848CB    add         esp,0FFFFFFF8
 004848CE    push        esi
 004848CF    mov         dword ptr [ebp-8],edx
 004848D2    mov         dword ptr [ebp-4],eax
 004848D5    mov         cl,1
 004848D7    mov         edx,dword ptr [ebp-8]
 004848DA    mov         eax,dword ptr [ebp-4]
 004848DD    mov         si,0FFE8
 004848E1    call        @CallDynaInst;TControl.sub_00484754
 004848E6    pop         esi
 004848E7    pop         ecx
 004848E8    pop         ecx
 004848E9    pop         ebp
 004848EA    ret
end;*}

//004848EC
{*procedure sub_004848EC(?:?; ?:?);
begin
 004848EC    push        ebp
 004848ED    mov         ebp,esp
 004848EF    add         esp,0FFFFFFE4
 004848F2    push        esi
 004848F3    mov         dword ptr [ebp-8],edx
 004848F6    mov         dword ptr [ebp-4],eax
 004848F9    mov         eax,dword ptr [ebp-8]
 004848FC    mov         eax,dword ptr [eax+8]
 004848FF    mov         dword ptr [ebp-14],eax
 00484902    mov         eax,dword ptr [ebp-14]
 00484905    mov         eax,dword ptr [eax+8]
 00484908    mov         dword ptr [ebp-0C],eax
 0048490B    mov         eax,dword ptr [ebp-0C]
 0048490E    mov         edx,dword ptr ds:[47D264];TDragDockObject
 00484914    call        @IsClass
 00484919    mov         byte ptr [ebp-0E],al
 0048491C    cmp         byte ptr ds:[571DC0],0;gvar_00571DC0
>00484923    je          0048493F
 00484925    cmp         byte ptr [ebp-0E],0
>00484929    jne         0048493F
 0048492B    mov         eax,dword ptr [ebp-0C]
 0048492E    mov         edx,dword ptr ds:[47D148];TDragControlObject
 00484934    call        @AsClass
 00484939    mov         eax,dword ptr [eax+38];TDragControlObject..................................................
 0048493C    mov         dword ptr [ebp-0C],eax
 0048493F    lea         ecx,[ebp-1C]
 00484942    mov         eax,dword ptr [ebp-14]
 00484945    mov         edx,eax
 00484947    mov         eax,dword ptr [ebp-4]
 0048494A    call        TControl.ScreenToClient
 0048494F    mov         eax,dword ptr [ebp-8]
 00484952    mov         al,byte ptr [eax+4]
 00484955    sub         al,3
>00484957    jb          00484960
>00484959    je          004849BE
>0048495B    jmp         004849F5
 00484960    mov         byte ptr [ebp-0D],1
 00484964    cmp         byte ptr [ebp-0E],0
>00484968    je          00484990
 0048496A    mov         eax,dword ptr [ebp-18]
 0048496D    push        eax
 0048496E    mov         eax,dword ptr [ebp-8]
 00484971    mov         al,byte ptr [eax+4]
 00484974    push        eax
 00484975    lea         eax,[ebp-0D]
 00484978    push        eax
 00484979    mov         ecx,dword ptr [ebp-1C]
 0048497C    mov         edx,dword ptr [ebp-0C]
 0048497F    mov         eax,dword ptr [ebp-14]
 00484982    mov         eax,dword ptr [eax+0C]
 00484985    mov         si,0FFC4
 00484989    call        @CallDynaInst
>0048498E    jmp         004849B1
 00484990    mov         eax,dword ptr [ebp-18]
 00484993    push        eax
 00484994    mov         eax,dword ptr [ebp-8]
 00484997    mov         al,byte ptr [eax+4]
 0048499A    push        eax
 0048499B    lea         eax,[ebp-0D]
 0048499E    push        eax
 0048499F    mov         ecx,dword ptr [ebp-1C]
 004849A2    mov         edx,dword ptr [ebp-0C]
 004849A5    mov         eax,dword ptr [ebp-4]
 004849A8    mov         si,0FFDE
 004849AC    call        @CallDynaInst
 004849B1    xor         eax,eax
 004849B3    mov         al,byte ptr [ebp-0D]
 004849B6    mov         edx,dword ptr [ebp-8]
 004849B9    mov         dword ptr [edx+0C],eax
>004849BC    jmp         004849F5
 004849BE    cmp         byte ptr [ebp-0E],0
>004849C2    je          004849DF
 004849C4    mov         eax,dword ptr [ebp-18]
 004849C7    push        eax
 004849C8    mov         ecx,dword ptr [ebp-1C]
 004849CB    mov         edx,dword ptr [ebp-0C]
 004849CE    mov         eax,dword ptr [ebp-14]
 004849D1    mov         eax,dword ptr [eax+0C]
 004849D4    mov         si,0FFB7
 004849D8    call        @CallDynaInst
>004849DD    jmp         004849F5
 004849DF    mov         eax,dword ptr [ebp-18]
 004849E2    push        eax
 004849E3    mov         ecx,dword ptr [ebp-1C]
 004849E6    mov         edx,dword ptr [ebp-0C]
 004849E9    mov         eax,dword ptr [ebp-4]
 004849EC    mov         si,0FFCB
 004849F0    call        @CallDynaInst
 004849F5    pop         esi
 004849F6    mov         esp,ebp
 004849F8    pop         ebp
 004849F9    ret
end;*}

//004849FC
{*function sub_004849FC(?:?; ?:TWinControl; ?:?; ?:?):?;
begin
 004849FC    push        ebp
 004849FD    mov         ebp,esp
 004849FF    add         esp,0FFFFFFC0
 00484A02    push        ebx
 00484A03    push        esi
 00484A04    push        edi
 00484A05    mov         dword ptr [ebp-0C],ecx
 00484A08    mov         dword ptr [ebp-8],edx
 00484A0B    mov         dword ptr [ebp-4],eax
 00484A0E    cmp         dword ptr [ebp-8],0
>00484A12    je          00484A1E
 00484A14    cmp         dword ptr [ebp-8],0FFFFFFFF
>00484A18    jne         00484B0B
 00484A1E    mov         eax,dword ptr [ebp-4]
 00484A21    cmp         dword ptr [eax+0A0],0
>00484A28    je          00484A86
 00484A2A    mov         eax,dword ptr [ebp-4]
 00484A2D    mov         eax,dword ptr [eax+0A0]
 00484A33    cmp         byte ptr [eax+1A7],0
>00484A3A    je          00484A86
 00484A3C    mov         eax,dword ptr [ebp-4]
 00484A3F    mov         eax,dword ptr [eax+0A0]
 00484A45    cmp         dword ptr [eax+17C],0
>00484A4C    je          00484A86
 00484A4E    lea         ecx,[ebp-28]
 00484A51    mov         eax,dword ptr [ebp-4]
 00484A54    mov         eax,dword ptr [eax+0A0]
 00484A5A    mov         eax,dword ptr [eax+17C]
 00484A60    mov         edx,dword ptr [ebp-4]
 00484A63    mov         ebx,dword ptr [eax]
 00484A65    call        dword ptr [ebx+14]
 00484A68    push        2
 00484A6A    lea         eax,[ebp-28]
 00484A6D    push        eax
 00484A6E    push        0
 00484A70    mov         eax,dword ptr [ebp-4]
 00484A73    mov         eax,dword ptr [eax+0A0]
 00484A79    call        TWinControl.GetHandle
 00484A7E    push        eax
 00484A7F    call        user32.MapWindowPoints
>00484A84    jmp         00484ACC
 00484A86    lea         ecx,[ebp-30]
 00484A89    mov         eax,dword ptr [ebp-4]
 00484A8C    mov         edx,dword ptr [eax+44]
 00484A8F    mov         eax,dword ptr [ebp-4]
 00484A92    mov         eax,dword ptr [eax+40]
 00484A95    call        Point
 00484A9A    mov         eax,dword ptr [ebp-30]
 00484A9D    mov         dword ptr [ebp-28],eax
 00484AA0    mov         eax,dword ptr [ebp-2C]
 00484AA3    mov         dword ptr [ebp-24],eax
 00484AA6    mov         eax,dword ptr [ebp-4]
 00484AA9    cmp         dword ptr [eax+30],0
>00484AAD    je          00484ACC
 00484AAF    lea         ecx,[ebp-30]
 00484AB2    lea         edx,[ebp-28]
 00484AB5    mov         eax,dword ptr [ebp-4]
 00484AB8    mov         eax,dword ptr [eax+30]
 00484ABB    call        TControl.ClientToScreen
 00484AC0    mov         eax,dword ptr [ebp-30]
 00484AC3    mov         dword ptr [ebp-28],eax
 00484AC6    mov         eax,dword ptr [ebp-2C]
 00484AC9    mov         dword ptr [ebp-24],eax
 00484ACC    mov         eax,dword ptr [ebp-4]
 00484ACF    call        004836E8
 00484AD4    push        eax
 00484AD5    lea         eax,[ebp-40]
 00484AD8    push        eax
 00484AD9    mov         eax,dword ptr [ebp-4]
 00484ADC    call        0048371C
 00484AE1    mov         ecx,eax
 00484AE3    mov         edx,dword ptr [ebp-24]
 00484AE6    mov         eax,dword ptr [ebp-28]
 00484AE9    call        0041E740
 00484AEE    lea         esi,[ebp-40]
 00484AF1    lea         edi,[ebp-28]
 00484AF4    movs        dword ptr [edi],dword ptr [esi]
 00484AF5    movs        dword ptr [edi],dword ptr [esi]
 00484AF6    movs        dword ptr [edi],dword ptr [esi]
 00484AF7    movs        dword ptr [edi],dword ptr [esi]
 00484AF8    lea         edx,[ebp-28]
 00484AFB    mov         eax,dword ptr [ebp-4]
 00484AFE    call        00484C34
 00484B03    mov         byte ptr [ebp-0D],al
>00484B06    jmp         00484C25
 00484B0B    mov         eax,dword ptr [ebp-4]
 00484B0E    call        00485048
 00484B13    mov         eax,dword ptr [ebp-4]
 00484B16    cmp         dword ptr [eax+0A0],0
>00484B1D    je          00484B3F
 00484B1F    mov         eax,dword ptr [ebp-4]
 00484B22    mov         eax,dword ptr [eax+0A0]
 00484B28    mov         ecx,dword ptr [ebp-4]
 00484B2B    mov         edx,dword ptr [ebp-8]
 00484B2E    mov         si,0FFBE
 00484B32    call        @CallDynaInst
 00484B37    test        al,al
>00484B39    jne         00484B3F
 00484B3B    xor         eax,eax
>00484B3D    jmp         00484B41
 00484B3F    mov         al,1
 00484B41    mov         byte ptr [ebp-0D],al
 00484B44    cmp         byte ptr [ebp-0D],0
>00484B48    je          00484C25
 00484B4E    mov         ecx,dword ptr [ebp-4]
 00484B51    mov         dl,1
 00484B53    mov         eax,[0047D264];TDragDockObject
 00484B58    call        TDragDockObject.Create;TDragDockObject.Create
 00484B5D    mov         dword ptr [ebp-14],eax
 00484B60    xor         eax,eax
 00484B62    push        ebp
 00484B63    push        484C1E
 00484B68    push        dword ptr fs:[eax]
 00484B6B    mov         dword ptr fs:[eax],esp
 00484B6E    mov         eax,dword ptr [ebp-4]
 00484B71    cmp         dword ptr [eax+0A0],0
>00484B78    je          00484B8D
 00484B7A    mov         eax,dword ptr [ebp-4]
 00484B7D    mov         eax,dword ptr [eax+0A0]
 00484B83    call        TWinControl.GetHandle
 00484B88    mov         dword ptr [ebp-18],eax
>00484B8B    jmp         00484B92
 00484B8D    xor         eax,eax
 00484B8F    mov         dword ptr [ebp-18],eax
 00484B92    lea         edx,[ebp-28]
 00484B95    mov         eax,dword ptr [ebp-4]
 00484B98    call        00482ECC
 00484B9D    cmp         dword ptr [ebp-18],0
>00484BA1    je          00484BB4
 00484BA3    push        2
 00484BA5    lea         eax,[ebp-28]
 00484BA8    push        eax
 00484BA9    push        0
 00484BAB    mov         eax,dword ptr [ebp-18]
 00484BAE    push        eax
 00484BAF    call        user32.MapWindowPoints
 00484BB4    mov         eax,dword ptr [ebp-14]
 00484BB7    mov         edx,dword ptr [ebp-8]
 00484BBA    mov         dword ptr [eax+4],edx;TDragDockObject.FDragTarget:Pointer
 00484BBD    mov         eax,dword ptr [ebp-14]
 00484BC0    mov         dl,byte ptr [ebp+8]
 00484BC3    mov         byte ptr [eax+54],dl;TDragDockObject.FDropAlign:TAlign
 00484BC6    mov         eax,dword ptr [ebp-14]
 00484BC9    mov         edx,dword ptr [ebp-0C]
 00484BCC    mov         dword ptr [eax+58],edx;TDragDockObject.FDropOnControl:TControl
 00484BCF    mov         eax,dword ptr [ebp-14]
 00484BD2    lea         edi,[eax+44];TDragDockObject.FDockRect:TRect
 00484BD5    lea         esi,[ebp-28]
 00484BD8    movs        dword ptr [edi],dword ptr [esi]
 00484BD9    movs        dword ptr [edi],dword ptr [esi]
 00484BDA    movs        dword ptr [edi],dword ptr [esi]
 00484BDB    movs        dword ptr [edi],dword ptr [esi]
 00484BDC    push        1
 00484BDE    lea         eax,[ebp-28]
 00484BE1    push        eax
 00484BE2    mov         eax,dword ptr [ebp-8]
 00484BE5    call        TWinControl.GetHandle
 00484BEA    push        eax
 00484BEB    push        0
 00484BED    call        user32.MapWindowPoints
 00484BF2    mov         eax,dword ptr [ebp-24]
 00484BF5    push        eax
 00484BF6    mov         ecx,dword ptr [ebp-28]
 00484BF9    mov         edx,dword ptr [ebp-14]
 00484BFC    mov         eax,dword ptr [ebp-8]
 00484BFF    mov         si,0FFB7
 00484C03    call        @CallDynaInst
 00484C08    xor         eax,eax
 00484C0A    pop         edx
 00484C0B    pop         ecx
 00484C0C    pop         ecx
 00484C0D    mov         dword ptr fs:[eax],edx
 00484C10    push        484C25
 00484C15    mov         eax,dword ptr [ebp-14]
 00484C18    call        TObject.Free
 00484C1D    ret
>00484C1E    jmp         @HandleFinally
>00484C23    jmp         00484C15
 00484C25    mov         al,byte ptr [ebp-0D]
 00484C28    pop         edi
 00484C29    pop         esi
 00484C2A    pop         ebx
 00484C2B    mov         esp,ebp
 00484C2D    pop         ebp
 00484C2E    ret         4
end;*}

//00484C34
{*function sub_00484C34(?:?; ?:TPoint):?;
begin
 00484C34    push        ebp
 00484C35    mov         ebp,esp
 00484C37    add         esp,0FFFFFFD4
 00484C3A    push        esi
 00484C3B    push        edi
 00484C3C    mov         esi,edx
 00484C3E    lea         edi,[ebp-1C]
 00484C41    movs        dword ptr [edi],dword ptr [esi]
 00484C42    movs        dword ptr [edi],dword ptr [esi]
 00484C43    movs        dword ptr [edi],dword ptr [esi]
 00484C44    movs        dword ptr [edi],dword ptr [esi]
 00484C45    mov         dword ptr [ebp-4],eax
 00484C48    mov         eax,dword ptr [ebp-4]
 00484C4B    cmp         dword ptr [eax+0A0],0
>00484C52    je          00484C73
 00484C54    mov         ecx,dword ptr [ebp-4]
 00484C57    xor         edx,edx
 00484C59    mov         eax,dword ptr [ebp-4]
 00484C5C    mov         eax,dword ptr [eax+0A0]
 00484C62    mov         si,0FFBE
 00484C66    call        @CallDynaInst
 00484C6B    test        al,al
>00484C6D    jne         00484C73
 00484C6F    xor         eax,eax
>00484C71    jmp         00484C75
 00484C73    mov         al,1
 00484C75    mov         byte ptr [ebp-5],al
 00484C78    cmp         byte ptr [ebp-5],0
>00484C7C    je          00484CD8
 00484C7E    lea         edx,[ebp-1C]
 00484C81    mov         eax,dword ptr [ebp-4]
 00484C84    call        0048603C
 00484C89    mov         dword ptr [ebp-0C],eax
 00484C8C    cmp         dword ptr [ebp-0C],0
>00484C90    je          00484CC6
 00484C92    mov         eax,dword ptr [ebp-0C]
 00484C95    call        TControl.GetClientHeight
 00484C9A    push        eax
 00484C9B    lea         eax,[ebp-2C]
 00484C9E    push        eax
 00484C9F    mov         eax,dword ptr [ebp-0C]
 00484CA2    call        TControl.GetClientWidth
 00484CA7    mov         ecx,eax
 00484CA9    xor         edx,edx
 00484CAB    xor         eax,eax
 00484CAD    call        0041E714
 00484CB2    lea         ecx,[ebp-2C]
 00484CB5    mov         edx,dword ptr [ebp-0C]
 00484CB8    mov         eax,dword ptr [ebp-4]
 00484CBB    mov         si,0FFCC
 00484CBF    call        @CallDynaInst
>00484CC4    jmp         00484CD8
 00484CC6    lea         ecx,[ebp-1C]
 00484CC9    mov         edx,dword ptr [ebp-0C]
 00484CCC    mov         eax,dword ptr [ebp-4]
 00484CCF    mov         si,0FFCC
 00484CD3    call        @CallDynaInst
 00484CD8    mov         al,byte ptr [ebp-5]
 00484CDB    pop         edi
 00484CDC    pop         esi
 00484CDD    mov         esp,ebp
 00484CDF    pop         ebp
 00484CE0    ret
end;*}

//00484CE4
{*procedure sub_00484CE4(?:?; ?:?);
begin
 00484CE4    push        ebp
 00484CE5    mov         ebp,esp
 00484CE7    add         esp,0FFFFFFF8
 00484CEA    push        esi
 00484CEB    mov         dword ptr [ebp-8],edx
 00484CEE    mov         dword ptr [ebp-4],eax
 00484CF1    mov         eax,dword ptr [ebp-4]
 00484CF4    mov         si,0FFEE
 00484CF8    call        @CallDynaInst
 00484CFD    pop         esi
 00484CFE    pop         ecx
 00484CFF    pop         ecx
 00484D00    pop         ebp
 00484D01    ret
end;*}

//00484D04
{*function sub_00484D04(?:?; ?:?):?;
begin
 00484D04    push        ebp
 00484D05    mov         ebp,esp
 00484D07    add         esp,0FFFFFFF0
 00484D0A    mov         dword ptr [ebp-10],ecx
 00484D0D    mov         dword ptr [ebp-0C],edx
 00484D10    mov         dword ptr [ebp-4],eax
 00484D13    mov         byte ptr [ebp-5],1
 00484D17    mov         al,byte ptr [ebp-5]
 00484D1A    mov         esp,ebp
 00484D1C    pop         ebp
 00484D1D    ret
end;*}

//00484D20
{*function sub_00484D20(?:?; ?:?):?;
begin
 00484D20    push        ebp
 00484D21    mov         ebp,esp
 00484D23    add         esp,0FFFFFFF0
 00484D26    push        ebx
 00484D27    mov         dword ptr [ebp-0C],ecx
 00484D2A    mov         dword ptr [ebp-8],edx
 00484D2D    mov         dword ptr [ebp-4],eax
 00484D30    mov         byte ptr [ebp-0D],1
 00484D34    mov         eax,dword ptr [ebp-4]
 00484D37    cmp         word ptr [eax+0C2],0;TControl.?fC2:word
>00484D3F    je          00484D5E
 00484D41    mov         eax,dword ptr [ebp-0C]
 00484D44    push        eax
 00484D45    lea         eax,[ebp-0D]
 00484D48    push        eax
 00484D49    mov         ecx,dword ptr [ebp-8]
 00484D4C    mov         ebx,dword ptr [ebp-4]
 00484D4F    mov         edx,dword ptr [ebp-4]
 00484D52    mov         eax,dword ptr [ebx+0C4];TControl.?fC4:dword
 00484D58    call        dword ptr [ebx+0C0];TControl.FOnCanResize
 00484D5E    mov         al,byte ptr [ebp-0D]
 00484D61    pop         ebx
 00484D62    mov         esp,ebp
 00484D64    pop         ebp
 00484D65    ret
end;*}

//00484D68
{*function sub_00484D68(?:TControl; ?:?; ?:?):?;
begin
 00484D68    push        ebp
 00484D69    mov         ebp,esp
 00484D6B    add         esp,0FFFFFFE8
 00484D6E    push        ebx
 00484D6F    mov         dword ptr [ebp-0C],ecx
 00484D72    mov         dword ptr [ebp-8],edx
 00484D75    mov         dword ptr [ebp-4],eax
 00484D78    mov         eax,dword ptr [ebp-4]
 00484D7B    cmp         byte ptr [eax+5B],5
>00484D7F    je          00484DCE
 00484D81    mov         eax,dword ptr [ebp-8]
 00484D84    mov         eax,dword ptr [eax]
 00484D86    mov         dword ptr [ebp-14],eax
 00484D89    mov         eax,dword ptr [ebp-0C]
 00484D8C    mov         eax,dword ptr [eax]
 00484D8E    mov         dword ptr [ebp-18],eax
 00484D91    lea         ecx,[ebp-18]
 00484D94    lea         edx,[ebp-14]
 00484D97    mov         eax,dword ptr [ebp-4]
 00484D9A    mov         ebx,dword ptr [eax]
 00484D9C    call        dword ptr [ebx+34]
 00484D9F    mov         byte ptr [ebp-0D],al
 00484DA2    mov         eax,dword ptr [ebp-4]
 00484DA5    mov         al,byte ptr [eax+5B]
 00484DA8    test        al,al
>00484DAA    je          00484DB2
 00484DAC    add         al,0FD
 00484DAE    sub         al,2
>00484DB0    jae         00484DBA
 00484DB2    mov         eax,dword ptr [ebp-8]
 00484DB5    mov         edx,dword ptr [ebp-14]
 00484DB8    mov         dword ptr [eax],edx
 00484DBA    mov         eax,dword ptr [ebp-4]
 00484DBD    mov         al,byte ptr [eax+5B]
 00484DC0    sub         al,3
>00484DC2    jae         00484DD2
 00484DC4    mov         eax,dword ptr [ebp-0C]
 00484DC7    mov         edx,dword ptr [ebp-18]
 00484DCA    mov         dword ptr [eax],edx
>00484DCC    jmp         00484DD2
 00484DCE    mov         byte ptr [ebp-0D],1
 00484DD2    mov         al,byte ptr [ebp-0D]
 00484DD5    pop         ebx
 00484DD6    mov         esp,ebp
 00484DD8    pop         ebp
 00484DD9    ret
end;*}

//00484DDC
{*function sub_00484DDC(?:TControl; ?:?; ?:?):?;
begin
 00484DDC    push        ebp
 00484DDD    mov         ebp,esp
 00484DDF    add         esp,0FFFFFFF0
 00484DE2    push        ebx
 00484DE3    mov         dword ptr [ebp-0C],ecx
 00484DE6    mov         dword ptr [ebp-8],edx
 00484DE9    mov         dword ptr [ebp-4],eax
 00484DEC    mov         ecx,dword ptr [ebp-0C]
 00484DEF    mov         edx,dword ptr [ebp-8]
 00484DF2    mov         eax,dword ptr [ebp-4]
 00484DF5    mov         ebx,dword ptr [eax]
 00484DF7    call        dword ptr [ebx+30]
 00484DFA    mov         byte ptr [ebp-0D],al
 00484DFD    cmp         byte ptr [ebp-0D],0
>00484E01    je          00484E11
 00484E03    mov         ecx,dword ptr [ebp-0C]
 00484E06    mov         edx,dword ptr [ebp-8]
 00484E09    mov         eax,dword ptr [ebp-4]
 00484E0C    call        00484EF0
 00484E11    mov         al,byte ptr [ebp-0D]
 00484E14    pop         ebx
 00484E15    mov         esp,ebp
 00484E17    pop         ebp
 00484E18    ret
end;*}

//00484E1C
{*procedure sub_00484E1C(?:?; ?:?; ?:?; ?:?);
begin
 00484E1C    push        ebp
 00484E1D    mov         ebp,esp
 00484E1F    add         esp,0FFFFFFF4
 00484E22    push        ebx
 00484E23    mov         dword ptr [ebp-0C],ecx
 00484E26    mov         dword ptr [ebp-8],edx
 00484E29    mov         dword ptr [ebp-4],eax
 00484E2C    mov         eax,dword ptr [ebp-4]
 00484E2F    cmp         word ptr [eax+0CA],0;TControl.?fCA:word
>00484E37    je          00484E5A
 00484E39    mov         eax,dword ptr [ebp-0C]
 00484E3C    push        eax
 00484E3D    mov         eax,dword ptr [ebp+0C]
 00484E40    push        eax
 00484E41    mov         eax,dword ptr [ebp+8]
 00484E44    push        eax
 00484E45    mov         ecx,dword ptr [ebp-8]
 00484E48    mov         ebx,dword ptr [ebp-4]
 00484E4B    mov         edx,dword ptr [ebp-4]
 00484E4E    mov         eax,dword ptr [ebx+0CC];TControl.?fCC:dword
 00484E54    call        dword ptr [ebx+0C8];TControl.FOnConstrainedResize
 00484E5A    pop         ebx
 00484E5B    mov         esp,ebp
 00484E5D    pop         ebp
 00484E5E    ret         8
end;*}

//00484E64
{*procedure sub_00484E64(?:TControl; ?:?);
begin
 00484E64    push        ebp
 00484E65    mov         ebp,esp
 00484E67    add         esp,0FFFFFFF0
 00484E6A    mov         dword ptr [ebp-8],edx
 00484E6D    mov         dword ptr [ebp-4],eax
 00484E70    mov         eax,dword ptr [ebp-8]
 00484E73    push        eax
 00484E74    call        user32.GetCursorPos
 00484E79    lea         ecx,[ebp-10]
 00484E7C    mov         edx,dword ptr [ebp-8]
 00484E7F    mov         eax,dword ptr [ebp-4]
 00484E82    call        TControl.ScreenToClient
 00484E87    mov         eax,dword ptr [ebp-8]
 00484E8A    mov         edx,dword ptr [ebp-10]
 00484E8D    mov         dword ptr [eax],edx
 00484E8F    mov         edx,dword ptr [ebp-0C]
 00484E92    mov         dword ptr [eax+4],edx
 00484E95    mov         esp,ebp
 00484E97    pop         ebp
 00484E98    ret
end;*}

//00484E9C
{*procedure TControl.sub_00484E9C(?:?);
begin
 00484E9C    push        ebp
 00484E9D    mov         ebp,esp
 00484E9F    add         esp,0FFFFFFF4
 00484EA2    mov         dword ptr [ebp-8],edx
 00484EA5    mov         dword ptr [ebp-4],eax
 00484EA8    mov         eax,dword ptr [ebp-4]
 00484EAB    test        byte ptr [eax+50],4;TControl.FControlStyle:TControlStyle
>00484EAF    je          00484EDD
 00484EB1    mov         eax,dword ptr [ebp-8]
 00484EB4    cmp         dword ptr [eax],204
>00484EBA    je          00484EE1
 00484EBC    mov         eax,dword ptr [ebp-8]
 00484EBF    cmp         dword ptr [eax],205
>00484EC5    je          00484EE1
 00484EC7    mov         eax,dword ptr [ebp-8]
 00484ECA    cmp         dword ptr [eax],200
>00484ED0    je          00484EE1
 00484ED2    mov         eax,dword ptr [ebp-8]
 00484ED5    cmp         dword ptr [eax],206
>00484EDB    je          00484EE1
 00484EDD    xor         eax,eax
>00484EDF    jmp         00484EE3
 00484EE1    mov         al,1
 00484EE3    mov         byte ptr [ebp-9],al
 00484EE6    mov         al,byte ptr [ebp-9]
 00484EE9    mov         esp,ebp
 00484EEB    pop         ebp
 00484EEC    ret
end;*}

//00484EF0
{*procedure sub_00484EF0(?:?; ?:?; ?:?);
begin
 00484EF0    push        ebp
 00484EF1    mov         ebp,esp
 00484EF3    add         esp,0FFFFFFE4
 00484EF6    push        ebx
 00484EF7    mov         dword ptr [ebp-0C],ecx
 00484EFA    mov         dword ptr [ebp-8],edx
 00484EFD    mov         dword ptr [ebp-4],eax
 00484F00    mov         eax,dword ptr [ebp-4]
 00484F03    mov         eax,dword ptr [eax+74]
 00484F06    cmp         dword ptr [eax+14],0
>00484F0A    jbe         00484F1A
 00484F0C    mov         eax,dword ptr [ebp-4]
 00484F0F    mov         eax,dword ptr [eax+74]
 00484F12    mov         eax,dword ptr [eax+14]
 00484F15    mov         dword ptr [ebp-10],eax
>00484F18    jmp         00484F1F
 00484F1A    xor         eax,eax
 00484F1C    mov         dword ptr [ebp-10],eax
 00484F1F    mov         eax,dword ptr [ebp-4]
 00484F22    mov         eax,dword ptr [eax+74]
 00484F25    cmp         dword ptr [eax+10],0
>00484F29    jbe         00484F39
 00484F2B    mov         eax,dword ptr [ebp-4]
 00484F2E    mov         eax,dword ptr [eax+74]
 00484F31    mov         eax,dword ptr [eax+10]
 00484F34    mov         dword ptr [ebp-14],eax
>00484F37    jmp         00484F3E
 00484F39    xor         eax,eax
 00484F3B    mov         dword ptr [ebp-14],eax
 00484F3E    mov         eax,dword ptr [ebp-4]
 00484F41    mov         eax,dword ptr [eax+74]
 00484F44    cmp         dword ptr [eax+0C],0
>00484F48    jbe         00484F58
 00484F4A    mov         eax,dword ptr [ebp-4]
 00484F4D    mov         eax,dword ptr [eax+74]
 00484F50    mov         eax,dword ptr [eax+0C]
 00484F53    mov         dword ptr [ebp-18],eax
>00484F56    jmp         00484F5D
 00484F58    xor         eax,eax
 00484F5A    mov         dword ptr [ebp-18],eax
 00484F5D    mov         eax,dword ptr [ebp-4]
 00484F60    mov         eax,dword ptr [eax+74]
 00484F63    cmp         dword ptr [eax+8],0
>00484F67    jbe         00484F77
 00484F69    mov         eax,dword ptr [ebp-4]
 00484F6C    mov         eax,dword ptr [eax+74]
 00484F6F    mov         eax,dword ptr [eax+8]
 00484F72    mov         dword ptr [ebp-1C],eax
>00484F75    jmp         00484F7C
 00484F77    xor         eax,eax
 00484F79    mov         dword ptr [ebp-1C],eax
 00484F7C    lea         eax,[ebp-18]
 00484F7F    push        eax
 00484F80    lea         eax,[ebp-1C]
 00484F83    push        eax
 00484F84    lea         ecx,[ebp-14]
 00484F87    lea         edx,[ebp-10]
 00484F8A    mov         eax,dword ptr [ebp-4]
 00484F8D    mov         ebx,dword ptr [eax]
 00484F8F    call        dword ptr [ebx+38]
 00484F92    cmp         dword ptr [ebp-18],0
>00484F96    jle         00484FAC
 00484F98    mov         eax,dword ptr [ebp-8]
 00484F9B    mov         eax,dword ptr [eax]
 00484F9D    cmp         eax,dword ptr [ebp-18]
>00484FA0    jle         00484FAC
 00484FA2    mov         eax,dword ptr [ebp-8]
 00484FA5    mov         edx,dword ptr [ebp-18]
 00484FA8    mov         dword ptr [eax],edx
>00484FAA    jmp         00484FC4
 00484FAC    cmp         dword ptr [ebp-10],0
>00484FB0    jle         00484FC4
 00484FB2    mov         eax,dword ptr [ebp-8]
 00484FB5    mov         eax,dword ptr [eax]
 00484FB7    cmp         eax,dword ptr [ebp-10]
>00484FBA    jge         00484FC4
 00484FBC    mov         eax,dword ptr [ebp-8]
 00484FBF    mov         edx,dword ptr [ebp-10]
 00484FC2    mov         dword ptr [eax],edx
 00484FC4    cmp         dword ptr [ebp-1C],0
>00484FC8    jle         00484FDE
 00484FCA    mov         eax,dword ptr [ebp-0C]
 00484FCD    mov         eax,dword ptr [eax]
 00484FCF    cmp         eax,dword ptr [ebp-1C]
>00484FD2    jle         00484FDE
 00484FD4    mov         eax,dword ptr [ebp-0C]
 00484FD7    mov         edx,dword ptr [ebp-1C]
 00484FDA    mov         dword ptr [eax],edx
>00484FDC    jmp         00484FF6
 00484FDE    cmp         dword ptr [ebp-14],0
>00484FE2    jle         00484FF6
 00484FE4    mov         eax,dword ptr [ebp-0C]
 00484FE7    mov         eax,dword ptr [eax]
 00484FE9    cmp         eax,dword ptr [ebp-14]
>00484FEC    jge         00484FF6
 00484FEE    mov         eax,dword ptr [ebp-0C]
 00484FF1    mov         edx,dword ptr [ebp-14]
 00484FF4    mov         dword ptr [eax],edx
 00484FF6    pop         ebx
 00484FF7    mov         esp,ebp
 00484FF9    pop         ebp
 00484FFA    ret
end;*}

//00484FFC
{*function sub_00484FFC(?:TPersistent; ?:?; ?:HWND; ?:?):?;
begin
 00484FFC    push        ebp
 00484FFD    mov         ebp,esp
 00484FFF    add         esp,0FFFFFFE0
 00485002    push        ebx
 00485003    mov         dword ptr [ebp-0C],ecx
 00485006    mov         dword ptr [ebp-8],edx
 00485009    mov         dword ptr [ebp-4],eax
 0048500C    mov         eax,dword ptr [ebp-8]
 0048500F    mov         dword ptr [ebp-20],eax
 00485012    mov         eax,dword ptr [ebp-0C]
 00485015    mov         dword ptr [ebp-1C],eax
 00485018    mov         eax,dword ptr [ebp+8]
 0048501B    mov         dword ptr [ebp-18],eax
 0048501E    xor         eax,eax
 00485020    mov         dword ptr [ebp-14],eax
 00485023    cmp         dword ptr [ebp-4],0
>00485027    je          00485035
 00485029    lea         edx,[ebp-20]
 0048502C    mov         ebx,dword ptr [ebp-4]
 0048502F    mov         eax,dword ptr [ebx+3C];TControl.?f3C:TControl
 00485032    call        dword ptr [ebx+38];TControl.FWindowProc
 00485035    mov         eax,dword ptr [ebp-14]
 00485038    mov         dword ptr [ebp-10],eax
 0048503B    mov         eax,dword ptr [ebp-10]
 0048503E    pop         ebx
 0048503F    mov         esp,ebp
 00485041    pop         ebp
 00485042    ret         4
end;*}

//00485048
procedure sub_00485048(?:TControl);
begin
{*
 00485048    push        ebp
 00485049    mov         ebp,esp
 0048504B    push        ecx
 0048504C    mov         dword ptr [ebp-4],eax
 0048504F    mov         eax,dword ptr [ebp-4]
 00485052    mov         edx,dword ptr [eax]
 00485054    call        dword ptr [edx+54];TControl.sub_004866DC
 00485057    test        al,al
>00485059    je          0048507C
 0048505B    mov         eax,dword ptr [ebp-4]
 0048505E    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00485061    mov         edx,dword ptr [ebp-4]
 00485064    mov         dword ptr [edx+0AC],eax;TControl.FUndockHeight:Integer
 0048506A    mov         eax,dword ptr [ebp-4]
 0048506D    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00485070    mov         edx,dword ptr [ebp-4]
 00485073    mov         dword ptr [edx+0A8],eax;TControl.FUndockWidth:Integer
 00485079    pop         ecx
 0048507A    pop         ebp
 0048507B    ret
 0048507C    mov         eax,dword ptr [ebp-4]
 0048507F    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>00485086    je          004850E3
 00485088    mov         eax,dword ptr [ebp-4]
 0048508B    cmp         byte ptr [eax+9C],2;TControl.FDockOrientation:TDockOrientation
>00485092    je          004850A5
 00485094    mov         eax,dword ptr [ebp-4]
 00485097    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 0048509D    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004850A0    dec         eax
 004850A1    sub         al,2
>004850A3    jae         004850B6
 004850A5    mov         eax,dword ptr [ebp-4]
 004850A8    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004850AB    mov         edx,dword ptr [ebp-4]
 004850AE    mov         dword ptr [edx+0B4],eax;TControl.FTBDockHeight:Integer
>004850B4    jmp         004850E3
 004850B6    mov         eax,dword ptr [ebp-4]
 004850B9    cmp         byte ptr [eax+9C],1;TControl.FDockOrientation:TDockOrientation
>004850C0    je          004850D4
 004850C2    mov         eax,dword ptr [ebp-4]
 004850C5    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004850CB    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004850CE    add         al,0FD
 004850D0    sub         al,2
>004850D2    jae         004850E3
 004850D4    mov         eax,dword ptr [ebp-4]
 004850D7    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004850DA    mov         edx,dword ptr [ebp-4]
 004850DD    mov         dword ptr [edx+0B0],eax;TControl.FLRDockWidth:Integer
 004850E3    pop         ecx
 004850E4    pop         ebp
 004850E5    ret
*}
end;

//004850E8
{*procedure sub_004850E8(?:TControl; ?:?);
begin
 004850E8    push        ebp
 004850E9    mov         ebp,esp
 004850EB    add         esp,0FFFFFFF8
 004850EE    mov         dword ptr [ebp-8],edx
 004850F1    mov         dword ptr [ebp-4],eax
 004850F4    mov         eax,dword ptr [ebp-8]
 004850F7    mov         eax,dword ptr [eax]
 004850F9    mov         edx,dword ptr [ebp-4]
 004850FC    mov         dword ptr [edx+40],eax;TControl.Left:Integer
 004850FF    mov         eax,dword ptr [ebp-8]
 00485102    mov         eax,dword ptr [eax+4]
 00485105    mov         edx,dword ptr [ebp-4]
 00485108    mov         dword ptr [edx+44],eax;TControl.Top:Integer
 0048510B    mov         eax,dword ptr [ebp-8]
 0048510E    mov         eax,dword ptr [eax+8]
 00485111    mov         edx,dword ptr [ebp-8]
 00485114    sub         eax,dword ptr [edx]
 00485116    mov         edx,dword ptr [ebp-4]
 00485119    mov         dword ptr [edx+48],eax;TControl.Width:Integer
 0048511C    mov         eax,dword ptr [ebp-8]
 0048511F    mov         eax,dword ptr [eax+0C]
 00485122    mov         edx,dword ptr [ebp-8]
 00485125    sub         eax,dword ptr [edx+4]
 00485128    mov         edx,dword ptr [ebp-4]
 0048512B    mov         dword ptr [edx+4C],eax;TControl.Height:Integer
 0048512E    mov         eax,dword ptr [ebp-4]
 00485131    call        00482A00
 00485136    pop         ecx
 00485137    pop         ecx
 00485138    pop         ebp
 00485139    ret
end;*}

//0048513C
procedure TControl.sub_0048513C;
begin
{*
 0048513C    push        ebp
 0048513D    mov         ebp,esp
 0048513F    push        ecx
 00485140    mov         dword ptr [ebp-4],eax
 00485143    pop         ecx
 00485144    pop         ebp
 00485145    ret
*}
end;

//00485148
{*procedure sub_00485148(?:?);
begin
 00485148    push        ebp
 00485149    mov         ebp,esp
 0048514B    add         esp,0FFFFFEE4
 00485151    push        ebx
 00485152    push        esi
 00485153    mov         dword ptr [ebp-18],edx
 00485156    mov         dword ptr [ebp-14],eax
 00485159    mov         eax,dword ptr [ebp-14]
 0048515C    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>00485160    je          0048519B
 00485162    mov         eax,dword ptr [ebp-14]
 00485165    call        004A0740
 0048516A    mov         dword ptr [ebp-1C],eax
 0048516D    cmp         dword ptr [ebp-1C],0
>00485171    je          0048519B
 00485173    mov         eax,dword ptr [ebp-1C]
 00485176    cmp         dword ptr [eax+250],0
>0048517D    je          0048519B
 0048517F    mov         ecx,dword ptr [ebp-18]
 00485182    mov         eax,dword ptr [ebp-1C]
 00485185    mov         eax,dword ptr [eax+250]
 0048518B    mov         edx,dword ptr [ebp-14]
 0048518E    mov         ebx,dword ptr [eax]
 00485190    call        dword ptr [ebx+24]
 00485193    test        al,al
>00485195    jne         0048532A
 0048519B    mov         eax,dword ptr [ebp-18]
 0048519E    cmp         dword ptr [eax],100
>004851A4    jb          004851E4
 004851A6    mov         eax,dword ptr [ebp-18]
 004851A9    cmp         dword ptr [eax],108
>004851AF    ja          004851E4
 004851B1    mov         eax,dword ptr [ebp-14]
 004851B4    call        004A0740
 004851B9    mov         dword ptr [ebp-1C],eax
 004851BC    cmp         dword ptr [ebp-1C],0
>004851C0    je          0048531F
 004851C6    mov         ecx,dword ptr [ebp-18]
 004851C9    mov         edx,dword ptr [ebp-14]
 004851CC    mov         eax,dword ptr [ebp-1C]
 004851CF    mov         ebx,dword ptr [eax]
 004851D1    call        dword ptr [ebx+0F0]
 004851D7    test        al,al
>004851D9    jne         0048532A
>004851DF    jmp         0048531F
 004851E4    mov         eax,dword ptr [ebp-18]
 004851E7    cmp         dword ptr [eax],200
>004851ED    jb          004852FA
 004851F3    mov         eax,dword ptr [ebp-18]
 004851F6    cmp         dword ptr [eax],20A
>004851FC    ja          004852FA
 00485202    mov         eax,dword ptr [ebp-14]
 00485205    test        byte ptr [eax+50],80;TControl.FControlStyle:TControlStyle
>00485209    jne         00485227
 0048520B    mov         eax,dword ptr [ebp-18]
 0048520E    mov         eax,dword ptr [eax]
 00485210    sub         eax,203
>00485215    je          00485221
 00485217    sub         eax,3
>0048521A    je          00485221
 0048521C    sub         eax,3
>0048521F    jne         00485227
 00485221    mov         eax,dword ptr [ebp-18]
 00485224    sub         dword ptr [eax],2
 00485227    mov         eax,dword ptr [ebp-18]
 0048522A    mov         eax,dword ptr [eax]
 0048522C    sub         eax,200
>00485231    je          0048523E
 00485233    dec         eax
>00485234    je          00485255
 00485236    dec         eax
>00485237    je          0048527C
 00485239    dec         eax
>0048523A    je          00485255
>0048523C    jmp         00485289
 0048523E    mov         ecx,dword ptr [ebp-18]
 00485241    mov         eax,[0056E3C0];^Application:TApplication
 00485246    mov         eax,dword ptr [eax]
 00485248    mov         edx,dword ptr [ebp-14]
 0048524B    call        004AC4DC
>00485250    jmp         0048531F
 00485255    mov         eax,dword ptr [ebp-14]
 00485258    cmp         byte ptr [eax+5D],1;TControl.FDragMode:TDragMode
>0048525C    jne         0048526F
 0048525E    mov         eax,dword ptr [ebp-14]
 00485261    mov         si,0FFED
 00485265    call        @CallDynaInst;TControl.sub_004841BC
>0048526A    jmp         0048532A
 0048526F    mov         eax,dword ptr [ebp-14]
 00485272    or          word ptr [eax+54],1;TControl.FControlState:TControlState
>00485277    jmp         0048531F
 0048527C    mov         eax,dword ptr [ebp-14]
 0048527F    and         word ptr [eax+54],0FFFFFFFE;TControl.FControlState:TControlState
>00485284    jmp         0048531F
 00485289    mov         eax,[00571D9C];0x0 Mouse:TMouse
 0048528E    cmp         byte ptr [eax+20],0;TMouse.FWheelPresent:Boolean
>00485292    je          0048531F
 00485298    mov         eax,[00571D9C];0x0 Mouse:TMouse
 0048529D    cmp         dword ptr [eax+1C],0;TMouse.FWheelMessage:UINT
>004852A1    je          0048531F
 004852A3    mov         eax,dword ptr [ebp-18]
 004852A6    mov         eax,dword ptr [eax]
 004852A8    mov         edx,dword ptr ds:[571D9C];0x0 Mouse:TMouse
 004852AE    cmp         eax,dword ptr [edx+1C];TMouse.FWheelMessage:UINT
>004852B1    jne         0048531F
 004852B3    lea         eax,[ebp-11C]
 004852B9    push        eax
 004852BA    call        user32.GetKeyboardState
 004852BF    mov         eax,dword ptr [ebp-18]
 004852C2    mov         eax,dword ptr [eax]
 004852C4    mov         dword ptr [ebp-10],eax
 004852C7    lea         eax,[ebp-11C]
 004852CD    call        004A0630
 004852D2    mov         byte ptr [ebp-0C],al
 004852D5    mov         eax,dword ptr [ebp-18]
 004852D8    mov         ax,word ptr [eax+4]
 004852DC    mov         word ptr [ebp-0A],ax
 004852E0    mov         eax,dword ptr [ebp-18]
 004852E3    mov         eax,dword ptr [eax+8]
 004852E6    mov         dword ptr [ebp-8],eax
 004852E9    lea         edx,[ebp-10]
 004852EC    mov         eax,dword ptr [ebp-14]
 004852EF    mov         si,0FFC9
 004852F3    call        @CallDynaInst;TControl.sub_00483F2C
>004852F8    jmp         0048532A
 004852FA    mov         eax,dword ptr [ebp-18]
 004852FD    cmp         dword ptr [eax],0B00B
>00485303    jne         0048531F
 00485305    mov         eax,dword ptr [ebp-18]
 00485308    mov         eax,dword ptr [eax+8]
 0048530B    push        eax
 0048530C    mov         ecx,dword ptr [ebp-18]
 0048530F    mov         ecx,dword ptr [ecx+4]
 00485312    mov         edx,dword ptr [ebp-18]
 00485315    mov         edx,dword ptr [edx]
 00485317    mov         eax,dword ptr [ebp-14]
 0048531A    call        004831A0
 0048531F    mov         edx,dword ptr [ebp-18]
 00485322    mov         eax,dword ptr [ebp-14]
 00485325    mov         ecx,dword ptr [eax]
 00485327    call        dword ptr [ecx-14];TObject.Dispatch
 0048532A    pop         esi
 0048532B    pop         ebx
 0048532C    mov         esp,ebp
 0048532E    pop         ebp
 0048532F    ret
end;*}

//00485330
procedure TControl.DefaultHandler(var Message:void );
begin
{*
 00485330    push        ebp
 00485331    mov         ebp,esp
 00485333    add         esp,0FFFFFFF4
 00485336    mov         dword ptr [ebp-8],edx
 00485339    mov         dword ptr [ebp-4],eax
 0048533C    mov         eax,dword ptr [ebp-8]
 0048533F    mov         eax,dword ptr [eax]
 00485341    sub         eax,0C
>00485344    je          004853B5
 00485346    dec         eax
>00485347    je          00485351
 00485349    dec         eax
>0048534A    je          0048538F
>0048534C    jmp         004853F1
 00485351    mov         eax,dword ptr [ebp-4]
 00485354    cmp         dword ptr [eax+64],0
>00485358    je          00485365
 0048535A    mov         eax,dword ptr [ebp-4]
 0048535D    mov         eax,dword ptr [eax+64]
 00485360    mov         dword ptr [ebp-0C],eax
>00485363    jmp         0048536D
 00485365    mov         eax,4853F8
 0048536A    mov         dword ptr [ebp-0C],eax
 0048536D    mov         ecx,dword ptr [ebp-8]
 00485370    mov         ecx,dword ptr [ecx+4]
 00485373    dec         ecx
 00485374    mov         eax,dword ptr [ebp-8]
 00485377    mov         eax,dword ptr [eax+8]
 0048537A    mov         edx,dword ptr [ebp-0C]
 0048537D    call        StrLCopy
 00485382    call        StrLen
 00485387    mov         edx,dword ptr [ebp-8]
 0048538A    mov         dword ptr [edx+0C],eax;{StrNew}
>0048538D    jmp         004853F1
 0048538F    mov         eax,dword ptr [ebp-4]
 00485392    cmp         dword ptr [eax+64],0
>00485396    jne         004853A2
 00485398    mov         eax,dword ptr [ebp-8]
 0048539B    xor         edx,edx
 0048539D    mov         dword ptr [eax+0C],edx
>004853A0    jmp         004853F1
 004853A2    mov         eax,dword ptr [ebp-4]
 004853A5    mov         eax,dword ptr [eax+64]
 004853A8    call        StrLen
 004853AD    mov         edx,dword ptr [ebp-8]
 004853B0    mov         dword ptr [edx+0C],eax
>004853B3    jmp         004853F1
 004853B5    mov         eax,dword ptr [ebp-8]
 004853B8    mov         eax,dword ptr [eax+8]
 004853BB    call        0040D0EC
 004853C0    mov         dword ptr [ebp-0C],eax
 004853C3    mov         eax,dword ptr [ebp-4]
 004853C6    mov         eax,dword ptr [eax+64]
 004853C9    call        0040D12C
 004853CE    mov         eax,dword ptr [ebp-0C]
 004853D1    mov         edx,dword ptr [ebp-4]
 004853D4    mov         dword ptr [edx+64],eax
 004853D7    mov         eax,dword ptr [ebp-8]
 004853DA    mov         eax,dword ptr [eax+8]
 004853DD    push        eax
 004853DE    mov         ecx,dword ptr [ebp-8]
 004853E1    mov         ecx,dword ptr [ecx+4]
 004853E4    mov         edx,dword ptr [ebp-8]
 004853E7    mov         edx,dword ptr [edx]
 004853E9    mov         eax,dword ptr [ebp-4]
 004853EC    call        004831A0
 004853F1    mov         esp,ebp
 004853F3    pop         ebp
 004853F4    ret
*}
end;

//004853FC
procedure TControl.ReadIsControl(Reader:TReader);
begin
{*
 004853FC    push        ebp
 004853FD    mov         ebp,esp
 004853FF    add         esp,0FFFFFFF8
 00485402    mov         dword ptr [ebp-8],edx
 00485405    mov         dword ptr [ebp-4],eax
 00485408    mov         eax,dword ptr [ebp-8]
 0048540B    call        004252B0
 00485410    mov         edx,dword ptr [ebp-4]
 00485413    mov         byte ptr [edx+5E],al
 00485416    pop         ecx
 00485417    pop         ecx
 00485418    pop         ebp
 00485419    ret
*}
end;

//0048541C
procedure TControl.WriteIsControl(Writer:TWriter);
begin
{*
 0048541C    push        ebp
 0048541D    mov         ebp,esp
 0048541F    add         esp,0FFFFFFF8
 00485422    mov         dword ptr [ebp-8],edx
 00485425    mov         dword ptr [ebp-4],eax
 00485428    mov         eax,dword ptr [ebp-4]
 0048542B    mov         dl,byte ptr [eax+5E]
 0048542E    mov         eax,dword ptr [ebp-8]
 00485431    call        00427A68
 00485436    pop         ecx
 00485437    pop         ecx
 00485438    pop         ebp
 00485439    ret
*}
end;

//0048543C
function DoWriteIsControl:Boolean;
begin
{*
 0048543C    push        ebp
 0048543D    mov         ebp,esp
 0048543F    push        ecx
 00485440    mov         eax,dword ptr [ebp+8]
 00485443    mov         eax,dword ptr [eax-4]
 00485446    cmp         dword ptr [eax+20],0
>0048544A    je          00485467
 0048544C    mov         eax,dword ptr [ebp+8]
 0048544F    mov         eax,dword ptr [eax-4]
 00485452    mov         eax,dword ptr [eax+20]
 00485455    mov         al,byte ptr [eax+5E]
 00485458    mov         edx,dword ptr [ebp+8]
 0048545B    mov         edx,dword ptr [edx-8]
 0048545E    cmp         al,byte ptr [edx+5E]
 00485461    setne       byte ptr [ebp-1]
>00485465    jmp         00485473
 00485467    mov         eax,dword ptr [ebp+8]
 0048546A    mov         eax,dword ptr [eax-8]
 0048546D    mov         al,byte ptr [eax+5E]
 00485470    mov         byte ptr [ebp-1],al
 00485473    mov         al,byte ptr [ebp-1]
 00485476    pop         ecx
 00485477    pop         ebp
 00485478    ret
*}
end;

//0048547C
procedure TControl.DefineProperties(Filer:TFiler);
begin
{*
 0048547C    push        ebp
 0048547D    mov         ebp,esp
 0048547F    add         esp,0FFFFFFF8
 00485482    push        ebx
 00485483    mov         dword ptr [ebp-4],edx
 00485486    mov         dword ptr [ebp-8],eax
 00485489    mov         eax,dword ptr [ebp-8]
 0048548C    push        eax
 0048548D    push        4853FC;TControl.ReadIsControl
 00485492    mov         eax,dword ptr [ebp-8]
 00485495    push        eax
 00485496    push        48541C;TControl.WriteIsControl
 0048549B    push        ebp
 0048549C    call        DoWriteIsControl
 004854A1    pop         ecx
 004854A2    mov         ecx,eax
 004854A4    mov         edx,4854C0;'IsControl'
 004854A9    mov         eax,dword ptr [ebp-4]
 004854AC    mov         ebx,dword ptr [eax]
 004854AE    call        dword ptr [ebx+4]
 004854B1    pop         ebx
 004854B2    pop         ecx
 004854B3    pop         ecx
 004854B4    pop         ebp
 004854B5    ret
*}
end;

//004854CC
procedure TControl.sub_004854CC;
begin
{*
 004854CC    push        ebp
 004854CD    mov         ebp,esp
 004854CF    push        ecx
 004854D0    push        ebx
 004854D1    mov         dword ptr [ebp-4],eax
 004854D4    mov         eax,dword ptr [ebp-4]
 004854D7    cmp         word ptr [eax+122],0;TControl.?f122:word
>004854DF    je          00485517
 004854E1    mov         eax,dword ptr [ebp-4]
 004854E4    mov         edx,dword ptr [eax]
 004854E6    call        dword ptr [edx+3C];TSpeedButton.GetAction
 004854E9    test        eax,eax
>004854EB    je          00485517
 004854ED    mov         eax,dword ptr [ebp-4]
 004854F0    mov         edx,dword ptr [eax]
 004854F2    call        dword ptr [edx+3C];TSpeedButton.GetAction
 004854F5    mov         eax,dword ptr [eax+40];TBasicAction.FOnExecute:TNotifyEvent
 004854F8    mov         edx,dword ptr [ebp-4]
 004854FB    cmp         eax,dword ptr [edx+120];TControl.FOnClick:TNotifyEvent
>00485501    je          00485517
 00485503    mov         ebx,dword ptr [ebp-4]
 00485506    mov         edx,dword ptr [ebp-4]
 00485509    mov         eax,dword ptr [ebx+124];TControl.?f124:TMessageForm
 0048550F    call        dword ptr [ebx+120];TControl.FOnClick
>00485515    jmp         00485558
 00485517    mov         eax,dword ptr [ebp-4]
 0048551A    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>0048551E    jne         00485539
 00485520    mov         eax,dword ptr [ebp-4]
 00485523    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>00485527    je          00485539
 00485529    mov         edx,dword ptr [ebp-4]
 0048552C    mov         eax,dword ptr [ebp-4]
 0048552F    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 00485532    mov         ecx,dword ptr [eax]
 00485534    call        dword ptr [ecx+18];TControlActionLink.sub_0042AF1C
>00485537    jmp         00485558
 00485539    mov         eax,dword ptr [ebp-4]
 0048553C    cmp         word ptr [eax+122],0;TControl.?f122:word
>00485544    je          00485558
 00485546    mov         ebx,dword ptr [ebp-4]
 00485549    mov         edx,dword ptr [ebp-4]
 0048554C    mov         eax,dword ptr [ebx+124];TControl.?f124:TMessageForm
 00485552    call        dword ptr [ebx+120];TControl.FOnClick
 00485558    pop         ebx
 00485559    pop         ecx
 0048555A    pop         ebp
 0048555B    ret
*}
end;

//0048555C
procedure TControl.sub_0048555C;
begin
{*
 0048555C    push        ebp
 0048555D    mov         ebp,esp
 0048555F    push        ecx
 00485560    push        ebx
 00485561    mov         dword ptr [ebp-4],eax
 00485564    mov         eax,dword ptr [ebp-4]
 00485567    cmp         word ptr [eax+12A],0;TControl.?f12A:word
>0048556F    je          00485583
 00485571    mov         ebx,dword ptr [ebp-4]
 00485574    mov         edx,dword ptr [ebp-4]
 00485577    mov         eax,dword ptr [ebx+12C];TControl.?f12C:TFormatSelDialog
 0048557D    call        dword ptr [ebx+128];TControl.FOnDblClick
 00485583    pop         ebx
 00485584    pop         ecx
 00485585    pop         ebp
 00485586    ret
*}
end;

//00485588
{*procedure TControl.sub_00485588(?:?; ?:?; ?:?; ?:?);
begin
 00485588    push        ebp
 00485589    mov         ebp,esp
 0048558B    add         esp,0FFFFFFF8
 0048558E    push        ebx
 0048558F    mov         byte ptr [ebp-6],cl
 00485592    mov         byte ptr [ebp-5],dl
 00485595    mov         dword ptr [ebp-4],eax
 00485598    mov         eax,dword ptr [ebp-4]
 0048559B    cmp         word ptr [eax+0D2],0;TControl.?fD2:word
>004855A3    je          004855C6
 004855A5    mov         al,byte ptr [ebp-6]
 004855A8    push        eax
 004855A9    mov         eax,dword ptr [ebp+0C]
 004855AC    push        eax
 004855AD    mov         eax,dword ptr [ebp+8]
 004855B0    push        eax
 004855B1    mov         ebx,dword ptr [ebp-4]
 004855B4    mov         cl,byte ptr [ebp-5]
 004855B7    mov         edx,dword ptr [ebp-4]
 004855BA    mov         eax,dword ptr [ebx+0D4];TControl.?fD4:dword
 004855C0    call        dword ptr [ebx+0D0];TControl.FOnMouseDown
 004855C6    pop         ebx
 004855C7    pop         ecx
 004855C8    pop         ecx
 004855C9    pop         ebp
 004855CA    ret         8
end;*}

//004855D0
{*procedure sub_004855D0(?:TControl; ?:?; ?:?; ?:?);
begin
 004855D0    push        ebp
 004855D1    mov         ebp,esp
 004855D3    add         esp,0FFFFFFEC
 004855D6    push        esi
 004855D7    mov         byte ptr [ebp-9],cl
 004855DA    mov         dword ptr [ebp-8],edx
 004855DD    mov         dword ptr [ebp-4],eax
 004855E0    mov         eax,dword ptr [ebp-4]
 004855E3    test        byte ptr [eax+51],10
>004855E7    jne         00485666
 004855E9    mov         eax,dword ptr [ebp-4]
 004855EC    cmp         dword ptr [eax+48],8000
>004855F3    jg          00485601
 004855F5    mov         eax,dword ptr [ebp-4]
 004855F8    cmp         dword ptr [eax+4C],8000
>004855FF    jle         00485636
 00485601    lea         edx,[ebp-11]
 00485604    mov         eax,dword ptr [ebp-4]
 00485607    call        00484E64
 0048560C    mov         eax,dword ptr [ebp-11]
 0048560F    push        eax
 00485610    mov         eax,dword ptr [ebp-0D]
 00485613    push        eax
 00485614    mov         eax,dword ptr [ebp-8]
 00485617    mov         ax,word ptr [eax+4]
 0048561B    call        004A058C
 00485620    mov         ecx,eax
 00485622    or          cl,byte ptr [ebp+8]
 00485625    mov         dl,byte ptr [ebp-9]
 00485628    mov         eax,dword ptr [ebp-4]
 0048562B    mov         si,0FFD5
 0048562F    call        @CallDynaInst
>00485634    jmp         00485666
 00485636    mov         eax,dword ptr [ebp-8]
 00485639    movsx       eax,word ptr [eax+8]
 0048563D    push        eax
 0048563E    mov         eax,dword ptr [ebp-8]
 00485641    movsx       eax,word ptr [eax+0A]
 00485645    push        eax
 00485646    mov         eax,dword ptr [ebp-8]
 00485649    mov         ax,word ptr [eax+4]
 0048564D    call        004A058C
 00485652    mov         ecx,eax
 00485654    or          cl,byte ptr [ebp+8]
 00485657    mov         dl,byte ptr [ebp-9]
 0048565A    mov         eax,dword ptr [ebp-4]
 0048565D    mov         si,0FFD5
 00485661    call        @CallDynaInst
 00485666    pop         esi
 00485667    mov         esp,ebp
 00485669    pop         ebp
 0048566A    ret         4
end;*}

//00485670
{*procedure TControl.WMLButtonDown(?:?);
begin
 00485670    push        ebp
 00485671    mov         ebp,esp
 00485673    add         esp,0FFFFFFF8
 00485676    mov         dword ptr [ebp-8],edx
 00485679    mov         dword ptr [ebp-4],eax
 0048567C    mov         edx,dword ptr [ebp-4]
 0048567F    mov         eax,dword ptr [ebp-4]
 00485682    call        00483158
 00485687    mov         edx,dword ptr [ebp-8]
 0048568A    mov         eax,dword ptr [ebp-4]
 0048568D    mov         ecx,dword ptr [eax]
 0048568F    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485692    mov         eax,dword ptr [ebp-4]
 00485695    test        byte ptr [eax+50],2;TControl.FControlStyle:TControlStyle
>00485699    je          004856A5
 0048569B    mov         dl,1
 0048569D    mov         eax,dword ptr [ebp-4]
 004856A0    call        00483BB0
 004856A5    mov         eax,dword ptr [ebp-4]
 004856A8    test        byte ptr [eax+50],8;TControl.FControlStyle:TControlStyle
>004856AC    je          004856B6
 004856AE    mov         eax,dword ptr [ebp-4]
 004856B1    or          word ptr [eax+54],2;TControl.FControlState:TControlState
 004856B6    mov         al,[004856D0];0x0 gvar_004856D0
 004856BB    push        eax
 004856BC    mov         edx,dword ptr [ebp-8]
 004856BF    xor         ecx,ecx
 004856C1    mov         eax,dword ptr [ebp-4]
 004856C4    call        004855D0
 004856C9    pop         ecx
 004856CA    pop         ecx
 004856CB    pop         ebp
 004856CC    ret
end;*}

//004856D4
{*procedure TControl.WMNCLButtonDown(?:?);
begin
 004856D4    push        ebp
 004856D5    mov         ebp,esp
 004856D7    add         esp,0FFFFFFF8
 004856DA    mov         dword ptr [ebp-8],edx
 004856DD    mov         dword ptr [ebp-4],eax
 004856E0    mov         edx,dword ptr [ebp-4]
 004856E3    mov         eax,dword ptr [ebp-4]
 004856E6    call        00483158
 004856EB    mov         edx,dword ptr [ebp-8]
 004856EE    mov         eax,dword ptr [ebp-4]
 004856F1    mov         ecx,dword ptr [eax]
 004856F3    call        dword ptr [ecx-10];TControl.DefaultHandler
 004856F6    pop         ecx
 004856F7    pop         ecx
 004856F8    pop         ebp
 004856F9    ret
end;*}

//004856FC
{*procedure TControl.WMLButtonDblClk(?:?);
begin
 004856FC    push        ebp
 004856FD    mov         ebp,esp
 004856FF    add         esp,0FFFFFFF8
 00485702    push        esi
 00485703    mov         dword ptr [ebp-8],edx
 00485706    mov         dword ptr [ebp-4],eax
 00485709    mov         edx,dword ptr [ebp-4]
 0048570C    mov         eax,dword ptr [ebp-4]
 0048570F    call        00483158
 00485714    mov         edx,dword ptr [ebp-8]
 00485717    mov         eax,dword ptr [ebp-4]
 0048571A    mov         ecx,dword ptr [eax]
 0048571C    call        dword ptr [ecx-10];TControl.DefaultHandler
 0048571F    mov         eax,dword ptr [ebp-4]
 00485722    test        byte ptr [eax+50],2;TControl.FControlStyle:TControlStyle
>00485726    je          00485732
 00485728    mov         dl,1
 0048572A    mov         eax,dword ptr [ebp-4]
 0048572D    call        00483BB0
 00485732    mov         eax,dword ptr [ebp-4]
 00485735    test        byte ptr [eax+50],8;TControl.FControlStyle:TControlStyle
>00485739    je          00485747
 0048573B    mov         eax,dword ptr [ebp-4]
 0048573E    mov         si,0FFE9
 00485742    call        @CallDynaInst;TControl.sub_0048555C
 00485747    mov         al,[00485760];0x40 gvar_00485760
 0048574C    push        eax
 0048574D    mov         edx,dword ptr [ebp-8]
 00485750    xor         ecx,ecx
 00485752    mov         eax,dword ptr [ebp-4]
 00485755    call        004855D0
 0048575A    pop         esi
 0048575B    pop         ecx
 0048575C    pop         ecx
 0048575D    pop         ebp
 0048575E    ret
end;*}

//00485764
procedure TControl.sub_00485764;
begin
{*
 00485764    push        ebp
 00485765    mov         ebp,esp
 00485767    add         esp,0FFFFFFF8
 0048576A    mov         dword ptr [ebp-4],eax
 0048576D    mov         eax,dword ptr [ebp-4]
 00485770    mov         eax,dword ptr [eax+7C];TControl.FPopupMenu:TPopupMenu
 00485773    mov         dword ptr [ebp-8],eax
 00485776    mov         eax,dword ptr [ebp-8]
 00485779    pop         ecx
 0048577A    pop         ecx
 0048577B    pop         ebp
 0048577C    ret
*}
end;

//00485780
{*function sub_00485780(?:TControl; ?:?; ?:?):?;
begin
 00485780    push        ebp
 00485781    mov         ebp,esp
 00485783    add         esp,0FFFFFFE0
 00485786    mov         dword ptr [ebp-0C],ecx
 00485789    mov         dword ptr [ebp-8],edx
 0048578C    mov         dword ptr [ebp-4],eax
 0048578F    mov         byte ptr [ebp-0D],0
 00485793    mov         eax,dword ptr [ebp-8]
 00485796    mov         eax,dword ptr [eax]
 00485798    mov         dword ptr [ebp-14],eax
 0048579B    mov         eax,dword ptr [ebp-0C]
 0048579E    mov         eax,dword ptr [eax]
 004857A0    mov         dword ptr [ebp-18],eax
 004857A3    lea         ecx,[ebp-18]
 004857A6    lea         edx,[ebp-14]
 004857A9    mov         eax,dword ptr [ebp-4]
 004857AC    call        00484DDC
 004857B1    test        al,al
>004857B3    je          0048581D
 004857B5    mov         eax,dword ptr [ebp-14]
 004857B8    mov         dword ptr [ebp-1C],eax
 004857BB    mov         eax,dword ptr [ebp-18]
 004857BE    mov         dword ptr [ebp-20],eax
 004857C1    mov         eax,dword ptr [ebp-4]
 004857C4    cmp         byte ptr [eax+5C],0;TControl.FAutoSize:Boolean
>004857C8    je          00485802
 004857CA    lea         ecx,[ebp-20]
 004857CD    lea         edx,[ebp-1C]
 004857D0    mov         eax,dword ptr [ebp-4]
 004857D3    call        00484D68
 004857D8    test        al,al
>004857DA    je          004857EC
 004857DC    mov         eax,dword ptr [ebp-1C]
 004857DF    cmp         eax,dword ptr [ebp-14]
>004857E2    jne         004857EC
 004857E4    mov         eax,dword ptr [ebp-20]
 004857E7    cmp         eax,dword ptr [ebp-18]
>004857EA    je          00485802
 004857EC    lea         ecx,[ebp-20]
 004857EF    lea         edx,[ebp-1C]
 004857F2    mov         eax,dword ptr [ebp-4]
 004857F5    call        00484DDC
 004857FA    test        al,al
>004857FC    jne         00485802
 004857FE    xor         eax,eax
>00485800    jmp         00485804
 00485802    mov         al,1
 00485804    mov         byte ptr [ebp-0D],al
 00485807    cmp         byte ptr [ebp-0D],0
>0048580B    je          0048581D
 0048580D    mov         eax,dword ptr [ebp-8]
 00485810    mov         edx,dword ptr [ebp-1C]
 00485813    mov         dword ptr [eax],edx
 00485815    mov         eax,dword ptr [ebp-0C]
 00485818    mov         edx,dword ptr [ebp-20]
 0048581B    mov         dword ptr [eax],edx
 0048581D    mov         al,byte ptr [ebp-0D]
 00485820    mov         esp,ebp
 00485822    pop         ebp
 00485823    ret
end;*}

//00485824
{*procedure TControl.WMRButtonDown(?:?);
begin
 00485824    push        ebp
 00485825    mov         ebp,esp
 00485827    add         esp,0FFFFFFF8
 0048582A    mov         dword ptr [ebp-8],edx
 0048582D    mov         dword ptr [ebp-4],eax
 00485830    mov         edx,dword ptr [ebp-8]
 00485833    mov         eax,dword ptr [ebp-4]
 00485836    mov         ecx,dword ptr [eax]
 00485838    call        dword ptr [ecx-10];TControl.DefaultHandler
 0048583B    mov         al,[00485854];0x0 gvar_00485854
 00485840    push        eax
 00485841    mov         edx,dword ptr [ebp-8]
 00485844    mov         cl,1
 00485846    mov         eax,dword ptr [ebp-4]
 00485849    call        004855D0
 0048584E    pop         ecx
 0048584F    pop         ecx
 00485850    pop         ebp
 00485851    ret
end;*}

//00485858
{*procedure TControl.WMRButtonDblClk(?:?);
begin
 00485858    push        ebp
 00485859    mov         ebp,esp
 0048585B    add         esp,0FFFFFFF8
 0048585E    mov         dword ptr [ebp-8],edx
 00485861    mov         dword ptr [ebp-4],eax
 00485864    mov         edx,dword ptr [ebp-8]
 00485867    mov         eax,dword ptr [ebp-4]
 0048586A    mov         ecx,dword ptr [eax]
 0048586C    call        dword ptr [ecx-10];TControl.DefaultHandler
 0048586F    mov         al,[00485888];0x40 gvar_00485888
 00485874    push        eax
 00485875    mov         edx,dword ptr [ebp-8]
 00485878    mov         cl,1
 0048587A    mov         eax,dword ptr [ebp-4]
 0048587D    call        004855D0
 00485882    pop         ecx
 00485883    pop         ecx
 00485884    pop         ebp
 00485885    ret
end;*}

//0048588C
{*procedure TControl.WMMButtonDown(?:?);
begin
 0048588C    push        ebp
 0048588D    mov         ebp,esp
 0048588F    add         esp,0FFFFFFF8
 00485892    mov         dword ptr [ebp-8],edx
 00485895    mov         dword ptr [ebp-4],eax
 00485898    mov         edx,dword ptr [ebp-8]
 0048589B    mov         eax,dword ptr [ebp-4]
 0048589E    mov         ecx,dword ptr [eax]
 004858A0    call        dword ptr [ecx-10];TControl.DefaultHandler
 004858A3    mov         al,[004858BC];0x0 gvar_004858BC
 004858A8    push        eax
 004858A9    mov         edx,dword ptr [ebp-8]
 004858AC    mov         cl,2
 004858AE    mov         eax,dword ptr [ebp-4]
 004858B1    call        004855D0
 004858B6    pop         ecx
 004858B7    pop         ecx
 004858B8    pop         ebp
 004858B9    ret
end;*}

//004858C0
{*procedure TControl.WMMButtonDblClk(?:?);
begin
 004858C0    push        ebp
 004858C1    mov         ebp,esp
 004858C3    add         esp,0FFFFFFF8
 004858C6    mov         dword ptr [ebp-8],edx
 004858C9    mov         dword ptr [ebp-4],eax
 004858CC    mov         edx,dword ptr [ebp-8]
 004858CF    mov         eax,dword ptr [ebp-4]
 004858D2    mov         ecx,dword ptr [eax]
 004858D4    call        dword ptr [ecx-10];TControl.DefaultHandler
 004858D7    mov         al,[004858F0];0x40 gvar_004858F0
 004858DC    push        eax
 004858DD    mov         edx,dword ptr [ebp-8]
 004858E0    mov         cl,2
 004858E2    mov         eax,dword ptr [ebp-4]
 004858E5    call        004855D0
 004858EA    pop         ecx
 004858EB    pop         ecx
 004858EC    pop         ebp
 004858ED    ret
end;*}

//004858F4
{*procedure TControl.sub_004858F4(?:?; ?:?; ?:?);
begin
 004858F4    push        ebp
 004858F5    mov         ebp,esp
 004858F7    add         esp,0FFFFFFF4
 004858FA    push        ebx
 004858FB    mov         dword ptr [ebp-0C],ecx
 004858FE    mov         byte ptr [ebp-5],dl
 00485901    mov         dword ptr [ebp-4],eax
 00485904    mov         eax,dword ptr [ebp-4]
 00485907    cmp         word ptr [eax+0DA],0;TControl.?fDA:word
>0048590F    je          0048592E
 00485911    mov         eax,dword ptr [ebp-0C]
 00485914    push        eax
 00485915    mov         eax,dword ptr [ebp+8]
 00485918    push        eax
 00485919    mov         ebx,dword ptr [ebp-4]
 0048591C    mov         cl,byte ptr [ebp-5]
 0048591F    mov         edx,dword ptr [ebp-4]
 00485922    mov         eax,dword ptr [ebx+0DC];TControl.?fDC:dword
 00485928    call        dword ptr [ebx+0D8];TControl.FOnMouseMove
 0048592E    pop         ebx
 0048592F    mov         esp,ebp
 00485931    pop         ebp
 00485932    ret         4
end;*}

//00485938
{*procedure TControl.WMMouseMove(?:?);
begin
 00485938    push        ebp
 00485939    mov         ebp,esp
 0048593B    add         esp,0FFFFFFF0
 0048593E    push        esi
 0048593F    mov         dword ptr [ebp-8],edx
 00485942    mov         dword ptr [ebp-4],eax
 00485945    mov         edx,dword ptr [ebp-8]
 00485948    mov         eax,dword ptr [ebp-4]
 0048594B    mov         ecx,dword ptr [eax]
 0048594D    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485950    mov         eax,dword ptr [ebp-4]
 00485953    test        byte ptr [eax+51],10;TControl.?f51:byte
>00485957    jne         004859C8
 00485959    mov         eax,dword ptr [ebp-4]
 0048595C    cmp         dword ptr [eax+48],8000;TControl.Width:Integer
>00485963    jg          00485971
 00485965    mov         eax,dword ptr [ebp-4]
 00485968    cmp         dword ptr [eax+4C],8000;TControl.Height:Integer
>0048596F    jle         0048599F
 00485971    lea         edx,[ebp-10]
 00485974    mov         eax,dword ptr [ebp-4]
 00485977    call        00484E64
 0048597C    mov         eax,dword ptr [ebp-0C]
 0048597F    push        eax
 00485980    mov         eax,dword ptr [ebp-8]
 00485983    mov         ax,word ptr [eax+4]
 00485987    call        004A058C
 0048598C    mov         edx,eax
 0048598E    mov         ecx,dword ptr [ebp-10]
 00485991    mov         eax,dword ptr [ebp-4]
 00485994    mov         si,0FFD4
 00485998    call        @CallDynaInst;TControl.sub_004858F4
>0048599D    jmp         004859C8
 0048599F    mov         eax,dword ptr [ebp-8]
 004859A2    movsx       eax,word ptr [eax+0A]
 004859A6    push        eax
 004859A7    mov         eax,dword ptr [ebp-8]
 004859AA    mov         ax,word ptr [eax+4]
 004859AE    call        004A058C
 004859B3    mov         edx,eax
 004859B5    mov         ecx,dword ptr [ebp-8]
 004859B8    movsx       ecx,word ptr [ecx+8]
 004859BC    mov         eax,dword ptr [ebp-4]
 004859BF    mov         si,0FFD4
 004859C3    call        @CallDynaInst;TControl.sub_004858F4
 004859C8    pop         esi
 004859C9    mov         esp,ebp
 004859CB    pop         ebp
 004859CC    ret
end;*}

//004859D0
{*procedure TControl.sub_004859D0(?:?; ?:?; ?:?; ?:?);
begin
 004859D0    push        ebp
 004859D1    mov         ebp,esp
 004859D3    add         esp,0FFFFFFF8
 004859D6    push        ebx
 004859D7    mov         byte ptr [ebp-6],cl
 004859DA    mov         byte ptr [ebp-5],dl
 004859DD    mov         dword ptr [ebp-4],eax
 004859E0    mov         eax,dword ptr [ebp-4]
 004859E3    cmp         word ptr [eax+0E2],0;TControl.?fE2:word
>004859EB    je          00485A0E
 004859ED    mov         al,byte ptr [ebp-6]
 004859F0    push        eax
 004859F1    mov         eax,dword ptr [ebp+0C]
 004859F4    push        eax
 004859F5    mov         eax,dword ptr [ebp+8]
 004859F8    push        eax
 004859F9    mov         ebx,dword ptr [ebp-4]
 004859FC    mov         cl,byte ptr [ebp-5]
 004859FF    mov         edx,dword ptr [ebp-4]
 00485A02    mov         eax,dword ptr [ebx+0E4];TControl.?fE4:dword
 00485A08    call        dword ptr [ebx+0E0];TControl.FOnMouseUp
 00485A0E    pop         ebx
 00485A0F    pop         ecx
 00485A10    pop         ecx
 00485A11    pop         ebp
 00485A12    ret         8
end;*}

//00485A18
{*procedure sub_00485A18(?:TControl; ?:?; ?:?);
begin
 00485A18    push        ebp
 00485A19    mov         ebp,esp
 00485A1B    add         esp,0FFFFFFF4
 00485A1E    push        esi
 00485A1F    mov         byte ptr [ebp-9],cl
 00485A22    mov         dword ptr [ebp-8],edx
 00485A25    mov         dword ptr [ebp-4],eax
 00485A28    mov         eax,dword ptr [ebp-4]
 00485A2B    test        byte ptr [eax+51],10
>00485A2F    jne         00485A5E
 00485A31    mov         eax,dword ptr [ebp-8]
 00485A34    movsx       eax,word ptr [eax+8]
 00485A38    push        eax
 00485A39    mov         eax,dword ptr [ebp-8]
 00485A3C    movsx       eax,word ptr [eax+0A]
 00485A40    push        eax
 00485A41    mov         eax,dword ptr [ebp-8]
 00485A44    mov         ax,word ptr [eax+4]
 00485A48    call        004A058C
 00485A4D    mov         ecx,eax
 00485A4F    mov         dl,byte ptr [ebp-9]
 00485A52    mov         eax,dword ptr [ebp-4]
 00485A55    mov         si,0FFD3
 00485A59    call        @CallDynaInst
 00485A5E    pop         esi
 00485A5F    mov         esp,ebp
 00485A61    pop         ebp
 00485A62    ret
end;*}

//00485A64
{*procedure TControl.WMLButtonUp(?:?);
begin
 00485A64    push        ebp
 00485A65    mov         ebp,esp
 00485A67    add         esp,0FFFFFFE0
 00485A6A    push        esi
 00485A6B    mov         dword ptr [ebp-8],edx
 00485A6E    mov         dword ptr [ebp-4],eax
 00485A71    mov         edx,dword ptr [ebp-8]
 00485A74    mov         eax,dword ptr [ebp-4]
 00485A77    mov         ecx,dword ptr [eax]
 00485A79    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485A7C    mov         eax,dword ptr [ebp-4]
 00485A7F    test        byte ptr [eax+50],2;TControl.FControlStyle:TControlStyle
>00485A83    je          00485A8F
 00485A85    xor         edx,edx
 00485A87    mov         eax,dword ptr [ebp-4]
 00485A8A    call        00483BB0
 00485A8F    mov         eax,dword ptr [ebp-4]
 00485A92    test        byte ptr [eax+54],2;TControl.FControlState:TControlState
>00485A96    je          00485AD8
 00485A98    mov         eax,dword ptr [ebp-4]
 00485A9B    and         word ptr [eax+54],0FFFFFFFD;TControl.FControlState:TControlState
 00485AA0    lea         edx,[ebp-10]
 00485AA3    mov         eax,dword ptr [ebp-8]
 00485AA6    mov         eax,dword ptr [eax+8]
 00485AA9    call        00408640
 00485AAE    push        dword ptr [ebp-0C]
 00485AB1    push        dword ptr [ebp-10]
 00485AB4    lea         edx,[ebp-20]
 00485AB7    mov         eax,dword ptr [ebp-4]
 00485ABA    mov         ecx,dword ptr [eax]
 00485ABC    call        dword ptr [ecx+44];TControl.sub_00482F5C
 00485ABF    lea         eax,[ebp-20]
 00485AC2    push        eax
 00485AC3    call        user32.PtInRect
 00485AC8    test        eax,eax
>00485ACA    je          00485AD8
 00485ACC    mov         eax,dword ptr [ebp-4]
 00485ACF    mov         si,0FFEB
 00485AD3    call        @CallDynaInst;TControl.sub_004854CC
 00485AD8    mov         edx,dword ptr [ebp-8]
 00485ADB    xor         ecx,ecx
 00485ADD    mov         eax,dword ptr [ebp-4]
 00485AE0    call        00485A18
 00485AE5    pop         esi
 00485AE6    mov         esp,ebp
 00485AE8    pop         ebp
 00485AE9    ret
end;*}

//00485AEC
{*procedure TControl.WMRButtonUp(?:?);
begin
 00485AEC    push        ebp
 00485AED    mov         ebp,esp
 00485AEF    add         esp,0FFFFFFF8
 00485AF2    mov         dword ptr [ebp-8],edx
 00485AF5    mov         dword ptr [ebp-4],eax
 00485AF8    mov         edx,dword ptr [ebp-8]
 00485AFB    mov         eax,dword ptr [ebp-4]
 00485AFE    mov         ecx,dword ptr [eax]
 00485B00    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485B03    mov         edx,dword ptr [ebp-8]
 00485B06    mov         cl,1
 00485B08    mov         eax,dword ptr [ebp-4]
 00485B0B    call        00485A18
 00485B10    pop         ecx
 00485B11    pop         ecx
 00485B12    pop         ebp
 00485B13    ret
end;*}

//00485B14
{*procedure TControl.WMMButtonUp(?:?);
begin
 00485B14    push        ebp
 00485B15    mov         ebp,esp
 00485B17    add         esp,0FFFFFFF8
 00485B1A    mov         dword ptr [ebp-8],edx
 00485B1D    mov         dword ptr [ebp-4],eax
 00485B20    mov         edx,dword ptr [ebp-8]
 00485B23    mov         eax,dword ptr [ebp-4]
 00485B26    mov         ecx,dword ptr [eax]
 00485B28    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485B2B    mov         edx,dword ptr [ebp-8]
 00485B2E    mov         cl,2
 00485B30    mov         eax,dword ptr [ebp-4]
 00485B33    call        00485A18
 00485B38    pop         ecx
 00485B39    pop         ecx
 00485B3A    pop         ebp
 00485B3B    ret
end;*}

//00485B3C
{*procedure TControl.WMMouseWheel(?:?);
begin
 00485B3C    push        ebp
 00485B3D    mov         ebp,esp
 00485B3F    add         esp,0FFFFFFF8
 00485B42    push        esi
 00485B43    mov         dword ptr [ebp-8],edx
 00485B46    mov         dword ptr [ebp-4],eax
 00485B49    mov         eax,[00571D9C];0x0 Mouse:TMouse
 00485B4E    cmp         byte ptr [eax+20],0;TMouse.FWheelPresent:Boolean
>00485B52    jne         00485B6C
 00485B54    mov         eax,[00571D9C];0x0 Mouse:TMouse
 00485B59    mov         byte ptr [eax+20],1;TMouse.FWheelPresent:Boolean
 00485B5D    mov         edx,68
 00485B62    mov         eax,[00571D9C];0x0 Mouse:TMouse
 00485B67    call        00491EDC
 00485B6C    mov         eax,dword ptr [ebp-8]
 00485B6F    mov         ax,word ptr [eax+4]
 00485B73    call        004A058C
 00485B78    mov         edx,dword ptr [ebp-8]
 00485B7B    mov         byte ptr [edx+4],al
 00485B7E    mov         edx,dword ptr [ebp-8]
 00485B81    mov         eax,dword ptr [ebp-4]
 00485B84    mov         si,0FFC9
 00485B88    call        @CallDynaInst;TControl.sub_00483F2C
 00485B8D    mov         eax,dword ptr [ebp-8]
 00485B90    cmp         dword ptr [eax+0C],0
>00485B94    jne         00485BA1
 00485B96    mov         edx,dword ptr [ebp-8]
 00485B99    mov         eax,dword ptr [ebp-4]
 00485B9C    mov         ecx,dword ptr [eax]
 00485B9E    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485BA1    pop         esi
 00485BA2    pop         ecx
 00485BA3    pop         ecx
 00485BA4    pop         ebp
 00485BA5    ret
end;*}

//00485BA8
{*procedure TControl.WMCancelMode(?:?);
begin
 00485BA8    push        ebp
 00485BA9    mov         ebp,esp
 00485BAB    add         esp,0FFFFFFF8
 00485BAE    mov         dword ptr [ebp-8],edx
 00485BB1    mov         dword ptr [ebp-4],eax
 00485BB4    mov         edx,dword ptr [ebp-8]
 00485BB7    mov         eax,dword ptr [ebp-4]
 00485BBA    mov         ecx,dword ptr [eax]
 00485BBC    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485BBF    mov         eax,dword ptr [ebp-4]
 00485BC2    call        00483B94
 00485BC7    test        al,al
>00485BC9    je          00485BF1
 00485BCB    xor         edx,edx
 00485BCD    mov         eax,dword ptr [ebp-4]
 00485BD0    call        00483BB0
 00485BD5    mov         eax,dword ptr [ebp-4]
 00485BD8    test        byte ptr [eax+54],1;TControl.FControlState:TControlState
>00485BDC    je          00485BF9
 00485BDE    push        0FF
 00485BE0    xor         ecx,ecx
 00485BE2    mov         edx,202
 00485BE7    mov         eax,dword ptr [ebp-4]
 00485BEA    call        00484FFC
>00485BEF    jmp         00485BF9
 00485BF1    mov         eax,dword ptr [ebp-4]
 00485BF4    and         word ptr [eax+54],0FFFFFFFE;TControl.FControlState:TControlState
 00485BF9    pop         ecx
 00485BFA    pop         ecx
 00485BFB    pop         ebp
 00485BFC    ret
end;*}

//00485C00
{*procedure TControl.WMWindowPosChangedMsg(?:?);
begin
 00485C00    push        ebp
 00485C01    mov         ebp,esp
 00485C03    add         esp,0FFFFFFF0
 00485C06    mov         dword ptr [ebp-8],edx
 00485C09    mov         dword ptr [ebp-4],eax
 00485C0C    mov         edx,dword ptr [ebp-8]
 00485C0F    mov         eax,dword ptr [ebp-4]
 00485C12    mov         ecx,dword ptr [eax]
 00485C14    call        dword ptr [ecx-10];TControl.DefaultHandler
 00485C17    mov         ax,[00485D1C];0x3 gvar_00485D1C
 00485C1D    mov         edx,dword ptr [ebp-4]
 00485C20    and         ax,word ptr [edx+1C];TControl.FComponentState:TComponentState
 00485C24    mov         dx,word ptr ds:[485D20];0x0 gvar_00485D20
 00485C2B    cmp         dx,ax
>00485C2E    jne         00485D17
 00485C34    mov         eax,dword ptr [ebp-4]
 00485C37    mov         eax,dword ptr [eax+74];TControl.FConstraints:TSizeConstraints
 00485C3A    mov         dword ptr [ebp-0C],eax
 00485C3D    mov         eax,dword ptr [ebp-0C]
 00485C40    cmp         dword ptr [eax+0C],0;TSizeConstraints.MaxWidth:TConstraintSize
>00485C44    jbe         00485C62
 00485C46    mov         eax,dword ptr [ebp-4]
 00485C49    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00485C4C    mov         edx,dword ptr [ebp-0C]
 00485C4F    cmp         eax,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
>00485C52    jle         00485C62
 00485C54    mov         eax,dword ptr [ebp-4]
 00485C57    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00485C5A    mov         edx,dword ptr [ebp-0C]
 00485C5D    mov         dword ptr [edx+0C],eax;TSizeConstraints.MaxWidth:TConstraintSize
>00485C60    jmp         00485C85
 00485C62    mov         eax,dword ptr [ebp-0C]
 00485C65    cmp         dword ptr [eax+14],0;TSizeConstraints.MinWidth:TConstraintSize
>00485C69    jbe         00485C85
 00485C6B    mov         eax,dword ptr [ebp-4]
 00485C6E    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00485C71    mov         edx,dword ptr [ebp-0C]
 00485C74    cmp         eax,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
>00485C77    jge         00485C85
 00485C79    mov         eax,dword ptr [ebp-4]
 00485C7C    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00485C7F    mov         edx,dword ptr [ebp-0C]
 00485C82    mov         dword ptr [edx+14],eax;TSizeConstraints.MinWidth:TConstraintSize
 00485C85    mov         eax,dword ptr [ebp-0C]
 00485C88    cmp         dword ptr [eax+8],0;TSizeConstraints.MaxHeight:TConstraintSize
>00485C8C    jbe         00485CAA
 00485C8E    mov         eax,dword ptr [ebp-4]
 00485C91    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00485C94    mov         edx,dword ptr [ebp-0C]
 00485C97    cmp         eax,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
>00485C9A    jle         00485CAA
 00485C9C    mov         eax,dword ptr [ebp-4]
 00485C9F    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00485CA2    mov         edx,dword ptr [ebp-0C]
 00485CA5    mov         dword ptr [edx+8],eax;TSizeConstraints.MaxHeight:TConstraintSize
>00485CA8    jmp         00485CCD
 00485CAA    mov         eax,dword ptr [ebp-0C]
 00485CAD    cmp         dword ptr [eax+10],0;TSizeConstraints.MinHeight:TConstraintSize
>00485CB1    jbe         00485CCD
 00485CB3    mov         eax,dword ptr [ebp-4]
 00485CB6    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00485CB9    mov         edx,dword ptr [ebp-0C]
 00485CBC    cmp         eax,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
>00485CBF    jge         00485CCD
 00485CC1    mov         eax,dword ptr [ebp-4]
 00485CC4    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 00485CC7    mov         edx,dword ptr [ebp-0C]
 00485CCA    mov         dword ptr [edx+10],eax;TSizeConstraints.MinHeight:TConstraintSize
 00485CCD    mov         eax,dword ptr [ebp-8]
 00485CD0    cmp         dword ptr [eax+8],0
>00485CD4    je          00485D17
 00485CD6    mov         eax,dword ptr [ebp-8]
 00485CD9    mov         eax,dword ptr [eax+8]
 00485CDC    mov         dword ptr [ebp-10],eax
 00485CDF    mov         eax,dword ptr [ebp-4]
 00485CE2    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>00485CE9    je          00485D17
 00485CEB    mov         eax,dword ptr [ebp-4]
 00485CEE    test        byte ptr [eax+55],4;TControl.?f55:byte
>00485CF2    jne         00485D17
 00485CF4    mov         eax,dword ptr [ebp-10]
 00485CF7    test        byte ptr [eax+18],1
>00485CFB    jne         00485D17
 00485CFD    mov         eax,dword ptr [ebp-10]
 00485D00    cmp         dword ptr [eax+10],0
>00485D04    je          00485D17
 00485D06    mov         eax,dword ptr [ebp-10]
 00485D09    cmp         dword ptr [eax+14],0
>00485D0D    je          00485D17
 00485D0F    mov         eax,dword ptr [ebp-4]
 00485D12    call        00485048
 00485D17    mov         esp,ebp
 00485D19    pop         ebp
 00485D1A    ret
end;*}

//00485D24
{*procedure TControl.CMVisibleChanged(?:?);
begin
 00485D24    push        ebp
 00485D25    mov         ebp,esp
 00485D27    add         esp,0FFFFFFF8
 00485D2A    mov         dword ptr [ebp-8],edx
 00485D2D    mov         dword ptr [ebp-4],eax
 00485D30    mov         eax,dword ptr [ebp-4]
 00485D33    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>00485D37    je          00485D42
 00485D39    mov         eax,dword ptr [ebp-4]
 00485D3C    test        byte ptr [eax+51],4;TControl.?f51:byte
>00485D40    je          00485D64
 00485D42    mov         eax,dword ptr [ebp-4]
 00485D45    cmp         byte ptr [eax+57],0;TControl.FVisible:Boolean
>00485D49    je          00485D54
 00485D4B    mov         eax,dword ptr [ebp-4]
 00485D4E    test        byte ptr [eax+50],40;TControl.FControlStyle:TControlStyle
>00485D52    jne         00485D58
 00485D54    xor         ecx,ecx
>00485D56    jmp         00485D5A
 00485D58    mov         cl,1
 00485D5A    mov         dl,1
 00485D5C    mov         eax,dword ptr [ebp-4]
 00485D5F    call        00483E7C
 00485D64    pop         ecx
 00485D65    pop         ecx
 00485D66    pop         ebp
 00485D67    ret
end;*}

//00485D68
{*procedure TControl.CMEnabledChanged(?:?);
begin
 00485D68    push        ebp
 00485D69    mov         ebp,esp
 00485D6B    add         esp,0FFFFFFF8
 00485D6E    mov         dword ptr [ebp-8],edx
 00485D71    mov         dword ptr [ebp-4],eax
 00485D74    mov         eax,dword ptr [ebp-4]
 00485D77    mov         edx,dword ptr [eax]
 00485D79    call        dword ptr [edx+7C];TControl.sub_00483F08
 00485D7C    pop         ecx
 00485D7D    pop         ecx
 00485D7E    pop         ebp
 00485D7F    ret
end;*}

//00485D80
{*procedure TControl.CMFontChanged(?:?);
begin
 00485D80    push        ebp
 00485D81    mov         ebp,esp
 00485D83    add         esp,0FFFFFFF8
 00485D86    mov         dword ptr [ebp-8],edx
 00485D89    mov         dword ptr [ebp-4],eax
 00485D8C    mov         eax,dword ptr [ebp-4]
 00485D8F    mov         edx,dword ptr [eax]
 00485D91    call        dword ptr [edx+7C];TControl.sub_00483F08
 00485D94    pop         ecx
 00485D95    pop         ecx
 00485D96    pop         ebp
 00485D97    ret
end;*}

//00485D98
{*procedure TControl.CMColorChanged(?:?);
begin
 00485D98    push        ebp
 00485D99    mov         ebp,esp
 00485D9B    add         esp,0FFFFFFF8
 00485D9E    mov         dword ptr [ebp-8],edx
 00485DA1    mov         dword ptr [ebp-4],eax
 00485DA4    mov         eax,dword ptr [ebp-4]
 00485DA7    mov         edx,dword ptr [eax]
 00485DA9    call        dword ptr [edx+7C];TControl.sub_00483F08
 00485DAC    pop         ecx
 00485DAD    pop         ecx
 00485DAE    pop         ebp
 00485DAF    ret
end;*}

//00485DB0
{*procedure TControl.CMParentColorChanged(?:?);
begin
 00485DB0    push        ebp
 00485DB1    mov         ebp,esp
 00485DB3    add         esp,0FFFFFFF8
 00485DB6    mov         dword ptr [ebp-8],edx
 00485DB9    mov         dword ptr [ebp-4],eax
 00485DBC    mov         eax,dword ptr [ebp-4]
 00485DBF    cmp         byte ptr [eax+5A],0;TControl.FParentColor:Boolean
>00485DC3    je          00485DF6
 00485DC5    mov         eax,dword ptr [ebp-8]
 00485DC8    cmp         dword ptr [eax+4],0
>00485DCC    je          00485DDE
 00485DCE    mov         edx,dword ptr [ebp-8]
 00485DD1    mov         edx,dword ptr [edx+8]
 00485DD4    mov         eax,dword ptr [ebp-4]
 00485DD7    call        TPanel.SetColor
>00485DDC    jmp         00485DEF
 00485DDE    mov         eax,dword ptr [ebp-4]
 00485DE1    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00485DE4    mov         edx,dword ptr [eax+70];TWinControl.FColor:TColor
 00485DE7    mov         eax,dword ptr [ebp-4]
 00485DEA    call        TPanel.SetColor
 00485DEF    mov         eax,dword ptr [ebp-4]
 00485DF2    mov         byte ptr [eax+5A],1;TControl.FParentColor:Boolean
 00485DF6    pop         ecx
 00485DF7    pop         ecx
 00485DF8    pop         ebp
 00485DF9    ret
end;*}

//00485DFC
{*procedure TControl.CMParentBiDiModeChanged(?:?);
begin
 00485DFC    push        ebp
 00485DFD    mov         ebp,esp
 00485DFF    add         esp,0FFFFFFF8
 00485E02    mov         dword ptr [ebp-8],edx
 00485E05    mov         dword ptr [ebp-4],eax
 00485E08    mov         eax,dword ptr [ebp-4]
 00485E0B    cmp         byte ptr [eax+60],0;TControl.FParentBiDiMode:Boolean
>00485E0F    je          00485E32
 00485E11    mov         eax,dword ptr [ebp-4]
 00485E14    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00485E18    je          00485E2B
 00485E1A    mov         eax,dword ptr [ebp-4]
 00485E1D    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00485E20    mov         dl,byte ptr [eax+5F];TWinControl.FBiDiMode:TBiDiMode
 00485E23    mov         eax,dword ptr [ebp-4]
 00485E26    mov         ecx,dword ptr [eax]
 00485E28    call        dword ptr [ecx+70];TPanel.SetBiDiMode
 00485E2B    mov         eax,dword ptr [ebp-4]
 00485E2E    mov         byte ptr [eax+60],1;TControl.FParentBiDiMode:Boolean
 00485E32    pop         ecx
 00485E33    pop         ecx
 00485E34    pop         ebp
 00485E35    ret
end;*}

//00485E38
{*procedure TControl.CMMouseWheel(?:?);
begin
 00485E38    push        ebp
 00485E39    mov         ebp,esp
 00485E3B    add         esp,0FFFFFFF0
 00485E3E    push        esi
 00485E3F    mov         dword ptr [ebp-8],edx
 00485E42    mov         dword ptr [ebp-4],eax
 00485E45    mov         eax,dword ptr [ebp-8]
 00485E48    xor         edx,edx
 00485E4A    mov         dword ptr [eax+0C],edx
 00485E4D    lea         edx,[ebp-10]
 00485E50    mov         eax,dword ptr [ebp-8]
 00485E53    mov         eax,dword ptr [eax+8]
 00485E56    call        00408640
 00485E5B    lea         eax,[ebp-10]
 00485E5E    push        eax
 00485E5F    mov         ecx,dword ptr [ebp-8]
 00485E62    movsx       ecx,word ptr [ecx+6]
 00485E66    mov         edx,dword ptr [ebp-8]
 00485E69    mov         dl,byte ptr [edx+4]
 00485E6C    mov         eax,dword ptr [ebp-4]
 00485E6F    mov         si,0FFE2
 00485E73    call        @CallDynaInst;TControl.sub_004845BC
 00485E78    test        al,al
>00485E7A    je          00485E88
 00485E7C    mov         eax,dword ptr [ebp-8]
 00485E7F    mov         dword ptr [eax+0C],1
>00485E86    jmp         00485EB4
 00485E88    mov         eax,dword ptr [ebp-4]
 00485E8B    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00485E8F    je          00485EB4
 00485E91    mov         eax,dword ptr [ebp-8]
 00485E94    mov         eax,dword ptr [eax+8]
 00485E97    push        eax
 00485E98    mov         ecx,dword ptr [ebp-8]
 00485E9B    mov         ecx,dword ptr [ecx+4]
 00485E9E    mov         edx,0B043
 00485EA3    mov         eax,dword ptr [ebp-4]
 00485EA6    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00485EA9    call        00484FFC
 00485EAE    mov         edx,dword ptr [ebp-8]
 00485EB1    mov         dword ptr [edx+0C],eax
 00485EB4    pop         esi
 00485EB5    mov         esp,ebp
 00485EB7    pop         ebp
 00485EB8    ret
end;*}

//00485EBC
{*procedure TControl.CMBiDiModeChanged(?:?);
begin
 00485EBC    push        ebp
 00485EBD    mov         ebp,esp
 00485EBF    add         esp,0FFFFFFF8
 00485EC2    mov         dword ptr [ebp-8],edx
 00485EC5    mov         dword ptr [ebp-4],eax
 00485EC8    mov         eax,[0056E638];^gvar_0057196C:Integer
 00485ECD    cmp         byte ptr [eax+0D],0
>00485ED1    je          00485EE4
 00485ED3    mov         eax,dword ptr [ebp-8]
 00485ED6    cmp         dword ptr [eax+4],0
>00485EDA    jne         00485EE4
 00485EDC    mov         eax,dword ptr [ebp-4]
 00485EDF    mov         edx,dword ptr [eax]
 00485EE1    call        dword ptr [edx+7C];TControl.sub_00483F08
 00485EE4    pop         ecx
 00485EE5    pop         ecx
 00485EE6    pop         ebp
 00485EE7    ret
end;*}

//00485EE8
{*procedure TControl.CMParentShowHintChanged(?:?);
begin
 00485EE8    push        ebp
 00485EE9    mov         ebp,esp
 00485EEB    add         esp,0FFFFFFF8
 00485EEE    mov         dword ptr [ebp-8],edx
 00485EF1    mov         dword ptr [ebp-4],eax
 00485EF4    mov         eax,dword ptr [ebp-4]
 00485EF7    cmp         byte ptr [eax+9A],0;TControl.FParentShowHint:Boolean
>00485EFE    je          00485F1E
 00485F00    mov         eax,dword ptr [ebp-4]
 00485F03    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00485F06    mov         dl,byte ptr [eax+99];TWinControl.FShowHint:Boolean
 00485F0C    mov         eax,dword ptr [ebp-4]
 00485F0F    call        TImage.SetShowHint
 00485F14    mov         eax,dword ptr [ebp-4]
 00485F17    mov         byte ptr [eax+9A],1;TControl.FParentShowHint:Boolean
 00485F1E    pop         ecx
 00485F1F    pop         ecx
 00485F20    pop         ebp
 00485F21    ret
end;*}

//00485F24
{*procedure TControl.CMParentFontChanged(?:?);
begin
 00485F24    push        ebp
 00485F25    mov         ebp,esp
 00485F27    add         esp,0FFFFFFF8
 00485F2A    mov         dword ptr [ebp-8],edx
 00485F2D    mov         dword ptr [ebp-4],eax
 00485F30    mov         eax,dword ptr [ebp-4]
 00485F33    cmp         byte ptr [eax+59],0;TControl.FParentFont:Boolean
>00485F37    je          00485F6A
 00485F39    mov         eax,dword ptr [ebp-8]
 00485F3C    cmp         dword ptr [eax+4],0
>00485F40    je          00485F52
 00485F42    mov         edx,dword ptr [ebp-8]
 00485F45    mov         edx,dword ptr [edx+8]
 00485F48    mov         eax,dword ptr [ebp-4]
 00485F4B    call        TPanel.SetFont
>00485F50    jmp         00485F63
 00485F52    mov         eax,dword ptr [ebp-4]
 00485F55    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00485F58    mov         edx,dword ptr [eax+68];TWinControl.FFont:TFont
 00485F5B    mov         eax,dword ptr [ebp-4]
 00485F5E    call        TPanel.SetFont
 00485F63    mov         eax,dword ptr [ebp-4]
 00485F66    mov         byte ptr [eax+59],1;TControl.FParentFont:Boolean
 00485F6A    pop         ecx
 00485F6B    pop         ecx
 00485F6C    pop         ebp
 00485F6D    ret
end;*}

//00485F70
{*procedure TControl.CMSysFontChanged(?:?);
begin
 00485F70    push        ebp
 00485F71    mov         ebp,esp
 00485F73    add         esp,0FFFFFFF8
 00485F76    mov         dword ptr [ebp-8],edx
 00485F79    mov         dword ptr [ebp-4],eax
 00485F7C    mov         eax,dword ptr [ebp-4]
 00485F7F    cmp         byte ptr [eax+56],0;TControl.FDesktopFont:Boolean
>00485F83    je          00485FA1
 00485F85    mov         eax,[0056E604];^Screen:TScreen
 00485F8A    mov         eax,dword ptr [eax]
 00485F8C    mov         edx,dword ptr [eax+84];TScreen.FIconFont:TFont
 00485F92    mov         eax,dword ptr [ebp-4]
 00485F95    call        TPanel.SetFont
 00485F9A    mov         eax,dword ptr [ebp-4]
 00485F9D    mov         byte ptr [eax+56],1;TControl.FDesktopFont:Boolean
 00485FA1    pop         ecx
 00485FA2    pop         ecx
 00485FA3    pop         ebp
 00485FA4    ret
end;*}

//00485FA8
{*procedure TControl.CMHitTest(?:?);
begin
 00485FA8    push        ebp
 00485FA9    mov         ebp,esp
 00485FAB    add         esp,0FFFFFFF8
 00485FAE    mov         dword ptr [ebp-8],edx
 00485FB1    mov         dword ptr [ebp-4],eax
 00485FB4    mov         eax,dword ptr [ebp-8]
 00485FB7    mov         dword ptr [eax+0C],1
 00485FBE    pop         ecx
 00485FBF    pop         ecx
 00485FC0    pop         ebp
 00485FC1    ret
end;*}

//00485FC4
{*procedure TControl.CMMouseEnter(?:?);
begin
 00485FC4    push        ebp
 00485FC5    mov         ebp,esp
 00485FC7    add         esp,0FFFFFFF8
 00485FCA    mov         dword ptr [ebp-8],edx
 00485FCD    mov         dword ptr [ebp-4],eax
 00485FD0    mov         eax,dword ptr [ebp-4]
 00485FD3    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00485FD7    je          00485FEF
 00485FD9    mov         eax,dword ptr [ebp-4]
 00485FDC    push        eax
 00485FDD    xor         ecx,ecx
 00485FDF    mov         edx,0B013
 00485FE4    mov         eax,dword ptr [ebp-4]
 00485FE7    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 00485FEA    call        00484FFC
 00485FEF    pop         ecx
 00485FF0    pop         ecx
 00485FF1    pop         ebp
 00485FF2    ret
end;*}

//00485FF4
{*procedure TControl.CMMouseLeave(?:?);
begin
 00485FF4    push        ebp
 00485FF5    mov         ebp,esp
 00485FF7    add         esp,0FFFFFFF8
 00485FFA    mov         dword ptr [ebp-8],edx
 00485FFD    mov         dword ptr [ebp-4],eax
 00486000    mov         eax,dword ptr [ebp-4]
 00486003    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>00486007    je          0048601F
 00486009    mov         eax,dword ptr [ebp-4]
 0048600C    push        eax
 0048600D    xor         ecx,ecx
 0048600F    mov         edx,0B014
 00486014    mov         eax,dword ptr [ebp-4]
 00486017    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 0048601A    call        00484FFC
 0048601F    pop         ecx
 00486020    pop         ecx
 00486021    pop         ebp
 00486022    ret
end;*}

//00486024
{*procedure TControl.CMDesignHitTest(?:?);
begin
 00486024    push        ebp
 00486025    mov         ebp,esp
 00486027    add         esp,0FFFFFFF8
 0048602A    mov         dword ptr [ebp-8],edx
 0048602D    mov         dword ptr [ebp-4],eax
 00486030    mov         eax,dword ptr [ebp-8]
 00486033    xor         edx,edx
 00486035    mov         dword ptr [eax+0C],edx
 00486038    pop         ecx
 00486039    pop         ecx
 0048603A    pop         ebp
 0048603B    ret
end;*}

//0048603C
{*function sub_0048603C(?:TControl; ?:?):?;
begin
 0048603C    push        ebp
 0048603D    mov         ebp,esp
 0048603F    add         esp,0FFFFFFE8
 00486042    push        ebx
 00486043    push        esi
 00486044    push        edi
 00486045    mov         esi,edx
 00486047    lea         edi,[ebp-18]
 0048604A    movs        dword ptr [edi],dword ptr [esi]
 0048604B    movs        dword ptr [edi],dword ptr [esi]
 0048604C    movs        dword ptr [edi],dword ptr [esi]
 0048604D    movs        dword ptr [edi],dword ptr [esi]
 0048604E    mov         dword ptr [ebp-4],eax
 00486051    xor         eax,eax
 00486053    mov         dword ptr [ebp-8],eax
 00486056    mov         eax,dword ptr [ebp-4]
 00486059    mov         edx,dword ptr [eax]
 0048605B    call        dword ptr [edx+58]
 0048605E    test        eax,eax
>00486060    je          004860C2
 00486062    mov         eax,dword ptr [ebp-4]
 00486065    mov         edx,dword ptr [eax]
 00486067    call        dword ptr [edx+58]
 0048606A    mov         ebx,eax
 0048606C    mov         eax,dword ptr [ebp-4]
 0048606F    call        TObject.ClassType
 00486074    cmp         ebx,eax
>00486076    je          004860C2
 00486078    mov         eax,dword ptr [ebp-4]
 0048607B    mov         edx,dword ptr [eax]
 0048607D    call        dword ptr [edx+58]
 00486080    mov         ecx,dword ptr ds:[56E3C0];^Application:TApplication
 00486086    mov         ecx,dword ptr [ecx]
 00486088    mov         dl,1
 0048608A    call        dword ptr [eax+2C]
 0048608D    mov         dword ptr [ebp-8],eax
 00486090    mov         edx,dword ptr [ebp-14]
 00486093    mov         eax,dword ptr [ebp-8]
 00486096    call        TControl.SetTop
 0048609B    mov         edx,dword ptr [ebp-18]
 0048609E    mov         eax,dword ptr [ebp-8]
 004860A1    call        TControl.SetLeft
 004860A6    mov         edx,dword ptr [ebp-10]
 004860A9    sub         edx,dword ptr [ebp-18]
 004860AC    mov         eax,dword ptr [ebp-8]
 004860AF    call        00482FB8
 004860B4    mov         edx,dword ptr [ebp-0C]
 004860B7    sub         edx,dword ptr [ebp-14]
 004860BA    mov         eax,dword ptr [ebp-8]
 004860BD    call        0048300C
 004860C2    mov         eax,dword ptr [ebp-8]
 004860C5    pop         edi
 004860C6    pop         esi
 004860C7    pop         ebx
 004860C8    mov         esp,ebp
 004860CA    pop         ebp
 004860CB    ret
end;*}

//004860CC
{*procedure sub_004860CC(?:?);
begin
 004860CC    push        ebp
 004860CD    mov         ebp,esp
 004860CF    add         esp,0FFFFFFDC
 004860D2    push        ebx
 004860D3    lea         ecx,[ebp-14]
 004860D6    mov         eax,dword ptr [ebp+8]
 004860D9    mov         eax,dword ptr [eax-4]
 004860DC    mov         edx,dword ptr [eax+44]
 004860DF    mov         eax,dword ptr [ebp+8]
 004860E2    mov         eax,dword ptr [eax-4]
 004860E5    mov         eax,dword ptr [eax+40]
 004860E8    call        Point
 004860ED    lea         edx,[ebp-14]
 004860F0    lea         ecx,[ebp-8]
 004860F3    mov         eax,dword ptr [ebp+8]
 004860F6    mov         eax,dword ptr [eax-4]
 004860F9    mov         eax,dword ptr [eax+30]
 004860FC    call        TControl.ClientToScreen
 00486101    mov         eax,dword ptr [ebp+8]
 00486104    mov         eax,dword ptr [eax-8]
 00486107    mov         eax,dword ptr [eax+8]
 0048610A    add         eax,44
 0048610D    mov         dword ptr [ebp-0C],eax
 00486110    mov         eax,dword ptr [ebp-0C]
 00486113    mov         eax,dword ptr [eax+0C]
 00486116    mov         edx,dword ptr [ebp-0C]
 00486119    sub         eax,dword ptr [edx+4]
 0048611C    mov         edx,dword ptr [ebp+8]
 0048611F    mov         edx,dword ptr [edx-4]
 00486122    mov         edx,dword ptr [edx+30]
 00486125    add         eax,dword ptr [edx+4C]
 00486128    mov         edx,dword ptr [ebp+8]
 0048612B    mov         edx,dword ptr [edx-4]
 0048612E    sub         eax,dword ptr [edx+4C]
 00486131    push        eax
 00486132    lea         eax,[ebp-24]
 00486135    push        eax
 00486136    mov         eax,dword ptr [ebp-0C]
 00486139    mov         ecx,dword ptr [eax+8]
 0048613C    mov         eax,dword ptr [ebp-0C]
 0048613F    sub         ecx,dword ptr [eax]
 00486141    mov         eax,dword ptr [ebp+8]
 00486144    mov         eax,dword ptr [eax-4]
 00486147    mov         eax,dword ptr [eax+30]
 0048614A    add         ecx,dword ptr [eax+48]
 0048614D    mov         eax,dword ptr [ebp+8]
 00486150    mov         eax,dword ptr [eax-4]
 00486153    sub         ecx,dword ptr [eax+48]
 00486156    mov         eax,dword ptr [ebp+8]
 00486159    mov         eax,dword ptr [eax-4]
 0048615C    mov         eax,dword ptr [eax+30]
 0048615F    mov         edx,dword ptr [eax+44]
 00486162    mov         eax,dword ptr [ebp-0C]
 00486165    add         edx,dword ptr [eax+4]
 00486168    sub         edx,dword ptr [ebp-4]
 0048616B    mov         eax,dword ptr [ebp+8]
 0048616E    mov         eax,dword ptr [eax-4]
 00486171    mov         eax,dword ptr [eax+30]
 00486174    mov         eax,dword ptr [eax+40]
 00486177    mov         ebx,dword ptr [ebp-0C]
 0048617A    add         eax,dword ptr [ebx]
 0048617C    sub         eax,dword ptr [ebp-8]
 0048617F    call        0041E740
 00486184    lea         edx,[ebp-24]
 00486187    mov         eax,dword ptr [ebp+8]
 0048618A    mov         eax,dword ptr [eax-4]
 0048618D    mov         eax,dword ptr [eax+30]
 00486190    call        00482F18
 00486195    pop         ebx
 00486196    mov         esp,ebp
 00486198    pop         ebp
 00486199    ret
end;*}

//0048619C
{*procedure TControl.CMFloat(?:?);
begin
 0048619C    push        ebp
 0048619D    mov         ebp,esp
 0048619F    add         esp,0FFFFFFF4
 004861A2    mov         dword ptr [ebp-8],edx
 004861A5    mov         dword ptr [ebp-4],eax
 004861A8    mov         eax,dword ptr [ebp-4]
 004861AB    mov         edx,dword ptr [eax]
 004861AD    call        dword ptr [edx+54];TControl.sub_004866DC
 004861B0    test        al,al
>004861B2    je          004861C6
 004861B4    mov         eax,dword ptr [ebp-4]
 004861B7    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004861BB    je          004861C6
 004861BD    push        ebp
 004861BE    call        004860CC
 004861C3    pop         ecx
>004861C4    jmp         004861FD
 004861C6    mov         eax,dword ptr [ebp-8]
 004861C9    mov         eax,dword ptr [eax+8]
 004861CC    lea         edx,[eax+44]
 004861CF    mov         eax,dword ptr [ebp-4]
 004861D2    call        0048603C
 004861D7    mov         dword ptr [ebp-0C],eax
 004861DA    cmp         dword ptr [ebp-0C],0
>004861DE    je          004861FD
 004861E0    mov         eax,dword ptr [ebp-8]
 004861E3    mov         eax,dword ptr [eax+8]
 004861E6    mov         edx,dword ptr [ebp-0C]
 004861E9    mov         dword ptr [eax+4],edx
 004861EC    mov         eax,dword ptr [ebp-0C]
 004861EF    call        TWinControl.GetHandle
 004861F4    mov         edx,dword ptr [ebp-8]
 004861F7    mov         edx,dword ptr [edx+8]
 004861FA    mov         dword ptr [edx+8],eax
 004861FD    mov         esp,ebp
 004861FF    pop         ebp
 00486200    ret
end;*}

//00486204
{*procedure TControl.sub_00486204(?:?; ?:?);
begin
 00486204    push        ebp
 00486205    mov         ebp,esp
 00486207    add         esp,0FFFFFFEC
 0048620A    push        ebx
 0048620B    xor         ebx,ebx
 0048620D    mov         dword ptr [ebp-10],ebx
 00486210    mov         dword ptr [ebp-14],ebx
 00486213    mov         byte ptr [ebp-9],cl
 00486216    mov         dword ptr [ebp-8],edx
 00486219    mov         dword ptr [ebp-4],eax
 0048621C    xor         eax,eax
 0048621E    push        ebp
 0048621F    push        48632B
 00486224    push        dword ptr fs:[eax]
 00486227    mov         dword ptr fs:[eax],esp
 0048622A    mov         eax,dword ptr [ebp-8]
 0048622D    mov         edx,dword ptr ds:[492C28];TCustomAction
 00486233    call        @IsClass
 00486238    test        al,al
>0048623A    je          00486310
 00486240    cmp         byte ptr [ebp-9],0
>00486244    je          00486272
 00486246    lea         edx,[ebp-10]
 00486249    mov         eax,dword ptr [ebp-4]
 0048624C    call        TPanel.GetCaption
 00486251    cmp         dword ptr [ebp-10],0
>00486255    je          00486272
 00486257    lea         edx,[ebp-14]
 0048625A    mov         eax,dword ptr [ebp-4]
 0048625D    call        TPanel.GetCaption
 00486262    mov         eax,dword ptr [ebp-14]
 00486265    mov         edx,dword ptr [ebp-4]
 00486268    mov         edx,dword ptr [edx+8];TControl.Name:TComponentName
 0048626B    call        @LStrCmp
>00486270    jne         00486280
 00486272    mov         eax,dword ptr [ebp-8]
 00486275    mov         edx,dword ptr [eax+64]
 00486278    mov         eax,dword ptr [ebp-4]
 0048627B    call        TPanel.SetCaption
 00486280    cmp         byte ptr [ebp-9],0
>00486284    je          00486292
 00486286    mov         eax,dword ptr [ebp-4]
 00486289    mov         edx,dword ptr [eax]
 0048628B    call        dword ptr [edx+50];TImage.GetEnabled
 0048628E    cmp         al,1
>00486290    jne         004862A0
 00486292    mov         eax,dword ptr [ebp-8]
 00486295    mov         dl,byte ptr [eax+6A]
 00486298    mov         eax,dword ptr [ebp-4]
 0048629B    mov         ecx,dword ptr [eax]
 0048629D    call        dword ptr [ecx+64];TImage.SetEnabled
 004862A0    cmp         byte ptr [ebp-9],0
>004862A4    je          004862B2
 004862A6    mov         eax,dword ptr [ebp-4]
 004862A9    cmp         dword ptr [eax+80],0;TControl.Hint:String
>004862B0    jne         004862C5
 004862B2    mov         eax,dword ptr [ebp-4]
 004862B5    add         eax,80;TControl.Hint:String
 004862BA    mov         edx,dword ptr [ebp-8]
 004862BD    mov         edx,dword ptr [edx+7C]
 004862C0    call        @LStrAsg
 004862C5    cmp         byte ptr [ebp-9],0
>004862C9    je          004862D4
 004862CB    mov         eax,dword ptr [ebp-4]
 004862CE    cmp         byte ptr [eax+57],1;TControl.FVisible:Boolean
>004862D2    jne         004862E5
 004862D4    mov         eax,dword ptr [ebp-8]
 004862D7    mov         dl,byte ptr [eax+86]
 004862DD    mov         eax,dword ptr [ebp-4]
 004862E0    call        TImage.SetVisible
 004862E5    cmp         byte ptr [ebp-9],0
>004862E9    je          004862F8
 004862EB    mov         eax,dword ptr [ebp-4]
 004862EE    cmp         word ptr [eax+122],0;TControl.?f122:word
>004862F6    jne         00486310
 004862F8    mov         eax,dword ptr [ebp-8]
 004862FB    mov         edx,dword ptr [ebp-4]
 004862FE    mov         ecx,dword ptr [eax+40]
 00486301    mov         dword ptr [edx+120],ecx;TControl.FOnClick:TNotifyEvent
 00486307    mov         ecx,dword ptr [eax+44]
 0048630A    mov         dword ptr [edx+124],ecx;TControl.?f124:TMessageForm
 00486310    xor         eax,eax
 00486312    pop         edx
 00486313    pop         ecx
 00486314    pop         ecx
 00486315    mov         dword ptr fs:[eax],edx
 00486318    push        486332
 0048631D    lea         eax,[ebp-14]
 00486320    mov         edx,2
 00486325    call        @LStrArrayClr
 0048632A    ret
>0048632B    jmp         @HandleFinally
>00486330    jmp         0048631D
 00486332    pop         ebx
 00486333    mov         esp,ebp
 00486335    pop         ebp
 00486336    ret
end;*}

//00486338
{*procedure sub_00486338(?:?; ?:?);
begin
 00486338    push        ebp
 00486339    mov         ebp,esp
 0048633B    add         esp,0FFFFFFF8
 0048633E    push        esi
 0048633F    mov         dword ptr [ebp-8],edx
 00486342    mov         dword ptr [ebp-4],eax
 00486345    mov         eax,dword ptr [ebp-4]
 00486348    mov         edx,dword ptr [eax]
 0048634A    call        dword ptr [edx+3C]
 0048634D    cmp         eax,dword ptr [ebp-8]
>00486350    jne         00486363
 00486352    xor         ecx,ecx
 00486354    mov         edx,dword ptr [ebp-8]
 00486357    mov         eax,dword ptr [ebp-4]
 0048635A    mov         si,0FFEF
 0048635E    call        @CallDynaInst
 00486363    pop         esi
 00486364    pop         ecx
 00486365    pop         ecx
 00486366    pop         ebp
 00486367    ret
end;*}

//00486368
procedure TControl.sub_00486368;
begin
{*
 00486368    push        ebp
 00486369    mov         ebp,esp
 0048636B    add         esp,0FFFFFFF8
 0048636E    mov         dword ptr [ebp-4],eax
 00486371    mov         eax,[0047D464];TControlActionLink
 00486376    mov         dword ptr [ebp-8],eax
 00486379    mov         eax,dword ptr [ebp-8]
 0048637C    pop         ecx
 0048637D    pop         ecx
 0048637E    pop         ebp
 0048637F    ret
*}
end;

//00486380
function TPanel.IsStoredCaption(Value:TCaption):Boolean;
begin
{*
 00486380    push        ebp
 00486381    mov         ebp,esp
 00486383    add         esp,0FFFFFFF8
 00486386    mov         dword ptr [ebp-4],eax
 00486389    mov         eax,dword ptr [ebp-4]
 0048638C    cmp         dword ptr [eax+6C],0;TPanel.FActionLink:TControlActionLink
>00486390    je          004863A5
 00486392    mov         eax,dword ptr [ebp-4]
 00486395    mov         eax,dword ptr [eax+6C];TPanel.FActionLink:TControlActionLink
 00486398    mov         edx,dword ptr [eax]
 0048639A    call        dword ptr [edx+20];TControlActionLink.sub_00481EC4
 0048639D    test        al,al
>0048639F    je          004863A5
 004863A1    xor         eax,eax
>004863A3    jmp         004863A7
 004863A5    mov         al,1
 004863A7    mov         byte ptr [ebp-5],al
 004863AA    mov         al,byte ptr [ebp-5]
 004863AD    pop         ecx
 004863AE    pop         ecx
 004863AF    pop         ebp
 004863B0    ret
*}
end;

//004863B4
function TImage.IsStoredEnabled(Value:Boolean):Boolean;
begin
{*
 004863B4    push        ebp
 004863B5    mov         ebp,esp
 004863B7    add         esp,0FFFFFFF8
 004863BA    mov         dword ptr [ebp-4],eax
 004863BD    mov         eax,dword ptr [ebp-4]
 004863C0    cmp         dword ptr [eax+6C],0;TImage.FActionLink:TControlActionLink
>004863C4    je          004863D9
 004863C6    mov         eax,dword ptr [ebp-4]
 004863C9    mov         eax,dword ptr [eax+6C];TImage.FActionLink:TControlActionLink
 004863CC    mov         edx,dword ptr [eax]
 004863CE    call        dword ptr [edx+28];TControlActionLink.sub_00481F48
 004863D1    test        al,al
>004863D3    je          004863D9
 004863D5    xor         eax,eax
>004863D7    jmp         004863DB
 004863D9    mov         al,1
 004863DB    mov         byte ptr [ebp-5],al
 004863DE    mov         al,byte ptr [ebp-5]
 004863E1    pop         ecx
 004863E2    pop         ecx
 004863E3    pop         ebp
 004863E4    ret
*}
end;

//004863E8
function TProgressBar.IsStoredHint(Value:String):Boolean;
begin
{*
 004863E8    push        ebp
 004863E9    mov         ebp,esp
 004863EB    add         esp,0FFFFFFF8
 004863EE    mov         dword ptr [ebp-4],eax
 004863F1    mov         eax,dword ptr [ebp-4]
 004863F4    cmp         dword ptr [eax+6C],0;TProgressBar.FActionLink:TControlActionLink
>004863F8    je          0048640D
 004863FA    mov         eax,dword ptr [ebp-4]
 004863FD    mov         eax,dword ptr [eax+6C];TProgressBar.FActionLink:TControlActionLink
 00486400    mov         edx,dword ptr [eax]
 00486402    call        dword ptr [edx+38];TControlActionLink.sub_00481F94
 00486405    test        al,al
>00486407    je          0048640D
 00486409    xor         eax,eax
>0048640B    jmp         0048640F
 0048640D    mov         al,1
 0048640F    mov         byte ptr [ebp-5],al
 00486412    mov         al,byte ptr [ebp-5]
 00486415    pop         ecx
 00486416    pop         ecx
 00486417    pop         ebp
 00486418    ret
*}
end;

//0048641C
function TControl.IsStoredHelpKeyword(Value:String):Boolean;
begin
{*
 0048641C    push        ebp
 0048641D    mov         ebp,esp
 0048641F    add         esp,0FFFFFFF8
 00486422    mov         dword ptr [ebp-4],eax
 00486425    mov         eax,dword ptr [ebp-4]
 00486428    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>0048642C    je          00486441
 0048642E    mov         eax,dword ptr [ebp-4]
 00486431    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 00486434    mov         edx,dword ptr [eax]
 00486436    call        dword ptr [edx+30];TControlActionLink.sub_00493A88
 00486439    test        al,al
>0048643B    je          00486441
 0048643D    xor         eax,eax
>0048643F    jmp         00486443
 00486441    mov         al,1
 00486443    mov         byte ptr [ebp-5],al
 00486446    mov         al,byte ptr [ebp-5]
 00486449    pop         ecx
 0048644A    pop         ecx
 0048644B    pop         ebp
 0048644C    ret
*}
end;

//00486450
function TImage.IsStoredVisible(Value:Boolean):Boolean;
begin
{*
 00486450    push        ebp
 00486451    mov         ebp,esp
 00486453    add         esp,0FFFFFFF8
 00486456    mov         dword ptr [ebp-4],eax
 00486459    mov         eax,dword ptr [ebp-4]
 0048645C    cmp         dword ptr [eax+6C],0;TImage.FActionLink:TControlActionLink
>00486460    je          00486475
 00486462    mov         eax,dword ptr [ebp-4]
 00486465    mov         eax,dword ptr [eax+6C];TImage.FActionLink:TControlActionLink
 00486468    mov         edx,dword ptr [eax]
 0048646A    call        dword ptr [edx+44];TControlActionLink.sub_00481FE0
 0048646D    test        al,al
>0048646F    je          00486475
 00486471    xor         eax,eax
>00486473    jmp         00486477
 00486475    mov         al,1
 00486477    mov         byte ptr [ebp-5],al
 0048647A    mov         al,byte ptr [ebp-5]
 0048647D    pop         ecx
 0048647E    pop         ecx
 0048647F    pop         ebp
 00486480    ret
*}
end;

//00486484
function TImage.IsStoredOnClick(Value:TNotifyEvent):Boolean;
begin
{*
 00486484    push        ebp
 00486485    mov         ebp,esp
 00486487    add         esp,0FFFFFFF8
 0048648A    mov         dword ptr [ebp-4],eax
 0048648D    mov         eax,dword ptr [ebp-4]
 00486490    cmp         dword ptr [eax+6C],0;TImage.FActionLink:TControlActionLink
>00486494    je          004864A9
 00486496    mov         eax,dword ptr [ebp-4]
 00486499    mov         eax,dword ptr [eax+6C];TImage.FActionLink:TControlActionLink
 0048649C    mov         edx,dword ptr [eax]
 0048649E    call        dword ptr [edx+8];TControlActionLink.sub_00482028
 004864A1    test        al,al
>004864A3    je          004864A9
 004864A5    xor         eax,eax
>004864A7    jmp         004864AB
 004864A9    mov         al,1
 004864AB    mov         byte ptr [ebp-5],al
 004864AE    mov         al,byte ptr [ebp-5]
 004864B1    pop         ecx
 004864B2    pop         ecx
 004864B3    pop         ebp
 004864B4    ret
*}
end;

//004864B8
procedure sub_004864B8;
begin
{*
 004864B8    push        ebp
 004864B9    mov         ebp,esp
 004864BB    push        ecx
 004864BC    push        esi
 004864BD    mov         dword ptr [ebp-4],eax
 004864C0    mov         eax,dword ptr [ebp-4]
 004864C3    call        0042A86C
 004864C8    mov         eax,dword ptr [ebp-4]
 004864CB    mov         edx,dword ptr [eax]
 004864CD    call        dword ptr [edx+3C];TSpeedButton.GetAction
 004864D0    test        eax,eax
>004864D2    je          004864EC
 004864D4    mov         eax,dword ptr [ebp-4]
 004864D7    mov         edx,dword ptr [eax]
 004864D9    call        dword ptr [edx+3C];TSpeedButton.GetAction
 004864DC    mov         edx,eax
 004864DE    mov         cl,1
 004864E0    mov         eax,dword ptr [ebp-4]
 004864E3    mov         si,0FFEF
 004864E7    call        @CallDynaInst;TControl.sub_00486204
 004864EC    mov         eax,dword ptr [ebp-4]
 004864EF    call        00482A00
 004864F4    pop         esi
 004864F5    pop         ecx
 004864F6    pop         ebp
 004864F7    ret
*}
end;

//004864F8
{*procedure sub_004864F8(?:?);
begin
 004864F8    push        ebp
 004864F9    mov         ebp,esp
 004864FB    add         esp,0FFFFFFF4
 004864FE    xor         ecx,ecx
 00486500    mov         dword ptr [ebp-0C],ecx
 00486503    mov         dword ptr [ebp-8],edx
 00486506    mov         dword ptr [ebp-4],eax
 00486509    xor         eax,eax
 0048650B    push        ebp
 0048650C    push        4865AA
 00486511    push        dword ptr fs:[eax]
 00486514    mov         dword ptr fs:[eax],esp
 00486517    mov         eax,dword ptr [ebp-8]
 0048651A    mov         edx,dword ptr ds:[492C28];TCustomAction
 00486520    call        @IsClass
 00486525    test        al,al
>00486527    je          00486589
 00486529    mov         eax,dword ptr [ebp-4]
 0048652C    mov         edx,dword ptr [eax]
 0048652E    call        dword ptr [edx+50];TImage.GetEnabled
 00486531    mov         edx,eax
 00486533    mov         eax,dword ptr [ebp-8]
 00486536    call        TVirtualListAction.SetEnabled
 0048653B    mov         eax,dword ptr [ebp-4]
 0048653E    mov         edx,dword ptr [eax+80];TControl.Hint:String
 00486544    mov         eax,dword ptr [ebp-8]
 00486547    call        TVirtualListAction.SetHint
 0048654C    lea         edx,[ebp-0C]
 0048654F    mov         eax,dword ptr [ebp-4]
 00486552    call        TPanel.GetCaption
 00486557    mov         edx,dword ptr [ebp-0C]
 0048655A    mov         eax,dword ptr [ebp-8]
 0048655D    call        TVirtualListAction.SetCaption
 00486562    mov         eax,dword ptr [ebp-4]
 00486565    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 00486568    mov         eax,dword ptr [ebp-8]
 0048656B    call        TVirtualListAction.SetVisible
 00486570    mov         eax,dword ptr [ebp-4]
 00486573    push        dword ptr [eax+124];TControl.?f124:TMessageForm
 00486579    push        dword ptr [eax+120];TControl.FOnClick:TNotifyEvent
 0048657F    mov         eax,dword ptr [ebp-8]
 00486582    mov         edx,dword ptr [eax]
 00486584    call        dword ptr [edx+34]
>00486587    jmp         00486594
 00486589    mov         edx,dword ptr [ebp-8]
 0048658C    mov         eax,dword ptr [ebp-4]
 0048658F    call        00420BD8
 00486594    xor         eax,eax
 00486596    pop         edx
 00486597    pop         ecx
 00486598    pop         ecx
 00486599    mov         dword ptr fs:[eax],edx
 0048659C    push        4865B1
 004865A1    lea         eax,[ebp-0C]
 004865A4    call        @LStrClr
 004865A9    ret
>004865AA    jmp         @HandleFinally
>004865AF    jmp         004865A1
 004865B1    mov         esp,ebp
 004865B3    pop         ebp
 004865B4    ret
end;*}

//004865B8
{*function sub_004865B8(?:Double; ?:?):?;
begin
 004865B8    push        ebp
 004865B9    mov         ebp,esp
 004865BB    add         esp,0FFFFFFEC
 004865BE    mov         dword ptr [ebp-8],edx
 004865C1    mov         dword ptr [ebp-4],eax
 004865C4    xor         eax,eax
 004865C6    mov         dword ptr [ebp-0C],eax
 004865C9    mov         eax,dword ptr [ebp-8]
 004865CC    test        eax,eax
>004865CE    jle         004865FF
 004865D0    mov         dword ptr [ebp-14],eax
 004865D3    mov         dword ptr [ebp-10],1
 004865DA    mov         eax,dword ptr [ebp-4]
 004865DD    mov         edx,dword ptr [ebp-10]
 004865E0    fld         qword ptr [eax+edx*8]
 004865E3    mov         eax,dword ptr [ebp-4]
 004865E6    mov         edx,dword ptr [ebp-0C]
 004865E9    fcomp       qword ptr [eax+edx*8]
 004865EC    fnstsw      al
 004865EE    sahf
>004865EF    jae         004865F7
 004865F1    mov         eax,dword ptr [ebp-10]
 004865F4    mov         dword ptr [ebp-0C],eax
 004865F7    inc         dword ptr [ebp-10]
 004865FA    dec         dword ptr [ebp-14]
>004865FD    jne         004865DA
 004865FF    mov         eax,dword ptr [ebp-0C]
 00486602    mov         esp,ebp
 00486604    pop         ebp
 00486605    ret
end;*}

//00486608
{*procedure TControl.sub_00486608(?:?);
begin
 00486608    push        ebp
 00486609    mov         ebp,esp
 0048660B    add         esp,0FFFFFFC0
 0048660E    push        esi
 0048660F    push        edi
 00486610    mov         esi,edx
 00486612    lea         edi,[ebp-0C]
 00486615    movs        dword ptr [edi],dword ptr [esi]
 00486616    movs        dword ptr [edi],dword ptr [esi]
 00486617    mov         dword ptr [ebp-4],eax
 0048661A    mov         byte ptr [ebp-0D],0
 0048661E    mov         eax,dword ptr [ebp-4]
 00486621    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00486624    mov         dword ptr [ebp-20],eax
 00486627    mov         eax,dword ptr [ebp-4]
 0048662A    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 0048662D    mov         dword ptr [ebp-1C],eax
 00486630    cmp         dword ptr [ebp-0C],0
>00486634    jg          0048663F
 00486636    mov         byte ptr [ebp-0D],3
>0048663A    jmp         004866D2
 0048663F    mov         eax,dword ptr [ebp-0C]
 00486642    cmp         eax,dword ptr [ebp-20]
>00486645    jl          00486650
 00486647    mov         byte ptr [ebp-0D],4
>0048664B    jmp         004866D2
 00486650    cmp         dword ptr [ebp-8],0
>00486654    jg          0048665C
 00486656    mov         byte ptr [ebp-0D],1
>0048665A    jmp         004866D2
 0048665C    mov         eax,dword ptr [ebp-8]
 0048665F    cmp         eax,dword ptr [ebp-1C]
>00486662    jl          0048666A
 00486664    mov         byte ptr [ebp-0D],2
>00486668    jmp         004866D2
 0048666A    mov         eax,dword ptr [ebp-8]
 0048666D    mov         dword ptr [ebp-14],eax
 00486670    mov         eax,dword ptr [ebp-8]
 00486673    sub         dword ptr [ebp-1C],eax
 00486676    mov         eax,dword ptr [ebp-0C]
 00486679    mov         dword ptr [ebp-18],eax
 0048667C    mov         eax,dword ptr [ebp-0C]
 0048667F    sub         dword ptr [ebp-20],eax
 00486682    push        ebp
 00486683    fild        dword ptr [ebp-18]
 00486686    fstp        qword ptr [ebp-40]
 00486689    wait
 0048668A    fild        dword ptr [ebp-20]
 0048668D    fstp        qword ptr [ebp-38]
 00486690    wait
 00486691    fild        dword ptr [ebp-14]
 00486694    fstp        qword ptr [ebp-30]
 00486697    wait
 00486698    fild        dword ptr [ebp-1C]
 0048669B    fstp        qword ptr [ebp-28]
 0048669E    wait
 0048669F    lea         eax,[ebp-40]
 004866A2    mov         edx,3
 004866A7    call        004865B8
 004866AC    pop         ecx
 004866AD    sub         eax,1
>004866B0    jb          004866BC
>004866B2    je          004866C2
 004866B4    dec         eax
>004866B5    je          004866C8
 004866B7    dec         eax
>004866B8    je          004866CE
>004866BA    jmp         004866D2
 004866BC    mov         byte ptr [ebp-0D],3
>004866C0    jmp         004866D2
 004866C2    mov         byte ptr [ebp-0D],4
>004866C6    jmp         004866D2
 004866C8    mov         byte ptr [ebp-0D],1
>004866CC    jmp         004866D2
 004866CE    mov         byte ptr [ebp-0D],2
 004866D2    mov         al,byte ptr [ebp-0D]
 004866D5    pop         edi
 004866D6    pop         esi
 004866D7    mov         esp,ebp
 004866D9    pop         ebp
 004866DA    ret
end;*}

//004866DC
{*function sub_004866DC:?;
begin
 004866DC    push        ebp
 004866DD    mov         ebp,esp
 004866DF    add         esp,0FFFFFFF8
 004866E2    mov         dword ptr [ebp-4],eax
 004866E5    mov         eax,dword ptr [ebp-4]
 004866E8    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>004866EF    je          0048670D
 004866F1    mov         eax,dword ptr [ebp-4]
 004866F4    mov         edx,dword ptr [eax]
 004866F6    call        dword ptr [edx+58];TControl.sub_00486720
 004866F9    mov         edx,eax
 004866FB    mov         eax,dword ptr [ebp-4]
 004866FE    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 00486704    call        @IsClass
 00486709    test        al,al
>0048670B    jne         00486711
 0048670D    xor         eax,eax
>0048670F    jmp         00486713
 00486711    mov         al,1
 00486713    mov         byte ptr [ebp-5],al
 00486716    mov         al,byte ptr [ebp-5]
 00486719    pop         ecx
 0048671A    pop         ecx
 0048671B    pop         ebp
 0048671C    ret
end;*}

//00486720
{*function sub_00486720:?;
begin
 00486720    push        ebp
 00486721    mov         ebp,esp
 00486723    add         esp,0FFFFFFF8
 00486726    mov         dword ptr [ebp-4],eax
 00486729    mov         eax,dword ptr [ebp-4]
 0048672C    mov         eax,dword ptr [eax+0B8];TControl.FFloatingDockSiteClass:TWinControlClass
 00486732    mov         dword ptr [ebp-8],eax
 00486735    mov         eax,dword ptr [ebp-8]
 00486738    pop         ecx
 00486739    pop         ecx
 0048673A    pop         ebp
 0048673B    ret
end;*}

//0048673C
procedure TControl.sub_0048673C;
begin
{*
 0048673C    push        ebp
 0048673D    mov         ebp,esp
 0048673F    push        ecx
 00486740    push        ebx
 00486741    mov         dword ptr [ebp-4],eax
 00486744    mov         eax,dword ptr [ebp-4]
 00486747    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>0048674B    jne         00486772
 0048674D    mov         eax,dword ptr [ebp-4]
 00486750    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 00486753    push        eax
 00486754    mov         eax,dword ptr [ebp-4]
 00486757    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 0048675A    push        eax
 0048675B    mov         eax,dword ptr [ebp-4]
 0048675E    mov         ecx,dword ptr [eax+44];TControl.Top:Integer
 00486761    mov         eax,dword ptr [ebp-4]
 00486764    mov         edx,dword ptr [eax+40];TControl.Left:Integer
 00486767    mov         eax,dword ptr [ebp-4]
 0048676A    mov         ebx,dword ptr [eax]
 0048676C    call        dword ptr [ebx+84];TControl.sub_00482930
 00486772    pop         ebx
 00486773    pop         ecx
 00486774    pop         ebp
 00486775    ret
*}
end;

//00486778
{*function sub_00486778(?:TControl; ?:?):?;
begin
 00486778    push        ebp
 00486779    mov         ebp,esp
 0048677B    add         esp,0FFFFFFF4
 0048677E    push        esi
 0048677F    mov         dword ptr [ebp-8],edx
 00486782    mov         dword ptr [ebp-4],eax
 00486785    mov         eax,dword ptr [ebp-8]
 00486788    mov         dword ptr [ebp-0C],eax
 0048678B    mov         eax,dword ptr [ebp-4]
 0048678E    mov         si,0FFC8
 00486792    call        @CallDynaInst;TControl.sub_0048415C
 00486797    test        al,al
>00486799    je          004867B9
 0048679B    mov         eax,dword ptr [ebp-0C]
 0048679E    and         eax,2
 004867A1    cmp         eax,2
>004867A4    jne         004867AC
 004867A6    and         dword ptr [ebp-0C],0FFFFFFFD
>004867AA    jmp         004867B9
 004867AC    mov         eax,dword ptr [ebp-0C]
 004867AF    and         eax,1
 004867B2    dec         eax
>004867B3    je          004867B9
 004867B5    or          dword ptr [ebp-0C],2
 004867B9    mov         eax,dword ptr [ebp-4]
 004867BC    call        004867CC
 004867C1    or          dword ptr [ebp-0C],eax
 004867C4    mov         eax,dword ptr [ebp-0C]
 004867C7    pop         esi
 004867C8    mov         esp,ebp
 004867CA    pop         ebp
 004867CB    ret
end;*}

//004867CC
{*function sub_004867CC(?:TControl):?;
begin
 004867CC    push        ebp
 004867CD    mov         ebp,esp
 004867CF    add         esp,0FFFFFFF8
 004867D2    mov         dword ptr [ebp-4],eax
 004867D5    mov         eax,dword ptr [ebp-4]
 004867D8    call        0048412C
 004867DD    test        al,al
>004867DF    je          004867EA
 004867E1    mov         dword ptr [ebp-8],20000
>004867E8    jmp         004867EF
 004867EA    xor         eax,eax
 004867EC    mov         dword ptr [ebp-8],eax
 004867EF    mov         eax,dword ptr [ebp-8]
 004867F2    pop         ecx
 004867F3    pop         ecx
 004867F4    pop         ebp
 004867F5    ret
end;*}

//004867F8
procedure sub_004867F8;
begin
{*
 004867F8    push        ebp
 004867F9    mov         ebp,esp
 004867FB    push        ecx
 004867FC    mov         dword ptr [ebp-4],eax
 004867FF    mov         eax,dword ptr [ebp-4]
 00486802    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>00486806    je          00486813
 00486808    mov         eax,dword ptr [ebp-4]
 0048680B    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 0048680E    mov         edx,dword ptr [eax]
 00486810    call        dword ptr [edx+1C];TControlActionLink.sub_0042AFC0
 00486813    pop         ecx
 00486814    pop         ebp
 00486815    ret
*}
end;

//00486818
{*procedure TControl.CMHintShow(?:?);
begin
 00486818    push        ebp
 00486819    mov         ebp,esp
 0048681B    add         esp,0FFFFFFF8
 0048681E    mov         dword ptr [ebp-8],edx
 00486821    mov         dword ptr [ebp-4],eax
 00486824    mov         eax,dword ptr [ebp-4]
 00486827    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>0048682B    je          0048684F
 0048682D    mov         eax,dword ptr [ebp-8]
 00486830    mov         eax,dword ptr [eax+8]
 00486833    lea         edx,[eax+38]
 00486836    mov         eax,dword ptr [ebp-4]
 00486839    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 0048683C    mov         ecx,dword ptr [eax]
 0048683E    call        dword ptr [ecx+78];TControlActionLink.sub_00481DC0
 00486841    test        al,al
>00486843    jne         0048684F
 00486845    mov         eax,dword ptr [ebp-8]
 00486848    mov         dword ptr [eax+0C],1
 0048684F    pop         ecx
 00486850    pop         ecx
 00486851    pop         ebp
 00486852    ret
end;*}

//00486854
{*procedure TControl.WMContextMenu(?:?);
begin
 00486854    push        ebp
 00486855    mov         ebp,esp
 00486857    add         esp,0FFFFFFC8
 0048685A    push        ebx
 0048685B    push        esi
 0048685C    mov         dword ptr [ebp-8],edx
 0048685F    mov         dword ptr [ebp-4],eax
 00486862    mov         eax,dword ptr [ebp-8]
 00486865    cmp         dword ptr [eax+0C],0
>00486869    jne         0048699A
 0048686F    mov         eax,dword ptr [ebp-4]
 00486872    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>00486876    je          00486888
 00486878    mov         edx,dword ptr [ebp-8]
 0048687B    mov         eax,dword ptr [ebp-4]
 0048687E    mov         ecx,dword ptr [eax]
 00486880    call        dword ptr [ecx-10];TControl.DefaultHandler
>00486883    jmp         0048699A
 00486888    lea         edx,[ebp-10]
 0048688B    mov         eax,dword ptr [ebp-8]
 0048688E    mov         eax,dword ptr [eax+8]
 00486891    call        00408640
 00486896    lea         eax,[ebp-10]
 00486899    call        0041E76C
 0048689E    test        al,al
>004868A0    je          004868B0
 004868A2    mov         eax,dword ptr [ebp-10]
 004868A5    mov         dword ptr [ebp-18],eax
 004868A8    mov         eax,dword ptr [ebp-0C]
 004868AB    mov         dword ptr [ebp-14],eax
>004868AE    jmp         004868EC
 004868B0    lea         ecx,[ebp-18]
 004868B3    lea         edx,[ebp-10]
 004868B6    mov         eax,dword ptr [ebp-4]
 004868B9    call        TControl.ScreenToClient
 004868BE    push        dword ptr [ebp-14]
 004868C1    push        dword ptr [ebp-18]
 004868C4    lea         edx,[ebp-30]
 004868C7    mov         eax,dword ptr [ebp-4]
 004868CA    mov         ecx,dword ptr [eax]
 004868CC    call        dword ptr [ecx+44];TControl.sub_00482F5C
 004868CF    lea         eax,[ebp-30]
 004868D2    push        eax
 004868D3    call        user32.PtInRect
 004868D8    test        eax,eax
>004868DA    jne         004868EC
 004868DC    mov         edx,dword ptr [ebp-8]
 004868DF    mov         eax,dword ptr [ebp-4]
 004868E2    mov         ecx,dword ptr [eax]
 004868E4    call        dword ptr [ecx-10];TControl.DefaultHandler
>004868E7    jmp         0048699A
 004868EC    mov         byte ptr [ebp-19],0
 004868F0    lea         ecx,[ebp-19]
 004868F3    lea         edx,[ebp-18]
 004868F6    mov         eax,dword ptr [ebp-4]
 004868F9    mov         si,0FFE6
 004868FD    call        @CallDynaInst;TControl.sub_004869A0
 00486902    xor         eax,eax
 00486904    mov         al,byte ptr [ebp-19]
 00486907    mov         edx,dword ptr [ebp-8]
 0048690A    mov         dword ptr [edx+0C],eax
 0048690D    cmp         byte ptr [ebp-19],0
>00486911    jne         0048699A
 00486917    mov         eax,dword ptr [ebp-4]
 0048691A    mov         si,0FFD6
 0048691E    call        @CallDynaInst;TControl.sub_00485764
 00486923    mov         dword ptr [ebp-20],eax
 00486926    cmp         dword ptr [ebp-20],0
>0048692A    je          00486986
 0048692C    mov         eax,dword ptr [ebp-20]
 0048692F    cmp         byte ptr [eax+61],0
>00486933    je          00486986
 00486935    xor         edx,edx
 00486937    mov         eax,dword ptr [ebp-4]
 0048693A    call        00483158
 0048693F    mov         eax,dword ptr [ebp-20]
 00486942    mov         edx,dword ptr [ebp-4]
 00486945    mov         dword ptr [eax+64],edx
 00486948    lea         eax,[ebp-10]
 0048694B    call        0041E76C
 00486950    test        al,al
>00486952    je          0048696E
 00486954    lea         ecx,[ebp-38]
 00486957    xor         edx,edx
 00486959    xor         eax,eax
 0048695B    call        Point
 00486960    lea         edx,[ebp-38]
 00486963    lea         ecx,[ebp-10]
 00486966    mov         eax,dword ptr [ebp-4]
 00486969    call        TControl.ClientToScreen
 0048696E    mov         ecx,dword ptr [ebp-0C]
 00486971    mov         edx,dword ptr [ebp-10]
 00486974    mov         eax,dword ptr [ebp-20]
 00486977    mov         ebx,dword ptr [eax]
 00486979    call        dword ptr [ebx+40]
 0048697C    mov         eax,dword ptr [ebp-8]
 0048697F    mov         dword ptr [eax+0C],1
 00486986    mov         eax,dword ptr [ebp-8]
 00486989    cmp         dword ptr [eax+0C],0
>0048698D    jne         0048699A
 0048698F    mov         edx,dword ptr [ebp-8]
 00486992    mov         eax,dword ptr [ebp-4]
 00486995    mov         ecx,dword ptr [eax]
 00486997    call        dword ptr [ecx-10];TControl.DefaultHandler
 0048699A    pop         esi
 0048699B    pop         ebx
 0048699C    mov         esp,ebp
 0048699E    pop         ebp
 0048699F    ret
end;*}

//004869A0
{*procedure TControl.sub_004869A0(?:?; ?:?);
begin
 004869A0    push        ebp
 004869A1    mov         ebp,esp
 004869A3    add         esp,0FFFFFFF0
 004869A6    push        ebx
 004869A7    push        esi
 004869A8    push        edi
 004869A9    mov         esi,edx
 004869AB    lea         edi,[ebp-0C]
 004869AE    movs        dword ptr [edi],dword ptr [esi]
 004869AF    movs        dword ptr [edi],dword ptr [esi]
 004869B0    mov         dword ptr [ebp-10],ecx
 004869B3    mov         dword ptr [ebp-4],eax
 004869B6    mov         eax,dword ptr [ebp-4]
 004869B9    cmp         word ptr [eax+132],0;TControl.?f132:word
>004869C1    je          004869DC
 004869C3    mov         eax,dword ptr [ebp-10]
 004869C6    push        eax
 004869C7    mov         ebx,dword ptr [ebp-4]
 004869CA    lea         ecx,[ebp-0C]
 004869CD    mov         edx,dword ptr [ebp-4]
 004869D0    mov         eax,dword ptr [ebx+134];TControl.?f134:dword
 004869D6    call        dword ptr [ebx+130];TControl.FOnContextPopup
 004869DC    pop         edi
 004869DD    pop         esi
 004869DE    pop         ebx
 004869DF    mov         esp,ebp
 004869E1    pop         ebp
 004869E2    ret
end;*}

//004869E4
procedure TImage.SetConstraints(Value:TSizeConstraints);
begin
{*
 004869E4    push        ebp
 004869E5    mov         ebp,esp
 004869E7    add         esp,0FFFFFFF8
 004869EA    mov         dword ptr [ebp-8],edx
 004869ED    mov         dword ptr [ebp-4],eax
 004869F0    mov         edx,dword ptr [ebp-8]
 004869F3    mov         eax,dword ptr [ebp-4]
 004869F6    mov         eax,dword ptr [eax+74];TImage.FConstraints:TSizeConstraints
 004869F9    mov         ecx,dword ptr [eax]
 004869FB    call        dword ptr [ecx+8];TSizeConstraints.sub_00420AD4
 004869FE    pop         ecx
 004869FF    pop         ecx
 00486A00    pop         ebp
 00486A01    ret
*}
end;

//00486A04
{*procedure sub_00486A04(?:TCustomStatusBar; ?:?; ?:?; ?:?);
begin
 00486A04    push        ebp
 00486A05    mov         ebp,esp
 00486A07    add         esp,0FFFFFFE0
 00486A0A    push        ebx
 00486A0B    xor         ebx,ebx
 00486A0D    mov         dword ptr [ebp-20],ebx
 00486A10    mov         dword ptr [ebp-1C],ebx
 00486A13    mov         dword ptr [ebp-0C],ecx
 00486A16    mov         dword ptr [ebp-8],edx
 00486A19    mov         dword ptr [ebp-4],eax
 00486A1C    xor         eax,eax
 00486A1E    push        ebp
 00486A1F    push        486B35
 00486A24    push        dword ptr fs:[eax]
 00486A27    mov         dword ptr fs:[eax],esp
 00486A2A    cmp         dword ptr [ebp-0C],0
>00486A2E    jne         00486A39
 00486A30    mov         eax,dword ptr [ebp-4]
 00486A33    mov         eax,dword ptr [eax+30];TCustomStatusBar.FParent:TWinControl
 00486A36    mov         dword ptr [ebp-0C],eax
 00486A39    cmp         dword ptr [ebp-0C],0
>00486A3D    jne         00486A73
 00486A3F    mov         eax,dword ptr [ebp-4]
 00486A42    mov         eax,dword ptr [eax+8];TCustomStatusBar.Name:TComponentName
 00486A45    mov         dword ptr [ebp-18],eax
 00486A48    mov         byte ptr [ebp-14],0B
 00486A4C    lea         eax,[ebp-18]
 00486A4F    push        eax
 00486A50    push        0
 00486A52    lea         edx,[ebp-1C]
 00486A55    mov         eax,[0056E43C];^SParentRequired:TResStringRec
 00486A5A    call        LoadResString
 00486A5F    mov         ecx,dword ptr [ebp-1C]
 00486A62    mov         dl,1
 00486A64    mov         eax,[0041D40C];EInvalidOperation
 00486A69    call        Exception.CreateFmt;EInvalidOperation.Create
 00486A6E    call        @RaiseExcept
 00486A73    mov         eax,dword ptr [ebp+8]
 00486A76    mov         edx,dword ptr [ebp-8]
 00486A79    mov         ecx,dword ptr [edx]
 00486A7B    mov         dword ptr [eax],ecx
 00486A7D    mov         ecx,dword ptr [edx+4]
 00486A80    mov         dword ptr [eax+4],ecx
 00486A83    mov         eax,dword ptr [ebp-4]
 00486A86    mov         eax,dword ptr [eax+40];TCustomStatusBar.Left:Integer
 00486A89    mov         edx,dword ptr [ebp+8]
 00486A8C    add         dword ptr [edx],eax
 00486A8E    mov         eax,dword ptr [ebp-4]
 00486A91    mov         eax,dword ptr [eax+44];TCustomStatusBar.Top:Integer
 00486A94    mov         edx,dword ptr [ebp+8]
 00486A97    add         dword ptr [edx+4],eax
 00486A9A    mov         eax,dword ptr [ebp-4]
 00486A9D    mov         eax,dword ptr [eax+30];TCustomStatusBar.FParent:TWinControl
 00486AA0    mov         dword ptr [ebp-10],eax
 00486AA3    cmp         dword ptr [ebp-10],0
>00486AA7    je          00486AE0
 00486AA9    mov         eax,dword ptr [ebp-10]
 00486AAC    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00486AB0    je          00486AC9
 00486AB2    mov         eax,dword ptr [ebp+8]
 00486AB5    mov         edx,dword ptr [ebp-10]
 00486AB8    mov         edx,dword ptr [edx+40];TWinControl.Left:Integer
 00486ABB    add         dword ptr [eax],edx
 00486ABD    mov         eax,dword ptr [ebp+8]
 00486AC0    mov         edx,dword ptr [ebp-10]
 00486AC3    mov         edx,dword ptr [edx+44];TWinControl.Top:Integer
 00486AC6    add         dword ptr [eax+4],edx
 00486AC9    mov         eax,dword ptr [ebp-10]
 00486ACC    cmp         eax,dword ptr [ebp-0C]
>00486ACF    je          00486AE0
 00486AD1    mov         eax,dword ptr [ebp-10]
 00486AD4    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 00486AD7    mov         dword ptr [ebp-10],eax
 00486ADA    cmp         dword ptr [ebp-10],0
>00486ADE    jne         00486AA9
 00486AE0    cmp         dword ptr [ebp-10],0
>00486AE4    jne         00486B1A
 00486AE6    mov         eax,dword ptr [ebp-4]
 00486AE9    mov         eax,dword ptr [eax+8];TCustomStatusBar.Name:TComponentName
 00486AEC    mov         dword ptr [ebp-18],eax
 00486AEF    mov         byte ptr [ebp-14],0B
 00486AF3    lea         eax,[ebp-18]
 00486AF6    push        eax
 00486AF7    push        0
 00486AF9    lea         edx,[ebp-20]
 00486AFC    mov         eax,[0056E230];^SParentGivenNotAParent:TResStringRec
 00486B01    call        LoadResString
 00486B06    mov         ecx,dword ptr [ebp-20]
 00486B09    mov         dl,1
 00486B0B    mov         eax,[0041D40C];EInvalidOperation
 00486B10    call        Exception.CreateFmt;EInvalidOperation.Create
 00486B15    call        @RaiseExcept
 00486B1A    xor         eax,eax
 00486B1C    pop         edx
 00486B1D    pop         ecx
 00486B1E    pop         ecx
 00486B1F    mov         dword ptr fs:[eax],edx
 00486B22    push        486B3C
 00486B27    lea         eax,[ebp-20]
 00486B2A    mov         edx,2
 00486B2F    call        @LStrArrayClr
 00486B34    ret
>00486B35    jmp         @HandleFinally
>00486B3A    jmp         00486B27
 00486B3C    pop         ebx
 00486B3D    mov         esp,ebp
 00486B3F    pop         ebp
 00486B40    ret         4
end;*}

//00486B44
{*procedure sub_00486B44(?:?);
begin
 00486B44    push        ebp
 00486B45    mov         ebp,esp
 00486B47    add         esp,0FFFFFFF8
 00486B4A    mov         dword ptr [ebp-8],edx
 00486B4D    mov         dword ptr [ebp-4],eax
 00486B50    mov         edx,dword ptr [ebp-8]
 00486B53    mov         eax,dword ptr [ebp-4]
 00486B56    call        00481D9C
 00486B5B    mov         eax,dword ptr [ebp-8]
 00486B5E    mov         edx,dword ptr ds:[47E678];TWinControl
 00486B64    call        @AsClass
 00486B69    mov         edx,dword ptr [ebp-4]
 00486B6C    mov         dword ptr [edx+20],eax;TWinControlActionLink.............................FClient:TWinCon...
 00486B6F    pop         ecx
 00486B70    pop         ecx
 00486B71    pop         ebp
 00486B72    ret
end;*}

//00486B74
{*function sub_00486B74:?;
begin
 00486B74    push        ebp
 00486B75    mov         ebp,esp
 00486B77    add         esp,0FFFFFFF8
 00486B7A    mov         dword ptr [ebp-4],eax
 00486B7D    mov         eax,dword ptr [ebp-4]
 00486B80    mov         edx,dword ptr [eax]
 00486B82    call        dword ptr [edx+34];TWinControlActionLink.sub_00482148
 00486B85    mov         byte ptr [ebp-5],al
 00486B88    mov         al,byte ptr [ebp-5]
 00486B8B    pop         ecx
 00486B8C    pop         ecx
 00486B8D    pop         ebp
 00486B8E    ret
end;*}

//00486B90
{*procedure sub_00486B90(?:?);
begin
 00486B90    push        ebp
 00486B91    mov         ebp,esp
 00486B93    add         esp,0FFFFFFF8
 00486B96    mov         dword ptr [ebp-8],edx
 00486B99    mov         dword ptr [ebp-4],eax
 00486B9C    mov         edx,dword ptr [ebp-8]
 00486B9F    mov         eax,dword ptr [ebp-4]
 00486BA2    call        004821F8
 00486BA7    pop         ecx
 00486BA8    pop         ecx
 00486BA9    pop         ebp
 00486BAA    ret
end;*}

//00486BAC
constructor sub_00486BAC;
begin
{*
 00486BAC    push        ebp
 00486BAD    mov         ebp,esp
 00486BAF    add         esp,0FFFFFFF0
 00486BB2    push        ebx
 00486BB3    xor         ebx,ebx
 00486BB5    mov         dword ptr [ebp-10],ebx
 00486BB8    test        dl,dl
>00486BBA    je          00486BC4
 00486BBC    add         esp,0FFFFFFF0
 00486BBF    call        @ClassCreate
 00486BC4    mov         dword ptr [ebp-0C],ecx
 00486BC7    mov         byte ptr [ebp-5],dl
 00486BCA    mov         dword ptr [ebp-4],eax
 00486BCD    xor         eax,eax
 00486BCF    push        ebp
 00486BD0    push        486CDC
 00486BD5    push        dword ptr fs:[eax]
 00486BD8    mov         dword ptr fs:[eax],esp
 00486BDB    mov         ecx,dword ptr [ebp-0C]
 00486BDE    xor         edx,edx
 00486BE0    mov         eax,dword ptr [ebp-4]
 00486BE3    call        00482250
 00486BE8    mov         eax,dword ptr [ebp-4]
 00486BEB    push        eax
 00486BEC    push        488BF4
 00486BF1    call        0042B9AC
 00486BF6    mov         edx,dword ptr [ebp-4]
 00486BF9    mov         dword ptr [edx+18C],eax;TWinControl.FObjectInstance:Pointer
 00486BFF    mov         dl,1
 00486C01    mov         eax,[0042C774];TBrush
 00486C06    call        TBrush.Create;TBrush.Create
 00486C0B    mov         edx,dword ptr [ebp-4]
 00486C0E    mov         dword ptr [edx+170],eax;TWinControl.FBrush:TBrush
 00486C14    mov         eax,dword ptr [ebp-4]
 00486C17    mov         edx,dword ptr [eax+70];TWinControl.FColor:TColor
 00486C1A    mov         eax,dword ptr [ebp-4]
 00486C1D    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 00486C23    call        TBrush.SetColor
 00486C28    mov         eax,dword ptr [ebp-4]
 00486C2B    mov         byte ptr [eax+1A9],1;TWinControl.FParentCtl3D:Boolean
 00486C32    mov         eax,dword ptr [ebp-4]
 00486C35    mov         dword ptr [eax+1A0],0FFFFFFFF;TWinControl.FTabOrder:Integer
 00486C3F    mov         eax,dword ptr [ebp-4]
 00486C42    mov         byte ptr [eax+184],3;TWinControl.FImeMode:TImeMode
 00486C49    mov         eax,[0056E638];^gvar_0057196C:Integer
 00486C4E    cmp         dword ptr [eax+4],11
>00486C52    jne         00486C63
 00486C54    mov         eax,dword ptr [ebp-4]
 00486C57    add         eax,188;TWinControl.FImeName:TImeName
 00486C5C    call        @LStrClr
>00486C61    jmp         00486C82
 00486C63    lea         edx,[ebp-10]
 00486C66    mov         eax,[0056E604];^Screen:TScreen
 00486C6B    mov         eax,dword ptr [eax]
 00486C6D    call        004A8F44
 00486C72    mov         edx,dword ptr [ebp-10]
 00486C75    mov         eax,dword ptr [ebp-4]
 00486C78    add         eax,188;TWinControl.FImeName:TImeName
 00486C7D    call        @LStrAsg
 00486C82    mov         eax,dword ptr [ebp-4]
 00486C85    mov         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
 00486C8C    mov         eax,dword ptr [ebp-4]
 00486C8F    mov         dl,byte ptr ds:[486D04];0xF gvar_00486D04
 00486C95    mov         byte ptr [eax+162],dl;TWinControl.FBevelEdges:TBevelEdges
 00486C9B    mov         eax,dword ptr [ebp-4]
 00486C9E    mov         byte ptr [eax+163],2;TWinControl.FBevelInner:TBevelCut
 00486CA5    mov         eax,dword ptr [ebp-4]
 00486CA8    mov         byte ptr [eax+164],1;TWinControl.FBevelOuter:TBevelCut
 00486CAF    mov         eax,dword ptr [ebp-4]
 00486CB2    mov         dword ptr [eax+168],1;TWinControl.FBevelWidth:TBevelWidth
 00486CBC    mov         eax,dword ptr [ebp-4]
 00486CBF    mov         byte ptr [eax+150],1;TWinControl.HelpType:THelpType
 00486CC6    xor         eax,eax
 00486CC8    pop         edx
 00486CC9    pop         ecx
 00486CCA    pop         ecx
 00486CCB    mov         dword ptr fs:[eax],edx
 00486CCE    push        486CE3
 00486CD3    lea         eax,[ebp-10]
 00486CD6    call        @LStrClr
 00486CDB    ret
>00486CDC    jmp         @HandleFinally
>00486CE1    jmp         00486CD3
 00486CE3    mov         eax,dword ptr [ebp-4]
 00486CE6    cmp         byte ptr [ebp-5],0
>00486CEA    je          00486CFB
 00486CEC    call        @AfterConstruction
 00486CF1    pop         dword ptr fs:[0]
 00486CF8    add         esp,0C
 00486CFB    mov         eax,dword ptr [ebp-4]
 00486CFE    pop         ebx
 00486CFF    mov         esp,ebp
 00486D01    pop         ebp
 00486D02    ret
*}
end;

//00486D08
{*function sub_00486D08(?:TCustomActionBar):?;
begin
 00486D08    push        ebp
 00486D09    mov         ebp,esp
 00486D0B    add         esp,0FFFFFFF8
 00486D0E    mov         dword ptr [ebp-4],eax
 00486D11    mov         eax,dword ptr [ebp-4]
 00486D14    cmp         word ptr [eax+160],0
 00486D1C    seta        byte ptr [ebp-5]
 00486D20    mov         al,byte ptr [ebp-5]
 00486D23    pop         ecx
 00486D24    pop         ecx
 00486D25    pop         ebp
 00486D26    ret
end;*}

//00486D28
destructor TWinControl.Destroy;
begin
{*
 00486D28    push        ebp
 00486D29    mov         ebp,esp
 00486D2B    add         esp,0FFFFFFF0
 00486D2E    call        @BeforeDestruction
 00486D33    mov         byte ptr [ebp-5],dl
 00486D36    mov         dword ptr [ebp-4],eax
 00486D39    mov         eax,dword ptr [ebp-4]
 00486D3C    call        0042A578
 00486D41    mov         eax,dword ptr [ebp-4]
 00486D44    cmp         byte ptr [eax+1A8],0
>00486D4B    je          00486D61
 00486D4D    mov         eax,dword ptr [ebp-4]
 00486D50    mov         byte ptr [eax+1A8],0
 00486D57    xor         edx,edx
 00486D59    mov         eax,dword ptr [ebp-4]
 00486D5C    call        004809D8
 00486D61    mov         eax,dword ptr [ebp-4]
 00486D64    add         eax,17C
 00486D69    call        @IntfClear
 00486D6E    mov         eax,dword ptr [ebp-4]
 00486D71    mov         eax,dword ptr [eax+178]
 00486D77    call        TObject.Free
 00486D7C    mov         eax,dword ptr [ebp-4]
 00486D7F    cmp         dword ptr [eax+30],0
>00486D83    je          00486D8F
 00486D85    mov         dl,1
 00486D87    mov         eax,dword ptr [ebp-4]
 00486D8A    call        00487B60
 00486D8F    mov         eax,dword ptr [ebp-4]
 00486D92    cmp         dword ptr [eax+180],0
>00486D99    je          00486DA6
 00486D9B    mov         eax,dword ptr [ebp-4]
 00486D9E    mov         edx,dword ptr [eax]
 00486DA0    call        dword ptr [edx+0AC]
 00486DA6    mov         eax,dword ptr [ebp-4]
 00486DA9    call        00487E38
 00486DAE    mov         dword ptr [ebp-0C],eax
 00486DB1    cmp         dword ptr [ebp-0C],0
>00486DB5    je          00486DEC
 00486DB7    mov         edx,dword ptr [ebp-0C]
 00486DBA    dec         edx
 00486DBB    mov         eax,dword ptr [ebp-4]
 00486DBE    call        00487DCC
 00486DC3    mov         dword ptr [ebp-10],eax
 00486DC6    mov         edx,dword ptr [ebp-10]
 00486DC9    mov         eax,dword ptr [ebp-4]
 00486DCC    call        00487BF4
 00486DD1    mov         dl,1
 00486DD3    mov         eax,dword ptr [ebp-10]
 00486DD6    mov         ecx,dword ptr [eax]
 00486DD8    call        dword ptr [ecx-4]
 00486DDB    mov         eax,dword ptr [ebp-4]
 00486DDE    call        00487E38
 00486DE3    mov         dword ptr [ebp-0C],eax
 00486DE6    cmp         dword ptr [ebp-0C],0
>00486DEA    jne         00486DB7
 00486DEC    mov         eax,dword ptr [ebp-4]
 00486DEF    mov         eax,dword ptr [eax+170]
 00486DF5    call        TObject.Free
 00486DFA    mov         eax,dword ptr [ebp-4]
 00486DFD    cmp         dword ptr [eax+18C],0
>00486E04    je          00486E14
 00486E06    mov         eax,dword ptr [ebp-4]
 00486E09    mov         eax,dword ptr [eax+18C]
 00486E0F    call        0042BA8C
 00486E14    mov         dl,byte ptr [ebp-5]
 00486E17    and         dl,0FC
 00486E1A    mov         eax,dword ptr [ebp-4]
 00486E1D    call        TControl.Destroy
 00486E22    cmp         byte ptr [ebp-5],0
>00486E26    jle         00486E30
 00486E28    mov         eax,dword ptr [ebp-4]
 00486E2B    call        @ClassDestroy
 00486E30    mov         esp,ebp
 00486E32    pop         ebp
 00486E33    ret
*}
end;

//00486E34
procedure sub_00486E34(?:TWinControl);
begin
{*
 00486E34    push        ebp
 00486E35    mov         ebp,esp
 00486E37    add         esp,0FFFFFFE4
 00486E3A    mov         dword ptr [ebp-4],eax
 00486E3D    mov         eax,dword ptr [ebp-4]
 00486E40    cmp         dword ptr [eax+19C],0
>00486E47    je          00486F33
 00486E4D    mov         dl,1
 00486E4F    mov         eax,[0041D46C];TList
 00486E54    call        TObject.Create;TList.Create
 00486E59    mov         dword ptr [ebp-14],eax
 00486E5C    xor         eax,eax
 00486E5E    push        ebp
 00486E5F    push        486F2C
 00486E64    push        dword ptr fs:[eax]
 00486E67    mov         dword ptr fs:[eax],esp
 00486E6A    mov         eax,dword ptr [ebp-4]
 00486E6D    mov         eax,dword ptr [eax+19C]
 00486E73    mov         eax,dword ptr [eax+8]
 00486E76    mov         dword ptr [ebp-8],eax
 00486E79    mov         edx,dword ptr [ebp-8]
 00486E7C    mov         eax,dword ptr [ebp-14]
 00486E7F    call        00420580
 00486E84    mov         eax,dword ptr [ebp-8]
 00486E87    dec         eax
 00486E88    test        eax,eax
>00486E8A    jl          00486EDB
 00486E8C    inc         eax
 00486E8D    mov         dword ptr [ebp-1C],eax
 00486E90    mov         dword ptr [ebp-0C],0
 00486E97    mov         eax,dword ptr [ebp-4]
 00486E9A    mov         eax,dword ptr [eax+19C]
 00486EA0    mov         edx,dword ptr [ebp-0C]
 00486EA3    call        TList.Get
 00486EA8    mov         dword ptr [ebp-18],eax
 00486EAB    mov         eax,dword ptr [ebp-18]
 00486EAE    mov         eax,dword ptr [eax+1A0]
 00486EB4    mov         dword ptr [ebp-10],eax
 00486EB7    cmp         dword ptr [ebp-10],0
>00486EBB    jl          00486ED3
 00486EBD    mov         eax,dword ptr [ebp-10]
 00486EC0    cmp         eax,dword ptr [ebp-8]
>00486EC3    jge         00486ED3
 00486EC5    mov         ecx,dword ptr [ebp-18]
 00486EC8    mov         edx,dword ptr [ebp-10]
 00486ECB    mov         eax,dword ptr [ebp-14]
 00486ECE    call        00420460
 00486ED3    inc         dword ptr [ebp-0C]
 00486ED6    dec         dword ptr [ebp-1C]
>00486ED9    jne         00486E97
 00486EDB    mov         eax,dword ptr [ebp-8]
 00486EDE    dec         eax
 00486EDF    test        eax,eax
>00486EE1    jl          00486F16
 00486EE3    inc         eax
 00486EE4    mov         dword ptr [ebp-1C],eax
 00486EE7    mov         dword ptr [ebp-0C],0
 00486EEE    mov         edx,dword ptr [ebp-0C]
 00486EF1    mov         eax,dword ptr [ebp-14]
 00486EF4    call        TList.Get
 00486EF9    mov         dword ptr [ebp-18],eax
 00486EFC    cmp         dword ptr [ebp-18],0
>00486F00    je          00486F0E
 00486F02    mov         dx,word ptr [ebp-0C]
 00486F06    mov         eax,dword ptr [ebp-18]
 00486F09    call        0048C3E4
 00486F0E    inc         dword ptr [ebp-0C]
 00486F11    dec         dword ptr [ebp-1C]
>00486F14    jne         00486EEE
 00486F16    xor         eax,eax
 00486F18    pop         edx
 00486F19    pop         ecx
 00486F1A    pop         ecx
 00486F1B    mov         dword ptr fs:[eax],edx
 00486F1E    push        486F33
 00486F23    mov         eax,dword ptr [ebp-14]
 00486F26    call        TObject.Free
 00486F2B    ret
>00486F2C    jmp         @HandleFinally
>00486F31    jmp         00486F23
 00486F33    mov         esp,ebp
 00486F35    pop         ebp
 00486F36    ret
*}
end;

//00486F38
{*procedure sub_00486F38(?:?);
begin
 00486F38    push        ebp
 00486F39    mov         ebp,esp
 00486F3B    add         esp,0FFFFFFF8
 00486F3E    mov         dword ptr [ebp-8],edx
 00486F41    mov         dword ptr [ebp-4],eax
 00486F44    mov         eax,dword ptr [ebp-4]
 00486F47    call        TWinControl.DisableAlign
 00486F4C    xor         eax,eax
 00486F4E    push        ebp
 00486F4F    push        486F7B
 00486F54    push        dword ptr fs:[eax]
 00486F57    mov         dword ptr fs:[eax],esp
 00486F5A    mov         edx,dword ptr [ebp-8]
 00486F5D    mov         eax,dword ptr [ebp-4]
 00486F60    call        00482748
 00486F65    xor         eax,eax
 00486F67    pop         edx
 00486F68    pop         ecx
 00486F69    pop         ecx
 00486F6A    mov         dword ptr fs:[eax],edx
 00486F6D    push        486F82
 00486F72    mov         eax,dword ptr [ebp-4]
 00486F75    call        TWinControl.EnableAlign
 00486F7A    ret
>00486F7B    jmp         @HandleFinally
>00486F80    jmp         00486F72
 00486F82    mov         eax,dword ptr [ebp-4]
 00486F85    call        00486E34
 00486F8A    mov         eax,dword ptr [ebp-4]
 00486F8D    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00486F91    je          00486FA4
 00486F93    push        0
 00486F95    xor         ecx,ecx
 00486F97    mov         edx,0B011
 00486F9C    mov         eax,dword ptr [ebp-4]
 00486F9F    call        00484FFC
 00486FA4    mov         eax,dword ptr [ebp-4]
 00486FA7    call        00488ADC
 00486FAC    pop         ecx
 00486FAD    pop         ecx
 00486FAE    pop         ebp
 00486FAF    ret
end;*}

//00486FB0
{*procedure sub_00486FB0(?:?);
begin
 00486FB0    push        ebp
 00486FB1    mov         ebp,esp
 00486FB3    add         esp,0FFFFFFF8
 00486FB6    mov         dword ptr [ebp-8],edx
 00486FB9    mov         dword ptr [ebp-4],eax
 00486FBC    pop         ecx
 00486FBD    pop         ecx
 00486FBE    pop         ebp
 00486FBF    ret
end;*}

//00486FC0
{*function sub_00486FC0(?:?; ?:?; ?:?; ?:?):?;
begin
 00486FC0    push        ebp
 00486FC1    mov         ebp,esp
 00486FC3    add         esp,0FFFFFFF4
 00486FC6    push        ebx
 00486FC7    mov         byte ptr [ebp-9],cl
 00486FCA    mov         dword ptr [ebp-8],edx
 00486FCD    mov         dword ptr [ebp-4],eax
 00486FD0    mov         byte ptr [ebp-0A],0
 00486FD4    xor         eax,eax
 00486FD6    mov         al,byte ptr [ebp-9]
 00486FD9    cmp         eax,6
>00486FDC    ja          00487080
 00486FE2    jmp         dword ptr [eax*4+486FE9]
 00486FE2    dd          00487080
 00486FE2    dd          00487005
 00486FE2    dd          00487017
 00486FE2    dd          00487037
 00486FE2    dd          00487049
 00486FE2    dd          00487080
 00486FE2    dd          00487069
 00487005    mov         eax,dword ptr [ebp-8]
 00487008    mov         eax,dword ptr [eax+44]
 0048700B    mov         edx,dword ptr [ebp-4]
 0048700E    cmp         eax,dword ptr [edx+44]
 00487011    setg        byte ptr [ebp-0A]
>00487015    jmp         00487080
 00487017    mov         eax,dword ptr [ebp-8]
 0048701A    mov         eax,dword ptr [eax+44]
 0048701D    mov         edx,dword ptr [ebp-8]
 00487020    add         eax,dword ptr [edx+4C]
 00487023    mov         edx,dword ptr [ebp-4]
 00487026    mov         edx,dword ptr [edx+44]
 00487029    mov         ecx,dword ptr [ebp-4]
 0048702C    add         edx,dword ptr [ecx+4C]
 0048702F    cmp         eax,edx
 00487031    setle       byte ptr [ebp-0A]
>00487035    jmp         00487080
 00487037    mov         eax,dword ptr [ebp-8]
 0048703A    mov         eax,dword ptr [eax+40]
 0048703D    mov         edx,dword ptr [ebp-4]
 00487040    cmp         eax,dword ptr [edx+40]
 00487043    setg        byte ptr [ebp-0A]
>00487047    jmp         00487080
 00487049    mov         eax,dword ptr [ebp-8]
 0048704C    mov         eax,dword ptr [eax+40]
 0048704F    mov         edx,dword ptr [ebp-8]
 00487052    add         eax,dword ptr [edx+48]
 00487055    mov         edx,dword ptr [ebp-4]
 00487058    mov         edx,dword ptr [edx+40]
 0048705B    mov         ecx,dword ptr [ebp-4]
 0048705E    add         edx,dword ptr [ecx+48]
 00487061    cmp         eax,edx
 00487063    setle       byte ptr [ebp-0A]
>00487067    jmp         00487080
 00487069    mov         eax,dword ptr [ebp+8]
 0048706C    mov         eax,dword ptr [eax-4]
 0048706F    mov         ecx,dword ptr [ebp-8]
 00487072    mov         edx,dword ptr [ebp-4]
 00487075    mov         ebx,dword ptr [eax]
 00487077    call        dword ptr [ebx+0A4]
 0048707D    mov         byte ptr [ebp-0A],al
 00487080    mov         al,byte ptr [ebp-0A]
 00487083    pop         ebx
 00487084    mov         esp,ebp
 00487086    pop         ebp
 00487087    ret
end;*}

//00487088
{*procedure sub_00487088(?:?; ?:?; ?:?; ?:?);
begin
 00487088    push        ebp
 00487089    mov         ebp,esp
 0048708B    add         esp,0FFFFFFC0
 0048708E    push        ebx
 0048708F    push        esi
 00487090    push        edi
 00487091    mov         esi,ecx
 00487093    lea         edi,[ebp-30]
 00487096    movs        dword ptr [edi],dword ptr [esi]
 00487097    movs        dword ptr [edi],dword ptr [esi]
 00487098    movs        dword ptr [edi],dword ptr [esi]
 00487099    movs        dword ptr [edi],dword ptr [esi]
 0048709A    mov         byte ptr [ebp-5],dl
 0048709D    mov         dword ptr [ebp-4],eax
 004870A0    cmp         byte ptr [ebp-5],0
>004870A4    je          004870BD
 004870A6    xor         eax,eax
 004870A8    mov         al,byte ptr [ebp-5]
 004870AB    mov         al,byte ptr [eax+56C77C]
 004870B1    mov         edx,dword ptr [ebp-4]
 004870B4    cmp         al,byte ptr [edx+61]
>004870B7    je          00487298
 004870BD    mov         eax,dword ptr [ebp-4]
 004870C0    cmp         dword ptr [eax+90],0
>004870C7    je          0048728E
 004870CD    mov         eax,dword ptr [ebp-4]
 004870D0    cmp         dword ptr [eax+94],0
>004870D7    je          0048728E
 004870DD    mov         eax,dword ptr [ebp-4]
 004870E0    mov         eax,dword ptr [eax+40]
 004870E3    mov         dword ptr [ebp-0C],eax
 004870E6    mov         eax,dword ptr [ebp-4]
 004870E9    mov         eax,dword ptr [eax+44]
 004870EC    mov         dword ptr [ebp-10],eax
 004870EF    mov         eax,dword ptr [ebp-4]
 004870F2    mov         eax,dword ptr [eax+48]
 004870F5    mov         dword ptr [ebp-14],eax
 004870F8    mov         eax,dword ptr [ebp-4]
 004870FB    mov         eax,dword ptr [eax+4C]
 004870FE    mov         dword ptr [ebp-18],eax
 00487101    mov         eax,dword ptr [ebp-4]
 00487104    mov         eax,dword ptr [eax+30]
 00487107    call        TWinControl.HandleAllocated
 0048710C    test        al,al
>0048710E    je          0048712C
 00487110    lea         edx,[ebp-40]
 00487113    mov         eax,dword ptr [ebp-4]
 00487116    mov         eax,dword ptr [eax+30]
 00487119    mov         ecx,dword ptr [eax]
 0048711B    call        dword ptr [ecx+44]
 0048711E    mov         eax,dword ptr [ebp-38]
 00487121    mov         dword ptr [ebp-20],eax
 00487124    mov         eax,dword ptr [ebp-34]
 00487127    mov         dword ptr [ebp-1C],eax
>0048712A    jmp         00487146
 0048712C    lea         ecx,[ebp-20]
 0048712F    mov         eax,dword ptr [ebp-4]
 00487132    mov         eax,dword ptr [eax+30]
 00487135    mov         edx,dword ptr [eax+4C]
 00487138    mov         eax,dword ptr [ebp-4]
 0048713B    mov         eax,dword ptr [eax+30]
 0048713E    mov         eax,dword ptr [eax+48]
 00487141    call        Point
 00487146    mov         eax,dword ptr [ebp-4]
 00487149    test        byte ptr [eax+61],4
>0048714D    je          00487190
 0048714F    mov         eax,dword ptr [ebp-4]
 00487152    test        byte ptr [eax+61],1
>00487156    je          00487174
 00487158    mov         eax,dword ptr [ebp-4]
 0048715B    mov         eax,dword ptr [eax+90]
 00487161    mov         edx,dword ptr [ebp-4]
 00487164    sub         eax,dword ptr [edx+88]
 0048716A    mov         edx,dword ptr [ebp-20]
 0048716D    sub         edx,eax
 0048716F    mov         dword ptr [ebp-14],edx
>00487172    jmp         004871C5
 00487174    mov         eax,dword ptr [ebp-4]
 00487177    mov         eax,dword ptr [eax+90]
 0048717D    mov         edx,dword ptr [ebp-4]
 00487180    sub         eax,dword ptr [edx+88]
 00487186    mov         edx,dword ptr [ebp-20]
 00487189    sub         edx,eax
 0048718B    mov         dword ptr [ebp-0C],edx
>0048718E    jmp         004871C5
 00487190    mov         eax,dword ptr [ebp-4]
 00487193    test        byte ptr [eax+61],1
>00487197    jne         004871C5
 00487199    mov         eax,dword ptr [ebp-4]
 0048719C    mov         eax,dword ptr [eax+90]
 004871A2    push        eax
 004871A3    mov         eax,dword ptr [ebp-20]
 004871A6    push        eax
 004871A7    mov         eax,dword ptr [ebp-4]
 004871AA    mov         eax,dword ptr [eax+88]
 004871B0    push        eax
 004871B1    call        kernel32.MulDiv
 004871B6    mov         edx,dword ptr [ebp-14]
 004871B9    sar         edx,1
>004871BB    jns         004871C0
 004871BD    adc         edx,0
 004871C0    sub         eax,edx
 004871C2    mov         dword ptr [ebp-0C],eax
 004871C5    mov         eax,dword ptr [ebp-4]
 004871C8    test        byte ptr [eax+61],8
>004871CC    je          0048720F
 004871CE    mov         eax,dword ptr [ebp-4]
 004871D1    test        byte ptr [eax+61],2
>004871D5    je          004871F3
 004871D7    mov         eax,dword ptr [ebp-4]
 004871DA    mov         eax,dword ptr [eax+94]
 004871E0    mov         edx,dword ptr [ebp-4]
 004871E3    sub         eax,dword ptr [edx+8C]
 004871E9    mov         edx,dword ptr [ebp-1C]
 004871EC    sub         edx,eax
 004871EE    mov         dword ptr [ebp-18],edx
>004871F1    jmp         00487244
 004871F3    mov         eax,dword ptr [ebp-4]
 004871F6    mov         eax,dword ptr [eax+94]
 004871FC    mov         edx,dword ptr [ebp-4]
 004871FF    sub         eax,dword ptr [edx+8C]
 00487205    mov         edx,dword ptr [ebp-1C]
 00487208    sub         edx,eax
 0048720A    mov         dword ptr [ebp-10],edx
>0048720D    jmp         00487244
 0048720F    mov         eax,dword ptr [ebp-4]
 00487212    test        byte ptr [eax+61],2
>00487216    jne         00487244
 00487218    mov         eax,dword ptr [ebp-4]
 0048721B    mov         eax,dword ptr [eax+94]
 00487221    push        eax
 00487222    mov         eax,dword ptr [ebp-1C]
 00487225    push        eax
 00487226    mov         eax,dword ptr [ebp-4]
 00487229    mov         eax,dword ptr [eax+8C]
 0048722F    push        eax
 00487230    call        kernel32.MulDiv
 00487235    mov         edx,dword ptr [ebp-18]
 00487238    sar         edx,1
>0048723A    jns         0048723F
 0048723C    adc         edx,0
 0048723F    sub         eax,edx
 00487241    mov         dword ptr [ebp-10],eax
 00487244    mov         eax,dword ptr [ebp-4]
 00487247    mov         byte ptr [eax+62],1
 0048724B    xor         eax,eax
 0048724D    push        ebp
 0048724E    push        487287
 00487253    push        dword ptr fs:[eax]
 00487256    mov         dword ptr fs:[eax],esp
 00487259    mov         eax,dword ptr [ebp-14]
 0048725C    push        eax
 0048725D    mov         eax,dword ptr [ebp-18]
 00487260    push        eax
 00487261    mov         ecx,dword ptr [ebp-10]
 00487264    mov         edx,dword ptr [ebp-0C]
 00487267    mov         eax,dword ptr [ebp-4]
 0048726A    mov         ebx,dword ptr [eax]
 0048726C    call        dword ptr [ebx+84]
 00487272    xor         eax,eax
 00487274    pop         edx
 00487275    pop         ecx
 00487276    pop         ecx
 00487277    mov         dword ptr fs:[eax],edx
 0048727A    push        48728E
 0048727F    mov         eax,dword ptr [ebp-4]
 00487282    mov         byte ptr [eax+62],0
 00487286    ret
>00487287    jmp         @HandleFinally
>0048728C    jmp         0048727F
 0048728E    cmp         byte ptr [ebp-5],0
>00487292    je          004874D0
 00487298    mov         eax,dword ptr [ebp+8]
 0048729B    mov         eax,dword ptr [eax-8]
 0048729E    mov         eax,dword ptr [eax+8]
 004872A1    mov         edx,dword ptr [ebp+8]
 004872A4    mov         edx,dword ptr [edx-8]
 004872A7    sub         eax,dword ptr [edx]
 004872A9    mov         dword ptr [ebp-14],eax
 004872AC    cmp         dword ptr [ebp-14],0
>004872B0    jl          004872BF
 004872B2    mov         al,byte ptr [ebp-5]
 004872B5    add         al,0FD
 004872B7    sub         al,2
>004872B9    jb          004872BF
 004872BB    sub         al,1
>004872BD    jne         004872C8
 004872BF    mov         eax,dword ptr [ebp-4]
 004872C2    mov         eax,dword ptr [eax+48]
 004872C5    mov         dword ptr [ebp-14],eax
 004872C8    mov         eax,dword ptr [ebp+8]
 004872CB    mov         eax,dword ptr [eax-8]
 004872CE    mov         eax,dword ptr [eax+0C]
 004872D1    mov         edx,dword ptr [ebp+8]
 004872D4    mov         edx,dword ptr [edx-8]
 004872D7    sub         eax,dword ptr [edx+4]
 004872DA    mov         dword ptr [ebp-18],eax
 004872DD    cmp         dword ptr [ebp-18],0
>004872E1    jl          004872EF
 004872E3    mov         al,byte ptr [ebp-5]
 004872E6    dec         eax
 004872E7    sub         al,2
>004872E9    jb          004872EF
 004872EB    sub         al,3
>004872ED    jne         004872F8
 004872EF    mov         eax,dword ptr [ebp-4]
 004872F2    mov         eax,dword ptr [eax+4C]
 004872F5    mov         dword ptr [ebp-18],eax
 004872F8    mov         eax,dword ptr [ebp+8]
 004872FB    mov         eax,dword ptr [eax-8]
 004872FE    mov         eax,dword ptr [eax]
 00487300    mov         dword ptr [ebp-0C],eax
 00487303    mov         eax,dword ptr [ebp+8]
 00487306    mov         eax,dword ptr [eax-8]
 00487309    mov         eax,dword ptr [eax+4]
 0048730C    mov         dword ptr [ebp-10],eax
 0048730F    xor         eax,eax
 00487311    mov         al,byte ptr [ebp-5]
 00487314    cmp         eax,6
>00487317    ja          004873CC
 0048731D    jmp         dword ptr [eax*4+487324]
 0048731D    dd          004873CC
 0048731D    dd          00487340
 0048731D    dd          0048734E
 0048731D    dd          00487368
 0048731D    dd          00487375
 0048731D    dd          004873CC
 0048731D    dd          0048738F
 00487340    mov         eax,dword ptr [ebp+8]
 00487343    mov         eax,dword ptr [eax-8]
 00487346    mov         edx,dword ptr [ebp-18]
 00487349    add         dword ptr [eax+4],edx
>0048734C    jmp         004873CC
 0048734E    mov         eax,dword ptr [ebp+8]
 00487351    mov         eax,dword ptr [eax-8]
 00487354    mov         edx,dword ptr [ebp-18]
 00487357    sub         dword ptr [eax+0C],edx
 0048735A    mov         eax,dword ptr [ebp+8]
 0048735D    mov         eax,dword ptr [eax-8]
 00487360    mov         eax,dword ptr [eax+0C]
 00487363    mov         dword ptr [ebp-10],eax
>00487366    jmp         004873CC
 00487368    mov         eax,dword ptr [ebp+8]
 0048736B    mov         eax,dword ptr [eax-8]
 0048736E    mov         edx,dword ptr [ebp-14]
 00487371    add         dword ptr [eax],edx
>00487373    jmp         004873CC
 00487375    mov         eax,dword ptr [ebp+8]
 00487378    mov         eax,dword ptr [eax-8]
 0048737B    mov         edx,dword ptr [ebp-14]
 0048737E    sub         dword ptr [eax+8],edx
 00487381    mov         eax,dword ptr [ebp+8]
 00487384    mov         eax,dword ptr [eax-8]
 00487387    mov         eax,dword ptr [eax+8]
 0048738A    mov         dword ptr [ebp-0C],eax
>0048738D    jmp         004873CC
 0048738F    mov         eax,dword ptr [ebp-4]
 00487392    mov         eax,dword ptr [eax+40]
 00487395    mov         dword ptr [ebp-0C],eax
 00487398    mov         eax,dword ptr [ebp-4]
 0048739B    mov         eax,dword ptr [eax+44]
 0048739E    mov         dword ptr [ebp-10],eax
 004873A1    lea         eax,[ebp-10]
 004873A4    push        eax
 004873A5    lea         eax,[ebp-14]
 004873A8    push        eax
 004873A9    lea         eax,[ebp-18]
 004873AC    push        eax
 004873AD    mov         eax,dword ptr [ebp+8]
 004873B0    mov         eax,dword ptr [eax-8]
 004873B3    push        eax
 004873B4    lea         eax,[ebp-30]
 004873B7    push        eax
 004873B8    lea         ecx,[ebp-0C]
 004873BB    mov         eax,dword ptr [ebp+8]
 004873BE    mov         eax,dword ptr [eax-4]
 004873C1    mov         edx,dword ptr [ebp-4]
 004873C4    mov         ebx,dword ptr [eax]
 004873C6    call        dword ptr [ebx+0A8]
 004873CC    mov         eax,dword ptr [ebp-4]
 004873CF    mov         byte ptr [eax+62],1
 004873D3    xor         eax,eax
 004873D5    push        ebp
 004873D6    push        48740F
 004873DB    push        dword ptr fs:[eax]
 004873DE    mov         dword ptr fs:[eax],esp
 004873E1    mov         eax,dword ptr [ebp-14]
 004873E4    push        eax
 004873E5    mov         eax,dword ptr [ebp-18]
 004873E8    push        eax
 004873E9    mov         ecx,dword ptr [ebp-10]
 004873EC    mov         edx,dword ptr [ebp-0C]
 004873EF    mov         eax,dword ptr [ebp-4]
 004873F2    mov         ebx,dword ptr [eax]
 004873F4    call        dword ptr [ebx+84]
 004873FA    xor         eax,eax
 004873FC    pop         edx
 004873FD    pop         ecx
 004873FE    pop         ecx
 004873FF    mov         dword ptr fs:[eax],edx
 00487402    push        487416
 00487407    mov         eax,dword ptr [ebp-4]
 0048740A    mov         byte ptr [eax+62],0
 0048740E    ret
>0048740F    jmp         @HandleFinally
>00487414    jmp         00487407
 00487416    mov         eax,dword ptr [ebp-4]
 00487419    mov         eax,dword ptr [eax+48]
 0048741C    cmp         eax,dword ptr [ebp-14]
>0048741F    jne         00487430
 00487421    mov         eax,dword ptr [ebp-4]
 00487424    mov         eax,dword ptr [eax+4C]
 00487427    cmp         eax,dword ptr [ebp-18]
>0048742A    je          004874D0
 00487430    xor         eax,eax
 00487432    mov         al,byte ptr [ebp-5]
 00487435    cmp         eax,5
>00487438    ja          004874D0
 0048743E    jmp         dword ptr [eax*4+487445]
 0048743E    dd          004874D0
 0048743E    dd          0048745D
 0048743E    dd          00487471
 0048743E    dd          00487485
 0048743E    dd          00487498
 0048743E    dd          004874AC
 0048745D    mov         eax,dword ptr [ebp-4]
 00487460    mov         edx,dword ptr [ebp-18]
 00487463    sub         edx,dword ptr [eax+4C]
 00487466    mov         eax,dword ptr [ebp+8]
 00487469    mov         eax,dword ptr [eax-8]
 0048746C    sub         dword ptr [eax+4],edx
>0048746F    jmp         004874D0
 00487471    mov         eax,dword ptr [ebp-4]
 00487474    mov         edx,dword ptr [ebp-18]
 00487477    sub         edx,dword ptr [eax+4C]
 0048747A    mov         eax,dword ptr [ebp+8]
 0048747D    mov         eax,dword ptr [eax-8]
 00487480    add         dword ptr [eax+0C],edx
>00487483    jmp         004874D0
 00487485    mov         eax,dword ptr [ebp-4]
 00487488    mov         edx,dword ptr [ebp-14]
 0048748B    sub         edx,dword ptr [eax+48]
 0048748E    mov         eax,dword ptr [ebp+8]
 00487491    mov         eax,dword ptr [eax-8]
 00487494    sub         dword ptr [eax],edx
>00487496    jmp         004874D0
 00487498    mov         eax,dword ptr [ebp-4]
 0048749B    mov         edx,dword ptr [ebp-14]
 0048749E    sub         edx,dword ptr [eax+48]
 004874A1    mov         eax,dword ptr [ebp+8]
 004874A4    mov         eax,dword ptr [eax-8]
 004874A7    add         dword ptr [eax+8],edx
>004874AA    jmp         004874D0
 004874AC    mov         eax,dword ptr [ebp-4]
 004874AF    mov         edx,dword ptr [ebp-14]
 004874B2    sub         edx,dword ptr [eax+48]
 004874B5    mov         eax,dword ptr [ebp+8]
 004874B8    mov         eax,dword ptr [eax-8]
 004874BB    add         dword ptr [eax+8],edx
 004874BE    mov         eax,dword ptr [ebp-4]
 004874C1    mov         edx,dword ptr [ebp-18]
 004874C4    sub         edx,dword ptr [eax+4C]
 004874C7    mov         eax,dword ptr [ebp+8]
 004874CA    mov         eax,dword ptr [eax-8]
 004874CD    add         dword ptr [eax+0C],edx
 004874D0    pop         edi
 004874D1    pop         esi
 004874D2    pop         ebx
 004874D3    mov         esp,ebp
 004874D5    pop         ebp
 004874D6    ret
end;*}

//004874D8
procedure DoAlign(AAlign:TAlign);
begin
{*
 004874D8    push        ebp
 004874D9    mov         ebp,esp
 004874DB    add         esp,0FFFFFFDC
 004874DE    mov         byte ptr [ebp-1],al
 004874E1    mov         eax,dword ptr [ebp+8]
 004874E4    mov         eax,dword ptr [eax-0C]
 004874E7    mov         edx,dword ptr [eax]
 004874E9    call        dword ptr [edx+8]
 004874EC    mov         eax,dword ptr [ebp+8]
 004874EF    cmp         dword ptr [eax-10],0
>004874F3    je          0048753E
 004874F5    cmp         byte ptr [ebp-1],0
>004874F9    je          0048751F
 004874FB    mov         eax,dword ptr [ebp+8]
 004874FE    mov         eax,dword ptr [eax-10]
 00487501    cmp         byte ptr [eax+57],0
>00487505    jne         0048751F
 00487507    mov         eax,dword ptr [ebp+8]
 0048750A    mov         eax,dword ptr [eax-10]
 0048750D    test        byte ptr [eax+1C],10
>00487511    je          0048753E
 00487513    mov         eax,dword ptr [ebp+8]
 00487516    mov         eax,dword ptr [eax-10]
 00487519    test        byte ptr [eax+51],4
>0048751D    jne         0048753E
 0048751F    mov         eax,dword ptr [ebp+8]
 00487522    mov         eax,dword ptr [eax-10]
 00487525    mov         al,byte ptr [eax+5B]
 00487528    cmp         al,byte ptr [ebp-1]
>0048752B    jne         0048753E
 0048752D    mov         eax,dword ptr [ebp+8]
 00487530    mov         edx,dword ptr [eax-10]
 00487533    mov         eax,dword ptr [ebp+8]
 00487536    mov         eax,dword ptr [eax-0C]
 00487539    call        TList.Add
 0048753E    mov         eax,dword ptr [ebp+8]
 00487541    mov         eax,dword ptr [eax-4]
 00487544    call        00487E38
 00487549    dec         eax
 0048754A    test        eax,eax
>0048754C    jl          00487617
 00487552    inc         eax
 00487553    mov         dword ptr [ebp-14],eax
 00487556    mov         dword ptr [ebp-8],0
 0048755D    mov         eax,dword ptr [ebp+8]
 00487560    mov         eax,dword ptr [eax-4]
 00487563    mov         edx,dword ptr [ebp-8]
 00487566    call        00487DCC
 0048756B    mov         dword ptr [ebp-10],eax
 0048756E    mov         eax,dword ptr [ebp-10]
 00487571    mov         al,byte ptr [eax+5B]
 00487574    cmp         al,byte ptr [ebp-1]
>00487577    jne         0048760B
 0048757D    cmp         byte ptr [ebp-1],0
>00487581    je          004875B3
 00487583    mov         eax,dword ptr [ebp-10]
 00487586    cmp         byte ptr [eax+57],0
>0048758A    jne         004875B3
 0048758C    mov         eax,[00487670]
 00487591    mov         edx,dword ptr [ebp-10]
 00487594    and         eax,dword ptr [edx+50]
 00487597    mov         edx,dword ptr ds:[487670]
 0048759D    cmp         edx,eax
>0048759F    je          004875B3
 004875A1    mov         eax,dword ptr [ebp-10]
 004875A4    test        byte ptr [eax+1C],10
>004875A8    je          0048760B
 004875AA    mov         eax,dword ptr [ebp-10]
 004875AD    test        byte ptr [eax+51],4
>004875B1    jne         0048760B
 004875B3    mov         eax,dword ptr [ebp+8]
 004875B6    mov         eax,dword ptr [eax-10]
 004875B9    cmp         eax,dword ptr [ebp-10]
>004875BC    je          0048760B
 004875BE    xor         eax,eax
 004875C0    mov         dword ptr [ebp-0C],eax
>004875C3    jmp         004875C8
 004875C5    inc         dword ptr [ebp-0C]
 004875C8    mov         eax,dword ptr [ebp+8]
 004875CB    mov         eax,dword ptr [eax-0C]
 004875CE    mov         eax,dword ptr [eax+8]
 004875D1    cmp         eax,dword ptr [ebp-0C]
>004875D4    jle         004875FA
 004875D6    mov         eax,dword ptr [ebp+8]
 004875D9    push        eax
 004875DA    mov         eax,dword ptr [ebp+8]
 004875DD    mov         eax,dword ptr [eax-0C]
 004875E0    mov         edx,dword ptr [ebp-0C]
 004875E3    call        TList.Get
 004875E8    mov         edx,eax
 004875EA    mov         cl,byte ptr [ebp-1]
 004875ED    mov         eax,dword ptr [ebp-10]
 004875F0    call        00486FC0
 004875F5    pop         ecx
 004875F6    test        al,al
>004875F8    je          004875C5
 004875FA    mov         eax,dword ptr [ebp+8]
 004875FD    mov         eax,dword ptr [eax-0C]
 00487600    mov         ecx,dword ptr [ebp-10]
 00487603    mov         edx,dword ptr [ebp-0C]
 00487606    call        00420308
 0048760B    inc         dword ptr [ebp-8]
 0048760E    dec         dword ptr [ebp-14]
>00487611    jne         0048755D
 00487617    mov         eax,dword ptr [ebp+8]
 0048761A    mov         eax,dword ptr [eax-0C]
 0048761D    mov         eax,dword ptr [eax+8]
 00487620    dec         eax
 00487621    test        eax,eax
>00487623    jl          0048766B
 00487625    inc         eax
 00487626    mov         dword ptr [ebp-14],eax
 00487629    mov         dword ptr [ebp-8],0
 00487630    mov         eax,dword ptr [ebp+8]
 00487633    mov         eax,dword ptr [eax-0C]
 00487636    mov         dword ptr [ebp-24],eax
 00487639    mov         eax,dword ptr [ebp-8]
 0048763C    mov         dword ptr [ebp-20],eax
 0048763F    mov         al,byte ptr [ebp-1]
 00487642    mov         byte ptr [ebp-1C],al
 00487645    mov         eax,dword ptr [ebp+8]
 00487648    push        eax
 00487649    mov         eax,dword ptr [ebp+8]
 0048764C    mov         eax,dword ptr [eax-0C]
 0048764F    mov         edx,dword ptr [ebp-8]
 00487652    call        TList.Get
 00487657    lea         ecx,[ebp-24]
 0048765A    mov         dl,byte ptr [ebp-1]
 0048765D    call        00487088
 00487662    pop         ecx
 00487663    inc         dword ptr [ebp-8]
 00487666    dec         dword ptr [ebp-14]
>00487669    jne         00487630
 0048766B    mov         esp,ebp
 0048766D    pop         ebp
 0048766E    ret
*}
end;

//00487674
function AlignWork:Boolean;
begin
{*
 00487674    push        ebp
 00487675    mov         ebp,esp
 00487677    add         esp,0FFFFFFF8
 0048767A    mov         byte ptr [ebp-1],1
 0048767E    mov         eax,dword ptr [ebp+8]
 00487681    mov         eax,dword ptr [eax-4]
 00487684    call        00487E38
 00487689    dec         eax
 0048768A    cmp         eax,0
>0048768D    jl          004876C8
 0048768F    mov         dword ptr [ebp-8],eax
 00487692    mov         eax,dword ptr [ebp+8]
 00487695    mov         eax,dword ptr [eax-4]
 00487698    mov         edx,dword ptr [ebp-8]
 0048769B    call        00487DCC
 004876A0    cmp         byte ptr [eax+5B],0
>004876A4    jne         004876CC
 004876A6    mov         eax,dword ptr [ebp+8]
 004876A9    mov         eax,dword ptr [eax-4]
 004876AC    mov         edx,dword ptr [ebp-8]
 004876AF    call        00487DCC
 004876B4    mov         dl,byte ptr ds:[4876D4]
 004876BA    cmp         dl,byte ptr [eax+61]
>004876BD    jne         004876CC
 004876BF    dec         dword ptr [ebp-8]
 004876C2    cmp         dword ptr [ebp-8],0FFFFFFFF
>004876C6    jne         00487692
 004876C8    mov         byte ptr [ebp-1],0
 004876CC    mov         al,byte ptr [ebp-1]
 004876CF    pop         ecx
 004876D0    pop         ecx
 004876D1    pop         ebp
 004876D2    ret
*}
end;

//004876D8
procedure TWinControl.AlignControls(AControl:TControl; var Rect:TRect);
begin
{*
 004876D8    push        ebp
 004876D9    mov         ebp,esp
 004876DB    add         esp,0FFFFFFF0
 004876DE    push        esi
 004876DF    mov         dword ptr [ebp-8],ecx
 004876E2    mov         dword ptr [ebp-10],edx
 004876E5    mov         dword ptr [ebp-4],eax
 004876E8    mov         eax,dword ptr [ebp-4]
 004876EB    cmp         byte ptr [eax+1A8],0
>004876F2    je          0048771C
 004876F4    mov         eax,dword ptr [ebp-4]
 004876F7    cmp         byte ptr [eax+1A7],0
>004876FE    je          0048771C
 00487700    mov         eax,dword ptr [ebp-4]
 00487703    cmp         dword ptr [eax+17C],0
>0048770A    je          0048771C
 0048770C    mov         eax,dword ptr [ebp-4]
 0048770F    mov         eax,dword ptr [eax+17C]
 00487715    xor         edx,edx
 00487717    mov         ecx,dword ptr [eax]
 00487719    call        dword ptr [ecx+2C]
 0048771C    push        ebp
 0048771D    call        AlignWork
 00487722    pop         ecx
 00487723    test        al,al
>00487725    je          004877BE
 0048772B    mov         edx,dword ptr [ebp-8]
 0048772E    mov         eax,dword ptr [ebp-4]
 00487731    mov         ecx,dword ptr [eax]
 00487733    call        dword ptr [ecx+8C]
 00487739    mov         dl,1
 0048773B    mov         eax,[0041D46C];TList
 00487740    call        TObject.Create
 00487745    mov         dword ptr [ebp-0C],eax
 00487748    xor         eax,eax
 0048774A    push        ebp
 0048774B    push        4877B7
 00487750    push        dword ptr fs:[eax]
 00487753    mov         dword ptr fs:[eax],esp
 00487756    push        ebp
 00487757    mov         al,1
 00487759    call        DoAlign
 0048775E    pop         ecx
 0048775F    push        ebp
 00487760    mov         al,2
 00487762    call        DoAlign
 00487767    pop         ecx
 00487768    push        ebp
 00487769    mov         al,3
 0048776B    call        DoAlign
 00487770    pop         ecx
 00487771    push        ebp
 00487772    mov         al,4
 00487774    call        DoAlign
 00487779    pop         ecx
 0048777A    push        ebp
 0048777B    mov         al,5
 0048777D    call        DoAlign
 00487782    pop         ecx
 00487783    push        ebp
 00487784    mov         al,6
 00487786    call        DoAlign
 0048778B    pop         ecx
 0048778C    push        ebp
 0048778D    xor         eax,eax
 0048778F    call        DoAlign
 00487794    pop         ecx
 00487795    mov         eax,dword ptr [ebp-4]
 00487798    mov         si,0FFC7
 0048779C    call        @CallDynaInst
 004877A1    xor         eax,eax
 004877A3    pop         edx
 004877A4    pop         ecx
 004877A5    pop         ecx
 004877A6    mov         dword ptr fs:[eax],edx
 004877A9    push        4877BE
 004877AE    mov         eax,dword ptr [ebp-0C]
 004877B1    call        TObject.Free
 004877B6    ret
>004877B7    jmp         @HandleFinally
>004877BC    jmp         004877AE
 004877BE    mov         eax,dword ptr [ebp-4]
 004877C1    cmp         byte ptr [eax+1A6],0
>004877C8    je          004877D6
 004877CA    mov         eax,dword ptr [ebp-4]
 004877CD    mov         si,0FFEE
 004877D1    call        @CallDynaInst
 004877D6    pop         esi
 004877D7    mov         esp,ebp
 004877D9    pop         ebp
 004877DA    ret
*}
end;

//004877DC
procedure sub_004877DC(?:TWinControl; ?:TControl);
begin
{*
 004877DC    push        ebp
 004877DD    mov         ebp,esp
 004877DF    add         esp,0FFFFFFE8
 004877E2    push        ebx
 004877E3    mov         dword ptr [ebp-8],edx
 004877E6    mov         dword ptr [ebp-4],eax
 004877E9    mov         eax,dword ptr [ebp-4]
 004877EC    call        TWinControl.HandleAllocated
 004877F1    test        al,al
>004877F3    je          0048786C
 004877F5    mov         eax,dword ptr [ebp-4]
 004877F8    test        byte ptr [eax+1C],8;TWinControl.FComponentState:TComponentState
>004877FC    jne         0048786C
 004877FE    mov         eax,dword ptr [ebp-4]
 00487801    cmp         word ptr [eax+160],0;TWinControl.FAlignLevel:Word
>00487809    je          00487815
 0048780B    mov         eax,dword ptr [ebp-4]
 0048780E    or          word ptr [eax+54],10;TWinControl.FControlState:TControlState
>00487813    jmp         0048786C
 00487815    mov         eax,dword ptr [ebp-4]
 00487818    call        TWinControl.DisableAlign
 0048781D    xor         eax,eax
 0048781F    push        ebp
 00487820    push        487865
 00487825    push        dword ptr fs:[eax]
 00487828    mov         dword ptr fs:[eax],esp
 0048782B    lea         edx,[ebp-18]
 0048782E    mov         eax,dword ptr [ebp-4]
 00487831    mov         ecx,dword ptr [eax]
 00487833    call        dword ptr [ecx+44];TWinControl.sub_0048C23C
 00487836    lea         ecx,[ebp-18]
 00487839    mov         edx,dword ptr [ebp-8]
 0048783C    mov         eax,dword ptr [ebp-4]
 0048783F    mov         ebx,dword ptr [eax]
 00487841    call        dword ptr [ebx+90];TWinControl.AlignControls
 00487847    xor         eax,eax
 00487849    pop         edx
 0048784A    pop         ecx
 0048784B    pop         ecx
 0048784C    mov         dword ptr fs:[eax],edx
 0048784F    push        48786C
 00487854    mov         eax,dword ptr [ebp-4]
 00487857    and         word ptr [eax+54],0FFFFFFEF;TWinControl.FControlState:TControlState
 0048785C    mov         eax,dword ptr [ebp-4]
 0048785F    call        TWinControl.EnableAlign
 00487864    ret
>00487865    jmp         @HandleFinally
>0048786A    jmp         00487854
 0048786C    pop         ebx
 0048786D    mov         esp,ebp
 0048786F    pop         ebp
 00487870    ret
*}
end;

//00487874
procedure TWinControl.DisableAlign;
begin
{*
 00487874    push        ebp
 00487875    mov         ebp,esp
 00487877    push        ecx
 00487878    mov         dword ptr [ebp-4],eax
 0048787B    mov         eax,dword ptr [ebp-4]
 0048787E    inc         word ptr [eax+160]
 00487885    pop         ecx
 00487886    pop         ebp
 00487887    ret
*}
end;

//00487888
procedure TWinControl.EnableAlign;
begin
{*
 00487888    push        ebp
 00487889    mov         ebp,esp
 0048788B    push        ecx
 0048788C    mov         dword ptr [ebp-4],eax
 0048788F    mov         eax,dword ptr [ebp-4]
 00487892    dec         word ptr [eax+160]
 00487899    mov         eax,dword ptr [ebp-4]
 0048789C    cmp         word ptr [eax+160],0
>004878A4    jne         004878B7
 004878A6    mov         eax,dword ptr [ebp-4]
 004878A9    test        byte ptr [eax+54],10
>004878AD    je          004878B7
 004878AF    mov         eax,dword ptr [ebp-4]
 004878B2    call        004878BC
 004878B7    pop         ecx
 004878B8    pop         ebp
 004878B9    ret
*}
end;

//004878BC
procedure sub_004878BC(?:TWinControl);
begin
{*
 004878BC    push        ebp
 004878BD    mov         ebp,esp
 004878BF    push        ecx
 004878C0    mov         dword ptr [ebp-4],eax
 004878C3    xor         edx,edx
 004878C5    mov         eax,dword ptr [ebp-4]
 004878C8    call        004877DC
 004878CD    pop         ecx
 004878CE    pop         ebp
 004878CF    ret
*}
end;

//004878D0
procedure TWinControl.sub_004878D0;
begin
{*
 004878D0    push        ebp
 004878D1    mov         ebp,esp
 004878D3    add         esp,0FFFFFFE8
 004878D6    mov         dword ptr [ebp-4],eax
 004878D9    mov         dl,1
 004878DB    mov         eax,[0041D46C];TList
 004878E0    call        TObject.Create;TList.Create
 004878E5    mov         dword ptr [ebp-10],eax
 004878E8    xor         eax,eax
 004878EA    push        ebp
 004878EB    push        4879B6
 004878F0    push        dword ptr fs:[eax]
 004878F3    mov         dword ptr fs:[eax],esp
 004878F6    mov         eax,dword ptr [ebp-4]
 004878F9    call        TControl.GetClientWidth
 004878FE    mov         dword ptr [ebp-0C],eax
 00487901    mov         eax,dword ptr [ebp-4]
 00487904    call        00487E38
 00487909    dec         eax
 0048790A    test        eax,eax
>0048790C    jl          00487969
 0048790E    inc         eax
 0048790F    mov         dword ptr [ebp-14],eax
 00487912    mov         dword ptr [ebp-8],0
 00487919    mov         edx,dword ptr [ebp-8]
 0048791C    mov         eax,dword ptr [ebp-4]
 0048791F    call        00487DCC
 00487924    mov         dword ptr [ebp-18],eax
 00487927    mov         eax,dword ptr [ebp-18]
 0048792A    mov         eax,dword ptr [eax+4]
 0048792D    mov         edx,dword ptr [ebp-4]
 00487930    cmp         eax,dword ptr [edx+4];TWinControl.FOwner:TComponent
>00487933    jne         00487961
 00487935    mov         edx,dword ptr [ebp-8]
 00487938    mov         eax,dword ptr [ebp-4]
 0048793B    call        00487DCC
 00487940    mov         edx,eax
 00487942    mov         eax,dword ptr [ebp-10]
 00487945    call        TList.Add
 0048794A    mov         eax,dword ptr [ebp-18]
 0048794D    mov         edx,dword ptr [ebp-0C]
 00487950    sub         edx,dword ptr [eax+48]
 00487953    mov         eax,dword ptr [ebp-18]
 00487956    sub         edx,dword ptr [eax+40]
 00487959    mov         eax,dword ptr [ebp-18]
 0048795C    call        TControl.SetLeft
 00487961    inc         dword ptr [ebp-8]
 00487964    dec         dword ptr [ebp-14]
>00487967    jne         00487919
 00487969    mov         eax,dword ptr [ebp-10]
 0048796C    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048796F    dec         eax
 00487970    test        eax,eax
>00487972    jl          004879A0
 00487974    inc         eax
 00487975    mov         dword ptr [ebp-14],eax
 00487978    mov         dword ptr [ebp-8],0
 0048797F    push        0
 00487981    mov         edx,dword ptr [ebp-8]
 00487984    mov         eax,dword ptr [ebp-10]
 00487987    call        TList.Get
 0048798C    xor         ecx,ecx
 0048798E    mov         edx,0B03E
 00487993    call        00484FFC
 00487998    inc         dword ptr [ebp-8]
 0048799B    dec         dword ptr [ebp-14]
>0048799E    jne         0048797F
 004879A0    xor         eax,eax
 004879A2    pop         edx
 004879A3    pop         ecx
 004879A4    pop         ecx
 004879A5    mov         dword ptr fs:[eax],edx
 004879A8    push        4879BD
 004879AD    mov         eax,dword ptr [ebp-10]
 004879B0    call        TObject.Free
 004879B5    ret
>004879B6    jmp         @HandleFinally
>004879BB    jmp         004879AD
 004879BD    mov         esp,ebp
 004879BF    pop         ebp
 004879C0    ret
*}
end;

//004879C4
{*procedure TWinControl.sub_004879C4(?:?);
begin
 004879C4    push        ebp
 004879C5    mov         ebp,esp
 004879C7    add         esp,0FFFFFFE4
 004879CA    push        esi
 004879CB    mov         byte ptr [ebp-5],dl
 004879CE    mov         dword ptr [ebp-4],eax
 004879D1    mov         eax,dword ptr [ebp-4]
 004879D4    call        00487E38
 004879D9    test        eax,eax
>004879DB    je          00487B27
 004879E1    mov         dl,1
 004879E3    mov         eax,[0041D46C];TList
 004879E8    call        TObject.Create;TList.Create
 004879ED    mov         dword ptr [ebp-10],eax
 004879F0    mov         eax,dword ptr [ebp-4]
 004879F3    call        TWinControl.DisableAlign
 004879F8    xor         eax,eax
 004879FA    push        ebp
 004879FB    push        487ACA
 00487A00    push        dword ptr fs:[eax]
 00487A03    mov         dword ptr fs:[eax],esp
 00487A06    mov         eax,dword ptr [ebp-4]
 00487A09    call        00487E38
 00487A0E    dec         eax
 00487A0F    test        eax,eax
>00487A11    jl          00487A55
 00487A13    inc         eax
 00487A14    mov         dword ptr [ebp-14],eax
 00487A17    mov         dword ptr [ebp-0C],0
 00487A1E    mov         edx,dword ptr [ebp-0C]
 00487A21    mov         eax,dword ptr [ebp-4]
 00487A24    call        00487DCC
 00487A29    mov         dword ptr [ebp-18],eax
 00487A2C    mov         eax,dword ptr [ebp-18]
 00487A2F    mov         al,byte ptr [eax+5B]
 00487A32    add         al,0FD
 00487A34    sub         al,2
>00487A36    jae         00487A4D
 00487A38    mov         edx,dword ptr [ebp-0C]
 00487A3B    mov         eax,dword ptr [ebp-4]
 00487A3E    call        00487DCC
 00487A43    mov         edx,eax
 00487A45    mov         eax,dword ptr [ebp-10]
 00487A48    call        TList.Add
 00487A4D    inc         dword ptr [ebp-0C]
 00487A50    dec         dword ptr [ebp-14]
>00487A53    jne         00487A1E
 00487A55    mov         eax,dword ptr [ebp-4]
 00487A58    mov         si,0FFC0
 00487A5C    call        @CallDynaInst;TWinControl.sub_004878D0
 00487A61    xor         eax,eax
 00487A63    pop         edx
 00487A64    pop         ecx
 00487A65    pop         ecx
 00487A66    mov         dword ptr fs:[eax],edx
 00487A69    push        487AD1
>00487A6E    jmp         00487AB0
 00487A70    mov         eax,dword ptr [ebp-10]
 00487A73    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 00487A76    dec         edx
 00487A77    mov         eax,dword ptr [ebp-10]
 00487A7A    call        TList.Get
 00487A7F    mov         dword ptr [ebp-1C],eax
 00487A82    mov         eax,dword ptr [ebp-1C]
 00487A85    cmp         byte ptr [eax+5B],3
>00487A89    jne         00487A97
 00487A8B    mov         dl,4
 00487A8D    mov         eax,dword ptr [ebp-1C]
 00487A90    call        TImage.SetAlign
>00487A95    jmp         00487AA1
 00487A97    mov         dl,3
 00487A99    mov         eax,dword ptr [ebp-1C]
 00487A9C    call        TImage.SetAlign
 00487AA1    mov         eax,dword ptr [ebp-10]
 00487AA4    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 00487AA7    dec         edx
 00487AA8    mov         eax,dword ptr [ebp-10]
 00487AAB    call        00420094
 00487AB0    mov         eax,dword ptr [ebp-10]
 00487AB3    cmp         dword ptr [eax+8],0;TList.FCount:Integer
>00487AB7    jg          00487A70
 00487AB9    mov         eax,dword ptr [ebp-10]
 00487ABC    call        TObject.Free
 00487AC1    mov         eax,dword ptr [ebp-4]
 00487AC4    call        TWinControl.EnableAlign
 00487AC9    ret
>00487ACA    jmp         @HandleFinally
>00487ACF    jmp         00487AB0
 00487AD1    cmp         byte ptr [ebp-5],0
>00487AD5    je          00487B27
 00487AD7    mov         eax,dword ptr [ebp-4]
 00487ADA    call        00487E38
 00487ADF    dec         eax
 00487AE0    test        eax,eax
>00487AE2    jl          00487B27
 00487AE4    inc         eax
 00487AE5    mov         dword ptr [ebp-14],eax
 00487AE8    mov         dword ptr [ebp-0C],0
 00487AEF    mov         edx,dword ptr [ebp-0C]
 00487AF2    mov         eax,dword ptr [ebp-4]
 00487AF5    call        00487DCC
 00487AFA    mov         edx,dword ptr ds:[47E678];TWinControl
 00487B00    call        @IsClass
 00487B05    test        al,al
>00487B07    je          00487B1F
 00487B09    mov         edx,dword ptr [ebp-0C]
 00487B0C    mov         eax,dword ptr [ebp-4]
 00487B0F    call        00487DCC
 00487B14    mov         dl,1
 00487B16    mov         si,0FFB6
 00487B1A    call        @CallDynaInst
 00487B1F    inc         dword ptr [ebp-0C]
 00487B22    dec         dword ptr [ebp-14]
>00487B25    jne         00487AEF
 00487B27    pop         esi
 00487B28    mov         esp,ebp
 00487B2A    pop         ebp
 00487B2B    ret
end;*}

//00487B2C
{*function sub_00487B2C(?:TWinControl; ?:?):?;
begin
 00487B2C    push        ebp
 00487B2D    mov         ebp,esp
 00487B2F    add         esp,0FFFFFFF4
 00487B32    mov         dword ptr [ebp-8],edx
 00487B35    mov         dword ptr [ebp-4],eax
>00487B38    jmp         00487B43
 00487B3A    mov         eax,dword ptr [ebp-8]
 00487B3D    mov         eax,dword ptr [eax+30]
 00487B40    mov         dword ptr [ebp-8],eax
 00487B43    cmp         dword ptr [ebp-8],0
>00487B47    je          00487B51
 00487B49    mov         eax,dword ptr [ebp-8]
 00487B4C    cmp         eax,dword ptr [ebp-4]
>00487B4F    jne         00487B3A
 00487B51    cmp         dword ptr [ebp-8],0
 00487B55    setne       byte ptr [ebp-9]
 00487B59    mov         al,byte ptr [ebp-9]
 00487B5C    mov         esp,ebp
 00487B5E    pop         ebp
 00487B5F    ret
end;*}

//00487B60
{*procedure sub_00487B60(?:TControl; ?:?);
begin
 00487B60    push        ebp
 00487B61    mov         ebp,esp
 00487B63    add         esp,0FFFFFFF4
 00487B66    mov         byte ptr [ebp-5],dl
 00487B69    mov         dword ptr [ebp-4],eax
 00487B6C    mov         eax,dword ptr [ebp-4]
 00487B6F    call        004A0740
 00487B74    mov         dword ptr [ebp-0C],eax
 00487B77    cmp         dword ptr [ebp-0C],0
>00487B7B    je          00487B8B
 00487B7D    mov         cl,byte ptr [ebp-5]
 00487B80    mov         edx,dword ptr [ebp-4]
 00487B83    mov         eax,dword ptr [ebp-0C]
 00487B86    call        004A5370
 00487B8B    mov         esp,ebp
 00487B8D    pop         ebp
 00487B8E    ret
end;*}

//00487B90
{*procedure sub_00487B90(?:?; ?:TControl);
begin
 00487B90    push        ebp
 00487B91    mov         ebp,esp
 00487B93    add         esp,0FFFFFFF8
 00487B96    mov         dword ptr [ebp-8],edx
 00487B99    mov         dword ptr [ebp-4],eax
 00487B9C    cmp         dword ptr [ebp-8],0
>00487BA0    je          00487BEF
 00487BA2    mov         eax,dword ptr [ebp-8]
 00487BA5    mov         edx,dword ptr ds:[47E678];TWinControl
 00487BAB    call        @IsClass
 00487BB0    test        al,al
>00487BB2    je          00487BD6
 00487BB4    mov         eax,dword ptr [ebp-4]
 00487BB7    add         eax,19C
 00487BBC    mov         edx,dword ptr [ebp-8]
 00487BBF    call        004817F4
 00487BC4    mov         eax,dword ptr [ebp-4]
 00487BC7    add         eax,194
 00487BCC    mov         edx,dword ptr [ebp-8]
 00487BCF    call        004817F4
>00487BD4    jmp         00487BE6
 00487BD6    mov         eax,dword ptr [ebp-4]
 00487BD9    add         eax,198
 00487BDE    mov         edx,dword ptr [ebp-8]
 00487BE1    call        004817F4
 00487BE6    mov         eax,dword ptr [ebp-4]
 00487BE9    mov         edx,dword ptr [ebp-8]
 00487BEC    mov         dword ptr [edx+30],eax
 00487BEF    pop         ecx
 00487BF0    pop         ecx
 00487BF1    pop         ebp
 00487BF2    ret
end;*}

//00487BF4
procedure sub_00487BF4(?:TWinControl; ?:TControl);
begin
{*
 00487BF4    push        ebp
 00487BF5    mov         ebp,esp
 00487BF7    add         esp,0FFFFFFF8
 00487BFA    mov         dword ptr [ebp-8],edx
 00487BFD    mov         dword ptr [ebp-4],eax
 00487C00    mov         eax,dword ptr [ebp-8]
 00487C03    mov         edx,dword ptr ds:[47E678];TWinControl
 00487C09    call        @IsClass
 00487C0E    test        al,al
>00487C10    je          00487C34
 00487C12    mov         eax,dword ptr [ebp-4]
 00487C15    add         eax,194
 00487C1A    mov         edx,dword ptr [ebp-8]
 00487C1D    call        0048182C
 00487C22    mov         eax,dword ptr [ebp-4]
 00487C25    add         eax,19C
 00487C2A    mov         edx,dword ptr [ebp-8]
 00487C2D    call        0048182C
>00487C32    jmp         00487C44
 00487C34    mov         eax,dword ptr [ebp-4]
 00487C37    add         eax,198
 00487C3C    mov         edx,dword ptr [ebp-8]
 00487C3F    call        0048182C
 00487C44    mov         eax,dword ptr [ebp-8]
 00487C47    xor         edx,edx
 00487C49    mov         dword ptr [eax+30],edx
 00487C4C    pop         ecx
 00487C4D    pop         ecx
 00487C4E    pop         ebp
 00487C4F    ret
*}
end;

//00487C50
{*procedure sub_00487C50(?:?; ?:TControl);
begin
 00487C50    push        ebp
 00487C51    mov         ebp,esp
 00487C53    add         esp,0FFFFFFF8
 00487C56    push        esi
 00487C57    mov         dword ptr [ebp-8],edx
 00487C5A    mov         dword ptr [ebp-4],eax
 00487C5D    mov         edx,dword ptr [ebp-4]
 00487C60    mov         eax,dword ptr [ebp-8]
 00487C63    mov         si,0FFF5
 00487C67    call        @CallDynaInst;TComponent.sub_0042A958
 00487C6C    push        1
 00487C6E    mov         ecx,dword ptr [ebp-8]
 00487C71    mov         edx,0B02C
 00487C76    mov         eax,dword ptr [ebp-4]
 00487C79    call        00484FFC
 00487C7E    mov         edx,dword ptr [ebp-8]
 00487C81    mov         eax,dword ptr [ebp-4]
 00487C84    call        00487B90
 00487C89    mov         eax,dword ptr [ebp-8]
 00487C8C    test        byte ptr [eax+1C],2;TControl.FComponentState:TComponentState
>00487C90    jne         00487D26
 00487C96    push        0
 00487C98    xor         ecx,ecx
 00487C9A    mov         edx,0B009
 00487C9F    mov         eax,dword ptr [ebp-8]
 00487CA2    call        00484FFC
 00487CA7    push        0
 00487CA9    xor         ecx,ecx
 00487CAB    mov         edx,0B008
 00487CB0    mov         eax,dword ptr [ebp-8]
 00487CB3    call        00484FFC
 00487CB8    push        0
 00487CBA    xor         ecx,ecx
 00487CBC    mov         edx,0B023
 00487CC1    mov         eax,dword ptr [ebp-8]
 00487CC4    call        00484FFC
 00487CC9    push        0
 00487CCB    xor         ecx,ecx
 00487CCD    mov         edx,0B03D
 00487CD2    mov         eax,dword ptr [ebp-8]
 00487CD5    call        00484FFC
 00487CDA    mov         eax,dword ptr [ebp-8]
 00487CDD    mov         edx,dword ptr ds:[47E678];TWinControl
 00487CE3    call        @IsClass
 00487CE8    test        al,al
>00487CEA    je          00487D07
 00487CEC    push        0
 00487CEE    xor         ecx,ecx
 00487CF0    mov         edx,0B011
 00487CF5    mov         eax,dword ptr [ebp-8]
 00487CF8    call        00484FFC
 00487CFD    mov         eax,dword ptr [ebp-4]
 00487D00    call        00488ADC
>00487D05    jmp         00487D1B
 00487D07    mov         eax,dword ptr [ebp-4]
 00487D0A    call        TWinControl.HandleAllocated
 00487D0F    test        al,al
>00487D11    je          00487D1B
 00487D13    mov         eax,dword ptr [ebp-8]
 00487D16    mov         edx,dword ptr [eax]
 00487D18    call        dword ptr [edx+7C];TControl.sub_00483F08
 00487D1B    mov         edx,dword ptr [ebp-8]
 00487D1E    mov         eax,dword ptr [ebp-4]
 00487D21    call        004877DC
 00487D26    push        1
 00487D28    mov         ecx,dword ptr [ebp-8]
 00487D2B    mov         edx,0B036
 00487D30    mov         eax,dword ptr [ebp-4]
 00487D33    call        00484FFC
 00487D38    pop         esi
 00487D39    pop         ecx
 00487D3A    pop         ecx
 00487D3B    pop         ebp
 00487D3C    ret
end;*}

//00487D40
procedure sub_00487D40(?:TWinControl; ?:TControl);
begin
{*
 00487D40    push        ebp
 00487D41    mov         ebp,esp
 00487D43    add         esp,0FFFFFFF8
 00487D46    mov         dword ptr [ebp-8],edx
 00487D49    mov         dword ptr [ebp-4],eax
 00487D4C    push        0
 00487D4E    mov         ecx,dword ptr [ebp-8]
 00487D51    mov         edx,0B036
 00487D56    mov         eax,dword ptr [ebp-4]
 00487D59    call        00484FFC
 00487D5E    mov         eax,dword ptr [ebp-8]
 00487D61    mov         edx,dword ptr ds:[47E678];TWinControl
 00487D67    call        @IsClass
 00487D6C    test        al,al
>00487D6E    je          00487D84
 00487D70    mov         dl,1
 00487D72    mov         eax,dword ptr [ebp-8]
 00487D75    call        00487B60
 00487D7A    mov         eax,dword ptr [ebp-8]
 00487D7D    call        004888E4
>00487D82    jmp         00487DA0
 00487D84    mov         eax,dword ptr [ebp-4]
 00487D87    call        TWinControl.HandleAllocated
 00487D8C    test        al,al
>00487D8E    je          00487DA0
 00487D90    xor         ecx,ecx
 00487D92    mov         eax,dword ptr [ebp-8]
 00487D95    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 00487D98    mov         eax,dword ptr [ebp-8]
 00487D9B    call        00483E7C
 00487DA0    mov         edx,dword ptr [ebp-8]
 00487DA3    mov         eax,dword ptr [ebp-4]
 00487DA6    call        00487BF4
 00487DAB    push        0
 00487DAD    mov         ecx,dword ptr [ebp-8]
 00487DB0    mov         edx,0B02C
 00487DB5    mov         eax,dword ptr [ebp-4]
 00487DB8    call        00484FFC
 00487DBD    mov         eax,dword ptr [ebp-4]
 00487DC0    call        004878BC
 00487DC5    pop         ecx
 00487DC6    pop         ecx
 00487DC7    pop         ebp
 00487DC8    ret
*}
end;

//00487DCC
{*function sub_00487DCC(?:TWinControl; ?:?):?;
begin
 00487DCC    push        ebp
 00487DCD    mov         ebp,esp
 00487DCF    add         esp,0FFFFFFF0
 00487DD2    mov         dword ptr [ebp-8],edx
 00487DD5    mov         dword ptr [ebp-4],eax
 00487DD8    mov         eax,dword ptr [ebp-4]
 00487DDB    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>00487DE2    je          00487DF5
 00487DE4    mov         eax,dword ptr [ebp-4]
 00487DE7    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00487DED    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 00487DF0    mov         dword ptr [ebp-10],eax
>00487DF3    jmp         00487DFA
 00487DF5    xor         eax,eax
 00487DF7    mov         dword ptr [ebp-10],eax
 00487DFA    mov         eax,dword ptr [ebp-8]
 00487DFD    cmp         eax,dword ptr [ebp-10]
>00487E00    jge         00487E18
 00487E02    mov         edx,dword ptr [ebp-8]
 00487E05    mov         eax,dword ptr [ebp-4]
 00487E08    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00487E0E    call        TList.Get
 00487E13    mov         dword ptr [ebp-0C],eax
>00487E16    jmp         00487E2F
 00487E18    mov         edx,dword ptr [ebp-8]
 00487E1B    sub         edx,dword ptr [ebp-10]
 00487E1E    mov         eax,dword ptr [ebp-4]
 00487E21    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 00487E27    call        TList.Get
 00487E2C    mov         dword ptr [ebp-0C],eax
 00487E2F    mov         eax,dword ptr [ebp-0C]
 00487E32    mov         esp,ebp
 00487E34    pop         ebp
 00487E35    ret
end;*}

//00487E38
{*function sub_00487E38(?:TWinControl):?;
begin
 00487E38    push        ebp
 00487E39    mov         ebp,esp
 00487E3B    add         esp,0FFFFFFF8
 00487E3E    mov         dword ptr [ebp-4],eax
 00487E41    xor         eax,eax
 00487E43    mov         dword ptr [ebp-8],eax
 00487E46    mov         eax,dword ptr [ebp-4]
 00487E49    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>00487E50    je          00487E61
 00487E52    mov         eax,dword ptr [ebp-4]
 00487E55    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00487E5B    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 00487E5E    add         dword ptr [ebp-8],eax
 00487E61    mov         eax,dword ptr [ebp-4]
 00487E64    cmp         dword ptr [eax+19C],0;TWinControl.FWinControls:TList
>00487E6B    je          00487E7C
 00487E6D    mov         eax,dword ptr [ebp-4]
 00487E70    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 00487E76    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 00487E79    add         dword ptr [ebp-8],eax
 00487E7C    mov         eax,dword ptr [ebp-8]
 00487E7F    pop         ecx
 00487E80    pop         ecx
 00487E81    pop         ebp
 00487E82    ret
end;*}

//00487E84
{*procedure sub_00487E84(?:TWinControl; ?:?);
begin
 00487E84    push        ebp
 00487E85    mov         ebp,esp
 00487E87    add         esp,0FFFFFFF0
 00487E8A    push        ebx
 00487E8B    mov         dword ptr [ebp-8],edx
 00487E8E    mov         dword ptr [ebp-4],eax
 00487E91    mov         eax,dword ptr [ebp-4]
 00487E94    call        00487E38
 00487E99    dec         eax
 00487E9A    test        eax,eax
>00487E9C    jl          00487ED0
 00487E9E    inc         eax
 00487E9F    mov         dword ptr [ebp-10],eax
 00487EA2    mov         dword ptr [ebp-0C],0
 00487EA9    mov         edx,dword ptr [ebp-0C]
 00487EAC    mov         eax,dword ptr [ebp-4]
 00487EAF    call        00487DCC
 00487EB4    mov         ebx,eax
 00487EB6    mov         edx,dword ptr [ebp-8]
 00487EB9    mov         eax,dword ptr [ebx+3C]
 00487EBC    call        dword ptr [ebx+38]
 00487EBF    mov         eax,dword ptr [ebp-8]
 00487EC2    cmp         dword ptr [eax+0C],0
>00487EC6    jne         00487ED0
 00487EC8    inc         dword ptr [ebp-0C]
 00487ECB    dec         dword ptr [ebp-10]
>00487ECE    jne         00487EA9
 00487ED0    pop         ebx
 00487ED1    mov         esp,ebp
 00487ED3    pop         ebp
 00487ED4    ret
end;*}

//00487ED8
{*procedure sub_00487ED8(?:TWinControl; ?:?);
begin
 00487ED8    push        ebp
 00487ED9    mov         ebp,esp
 00487EDB    add         esp,0FFFFFFE8
 00487EDE    mov         word ptr [ebp-6],dx
 00487EE2    mov         dword ptr [ebp-4],eax
 00487EE5    movzx       eax,word ptr [ebp-6]
 00487EE9    mov         dword ptr [ebp-16],eax
 00487EEC    xor         eax,eax
 00487EEE    mov         dword ptr [ebp-12],eax
 00487EF1    xor         eax,eax
 00487EF3    mov         dword ptr [ebp-0E],eax
 00487EF6    xor         eax,eax
 00487EF8    mov         dword ptr [ebp-0A],eax
 00487EFB    lea         edx,[ebp-16]
 00487EFE    mov         eax,dword ptr [ebp-4]
 00487F01    call        00487E84
 00487F06    mov         esp,ebp
 00487F08    pop         ebp
 00487F09    ret
end;*}

//00487F0C
{*procedure sub_00487F0C(?:TWinControl; ?:?; ?:?);
begin
 00487F0C    push        ebp
 00487F0D    mov         ebp,esp
 00487F0F    add         esp,0FFFFFFF0
 00487F12    mov         dword ptr [ebp-0C],ecx
 00487F15    mov         dword ptr [ebp-8],edx
 00487F18    mov         dword ptr [ebp-4],eax
 00487F1B    cmp         dword ptr [ebp-0C],0
>00487F1F    je          00487FAE
 00487F25    mov         eax,dword ptr [ebp-8]
 00487F28    mov         eax,dword ptr [eax+34]
 00487F2B    mov         dword ptr [ebp-10],eax
 00487F2E    mov         eax,dword ptr [ebp-8]
 00487F31    add         eax,24
 00487F34    push        eax
 00487F35    mov         eax,dword ptr [ebp-0C]
 00487F38    push        eax
 00487F39    mov         eax,[0056F668];0x0 HInstance:LongWord
 00487F3E    push        eax
 00487F3F    call        user32.GetClassInfoA
 00487F44    test        eax,eax
>00487F46    jne         00487F91
 00487F48    mov         eax,dword ptr [ebp-8]
 00487F4B    add         eax,24
 00487F4E    push        eax
 00487F4F    mov         eax,dword ptr [ebp-0C]
 00487F52    push        eax
 00487F53    push        0
 00487F55    call        user32.GetClassInfoA
 00487F5A    test        eax,eax
>00487F5C    jne         00487F91
 00487F5E    mov         eax,dword ptr [ebp-8]
 00487F61    add         eax,24
 00487F64    push        eax
 00487F65    mov         eax,dword ptr [ebp-0C]
 00487F68    push        eax
 00487F69    mov         eax,[0056E19C];^MainInstance:Cardinal
 00487F6E    mov         eax,dword ptr [eax]
 00487F70    push        eax
 00487F71    call        user32.GetClassInfoA
 00487F76    test        eax,eax
>00487F78    jne         00487F91
 00487F7A    mov         eax,dword ptr [ebp-8]
 00487F7D    add         eax,24
 00487F80    push        eax
 00487F81    mov         eax,dword ptr [ebp-0C]
 00487F84    push        eax
 00487F85    mov         eax,dword ptr [ebp-8]
 00487F88    mov         eax,dword ptr [eax+34]
 00487F8B    push        eax
 00487F8C    call        user32.GetClassInfoA
 00487F91    mov         eax,dword ptr [ebp-8]
 00487F94    mov         edx,dword ptr [ebp-10]
 00487F97    mov         dword ptr [eax+34],edx
 00487F9A    mov         eax,dword ptr [ebp-8]
 00487F9D    mov         eax,dword ptr [eax+24]
 00487FA0    and         eax,0FFFFBF1F
 00487FA5    or          eax,3
 00487FA8    mov         edx,dword ptr [ebp-8]
 00487FAB    mov         dword ptr [edx+24],eax
 00487FAE    mov         esp,ebp
 00487FB0    pop         ebp
 00487FB1    ret
end;*}

//00487FB4
{*procedure sub_00487FB4(?:TWinControl; ?:?);
begin
 00487FB4    push        ebp
 00487FB5    mov         ebp,esp
 00487FB7    add         esp,0FFFFFFF8
 00487FBA    push        esi
 00487FBB    mov         dword ptr [ebp-8],edx
 00487FBE    mov         dword ptr [ebp-4],eax
 00487FC1    mov         eax,dword ptr [ebp-4]
 00487FC4    call        0048412C
 00487FC9    test        al,al
>00487FCB    je          00487FD6
 00487FCD    mov         eax,dword ptr [ebp-8]
 00487FD0    or          dword ptr [eax],2000
 00487FD6    mov         eax,dword ptr [ebp-4]
 00487FD9    call        0048418C
 00487FDE    test        al,al
>00487FE0    je          00487FEB
 00487FE2    mov         eax,dword ptr [ebp-8]
 00487FE5    or          dword ptr [eax],4000
 00487FEB    mov         eax,dword ptr [ebp-4]
 00487FEE    mov         si,0FFC8
 00487FF2    call        @CallDynaInst
 00487FF7    test        al,al
>00487FF9    je          0048802C
 00487FFB    mov         eax,dword ptr [ebp-4]
 00487FFE    mov         si,0FFCA
 00488002    call        @CallDynaInst
 00488007    test        al,al
>00488009    jne         00488016
 0048800B    mov         eax,dword ptr [ebp-8]
 0048800E    or          dword ptr [eax],1000
>00488014    jmp         0048802C
 00488016    mov         eax,dword ptr [ebp-4]
 00488019    mov         si,0FFCA
 0048801D    call        @CallDynaInst
 00488022    cmp         al,1
>00488024    jne         0048802C
 00488026    mov         eax,dword ptr [ebp-8]
 00488029    or          dword ptr [eax],0
 0048802C    pop         esi
 0048802D    pop         ecx
 0048802E    pop         ecx
 0048802F    pop         ebp
 00488030    ret
end;*}

//00488034
{*procedure sub_00488034(?:?);
begin
 00488034    push        ebp
 00488035    mov         ebp,esp
 00488037    add         esp,0FFFFFEF4
 0048803D    xor         ecx,ecx
 0048803F    mov         dword ptr [ebp-0C],ecx
 00488042    mov         dword ptr [ebp-8],edx
 00488045    mov         dword ptr [ebp-4],eax
 00488048    xor         eax,eax
 0048804A    push        ebp
 0048804B    push        4881B2
 00488050    push        dword ptr fs:[eax]
 00488053    mov         dword ptr fs:[eax],esp
 00488056    mov         eax,dword ptr [ebp-8]
 00488059    xor         ecx,ecx
 0048805B    mov         edx,8C
 00488060    call        @FillChar
 00488065    mov         eax,dword ptr [ebp-8]
 00488068    mov         edx,dword ptr [ebp-4]
 0048806B    mov         edx,dword ptr [edx+64];TWinControl.FText:PChar
 0048806E    mov         dword ptr [eax],edx
 00488070    mov         eax,dword ptr [ebp-8]
 00488073    mov         dword ptr [eax+4],44000000
 0048807A    mov         edx,dword ptr [ebp-8]
 0048807D    add         edx,8
 00488080    mov         eax,dword ptr [ebp-4]
 00488083    call        00487FB4
 00488088    mov         eax,dword ptr [ebp-4]
 0048808B    test        byte ptr [eax+50],1;TWinControl.FControlStyle:TControlStyle
>0048808F    je          004880A5
 00488091    mov         eax,dword ptr [ebp-8]
 00488094    or          dword ptr [eax+4],2000000
 0048809B    mov         eax,dword ptr [ebp-8]
 0048809E    or          dword ptr [eax+8],10000
 004880A5    mov         eax,dword ptr [ebp-4]
 004880A8    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004880AC    jne         004880C4
 004880AE    mov         eax,dword ptr [ebp-4]
 004880B1    mov         edx,dword ptr [eax]
 004880B3    call        dword ptr [edx+50];TImage.GetEnabled
 004880B6    test        al,al
>004880B8    jne         004880C4
 004880BA    mov         eax,dword ptr [ebp-8]
 004880BD    or          dword ptr [eax+4],8000000
 004880C4    mov         eax,dword ptr [ebp-4]
 004880C7    cmp         byte ptr [eax+1A4],0;TWinControl.FTabStop:Boolean
>004880CE    je          004880DA
 004880D0    mov         eax,dword ptr [ebp-8]
 004880D3    or          dword ptr [eax+4],10000
 004880DA    mov         eax,dword ptr [ebp-8]
 004880DD    mov         edx,dword ptr [ebp-4]
 004880E0    mov         edx,dword ptr [edx+40];TWinControl.Left:Integer
 004880E3    mov         dword ptr [eax+0C],edx
 004880E6    mov         eax,dword ptr [ebp-8]
 004880E9    mov         edx,dword ptr [ebp-4]
 004880EC    mov         edx,dword ptr [edx+44];TWinControl.Top:Integer
 004880EF    mov         dword ptr [eax+10],edx
 004880F2    mov         eax,dword ptr [ebp-8]
 004880F5    mov         edx,dword ptr [ebp-4]
 004880F8    mov         edx,dword ptr [edx+48];TWinControl.Width:Integer
 004880FB    mov         dword ptr [eax+14],edx
 004880FE    mov         eax,dword ptr [ebp-8]
 00488101    mov         edx,dword ptr [ebp-4]
 00488104    mov         edx,dword ptr [edx+4C];TWinControl.Height:Integer
 00488107    mov         dword ptr [eax+18],edx
 0048810A    mov         eax,dword ptr [ebp-4]
 0048810D    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00488111    je          00488126
 00488113    mov         eax,dword ptr [ebp-4]
 00488116    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 00488119    call        TWinControl.GetHandle
 0048811E    mov         edx,dword ptr [ebp-8]
 00488121    mov         dword ptr [edx+1C],eax
>00488124    jmp         00488135
 00488126    mov         eax,dword ptr [ebp-8]
 00488129    mov         edx,dword ptr [ebp-4]
 0048812C    mov         edx,dword ptr [edx+190];TWinControl.FParentWindow:HWND
 00488132    mov         dword ptr [eax+1C],edx
 00488135    mov         eax,dword ptr [ebp-8]
 00488138    mov         dword ptr [eax+24],0B
 0048813F    mov         eax,407EFC;user32.DefWindowProcA:Longint
 00488144    mov         edx,dword ptr [ebp-8]
 00488147    mov         dword ptr [edx+28],eax
 0048814A    push        7F00
 0048814F    push        0
 00488151    call        user32.LoadCursorA
 00488156    mov         edx,dword ptr [ebp-8]
 00488159    mov         dword ptr [edx+3C],eax
 0048815C    mov         eax,dword ptr [ebp-8]
 0048815F    xor         edx,edx
 00488161    mov         dword ptr [eax+40],edx
 00488164    mov         eax,dword ptr [ebp-8]
 00488167    mov         edx,dword ptr ds:[56F668];0x0 HInstance:LongWord
 0048816D    mov         dword ptr [eax+34],edx
 00488170    lea         edx,[ebp-10C]
 00488176    mov         eax,dword ptr [ebp-4]
 00488179    mov         eax,dword ptr [eax]
 0048817B    call        TObject.ClassName
 00488180    lea         edx,[ebp-10C]
 00488186    lea         eax,[ebp-0C]
 00488189    call        @LStrFromString
 0048818E    mov         edx,dword ptr [ebp-0C]
 00488191    mov         eax,dword ptr [ebp-8]
 00488194    add         eax,4C
 00488197    call        0040CEE4
 0048819C    xor         eax,eax
 0048819E    pop         edx
 0048819F    pop         ecx
 004881A0    pop         ecx
 004881A1    mov         dword ptr fs:[eax],edx
 004881A4    push        4881B9
 004881A9    lea         eax,[ebp-0C]
 004881AC    call        @LStrClr
 004881B1    ret
>004881B2    jmp         @HandleFinally
>004881B7    jmp         004881A9
 004881B9    mov         esp,ebp
 004881BB    pop         ebp
 004881BC    ret
end;*}

//004881C0
procedure TWinControl.CreateWnd;
begin
{*
 004881C0    push        ebp
 004881C1    mov         ebp,esp
 004881C3    add         esp,0FFFFFF38
 004881C9    push        esi
 004881CA    xor         edx,edx
 004881CC    mov         dword ptr [ebp-0C8],edx
 004881D2    mov         dword ptr [ebp-4],eax
 004881D5    xor         eax,eax
 004881D7    push        ebp
 004881D8    push        4883CA
 004881DD    push        dword ptr fs:[eax]
 004881E0    mov         dword ptr fs:[eax],esp
 004881E3    lea         edx,[ebp-94]
 004881E9    mov         eax,dword ptr [ebp-4]
 004881EC    mov         ecx,dword ptr [eax]
 004881EE    call        dword ptr [ecx+98]
 004881F4    cmp         dword ptr [ebp-78],0
>004881F8    jne         00488284
 004881FE    test        byte ptr [ebp-8D],40
>00488205    je          00488284
 00488207    mov         eax,dword ptr [ebp-4]
 0048820A    cmp         dword ptr [eax+4],0
>0048820E    je          00488241
 00488210    mov         eax,dword ptr [ebp-4]
 00488213    mov         eax,dword ptr [eax+4]
 00488216    test        byte ptr [eax+1C],2
>0048821A    je          00488241
 0048821C    mov         eax,dword ptr [ebp-4]
 0048821F    mov         eax,dword ptr [eax+4]
 00488222    mov         edx,dword ptr ds:[47E678];TWinControl
 00488228    call        @IsClass
 0048822D    test        al,al
>0048822F    je          00488241
 00488231    mov         eax,dword ptr [ebp-4]
 00488234    mov         eax,dword ptr [eax+4]
 00488237    call        TWinControl.GetHandle
 0048823C    mov         dword ptr [ebp-78],eax
>0048823F    jmp         00488284
 00488241    mov         eax,dword ptr [ebp-4]
 00488244    mov         eax,dword ptr [eax+8]
 00488247    mov         dword ptr [ebp-0C4],eax
 0048824D    mov         byte ptr [ebp-0C0],0B
 00488254    lea         eax,[ebp-0C4]
 0048825A    push        eax
 0048825B    push        0
 0048825D    lea         edx,[ebp-0C8]
 00488263    mov         eax,[0056E43C];^SParentRequired:TResStringRec
 00488268    call        LoadResString
 0048826D    mov         ecx,dword ptr [ebp-0C8]
 00488273    mov         dl,1
 00488275    mov         eax,[0041D40C];EInvalidOperation
 0048827A    call        Exception.CreateFmt
 0048827F    call        @RaiseExcept
 00488284    mov         eax,dword ptr [ebp-6C]
 00488287    mov         edx,dword ptr [ebp-4]
 0048828A    mov         dword ptr [edx+174],eax
 00488290    lea         eax,[ebp-0BC]
 00488296    push        eax
 00488297    lea         eax,[ebp-48]
 0048829A    push        eax
 0048829B    mov         eax,dword ptr [ebp-60]
 0048829E    push        eax
 0048829F    call        user32.GetClassInfoA
 004882A4    cmp         eax,1
 004882A7    sbb         eax,eax
 004882A9    inc         eax
 004882AA    mov         byte ptr [ebp-5],al
 004882AD    cmp         byte ptr [ebp-5],0
>004882B1    je          004882C0
 004882B3    mov         eax,47F6A0;sub_0047F6A0
 004882B8    cmp         eax,dword ptr [ebp-0B8]
>004882BE    je          004882F3
 004882C0    cmp         byte ptr [ebp-5],0
>004882C4    je          004882D3
 004882C6    mov         eax,dword ptr [ebp-60]
 004882C9    push        eax
 004882CA    lea         eax,[ebp-48]
 004882CD    push        eax
 004882CE    call        user32.UnregisterClassA
 004882D3    mov         dword ptr [ebp-6C],47F6A0;sub_0047F6A0
 004882DA    lea         eax,[ebp-48]
 004882DD    mov         dword ptr [ebp-4C],eax
 004882E0    lea         eax,[ebp-70]
 004882E3    push        eax
 004882E4    call        user32.RegisterClassA
 004882E9    test        ax,ax
>004882EC    jne         004882F3
 004882EE    call        RaiseLastOSError
 004882F3    mov         eax,dword ptr [ebp-4]
 004882F6    mov         [0056C774],eax;gvar_0056C774
 004882FB    lea         edx,[ebp-94]
 00488301    mov         eax,dword ptr [ebp-4]
 00488304    mov         ecx,dword ptr [eax]
 00488306    call        dword ptr [ecx+9C]
 0048830C    mov         eax,dword ptr [ebp-4]
 0048830F    cmp         dword ptr [eax+180],0
>00488316    jne         0048831D
 00488318    call        RaiseLastOSError
 0048831D    push        0F0
 0048831F    mov         eax,dword ptr [ebp-4]
 00488322    mov         eax,dword ptr [eax+180]
 00488328    push        eax
 00488329    call        user32.GetWindowLongA
 0048832E    test        eax,40000000
>00488333    je          00488365
 00488335    push        0F4
 00488337    mov         eax,dword ptr [ebp-4]
 0048833A    mov         eax,dword ptr [eax+180]
 00488340    push        eax
 00488341    call        user32.GetWindowLongA
 00488346    test        eax,eax
>00488348    jne         00488365
 0048834A    mov         eax,dword ptr [ebp-4]
 0048834D    mov         eax,dword ptr [eax+180]
 00488353    push        eax
 00488354    push        0F4
 00488356    mov         eax,dword ptr [ebp-4]
 00488359    mov         eax,dword ptr [eax+180]
 0048835F    push        eax
 00488360    call        user32.SetWindowLongA
 00488365    mov         eax,dword ptr [ebp-4]
 00488368    mov         eax,dword ptr [eax+64]
 0048836B    call        0040D12C
 00488370    mov         eax,dword ptr [ebp-4]
 00488373    xor         edx,edx
 00488375    mov         dword ptr [eax+64],edx
 00488378    mov         eax,dword ptr [ebp-4]
 0048837B    call        0048C5D8
 00488380    push        1
 00488382    mov         eax,dword ptr [ebp-4]
 00488385    mov         eax,dword ptr [eax+68]
 00488388    call        0042E12C
 0048838D    mov         ecx,eax
 0048838F    mov         edx,30
 00488394    mov         eax,dword ptr [ebp-4]
 00488397    call        00484FFC
 0048839C    mov         eax,dword ptr [ebp-4]
 0048839F    cmp         byte ptr [eax+5C],0
>004883A3    je          004883B1
 004883A5    mov         eax,dword ptr [ebp-4]
 004883A8    mov         si,0FFEE
 004883AC    call        @CallDynaInst
 004883B1    xor         eax,eax
 004883B3    pop         edx
 004883B4    pop         ecx
 004883B5    pop         ecx
 004883B6    mov         dword ptr fs:[eax],edx
 004883B9    push        4883D1
 004883BE    lea         eax,[ebp-0C8]
 004883C4    call        @LStrClr
 004883C9    ret
>004883CA    jmp         @HandleFinally
>004883CF    jmp         004883BE
 004883D1    pop         esi
 004883D2    mov         esp,ebp
 004883D4    pop         ebp
 004883D5    ret
*}
end;

//004883D8
{*procedure sub_004883D8(?:?);
begin
 004883D8    push        ebp
 004883D9    mov         ebp,esp
 004883DB    add         esp,0FFFFFFF8
 004883DE    mov         dword ptr [ebp-8],edx
 004883E1    mov         dword ptr [ebp-4],eax
 004883E4    mov         eax,dword ptr [ebp-8]
 004883E7    mov         eax,dword ptr [eax+4]
 004883EA    push        eax
 004883EB    mov         eax,dword ptr [ebp-8]
 004883EE    mov         eax,dword ptr [eax+0C]
 004883F1    push        eax
 004883F2    mov         eax,dword ptr [ebp-8]
 004883F5    mov         eax,dword ptr [eax+10]
 004883F8    push        eax
 004883F9    mov         eax,dword ptr [ebp-8]
 004883FC    mov         eax,dword ptr [eax+14]
 004883FF    push        eax
 00488400    mov         eax,dword ptr [ebp-8]
 00488403    mov         eax,dword ptr [eax+18]
 00488406    push        eax
 00488407    mov         eax,dword ptr [ebp-8]
 0048840A    mov         eax,dword ptr [eax+1C]
 0048840D    push        eax
 0048840E    push        0
 00488410    mov         eax,dword ptr [ebp-8]
 00488413    mov         eax,dword ptr [eax+34]
 00488416    push        eax
 00488417    mov         eax,dword ptr [ebp-8]
 0048841A    mov         eax,dword ptr [eax+20]
 0048841D    push        eax
 0048841E    mov         ecx,dword ptr [ebp-8]
 00488421    mov         ecx,dword ptr [ecx]
 00488423    mov         edx,dword ptr [ebp-8]
 00488426    add         edx,4C
 00488429    mov         eax,dword ptr [ebp-8]
 0048842C    mov         eax,dword ptr [eax+8]
 0048842F    call        004086E4
 00488434    mov         edx,dword ptr [ebp-4]
 00488437    mov         dword ptr [edx+180],eax;TWinControl.FHandle:HWND
 0048843D    pop         ecx
 0048843E    pop         ecx
 0048843F    pop         ebp
 00488440    ret
end;*}

//00488444
procedure TWinControl.ReadDesignSize(Reader:TReader);
begin
{*
 00488444    push        ebp
 00488445    mov         ebp,esp
 00488447    add         esp,0FFFFFFF8
 0048844A    mov         dword ptr [ebp-8],edx
 0048844D    mov         dword ptr [ebp-4],eax
 00488450    mov         eax,dword ptr [ebp-8]
 00488453    call        TReader.ReadListBegin
 00488458    mov         eax,dword ptr [ebp-8]
 0048845B    call        00425E24
 00488460    mov         edx,dword ptr [ebp-4]
 00488463    mov         dword ptr [edx+1FA],eax
 00488469    mov         eax,dword ptr [ebp-8]
 0048846C    call        00425E24
 00488471    mov         edx,dword ptr [ebp-4]
 00488474    mov         dword ptr [edx+1FE],eax
 0048847A    mov         eax,dword ptr [ebp-4]
 0048847D    or          byte ptr [eax+98],20
 00488484    mov         eax,dword ptr [ebp-8]
 00488487    call        TReader.ReadListEnd
 0048848C    pop         ecx
 0048848D    pop         ecx
 0048848E    pop         ebp
 0048848F    ret
*}
end;

//00488490
procedure TWinControl.WriteDesignSize(Writer:TWriter);
begin
{*
 00488490    push        ebp
 00488491    mov         ebp,esp
 00488493    add         esp,0FFFFFFE8
 00488496    mov         dword ptr [ebp-8],edx
 00488499    mov         dword ptr [ebp-4],eax
 0048849C    lea         edx,[ebp-18]
 0048849F    mov         eax,dword ptr [ebp-4]
 004884A2    mov         ecx,dword ptr [eax]
 004884A4    call        dword ptr [ecx+44]
 004884A7    mov         eax,dword ptr [ebp-4]
 004884AA    mov         edx,dword ptr [ebp-10]
 004884AD    mov         dword ptr [eax+1FA],edx
 004884B3    mov         edx,dword ptr [ebp-0C]
 004884B6    mov         dword ptr [eax+1FE],edx
 004884BC    mov         eax,dword ptr [ebp-8]
 004884BF    call        0042841C
 004884C4    mov         eax,dword ptr [ebp-4]
 004884C7    mov         edx,dword ptr [eax+1FA]
 004884CD    mov         eax,dword ptr [ebp-8]
 004884D0    call        00428340
 004884D5    mov         eax,dword ptr [ebp-4]
 004884D8    mov         edx,dword ptr [eax+1FE]
 004884DE    mov         eax,dword ptr [ebp-8]
 004884E1    call        00428340
 004884E6    mov         eax,dword ptr [ebp-8]
 004884E9    call        00428430
 004884EE    mov         esp,ebp
 004884F0    pop         ebp
 004884F1    ret
*}
end;

//004884F4
{*function sub_004884F4(?:?; ?:?):?;
begin
 004884F4    push        ebp
 004884F5    mov         ebp,esp
 004884F7    add         esp,0FFFFFFF4
 004884FA    mov         dword ptr [ebp-8],edx
 004884FD    mov         dword ptr [ebp-4],eax
 00488500    mov         eax,dword ptr [ebp-4]
 00488503    mov         eax,dword ptr [eax]
 00488505    mov         edx,dword ptr [ebp-8]
 00488508    cmp         eax,dword ptr [edx]
>0048850A    jne         0048851A
 0048850C    mov         eax,dword ptr [ebp-4]
 0048850F    mov         eax,dword ptr [eax+4]
 00488512    mov         edx,dword ptr [ebp-8]
 00488515    cmp         eax,dword ptr [edx+4]
>00488518    je          0048851E
 0048851A    xor         eax,eax
>0048851C    jmp         00488520
 0048851E    mov         al,1
 00488520    mov         byte ptr [ebp-9],al
 00488523    mov         al,byte ptr [ebp-9]
 00488526    mov         esp,ebp
 00488528    pop         ebp
 00488529    ret
end;*}

//0048852C
function DoWriteDesignSize:Boolean;
begin
{*
 0048852C    push        ebp
 0048852D    mov         ebp,esp
 0048852F    add         esp,0FFFFFFEC
 00488532    mov         byte ptr [ebp-1],1
 00488536    mov         eax,dword ptr [ebp+8]
 00488539    mov         eax,dword ptr [eax-4]
 0048853C    cmp         dword ptr [eax+20],0
>00488540    je          0048856E
 00488542    mov         eax,dword ptr [ebp+8]
 00488545    push        eax
 00488546    mov         eax,dword ptr [ebp+8]
 00488549    mov         eax,dword ptr [eax-4]
 0048854C    mov         eax,dword ptr [eax+20]
 0048854F    lea         edx,[eax+1FA]
 00488555    mov         eax,dword ptr [ebp+8]
 00488558    mov         eax,dword ptr [eax-8]
 0048855B    add         eax,1FA
 00488560    call        004884F4
 00488565    pop         ecx
 00488566    test        al,al
>00488568    jne         00488636
 0048856E    mov         eax,dword ptr [ebp+8]
 00488571    mov         eax,dword ptr [eax-8]
 00488574    cmp         dword ptr [eax+198],0
>0048857B    je          004885D2
 0048857D    mov         eax,dword ptr [ebp+8]
 00488580    mov         eax,dword ptr [eax-8]
 00488583    mov         eax,dword ptr [eax+198]
 00488589    mov         eax,dword ptr [eax+8]
 0048858C    dec         eax
 0048858D    test        eax,eax
>0048858F    jl          004885D2
 00488591    inc         eax
 00488592    mov         dword ptr [ebp-0C],eax
 00488595    mov         dword ptr [ebp-8],0
 0048859C    mov         eax,dword ptr [ebp+8]
 0048859F    mov         eax,dword ptr [eax-8]
 004885A2    mov         eax,dword ptr [eax+198]
 004885A8    mov         edx,dword ptr [ebp-8]
 004885AB    call        TList.Get
 004885B0    mov         dword ptr [ebp-10],eax
 004885B3    mov         eax,dword ptr [ebp-10]
 004885B6    cmp         byte ptr [eax+5B],0
>004885BA    jne         004885CA
 004885BC    mov         eax,dword ptr [ebp-10]
 004885BF    mov         dl,byte ptr ds:[488644]
 004885C5    cmp         dl,byte ptr [eax+61]
>004885C8    jne         0048863A
 004885CA    inc         dword ptr [ebp-8]
 004885CD    dec         dword ptr [ebp-0C]
>004885D0    jne         0048859C
 004885D2    mov         eax,dword ptr [ebp+8]
 004885D5    mov         eax,dword ptr [eax-8]
 004885D8    cmp         dword ptr [eax+19C],0
>004885DF    je          00488636
 004885E1    mov         eax,dword ptr [ebp+8]
 004885E4    mov         eax,dword ptr [eax-8]
 004885E7    mov         eax,dword ptr [eax+19C]
 004885ED    mov         eax,dword ptr [eax+8]
 004885F0    dec         eax
 004885F1    test        eax,eax
>004885F3    jl          00488636
 004885F5    inc         eax
 004885F6    mov         dword ptr [ebp-0C],eax
 004885F9    mov         dword ptr [ebp-8],0
 00488600    mov         eax,dword ptr [ebp+8]
 00488603    mov         eax,dword ptr [eax-8]
 00488606    mov         eax,dword ptr [eax+19C]
 0048860C    mov         edx,dword ptr [ebp-8]
 0048860F    call        TList.Get
 00488614    mov         dword ptr [ebp-14],eax
 00488617    mov         eax,dword ptr [ebp-14]
 0048861A    cmp         byte ptr [eax+5B],0
>0048861E    jne         0048862E
 00488620    mov         eax,dword ptr [ebp-14]
 00488623    mov         dl,byte ptr ds:[488644]
 00488629    cmp         dl,byte ptr [eax+61]
>0048862C    jne         0048863A
 0048862E    inc         dword ptr [ebp-8]
 00488631    dec         dword ptr [ebp-0C]
>00488634    jne         00488600
 00488636    mov         byte ptr [ebp-1],0
 0048863A    mov         al,byte ptr [ebp-1]
 0048863D    mov         esp,ebp
 0048863F    pop         ebp
 00488640    ret
*}
end;

//00488648
procedure TWinControl.DefineProperties(Filer:TFiler);
begin
{*
 00488648    push        ebp
 00488649    mov         ebp,esp
 0048864B    add         esp,0FFFFFFF8
 0048864E    push        ebx
 0048864F    mov         dword ptr [ebp-4],edx
 00488652    mov         dword ptr [ebp-8],eax
 00488655    mov         edx,dword ptr [ebp-4]
 00488658    mov         eax,dword ptr [ebp-8]
 0048865B    call        TControl.DefineProperties
 00488660    mov         eax,dword ptr [ebp-8]
 00488663    push        eax
 00488664    push        488444;TWinControl.ReadDesignSize
 00488669    mov         eax,dword ptr [ebp-8]
 0048866C    push        eax
 0048866D    push        488490;TWinControl.WriteDesignSize
 00488672    push        ebp
 00488673    call        DoWriteDesignSize
 00488678    pop         ecx
 00488679    mov         ecx,eax
 0048867B    mov         edx,488698;'DesignSize'
 00488680    mov         eax,dword ptr [ebp-4]
 00488683    mov         ebx,dword ptr [eax]
 00488685    call        dword ptr [ebx+4]
 00488688    pop         ebx
 00488689    pop         ecx
 0048868A    pop         ecx
 0048868B    pop         ebp
 0048868C    ret
*}
end;

//004886A4
procedure sub_004886A4;
begin
{*
 004886A4    push        ebp
 004886A5    mov         ebp,esp
 004886A7    add         esp,0FFFFFFF8
 004886AA    mov         dword ptr [ebp-4],eax
 004886AD    mov         eax,dword ptr [ebp-4]
 004886B0    call        00483694
 004886B5    mov         dword ptr [ebp-8],eax
 004886B8    cmp         dword ptr [ebp-8],1
>004886BC    jge         004886D0
 004886BE    mov         eax,488710;'
 004886C3    call        0040D0EC
 004886C8    mov         edx,dword ptr [ebp-4]
 004886CB    mov         dword ptr [edx+64],eax;TWinControl.FText:PChar
>004886CE    jmp         004886FA
 004886D0    mov         eax,dword ptr [ebp-8]
 004886D3    inc         eax
 004886D4    call        0040D098
 004886D9    mov         edx,dword ptr [ebp-4]
 004886DC    mov         dword ptr [edx+64],eax;TWinControl.FText:PChar
 004886DF    mov         eax,dword ptr [ebp-4]
 004886E2    mov         eax,dword ptr [eax+64];TWinControl.FText:PChar
 004886E5    call        0040D0C4
 004886EA    mov         ecx,eax
 004886EC    mov         eax,dword ptr [ebp-4]
 004886EF    mov         edx,dword ptr [eax+64];TWinControl.FText:PChar
 004886F2    mov         eax,dword ptr [ebp-4]
 004886F5    call        004836B8
 004886FA    call        FreeDeviceContexts
 004886FF    mov         eax,dword ptr [ebp-4]
 00488702    mov         edx,dword ptr [eax]
 00488704    call        dword ptr [edx+0AC];TWinControl.DestroyWindowHandle
 0048870A    pop         ecx
 0048870B    pop         ecx
 0048870C    pop         ebp
 0048870D    ret
*}
end;

//00488714
procedure TWinControl.DestroyWindowHandle;
begin
{*
 00488714    push        ebp
 00488715    mov         ebp,esp
 00488717    push        ecx
 00488718    mov         dword ptr [ebp-4],eax
 0048871B    mov         eax,dword ptr [ebp-4]
 0048871E    or          word ptr [eax+54],200
 00488724    xor         eax,eax
 00488726    push        ebp
 00488727    push        488761
 0048872C    push        dword ptr fs:[eax]
 0048872F    mov         dword ptr fs:[eax],esp
 00488732    mov         eax,dword ptr [ebp-4]
 00488735    mov         eax,dword ptr [eax+180]
 0048873B    push        eax
 0048873C    call        user32.DestroyWindow
 00488741    test        eax,eax
>00488743    jne         0048874A
 00488745    call        RaiseLastOSError
 0048874A    xor         eax,eax
 0048874C    pop         edx
 0048874D    pop         ecx
 0048874E    pop         ecx
 0048874F    mov         dword ptr fs:[eax],edx
 00488752    push        488768
 00488757    mov         eax,dword ptr [ebp-4]
 0048875A    and         word ptr [eax+54],0FDFF
 00488760    ret
>00488761    jmp         @HandleFinally
>00488766    jmp         00488757
 00488768    mov         eax,dword ptr [ebp-4]
 0048876B    xor         edx,edx
 0048876D    mov         dword ptr [eax+180],edx
 00488773    pop         ecx
 00488774    pop         ebp
 00488775    ret
*}
end;

//00488778
{*function sub_00488778(?:TWinControl; ?:TWinControl):?;
begin
 00488778    push        ebp
 00488779    mov         ebp,esp
 0048877B    add         esp,0FFFFFFEC
 0048877E    mov         dword ptr [ebp-8],edx
 00488781    mov         dword ptr [ebp-4],eax
 00488784    mov         eax,dword ptr [ebp-4]
 00488787    mov         eax,dword ptr [eax+19C]
 0048878D    mov         edx,dword ptr [ebp-8]
 00488790    call        004202BC
 00488795    inc         eax
 00488796    mov         edx,dword ptr [ebp-4]
 00488799    mov         edx,dword ptr [edx+19C]
 0048879F    mov         edx,dword ptr [edx+8]
 004887A2    dec         edx
 004887A3    sub         edx,eax
>004887A5    jl          004887D6
 004887A7    inc         edx
 004887A8    mov         dword ptr [ebp-14],edx
 004887AB    mov         dword ptr [ebp-10],eax
 004887AE    mov         eax,dword ptr [ebp-4]
 004887B1    mov         eax,dword ptr [eax+19C]
 004887B7    mov         edx,dword ptr [ebp-10]
 004887BA    call        TList.Get
 004887BF    mov         eax,dword ptr [eax+180]
 004887C5    mov         dword ptr [ebp-0C],eax
 004887C8    cmp         dword ptr [ebp-0C],0
>004887CC    jne         004887DB
 004887CE    inc         dword ptr [ebp-10]
 004887D1    dec         dword ptr [ebp-14]
>004887D4    jne         004887AE
 004887D6    xor         eax,eax
 004887D8    mov         dword ptr [ebp-0C],eax
 004887DB    mov         eax,dword ptr [ebp-0C]
 004887DE    mov         esp,ebp
 004887E0    pop         ebp
 004887E1    ret
end;*}

//004887E4
procedure sub_004887E4;
begin
{*
 004887E4    push        ebp
 004887E5    mov         ebp,esp
 004887E7    add         esp,0FFFFFFF4
 004887EA    mov         dword ptr [ebp-4],eax
 004887ED    mov         eax,dword ptr [ebp-4]
 004887F0    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>004887F7    jne         0048889F
 004887FD    mov         eax,dword ptr [ebp-4]
 00488800    mov         edx,dword ptr [eax]
 00488802    call        dword ptr [edx+0A0];TWinControl.CreateWnd
 00488808    mov         eax,dword ptr [ebp-4]
 0048880B    push        eax
 0048880C    movzx       eax,word ptr ds:[571DAA];0x0 ControlAtom:TAtom
 00488813    push        eax
 00488814    mov         eax,dword ptr [ebp-4]
 00488817    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048881D    push        eax
 0048881E    call        user32.SetPropA
 00488823    mov         eax,dword ptr [ebp-4]
 00488826    push        eax
 00488827    movzx       eax,word ptr ds:[571DA8];0x0 WindowAtom:TAtom
 0048882E    push        eax
 0048882F    mov         eax,dword ptr [ebp-4]
 00488832    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 00488838    push        eax
 00488839    call        user32.SetPropA
 0048883E    mov         eax,dword ptr [ebp-4]
 00488841    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00488845    je          0048886F
 00488847    push        13
 00488849    push        0
 0048884B    push        0
 0048884D    push        0
 0048884F    push        0
 00488851    mov         edx,dword ptr [ebp-4]
 00488854    mov         eax,dword ptr [ebp-4]
 00488857    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048885A    call        00488778
 0048885F    push        eax
 00488860    mov         eax,dword ptr [ebp-4]
 00488863    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 00488869    push        eax
 0048886A    call        user32.SetWindowPos
 0048886F    mov         eax,dword ptr [ebp-4]
 00488872    call        00487E38
 00488877    dec         eax
 00488878    test        eax,eax
>0048887A    jl          0048889F
 0048887C    inc         eax
 0048887D    mov         dword ptr [ebp-0C],eax
 00488880    mov         dword ptr [ebp-8],0
 00488887    mov         edx,dword ptr [ebp-8]
 0048888A    mov         eax,dword ptr [ebp-4]
 0048888D    call        00487DCC
 00488892    call        00482A00
 00488897    inc         dword ptr [ebp-8]
 0048889A    dec         dword ptr [ebp-0C]
>0048889D    jne         00488887
 0048889F    mov         esp,ebp
 004888A1    pop         ebp
 004888A2    ret
*}
end;

//004888A4
{*function sub_004888A4(?:?; ?:?):?;
begin
 004888A4    push        ebp
 004888A5    mov         ebp,esp
 004888A7    add         esp,0FFFFFFF0
 004888AA    mov         dword ptr [ebp-10],ecx
 004888AD    mov         dword ptr [ebp-0C],edx
 004888B0    mov         dword ptr [ebp-4],eax
 004888B3    mov         byte ptr [ebp-5],0
 004888B7    mov         al,byte ptr [ebp-5]
 004888BA    mov         esp,ebp
 004888BC    pop         ebp
 004888BD    ret
end;*}

//004888C0
{*procedure sub_004888C0(?:?; ?:?; ?:?);
begin
 004888C0    push        ebp
 004888C1    mov         ebp,esp
 004888C3    add         esp,0FFFFFFE4
 004888C6    push        esi
 004888C7    push        edi
 004888C8    mov         esi,dword ptr [ebp+8]
 004888CB    lea         edi,[ebp-1C]
 004888CE    movs        dword ptr [edi],dword ptr [esi]
 004888CF    movs        dword ptr [edi],dword ptr [esi]
 004888D0    movs        dword ptr [edi],dword ptr [esi]
 004888D1    movs        dword ptr [edi],dword ptr [esi]
 004888D2    mov         dword ptr [ebp-0C],ecx
 004888D5    mov         dword ptr [ebp-8],edx
 004888D8    mov         dword ptr [ebp-4],eax
 004888DB    pop         edi
 004888DC    pop         esi
 004888DD    mov         esp,ebp
 004888DF    pop         ebp
 004888E0    ret         14
end;*}

//004888E4
procedure sub_004888E4(?:TControl);
begin
{*
 004888E4    push        ebp
 004888E5    mov         ebp,esp
 004888E7    add         esp,0FFFFFFF4
 004888EA    mov         dword ptr [ebp-4],eax
 004888ED    mov         eax,dword ptr [ebp-4]
 004888F0    cmp         dword ptr [eax+180],0
>004888F7    je          0048894A
 004888F9    mov         eax,dword ptr [ebp-4]
 004888FC    cmp         dword ptr [eax+19C],0
>00488903    je          0048893F
 00488905    mov         eax,dword ptr [ebp-4]
 00488908    mov         eax,dword ptr [eax+19C]
 0048890E    mov         eax,dword ptr [eax+8]
 00488911    dec         eax
 00488912    test        eax,eax
>00488914    jl          0048893F
 00488916    inc         eax
 00488917    mov         dword ptr [ebp-0C],eax
 0048891A    mov         dword ptr [ebp-8],0
 00488921    mov         edx,dword ptr [ebp-8]
 00488924    mov         eax,dword ptr [ebp-4]
 00488927    mov         eax,dword ptr [eax+19C]
 0048892D    call        TList.Get
 00488932    call        004888E4
 00488937    inc         dword ptr [ebp-8]
 0048893A    dec         dword ptr [ebp-0C]
>0048893D    jne         00488921
 0048893F    mov         eax,dword ptr [ebp-4]
 00488942    mov         edx,dword ptr [eax]
 00488944    call        dword ptr [edx+0B0]
 0048894A    mov         esp,ebp
 0048894C    pop         ebp
 0048894D    ret
*}
end;

//00488950
procedure TWinControl.RecreateWnd;
begin
{*
 00488950    push        ebp
 00488951    mov         ebp,esp
 00488953    push        ecx
 00488954    mov         dword ptr [ebp-4],eax
 00488957    mov         eax,dword ptr [ebp-4]
 0048895A    cmp         dword ptr [eax+180],0
>00488961    je          00488974
 00488963    push        0
 00488965    xor         ecx,ecx
 00488967    mov         edx,0B033
 0048896C    mov         eax,dword ptr [ebp-4]
 0048896F    call        00484FFC
 00488974    pop         ecx
 00488975    pop         ebp
 00488976    ret
*}
end;

//00488978
{*procedure TWinControl.CMRecreateWnd(?:?);
begin
 00488978    push        ebp
 00488979    mov         ebp,esp
 0048897B    add         esp,0FFFFFFF4
 0048897E    push        esi
 0048897F    mov         dword ptr [ebp-0C],edx
 00488982    mov         dword ptr [ebp-4],eax
 00488985    mov         eax,dword ptr [ebp-4]
 00488988    mov         si,0FFB5
 0048898C    call        @CallDynaInst;TWinControl.sub_0048C078
 00488991    mov         byte ptr [ebp-5],al
 00488994    mov         eax,dword ptr [ebp-4]
 00488997    call        004888E4
 0048899C    mov         eax,dword ptr [ebp-4]
 0048899F    call        00488ADC
 004889A4    cmp         byte ptr [ebp-5],0
>004889A8    je          004889C5
 004889AA    mov         eax,dword ptr [ebp-4]
 004889AD    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>004889B4    je          004889C5
 004889B6    mov         eax,dword ptr [ebp-4]
 004889B9    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004889BF    push        eax
 004889C0    call        user32.SetFocus
 004889C5    pop         esi
 004889C6    mov         esp,ebp
 004889C8    pop         ebp
 004889C9    ret
end;*}

//004889CC
procedure sub_004889CC(?:Pointer);
begin
{*
 004889CC    push        ebp
 004889CD    mov         ebp,esp
 004889CF    add         esp,0FFFFFFF0
 004889D2    push        ebx
 004889D3    push        esi
 004889D4    push        edi
 004889D5    mov         dword ptr [ebp-4],eax
 004889D8    mov         eax,dword ptr [ebp-4]
 004889DB    cmp         byte ptr [eax+57],0
>004889DF    jne         004889F3
 004889E1    mov         eax,dword ptr [ebp-4]
 004889E4    test        byte ptr [eax+1C],10
>004889E8    je          004889FC
 004889EA    mov         eax,dword ptr [ebp-4]
 004889ED    test        byte ptr [eax+51],4
>004889F1    jne         004889FC
 004889F3    mov         eax,dword ptr [ebp-4]
 004889F6    test        byte ptr [eax+54],8
>004889FA    je          00488A00
 004889FC    xor         eax,eax
>004889FE    jmp         00488A02
 00488A00    mov         al,1
 00488A02    mov         byte ptr [ebp-5],al
 00488A05    cmp         byte ptr [ebp-5],0
>00488A09    je          00488A68
 00488A0B    mov         eax,dword ptr [ebp-4]
 00488A0E    cmp         dword ptr [eax+180],0
>00488A15    jne         00488A22
 00488A17    mov         eax,dword ptr [ebp-4]
 00488A1A    mov         edx,dword ptr [eax]
 00488A1C    call        dword ptr [edx+94]
 00488A22    mov         eax,dword ptr [ebp-4]
 00488A25    cmp         dword ptr [eax+19C],0
>00488A2C    je          00488A68
 00488A2E    mov         eax,dword ptr [ebp-4]
 00488A31    mov         eax,dword ptr [eax+19C]
 00488A37    mov         eax,dword ptr [eax+8]
 00488A3A    dec         eax
 00488A3B    test        eax,eax
>00488A3D    jl          00488A68
 00488A3F    inc         eax
 00488A40    mov         dword ptr [ebp-10],eax
 00488A43    mov         dword ptr [ebp-0C],0
 00488A4A    mov         eax,dword ptr [ebp-4]
 00488A4D    mov         eax,dword ptr [eax+19C]
 00488A53    mov         edx,dword ptr [ebp-0C]
 00488A56    call        TList.Get
 00488A5B    call        004889CC
 00488A60    inc         dword ptr [ebp-0C]
 00488A63    dec         dword ptr [ebp-10]
>00488A66    jne         00488A4A
 00488A68    mov         eax,dword ptr [ebp-4]
 00488A6B    cmp         dword ptr [eax+180],0
>00488A72    je          00488AD4
 00488A74    mov         eax,dword ptr [ebp-4]
 00488A77    mov         al,byte ptr [eax+1A6]
 00488A7D    cmp         al,byte ptr [ebp-5]
>00488A80    je          00488AD4
 00488A82    mov         eax,dword ptr [ebp-4]
 00488A85    mov         dl,byte ptr [ebp-5]
 00488A88    mov         byte ptr [eax+1A6],dl
 00488A8E    xor         eax,eax
 00488A90    push        ebp
 00488A91    push        488AB7
 00488A96    push        dword ptr fs:[eax]
 00488A99    mov         dword ptr fs:[eax],esp
 00488A9C    push        0
 00488A9E    xor         ecx,ecx
 00488AA0    mov         edx,0B019
 00488AA5    mov         eax,dword ptr [ebp-4]
 00488AA8    call        00484FFC
 00488AAD    xor         eax,eax
 00488AAF    pop         edx
 00488AB0    pop         ecx
 00488AB1    pop         ecx
 00488AB2    mov         dword ptr fs:[eax],edx
>00488AB5    jmp         00488AD4
>00488AB7    jmp         @HandleAnyException
 00488ABC    mov         al,byte ptr [ebp-5]
 00488ABF    xor         al,1
 00488AC1    mov         edx,dword ptr [ebp-4]
 00488AC4    mov         byte ptr [edx+1A6],al
 00488ACA    call        @RaiseAgain
 00488ACF    call        @DoneExcept
 00488AD4    pop         edi
 00488AD5    pop         esi
 00488AD6    pop         ebx
 00488AD7    mov         esp,ebp
 00488AD9    pop         ebp
 00488ADA    ret
*}
end;

//00488ADC
procedure sub_00488ADC(?:TWinControl);
begin
{*
 00488ADC    push        ebp
 00488ADD    mov         ebp,esp
 00488ADF    add         esp,0FFFFFFF8
 00488AE2    mov         dword ptr [ebp-4],eax
 00488AE5    mov         eax,dword ptr [ebp-4]
 00488AE8    mov         dword ptr [ebp-8],eax
>00488AEB    jmp         00488B02
 00488AED    mov         eax,dword ptr [ebp-8]
 00488AF0    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 00488AF3    mov         dword ptr [ebp-8],eax
 00488AF6    mov         eax,dword ptr [ebp-8]
 00488AF9    cmp         byte ptr [eax+1A6],0;TWinControl.FShowing:Boolean
>00488B00    je          00488B31
 00488B02    mov         eax,dword ptr [ebp-8]
 00488B05    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00488B09    jne         00488AED
 00488B0B    mov         eax,dword ptr [ebp-8]
 00488B0E    mov         edx,dword ptr ds:[49EC6C];TCustomForm
 00488B14    call        @IsClass
 00488B19    test        al,al
>00488B1B    jne         00488B29
 00488B1D    mov         eax,dword ptr [ebp-8]
 00488B20    cmp         dword ptr [eax+190],0;TWinControl.FParentWindow:HWND
>00488B27    je          00488B31
 00488B29    mov         eax,dword ptr [ebp-4]
 00488B2C    call        004889CC
 00488B31    pop         ecx
 00488B32    pop         ecx
 00488B33    pop         ebp
 00488B34    ret
*}
end;

//00488B38
procedure sub_00488B38(?:TWinControl; ?:HWND);
begin
{*
 00488B38    push        ebp
 00488B39    mov         ebp,esp
 00488B3B    add         esp,0FFFFFFF8
 00488B3E    mov         dword ptr [ebp-8],edx
 00488B41    mov         dword ptr [ebp-4],eax
 00488B44    mov         eax,dword ptr [ebp-4]
 00488B47    cmp         dword ptr [eax+30],0
>00488B4B    jne         00488BF0
 00488B51    mov         eax,dword ptr [ebp-4]
 00488B54    mov         eax,dword ptr [eax+190]
 00488B5A    cmp         eax,dword ptr [ebp-8]
>00488B5D    je          00488BF0
 00488B63    mov         eax,dword ptr [ebp-4]
 00488B66    cmp         dword ptr [eax+180],0
>00488B6D    je          00488BD4
 00488B6F    mov         eax,dword ptr [ebp-4]
 00488B72    cmp         dword ptr [eax+190],0
>00488B79    je          00488BD4
 00488B7B    cmp         dword ptr [ebp-8],0
>00488B7F    je          00488BD4
 00488B81    mov         eax,dword ptr [ebp-8]
 00488B84    mov         edx,dword ptr [ebp-4]
 00488B87    mov         dword ptr [edx+190],eax
 00488B8D    mov         eax,dword ptr [ebp-8]
 00488B90    push        eax
 00488B91    mov         eax,dword ptr [ebp-4]
 00488B94    mov         eax,dword ptr [eax+180]
 00488B9A    push        eax
 00488B9B    call        user32.SetParent
 00488BA0    mov         eax,[0056E1A4];^gvar_0056B7DC
 00488BA5    cmp         dword ptr [eax],5
>00488BA8    jl          00488BE8
 00488BAA    mov         eax,[0056E624];^gvar_0056B7D8
 00488BAF    cmp         dword ptr [eax],2
>00488BB2    jne         00488BE8
 00488BB4    push        0
 00488BB6    mov         dx,3
 00488BBA    mov         ax,3
 00488BBE    call        0040868C
 00488BC3    mov         ecx,eax
 00488BC5    mov         edx,127
 00488BCA    mov         eax,dword ptr [ebp-4]
 00488BCD    call        00484FFC
>00488BD2    jmp         00488BE8
 00488BD4    mov         eax,dword ptr [ebp-4]
 00488BD7    call        004888E4
 00488BDC    mov         eax,dword ptr [ebp-8]
 00488BDF    mov         edx,dword ptr [ebp-4]
 00488BE2    mov         dword ptr [edx+190],eax
 00488BE8    mov         eax,dword ptr [ebp-4]
 00488BEB    call        00488ADC
 00488BF0    pop         ecx
 00488BF1    pop         ecx
 00488BF2    pop         ebp
 00488BF3    ret
*}
end;

//00488C74
{*function sub_00488C74(?:Pointer; ?:?):?;
begin
 00488C74    push        ebp
 00488C75    mov         ebp,esp
 00488C77    add         esp,0FFFFFFE0
 00488C7A    push        ebx
 00488C7B    mov         dword ptr [ebp-4],eax
 00488C7E    lea         ecx,[ebp-10]
 00488C81    mov         eax,dword ptr [ebp+8]
 00488C84    mov         edx,dword ptr [eax-4]
 00488C87    mov         edx,dword ptr [edx+4]
 00488C8A    mov         eax,dword ptr [ebp-4]
 00488C8D    sub         edx,dword ptr [eax+44]
 00488C90    mov         eax,dword ptr [ebp+8]
 00488C93    mov         eax,dword ptr [eax-4]
 00488C96    mov         eax,dword ptr [eax]
 00488C98    mov         ebx,dword ptr [ebp-4]
 00488C9B    sub         eax,dword ptr [ebx+40]
 00488C9E    call        Point
 00488CA3    mov         eax,dword ptr [ebp+8]
 00488CA6    mov         edx,dword ptr [ebp-10]
 00488CA9    mov         dword ptr [eax-0C],edx
 00488CAC    mov         edx,dword ptr [ebp-0C]
 00488CAF    mov         dword ptr [eax-8],edx
 00488CB2    mov         eax,dword ptr [ebp+8]
 00488CB5    push        dword ptr [eax-8]
 00488CB8    push        dword ptr [eax-0C]
 00488CBB    lea         edx,[ebp-20]
 00488CBE    mov         eax,dword ptr [ebp-4]
 00488CC1    mov         ecx,dword ptr [eax]
 00488CC3    call        dword ptr [ecx+44]
 00488CC6    lea         eax,[ebp-20]
 00488CC9    push        eax
 00488CCA    call        user32.PtInRect
 00488CCF    test        eax,eax
>00488CD1    je          00488D2B
 00488CD3    mov         eax,dword ptr [ebp-4]
 00488CD6    test        byte ptr [eax+1C],10
>00488CDA    je          00488CEE
 00488CDC    mov         eax,dword ptr [ebp-4]
 00488CDF    cmp         byte ptr [eax+57],0
>00488CE3    jne         00488D2F
 00488CE5    mov         eax,dword ptr [ebp-4]
 00488CE8    test        byte ptr [eax+51],4
>00488CEC    je          00488D2F
 00488CEE    mov         eax,dword ptr [ebp-4]
 00488CF1    cmp         byte ptr [eax+57],0
>00488CF5    je          00488D2B
 00488CF7    mov         eax,dword ptr [ebp-4]
 00488CFA    mov         edx,dword ptr [eax]
 00488CFC    call        dword ptr [edx+50]
 00488CFF    test        al,al
>00488D01    jne         00488D0C
 00488D03    mov         eax,dword ptr [ebp+8]
 00488D06    cmp         byte ptr [eax-0D],0
>00488D0A    je          00488D2B
 00488D0C    mov         eax,dword ptr [ebp+8]
 00488D0F    add         eax,0FFFFFFF4
 00488D12    call        00408664
 00488D17    push        eax
 00488D18    xor         ecx,ecx
 00488D1A    mov         edx,0B00A
 00488D1F    mov         eax,dword ptr [ebp-4]
 00488D22    call        00484FFC
 00488D27    test        eax,eax
>00488D29    jne         00488D2F
 00488D2B    xor         eax,eax
>00488D2D    jmp         00488D31
 00488D2F    mov         al,1
 00488D31    mov         byte ptr [ebp-5],al
 00488D34    cmp         byte ptr [ebp-5],0
>00488D38    je          00488D43
 00488D3A    mov         eax,dword ptr [ebp+8]
 00488D3D    mov         edx,dword ptr [ebp-4]
 00488D40    mov         dword ptr [eax-14],edx
 00488D43    mov         al,byte ptr [ebp-5]
 00488D46    pop         ebx
 00488D47    mov         esp,ebp
 00488D49    pop         ebp
 00488D4A    ret
end;*}

//00488D4C
{*function sub_00488D4C(?:TWinControl; ?:?; ?:?; ?:?):?;
begin
 00488D4C    push        ebp
 00488D4D    mov         ebp,esp
 00488D4F    add         esp,0FFFFFFE0
 00488D52    mov         byte ptr [ebp-0D],cl
 00488D55    mov         dword ptr [ebp-4],edx
 00488D58    mov         dword ptr [ebp-18],eax
 00488D5B    xor         eax,eax
 00488D5D    mov         dword ptr [ebp-14],eax
 00488D60    cmp         byte ptr [ebp+8],0
>00488D64    je          00488DAC
 00488D66    mov         eax,dword ptr [ebp-18]
 00488D69    cmp         dword ptr [eax+19C],0
>00488D70    je          00488DAC
 00488D72    mov         eax,dword ptr [ebp-18]
 00488D75    mov         eax,dword ptr [eax+19C]
 00488D7B    mov         eax,dword ptr [eax+8]
 00488D7E    dec         eax
 00488D7F    cmp         eax,0
>00488D82    jl          00488DAC
 00488D84    mov         dword ptr [ebp-20],eax
 00488D87    push        ebp
 00488D88    mov         edx,dword ptr [ebp-20]
 00488D8B    mov         eax,dword ptr [ebp-18]
 00488D8E    mov         eax,dword ptr [eax+19C]
 00488D94    call        TList.Get
 00488D99    call        00488C74
 00488D9E    pop         ecx
 00488D9F    test        al,al
>00488DA1    jne         00488DAC
 00488DA3    dec         dword ptr [ebp-20]
 00488DA6    cmp         dword ptr [ebp-20],0FFFFFFFF
>00488DAA    jne         00488D87
 00488DAC    mov         eax,dword ptr [ebp-18]
 00488DAF    cmp         dword ptr [eax+198],0
>00488DB6    je          00488DF8
 00488DB8    cmp         dword ptr [ebp-14],0
>00488DBC    jne         00488DF8
 00488DBE    mov         eax,dword ptr [ebp-18]
 00488DC1    mov         eax,dword ptr [eax+198]
 00488DC7    mov         eax,dword ptr [eax+8]
 00488DCA    dec         eax
 00488DCB    cmp         eax,0
>00488DCE    jl          00488DF8
 00488DD0    mov         dword ptr [ebp-20],eax
 00488DD3    push        ebp
 00488DD4    mov         edx,dword ptr [ebp-20]
 00488DD7    mov         eax,dword ptr [ebp-18]
 00488DDA    mov         eax,dword ptr [eax+198]
 00488DE0    call        TList.Get
 00488DE5    call        00488C74
 00488DEA    pop         ecx
 00488DEB    test        al,al
>00488DED    jne         00488DF8
 00488DEF    dec         dword ptr [ebp-20]
 00488DF2    cmp         dword ptr [ebp-20],0FFFFFFFF
>00488DF6    jne         00488DD3
 00488DF8    mov         eax,dword ptr [ebp-14]
 00488DFB    mov         dword ptr [ebp-1C],eax
 00488DFE    mov         eax,dword ptr [ebp-1C]
 00488E01    mov         esp,ebp
 00488E03    pop         ebp
 00488E04    ret         4
end;*}

//00488E08
{*function sub_00488E08(?:TWinControl; ?:?):?;
begin
 00488E08    push        ebp
 00488E09    mov         ebp,esp
 00488E0B    add         esp,0FFFFFFE0
 00488E0E    push        ebx
 00488E0F    mov         dword ptr [ebp-8],edx
 00488E12    mov         dword ptr [ebp-4],eax
 00488E15    mov         eax,dword ptr [ebp-4]
 00488E18    call        TWinControl.GetHandle
 00488E1D    mov         ebx,eax
 00488E1F    call        user32.GetCapture
 00488E24    cmp         ebx,eax
>00488E26    jne         00488E4F
 00488E28    cmp         dword ptr ds:[56C834],0;gvar_0056C834
>00488E2F    je          00488E48
 00488E31    mov         eax,[0056C834];0x0 gvar_0056C834
 00488E36    mov         eax,dword ptr [eax+30]
 00488E39    cmp         eax,dword ptr [ebp-4]
>00488E3C    jne         00488E48
 00488E3E    mov         eax,[0056C834];0x0 gvar_0056C834
 00488E43    mov         dword ptr [ebp-10],eax
>00488E46    jmp         00488E6F
 00488E48    xor         eax,eax
 00488E4A    mov         dword ptr [ebp-10],eax
>00488E4D    jmp         00488E6F
 00488E4F    push        0
 00488E51    lea         edx,[ebp-20]
 00488E54    mov         eax,dword ptr [ebp-8]
 00488E57    mov         eax,dword ptr [eax+8]
 00488E5A    call        00408640
 00488E5F    lea         edx,[ebp-20]
 00488E62    xor         ecx,ecx
 00488E64    mov         eax,dword ptr [ebp-4]
 00488E67    call        00488D4C
 00488E6C    mov         dword ptr [ebp-10],eax
 00488E6F    mov         byte ptr [ebp-9],0
 00488E73    cmp         dword ptr [ebp-10],0
>00488E77    je          00488EBF
 00488E79    mov         eax,dword ptr [ebp-8]
 00488E7C    movsx       eax,word ptr [eax+8]
 00488E80    mov         edx,dword ptr [ebp-10]
 00488E83    sub         eax,dword ptr [edx+40]
 00488E86    mov         dword ptr [ebp-18],eax
 00488E89    mov         eax,dword ptr [ebp-8]
 00488E8C    movsx       eax,word ptr [eax+0A]
 00488E90    mov         edx,dword ptr [ebp-10]
 00488E93    sub         eax,dword ptr [edx+44]
 00488E96    mov         dword ptr [ebp-14],eax
 00488E99    lea         eax,[ebp-18]
 00488E9C    call        00408664
 00488EA1    push        eax
 00488EA2    mov         ecx,dword ptr [ebp-8]
 00488EA5    mov         ecx,dword ptr [ecx+4]
 00488EA8    mov         edx,dword ptr [ebp-8]
 00488EAB    mov         edx,dword ptr [edx]
 00488EAD    mov         eax,dword ptr [ebp-10]
 00488EB0    call        00484FFC
 00488EB5    mov         edx,dword ptr [ebp-8]
 00488EB8    mov         dword ptr [edx+0C],eax
 00488EBB    mov         byte ptr [ebp-9],1
 00488EBF    mov         al,byte ptr [ebp-9]
 00488EC2    pop         ebx
 00488EC3    mov         esp,ebp
 00488EC5    pop         ebp
 00488EC6    ret
end;*}

//00488EC8
{*procedure sub_00488EC8(?:?);
begin
 00488EC8    push        ebp
 00488EC9    mov         ebp,esp
 00488ECB    add         esp,0FFFFFFE4
 00488ECE    push        ebx
 00488ECF    mov         dword ptr [ebp-8],edx
 00488ED2    mov         dword ptr [ebp-4],eax
 00488ED5    mov         eax,dword ptr [ebp-8]
 00488ED8    mov         eax,dword ptr [eax]
 00488EDA    cmp         eax,84
>00488EDF    jg          00488EF9
>00488EE1    je          00488F5C
 00488EE3    sub         eax,7
>00488EE6    je          00488F1A
 00488EE8    dec         eax
>00488EE9    je          00488F4A
 00488EEB    sub         eax,17
>00488EEE    je          00489014
>00488EF4    jmp         00489050
 00488EF9    add         eax,0FFFFFF00
 00488EFE    sub         eax,9
>00488F01    jb          00489006
 00488F07    add         eax,0FFFFFF09
 00488F0C    sub         eax,0B
>00488F0F    jb          00488FB6
>00488F15    jmp         00489050
 00488F1A    mov         eax,dword ptr [ebp-4]
 00488F1D    call        004A0740
 00488F22    mov         dword ptr [ebp-0C],eax
 00488F25    cmp         dword ptr [ebp-0C],0
>00488F29    je          00489050
 00488F2F    mov         edx,dword ptr [ebp-4]
 00488F32    mov         eax,dword ptr [ebp-0C]
 00488F35    mov         ecx,dword ptr [eax]
 00488F37    call        dword ptr [ecx+0E8]
 00488F3D    test        al,al
>00488F3F    je          0048905B
>00488F45    jmp         00489050
 00488F4A    mov         eax,dword ptr [ebp-4]
 00488F4D    test        byte ptr [eax+54],20;TWinControl.FControlState:TControlState
>00488F51    jne         0048905B
>00488F57    jmp         00489050
 00488F5C    mov         edx,dword ptr [ebp-8]
 00488F5F    mov         eax,dword ptr [ebp-4]
 00488F62    call        00485148
 00488F67    mov         eax,dword ptr [ebp-8]
 00488F6A    cmp         dword ptr [eax+0C],0FFFFFFFF
>00488F6E    jne         0048905B
 00488F74    push        0
 00488F76    lea         edx,[ebp-1C]
 00488F79    mov         eax,dword ptr [ebp-8]
 00488F7C    mov         eax,dword ptr [eax+8]
 00488F7F    call        00408640
 00488F84    lea         edx,[ebp-1C]
 00488F87    lea         ecx,[ebp-14]
 00488F8A    mov         eax,dword ptr [ebp-4]
 00488F8D    call        TControl.ScreenToClient
 00488F92    lea         edx,[ebp-14]
 00488F95    xor         ecx,ecx
 00488F97    mov         eax,dword ptr [ebp-4]
 00488F9A    call        00488D4C
 00488F9F    test        eax,eax
>00488FA1    je          0048905B
 00488FA7    mov         eax,dword ptr [ebp-8]
 00488FAA    mov         dword ptr [eax+0C],1
>00488FB1    jmp         0048905B
 00488FB6    mov         edx,dword ptr [ebp-8]
 00488FB9    mov         eax,dword ptr [ebp-4]
 00488FBC    call        00488E08
 00488FC1    test        al,al
>00488FC3    je          00489050
 00488FC9    mov         eax,dword ptr [ebp-8]
 00488FCC    cmp         dword ptr [eax+0C],0
>00488FD0    jne         0048905B
 00488FD6    mov         eax,dword ptr [ebp-4]
 00488FD9    call        TWinControl.HandleAllocated
 00488FDE    test        al,al
>00488FE0    je          0048905B
 00488FE2    mov         eax,dword ptr [ebp-8]
 00488FE5    mov         eax,dword ptr [eax+8]
 00488FE8    push        eax
 00488FE9    mov         eax,dword ptr [ebp-8]
 00488FEC    mov         eax,dword ptr [eax+4]
 00488FEF    push        eax
 00488FF0    mov         eax,dword ptr [ebp-8]
 00488FF3    mov         eax,dword ptr [eax]
 00488FF5    push        eax
 00488FF6    mov         eax,dword ptr [ebp-4]
 00488FF9    call        TWinControl.GetHandle
 00488FFE    push        eax
 00488FFF    call        user32.DefWindowProcA
>00489004    jmp         0048905B
 00489006    mov         eax,dword ptr [ebp-4]
 00489009    call        004842C4
 0048900E    test        al,al
>00489010    jne         0048905B
>00489012    jmp         00489050
 00489014    mov         eax,dword ptr [ebp-4]
 00489017    call        TWinControl.GetHandle
 0048901C    mov         ebx,eax
 0048901E    call        user32.GetCapture
 00489023    cmp         ebx,eax
>00489025    jne         00489050
 00489027    cmp         dword ptr ds:[56C834],0;gvar_0056C834
>0048902E    je          00489050
 00489030    mov         eax,[0056C834];0x0 gvar_0056C834
 00489035    mov         eax,dword ptr [eax+30]
 00489038    cmp         eax,dword ptr [ebp-4]
>0048903B    jne         00489050
 0048903D    push        0
 0048903F    xor         ecx,ecx
 00489041    mov         edx,1F
 00489046    mov         eax,[0056C834];0x0 gvar_0056C834
 0048904B    call        00484FFC
 00489050    mov         edx,dword ptr [ebp-8]
 00489053    mov         eax,dword ptr [ebp-4]
 00489056    call        00485148
 0048905B    pop         ebx
 0048905C    mov         esp,ebp
 0048905E    pop         ebp
 0048905F    ret
end;*}

//00489060
procedure TWinControl.DefaultHandler(var Message:void );
begin
{*
 00489060    push        ebp
 00489061    mov         ebp,esp
 00489063    add         esp,0FFFFFFF8
 00489066    mov         dword ptr [ebp-8],edx
 00489069    mov         dword ptr [ebp-4],eax
 0048906C    mov         eax,dword ptr [ebp-4]
 0048906F    cmp         dword ptr [eax+180],0
>00489076    je          004891CB
 0048907C    mov         eax,dword ptr [ebp-8]
 0048907F    cmp         dword ptr [eax],7B
>00489082    jne         004890BD
 00489084    mov         eax,dword ptr [ebp-4]
 00489087    cmp         dword ptr [eax+30],0
>0048908B    je          004890BD
 0048908D    mov         eax,dword ptr [ebp-8];{TControl.Perform}
 00489090    mov         eax,dword ptr [eax+8]
 00489093    push        eax
 00489094    mov         ecx,dword ptr [ebp-8]
 00489097    mov         ecx,dword ptr [ecx+4]
 0048909A    mov         edx,dword ptr [ebp-8]
 0048909D    mov         edx,dword ptr [edx]
 0048909F    mov         eax,dword ptr [ebp-4]
 004890A2    mov         eax,dword ptr [eax+30]
 004890A5    call        00484FFC
 004890AA    mov         edx,dword ptr [ebp-8]
 004890AD    mov         dword ptr [edx+0C],eax
 004890B0    mov         eax,dword ptr [ebp-8]
 004890B3    cmp         dword ptr [eax+0C],0
>004890B7    jne         004891D6
 004890BD    mov         eax,dword ptr [ebp-8]
 004890C0    mov         eax,dword ptr [eax]
 004890C2    add         eax,0FFFFFECE
 004890C7    sub         eax,7
>004890CA    jb          004890DB
 004890CC    add         eax,0FFFF4407
 004890D1    sub         eax,7
>004890D4    jb          0048910B
>004890D6    jmp         0048915C
 004890DB    mov         eax,dword ptr [ebp-8]
 004890DE    mov         eax,dword ptr [eax+8]
 004890E1    push        eax
 004890E2    mov         eax,dword ptr [ebp-8]
 004890E5    mov         eax,dword ptr [eax+4]
 004890E8    push        eax
 004890E9    mov         eax,dword ptr [ebp-8]
 004890EC    mov         eax,dword ptr [eax]
 004890EE    add         eax,0BC00;{TBrush.GetColor}
 004890F3    push        eax
 004890F4    mov         eax,dword ptr [ebp-8];{ColorToRGB}
 004890F7    mov         eax,dword ptr [eax+8]
 004890FA    push        eax
 004890FB    call        user32.SendMessageA
 00489100    mov         edx,dword ptr [ebp-8]
 00489103    mov         dword ptr [edx+0C],eax
>00489106    jmp         004891A7
 0048910B    mov         eax,dword ptr [ebp-4]
 0048910E    mov         eax,dword ptr [eax+68]
 00489111    mov         eax,dword ptr [eax+18]
 00489114    call        ColorToRGB
 00489119    push        eax
 0048911A    mov         eax,dword ptr [ebp-8]
 0048911D    mov         eax,dword ptr [eax+4]
 00489120    push        eax
 00489121    call        gdi32.SetTextColor
 00489126    mov         eax,dword ptr [ebp-4]
 00489129    mov         eax,dword ptr [eax+170]
 0048912F    call        TBrush.GetColor
 00489134    call        ColorToRGB
 00489139    push        eax
 0048913A    mov         eax,dword ptr [ebp-8]
 0048913D    mov         eax,dword ptr [eax+4]
 00489140    push        eax
 00489141    call        gdi32.SetBkColor
 00489146    mov         eax,dword ptr [ebp-4]
 00489149    mov         eax,dword ptr [eax+170]
 0048914F    call        TBrush.GetHandle
 00489154    mov         edx,dword ptr [ebp-8]
 00489157    mov         dword ptr [edx+0C],eax
>0048915A    jmp         004891A7
 0048915C    mov         eax,dword ptr [ebp-8];{TControl.DefaultHandler}
 0048915F    mov         eax,dword ptr [eax]
 00489161    cmp         eax,dword ptr ds:[571DB4];gvar_00571DB4
>00489167    jne         00489174
 00489169    mov         eax,dword ptr [ebp-8]
 0048916C    mov         edx,dword ptr [ebp-4]
 0048916F    mov         dword ptr [eax+0C],edx
>00489172    jmp         004891A7
 00489174    mov         eax,dword ptr [ebp-8]
 00489177    mov         eax,dword ptr [eax+8]
 0048917A    push        eax
 0048917B    mov         eax,dword ptr [ebp-8]
 0048917E    mov         eax,dword ptr [eax+4]
 00489181    push        eax
 00489182    mov         eax,dword ptr [ebp-8]
 00489185    mov         eax,dword ptr [eax]
 00489187    push        eax
 00489188    mov         eax,dword ptr [ebp-4]
 0048918B    mov         eax,dword ptr [eax+180]
 00489191    push        eax
 00489192    mov         eax,dword ptr [ebp-4]
 00489195    mov         eax,dword ptr [eax+174]
 0048919B    push        eax
 0048919C    call        user32.CallWindowProcA
 004891A1    mov         edx,dword ptr [ebp-8]
 004891A4    mov         dword ptr [edx+0C],eax
 004891A7    mov         eax,dword ptr [ebp-8]
 004891AA    cmp         dword ptr [eax],0C
>004891AD    jne         004891D6
 004891AF    mov         eax,dword ptr [ebp-8]
 004891B2    mov         eax,dword ptr [eax+8]
 004891B5    push        eax
 004891B6    mov         ecx,dword ptr [ebp-8]
 004891B9    mov         ecx,dword ptr [ecx+4]
 004891BC    mov         edx,dword ptr [ebp-8]
 004891BF    mov         edx,dword ptr [edx]
 004891C1    mov         eax,dword ptr [ebp-4]
 004891C4    call        004831A0
>004891C9    jmp         004891D6
 004891CB    mov         edx,dword ptr [ebp-8]
 004891CE    mov         eax,dword ptr [ebp-4]
 004891D1    call        TControl.DefaultHandler
 004891D6    pop         ecx
 004891D7    pop         ecx
 004891D8    pop         ebp
 004891D9    ret
*}
end;

//004891DC
{*function sub_004891DC(?:?; ?:?):?;
begin
 004891DC    push        ebp
 004891DD    mov         ebp,esp
 004891DF    add         esp,0FFFFFFF0
 004891E2    mov         dword ptr [ebp-8],edx
 004891E5    mov         dword ptr [ebp-4],eax
 004891E8    mov         byte ptr [ebp-9],0
 004891EC    mov         eax,dword ptr [ebp-4]
 004891EF    call        0047F79C
 004891F4    mov         dword ptr [ebp-10],eax
 004891F7    cmp         dword ptr [ebp-10],0
>004891FB    je          00489227
 004891FD    mov         eax,dword ptr [ebp-8]
 00489200    mov         eax,dword ptr [eax+8]
 00489203    push        eax
 00489204    mov         ecx,dword ptr [ebp-8]
 00489207    mov         ecx,dword ptr [ecx+4]
 0048920A    mov         edx,dword ptr [ebp-8]
 0048920D    mov         edx,dword ptr [edx]
 0048920F    add         edx,0BC00
 00489215    mov         eax,dword ptr [ebp-10]
 00489218    call        00484FFC
 0048921D    mov         edx,dword ptr [ebp-8]
 00489220    mov         dword ptr [edx+0C],eax
 00489223    mov         byte ptr [ebp-9],1
 00489227    mov         al,byte ptr [ebp-9]
 0048922A    mov         esp,ebp
 0048922C    pop         ebp
 0048922D    ret
end;*}

//00489230
procedure TWinControl.PaintHandler(var Message:TWMPaint);
begin
{*
 00489230    push        ebp
 00489231    mov         ebp,esp
 00489233    add         esp,0FFFFFFA0
 00489236    mov         dword ptr [ebp-8],edx
 00489239    mov         dword ptr [ebp-4],eax
 0048923C    mov         eax,dword ptr [ebp-8]
 0048923F    mov         eax,dword ptr [eax+4]
 00489242    mov         dword ptr [ebp-18],eax
 00489245    cmp         dword ptr [ebp-18],0
>00489249    jne         00489260
 0048924B    lea         eax,[ebp-60]
 0048924E    push        eax
 0048924F    mov         eax,dword ptr [ebp-4]
 00489252    call        TWinControl.GetHandle
 00489257    push        eax
 00489258    call        user32.BeginPaint
 0048925D    mov         dword ptr [ebp-18],eax
 00489260    xor         eax,eax
 00489262    push        ebp
 00489263    push        489391
 00489268    push        dword ptr fs:[eax]
 0048926B    mov         dword ptr fs:[eax],esp
 0048926E    mov         eax,dword ptr [ebp-4]
 00489271    cmp         dword ptr [eax+198],0
>00489278    jne         0048928D
 0048927A    mov         edx,dword ptr [ebp-18]
 0048927D    mov         eax,dword ptr [ebp-4]
 00489280    mov         ecx,dword ptr [eax]
 00489282    call        dword ptr [ecx+0B8]
>00489288    jmp         0048935B
 0048928D    mov         eax,dword ptr [ebp-18]
 00489290    push        eax
 00489291    call        gdi32.SaveDC
 00489296    mov         dword ptr [ebp-14],eax
 00489299    mov         dword ptr [ebp-10],2
 004892A0    mov         eax,dword ptr [ebp-4]
 004892A3    mov         eax,dword ptr [eax+198]
 004892A9    mov         eax,dword ptr [eax+8]
 004892AC    dec         eax
 004892AD    test        eax,eax
>004892AF    jl          0048933A
 004892B5    inc         eax
 004892B6    mov         dword ptr [ebp-1C],eax
 004892B9    mov         dword ptr [ebp-0C],0
 004892C0    mov         eax,dword ptr [ebp-4]
 004892C3    mov         eax,dword ptr [eax+198]
 004892C9    mov         edx,dword ptr [ebp-0C]
 004892CC    call        TList.Get
 004892D1    mov         dword ptr [ebp-20],eax
 004892D4    mov         eax,dword ptr [ebp-20]
 004892D7    cmp         byte ptr [eax+57],0
>004892DB    jne         004892EF
 004892DD    mov         eax,dword ptr [ebp-20]
 004892E0    test        byte ptr [eax+1C],10
>004892E4    je          00489332
 004892E6    mov         eax,dword ptr [ebp-20]
 004892E9    test        byte ptr [eax+51],4
>004892ED    jne         00489332
 004892EF    mov         eax,dword ptr [ebp-20]
 004892F2    test        byte ptr [eax+50],40
>004892F6    je          00489332
 004892F8    mov         eax,dword ptr [ebp-20]
 004892FB    mov         eax,dword ptr [eax+44]
 004892FE    mov         edx,dword ptr [ebp-20]
 00489301    add         eax,dword ptr [edx+4C]
 00489304    push        eax
 00489305    mov         eax,dword ptr [ebp-20]
 00489308    mov         eax,dword ptr [eax+40]
 0048930B    mov         edx,dword ptr [ebp-20]
 0048930E    add         eax,dword ptr [edx+48]
 00489311    push        eax
 00489312    mov         eax,dword ptr [ebp-20]
 00489315    mov         eax,dword ptr [eax+44]
 00489318    push        eax
 00489319    mov         eax,dword ptr [ebp-20]
 0048931C    mov         eax,dword ptr [eax+40]
 0048931F    push        eax
 00489320    mov         eax,dword ptr [ebp-18]
 00489323    push        eax
 00489324    call        gdi32.ExcludeClipRect
 00489329    mov         dword ptr [ebp-10],eax
 0048932C    cmp         dword ptr [ebp-10],1
>00489330    je          0048933A
 00489332    inc         dword ptr [ebp-0C]
 00489335    dec         dword ptr [ebp-1C]
>00489338    jne         004892C0
 0048933A    cmp         dword ptr [ebp-10],1
>0048933E    je          0048934E
 00489340    mov         edx,dword ptr [ebp-18]
 00489343    mov         eax,dword ptr [ebp-4]
 00489346    mov         ecx,dword ptr [eax]
 00489348    call        dword ptr [ecx+0B8]
 0048934E    mov         eax,dword ptr [ebp-14]
 00489351    push        eax
 00489352    mov         eax,dword ptr [ebp-18]
 00489355    push        eax
 00489356    call        gdi32.RestoreDC
 0048935B    xor         ecx,ecx
 0048935D    mov         edx,dword ptr [ebp-18]
 00489360    mov         eax,dword ptr [ebp-4]
 00489363    call        004893D0
 00489368    xor         eax,eax
 0048936A    pop         edx
 0048936B    pop         ecx
 0048936C    pop         ecx
 0048936D    mov         dword ptr fs:[eax],edx
 00489370    push        489398
 00489375    mov         eax,dword ptr [ebp-8]
 00489378    cmp         dword ptr [eax+4],0
>0048937C    jne         00489390
 0048937E    lea         eax,[ebp-60]
 00489381    push        eax
 00489382    mov         eax,dword ptr [ebp-4]
 00489385    call        TWinControl.GetHandle
 0048938A    push        eax
 0048938B    call        user32.EndPaint
 00489390    ret
>00489391    jmp         @HandleFinally
>00489396    jmp         00489375
 00489398    mov         esp,ebp
 0048939A    pop         ebp
 0048939B    ret
*}
end;

//0048939C
{*procedure sub_0048939C(?:?);
begin
 0048939C    push        ebp
 0048939D    mov         ebp,esp
 0048939F    add         esp,0FFFFFFE8
 004893A2    mov         dword ptr [ebp-8],edx
 004893A5    mov         dword ptr [ebp-4],eax
 004893A8    mov         dword ptr [ebp-18],0F
 004893AF    mov         eax,dword ptr [ebp-8]
 004893B2    mov         dword ptr [ebp-14],eax
 004893B5    xor         eax,eax
 004893B7    mov         dword ptr [ebp-10],eax
 004893BA    xor         eax,eax
 004893BC    mov         dword ptr [ebp-0C],eax
 004893BF    lea         edx,[ebp-18]
 004893C2    mov         eax,dword ptr [ebp-4]
 004893C5    mov         ecx,dword ptr [eax]
 004893C7    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004893CA    mov         esp,ebp
 004893CC    pop         ebp
 004893CD    ret
end;*}

//004893D0
{*procedure sub_004893D0(?:TWinControl; ?:HDC; ?:?);
begin
 004893D0    push        ebp
 004893D1    mov         ebp,esp
 004893D3    add         esp,0FFFFFFC8
 004893D6    mov         dword ptr [ebp-0C],ecx
 004893D9    mov         dword ptr [ebp-8],edx
 004893DC    mov         dword ptr [ebp-4],eax
 004893DF    mov         eax,dword ptr [ebp-4]
 004893E2    cmp         byte ptr [eax+1A8],0;TWinControl.FDockSite:Boolean
>004893E9    je          00489414
 004893EB    mov         eax,dword ptr [ebp-4]
 004893EE    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>004893F5    je          00489414
 004893F7    mov         eax,dword ptr [ebp-4]
 004893FA    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>00489401    je          00489414
 00489403    mov         eax,dword ptr [ebp-4]
 00489406    mov         eax,dword ptr [eax+17C];TWinControl.FDockManager:IDockManager
 0048940C    mov         edx,dword ptr [ebp-8]
 0048940F    mov         ecx,dword ptr [eax]
 00489411    call        dword ptr [ecx+20]
 00489414    mov         eax,dword ptr [ebp-4]
 00489417    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>0048941E    je          00489563
 00489424    xor         eax,eax
 00489426    mov         dword ptr [ebp-10],eax
 00489429    cmp         dword ptr [ebp-0C],0
>0048942D    je          0048944E
 0048942F    mov         eax,dword ptr [ebp-4]
 00489432    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00489438    mov         edx,dword ptr [ebp-0C]
 0048943B    call        004202BC
 00489440    mov         dword ptr [ebp-10],eax
 00489443    cmp         dword ptr [ebp-10],0
>00489447    jge         0048944E
 00489449    xor         eax,eax
 0048944B    mov         dword ptr [ebp-10],eax
 0048944E    mov         eax,dword ptr [ebp-4]
 00489451    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00489457    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048945A    mov         dword ptr [ebp-14],eax
 0048945D    mov         eax,dword ptr [ebp-10]
 00489460    cmp         eax,dword ptr [ebp-14]
>00489463    jge         00489563
 00489469    mov         eax,dword ptr [ebp-4]
 0048946C    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 00489472    mov         edx,dword ptr [ebp-10]
 00489475    call        TList.Get
 0048947A    mov         dword ptr [ebp-20],eax
 0048947D    mov         eax,dword ptr [ebp-20]
 00489480    cmp         byte ptr [eax+57],0
>00489484    jne         004894A0
 00489486    mov         eax,dword ptr [ebp-20]
 00489489    test        byte ptr [eax+1C],10
>0048948D    je          00489554
 00489493    mov         eax,dword ptr [ebp-20]
 00489496    test        byte ptr [eax+51],4
>0048949A    jne         00489554
 004894A0    mov         eax,dword ptr [ebp-20]
 004894A3    mov         eax,dword ptr [eax+44]
 004894A6    mov         edx,dword ptr [ebp-20]
 004894A9    add         eax,dword ptr [edx+4C]
 004894AC    push        eax
 004894AD    lea         eax,[ebp-38]
 004894B0    push        eax
 004894B1    mov         eax,dword ptr [ebp-20]
 004894B4    mov         ecx,dword ptr [eax+40]
 004894B7    mov         eax,dword ptr [ebp-20]
 004894BA    add         ecx,dword ptr [eax+48]
 004894BD    mov         eax,dword ptr [ebp-20]
 004894C0    mov         edx,dword ptr [eax+44]
 004894C3    mov         eax,dword ptr [ebp-20]
 004894C6    mov         eax,dword ptr [eax+40]
 004894C9    call        0041E714
 004894CE    lea         eax,[ebp-38]
 004894D1    push        eax
 004894D2    mov         eax,dword ptr [ebp-8]
 004894D5    push        eax
 004894D6    call        gdi32.RectVisible
 004894DB    test        eax,eax
>004894DD    je          00489554
 004894DF    mov         eax,dword ptr [ebp-4]
 004894E2    test        byte ptr [eax+54],80;TWinControl.FControlState:TControlState
>004894E6    je          004894F1
 004894E8    mov         eax,dword ptr [ebp-20]
 004894EB    or          word ptr [eax+54],80
 004894F1    mov         eax,dword ptr [ebp-8]
 004894F4    push        eax
 004894F5    call        gdi32.SaveDC
 004894FA    mov         dword ptr [ebp-18],eax
 004894FD    mov         eax,dword ptr [ebp-20]
 00489500    mov         ecx,dword ptr [eax+44]
 00489503    mov         eax,dword ptr [ebp-20]
 00489506    mov         edx,dword ptr [eax+40]
 00489509    mov         eax,dword ptr [ebp-8]
 0048950C    call        MoveWindowOrg
 00489511    mov         eax,dword ptr [ebp-20]
 00489514    mov         eax,dword ptr [eax+4C]
 00489517    push        eax
 00489518    mov         eax,dword ptr [ebp-20]
 0048951B    mov         eax,dword ptr [eax+48]
 0048951E    push        eax
 0048951F    push        0
 00489521    push        0
 00489523    mov         eax,dword ptr [ebp-8]
 00489526    push        eax
 00489527    call        gdi32.IntersectClipRect
 0048952C    push        0
 0048952E    mov         ecx,dword ptr [ebp-8]
 00489531    mov         edx,0F
 00489536    mov         eax,dword ptr [ebp-20]
 00489539    call        00484FFC
 0048953E    mov         eax,dword ptr [ebp-18]
 00489541    push        eax
 00489542    mov         eax,dword ptr [ebp-8]
 00489545    push        eax
 00489546    call        gdi32.RestoreDC
 0048954B    mov         eax,dword ptr [ebp-20]
 0048954E    and         word ptr [eax+54],0FF7F
 00489554    inc         dword ptr [ebp-10]
 00489557    mov         eax,dword ptr [ebp-10]
 0048955A    cmp         eax,dword ptr [ebp-14]
>0048955D    jl          00489469
 00489563    mov         eax,dword ptr [ebp-4]
 00489566    cmp         dword ptr [eax+19C],0;TWinControl.FWinControls:TList
>0048956D    je          004896AD
 00489573    mov         eax,dword ptr [ebp-4]
 00489576    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 0048957C    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048957F    dec         eax
 00489580    test        eax,eax
>00489582    jl          004896AD
 00489588    inc         eax
 00489589    mov         dword ptr [ebp-24],eax
 0048958C    mov         dword ptr [ebp-10],0
 00489593    mov         eax,dword ptr [ebp-4]
 00489596    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 0048959C    mov         edx,dword ptr [ebp-10]
 0048959F    call        TList.Get
 004895A4    mov         dword ptr [ebp-28],eax
 004895A7    mov         eax,dword ptr [ebp-28]
 004895AA    cmp         byte ptr [eax+1A5],0
>004895B1    je          004896A1
 004895B7    mov         eax,dword ptr [ebp-28]
 004895BA    test        byte ptr [eax+50],10
>004895BE    je          004896A1
 004895C4    mov         eax,dword ptr [ebp-28]
 004895C7    cmp         byte ptr [eax+57],0
>004895CB    jne         004895E7
 004895CD    mov         eax,dword ptr [ebp-28]
 004895D0    test        byte ptr [eax+1C],10
>004895D4    je          004896A1
 004895DA    mov         eax,dword ptr [ebp-28]
 004895DD    test        byte ptr [eax+51],4
>004895E1    jne         004896A1
 004895E7    mov         eax,0FF000010
 004895EC    call        ColorToRGB
 004895F1    push        eax
 004895F2    call        gdi32.CreateSolidBrush
 004895F7    mov         dword ptr [ebp-1C],eax
 004895FA    mov         eax,dword ptr [ebp-1C]
 004895FD    push        eax
 004895FE    mov         eax,dword ptr [ebp-28]
 00489601    mov         eax,dword ptr [eax+44]
 00489604    mov         edx,dword ptr [ebp-28]
 00489607    add         eax,dword ptr [edx+4C]
 0048960A    push        eax
 0048960B    lea         eax,[ebp-38]
 0048960E    push        eax
 0048960F    mov         eax,dword ptr [ebp-28]
 00489612    mov         ecx,dword ptr [eax+40]
 00489615    mov         eax,dword ptr [ebp-28]
 00489618    add         ecx,dword ptr [eax+48]
 0048961B    mov         eax,dword ptr [ebp-28]
 0048961E    mov         edx,dword ptr [eax+44]
 00489621    dec         edx
 00489622    mov         eax,dword ptr [ebp-28]
 00489625    mov         eax,dword ptr [eax+40]
 00489628    dec         eax
 00489629    call        0041E714
 0048962E    lea         eax,[ebp-38]
 00489631    push        eax
 00489632    mov         eax,dword ptr [ebp-8]
 00489635    push        eax
 00489636    call        user32.FrameRect
 0048963B    mov         eax,dword ptr [ebp-1C]
 0048963E    push        eax
 0048963F    call        gdi32.DeleteObject
 00489644    mov         eax,0FF000014
 00489649    call        ColorToRGB
 0048964E    push        eax
 0048964F    call        gdi32.CreateSolidBrush
 00489654    mov         dword ptr [ebp-1C],eax
 00489657    mov         eax,dword ptr [ebp-1C]
 0048965A    push        eax
 0048965B    mov         eax,dword ptr [ebp-28]
 0048965E    mov         eax,dword ptr [eax+44]
 00489661    mov         edx,dword ptr [ebp-28]
 00489664    add         eax,dword ptr [edx+4C]
 00489667    inc         eax
 00489668    push        eax
 00489669    lea         eax,[ebp-38]
 0048966C    push        eax
 0048966D    mov         eax,dword ptr [ebp-28]
 00489670    mov         ecx,dword ptr [eax+40]
 00489673    mov         eax,dword ptr [ebp-28]
 00489676    add         ecx,dword ptr [eax+48]
 00489679    inc         ecx
 0048967A    mov         eax,dword ptr [ebp-28]
 0048967D    mov         edx,dword ptr [eax+44]
 00489680    mov         eax,dword ptr [ebp-28]
 00489683    mov         eax,dword ptr [eax+40]
 00489686    call        0041E714
 0048968B    lea         eax,[ebp-38]
 0048968E    push        eax
 0048968F    mov         eax,dword ptr [ebp-8]
 00489692    push        eax
 00489693    call        user32.FrameRect
 00489698    mov         eax,dword ptr [ebp-1C]
 0048969B    push        eax
 0048969C    call        gdi32.DeleteObject
 004896A1    inc         dword ptr [ebp-10]
 004896A4    dec         dword ptr [ebp-24]
>004896A7    jne         00489593
 004896AD    mov         esp,ebp
 004896AF    pop         ebp
 004896B0    ret
end;*}

//004896B4
{*procedure sub_004896B4(?:Pointer; ?:?; ?:?; ?:?);
begin
 004896B4    push        ebp
 004896B5    mov         ebp,esp
 004896B7    add         esp,0FFFFFFCC
 004896BA    mov         dword ptr [ebp-0C],ecx
 004896BD    mov         dword ptr [ebp-8],edx
 004896C0    mov         dword ptr [ebp-4],eax
 004896C3    mov         eax,dword ptr [ebp-4]
 004896C6    or          word ptr [eax+54],80
 004896CC    mov         eax,dword ptr [ebp-8]
 004896CF    push        eax
 004896D0    call        gdi32.SaveDC
 004896D5    mov         dword ptr [ebp-1C],eax
 004896D8    mov         ecx,dword ptr [ebp+8]
 004896DB    mov         edx,dword ptr [ebp-0C]
 004896DE    mov         eax,dword ptr [ebp-8]
 004896E1    call        MoveWindowOrg
 004896E6    mov         eax,dword ptr [ebp-4]
 004896E9    mov         eax,dword ptr [eax+4C]
 004896EC    push        eax
 004896ED    mov         eax,dword ptr [ebp-4]
 004896F0    mov         eax,dword ptr [eax+48]
 004896F3    push        eax
 004896F4    push        0
 004896F6    push        0
 004896F8    mov         eax,dword ptr [ebp-8]
 004896FB    push        eax
 004896FC    call        gdi32.IntersectClipRect
 00489701    xor         eax,eax
 00489703    mov         dword ptr [ebp-18],eax
 00489706    xor         eax,eax
 00489708    mov         dword ptr [ebp-14],eax
 0048970B    push        0EC
 0048970D    mov         eax,dword ptr [ebp-4]
 00489710    call        TWinControl.GetHandle
 00489715    push        eax
 00489716    call        user32.GetWindowLongA
 0048971B    test        ah,2
>0048971E    je          00489730
 00489720    mov         dword ptr [ebp-14],0A
 00489727    mov         dword ptr [ebp-18],200F
>0048972E    jmp         00489755
 00489730    push        0F0
 00489732    mov         eax,dword ptr [ebp-4]
 00489735    call        TWinControl.GetHandle
 0048973A    push        eax
 0048973B    call        user32.GetWindowLongA
 00489740    test        eax,800000
>00489745    je          00489755
 00489747    mov         dword ptr [ebp-14],3
 0048974E    mov         dword ptr [ebp-18],0A00F
 00489755    cmp         dword ptr [ebp-18],0
>00489759    je          004897B4
 0048975B    mov         eax,dword ptr [ebp-4]
 0048975E    mov         eax,dword ptr [eax+4C]
 00489761    push        eax
 00489762    mov         eax,dword ptr [ebp-4]
 00489765    mov         eax,dword ptr [eax+48]
 00489768    push        eax
 00489769    push        0
 0048976B    push        0
 0048976D    lea         eax,[ebp-34]
 00489770    push        eax
 00489771    call        user32.SetRect
 00489776    mov         eax,dword ptr [ebp-18]
 00489779    push        eax
 0048977A    mov         eax,dword ptr [ebp-14]
 0048977D    push        eax
 0048977E    lea         eax,[ebp-34]
 00489781    push        eax
 00489782    mov         eax,dword ptr [ebp-8]
 00489785    push        eax
 00489786    call        user32.DrawEdge
 0048978B    mov         ecx,dword ptr [ebp-30]
 0048978E    mov         edx,dword ptr [ebp-34]
 00489791    mov         eax,dword ptr [ebp-8]
 00489794    call        MoveWindowOrg
 00489799    mov         eax,dword ptr [ebp-28]
 0048979C    sub         eax,dword ptr [ebp-30]
 0048979F    push        eax
 004897A0    mov         eax,dword ptr [ebp-2C]
 004897A3    sub         eax,dword ptr [ebp-34]
 004897A6    push        eax
 004897A7    push        0
 004897A9    push        0
 004897AB    mov         eax,dword ptr [ebp-8]
 004897AE    push        eax
 004897AF    call        gdi32.IntersectClipRect
 004897B4    push        0
 004897B6    mov         ecx,dword ptr [ebp-8]
 004897B9    mov         edx,14
 004897BE    mov         eax,dword ptr [ebp-4]
 004897C1    call        00484FFC
 004897C6    push        0
 004897C8    mov         ecx,dword ptr [ebp-8]
 004897CB    mov         edx,0F
 004897D0    mov         eax,dword ptr [ebp-4]
 004897D3    call        00484FFC
 004897D8    mov         eax,dword ptr [ebp-4]
 004897DB    cmp         dword ptr [eax+19C],0
>004897E2    je          0048983D
 004897E4    mov         eax,dword ptr [ebp-4]
 004897E7    mov         eax,dword ptr [eax+19C]
 004897ED    mov         eax,dword ptr [eax+8]
 004897F0    dec         eax
 004897F1    test        eax,eax
>004897F3    jl          0048983D
 004897F5    inc         eax
 004897F6    mov         dword ptr [ebp-20],eax
 004897F9    mov         dword ptr [ebp-10],0
 00489800    mov         edx,dword ptr [ebp-10]
 00489803    mov         eax,dword ptr [ebp-4]
 00489806    mov         eax,dword ptr [eax+19C]
 0048980C    call        TList.Get
 00489811    mov         dword ptr [ebp-24],eax
 00489814    mov         eax,dword ptr [ebp-24]
 00489817    cmp         byte ptr [eax+57],0
>0048981B    je          00489835
 0048981D    mov         eax,dword ptr [ebp-24]
 00489820    mov         eax,dword ptr [eax+44]
 00489823    push        eax
 00489824    mov         eax,dword ptr [ebp-24]
 00489827    mov         ecx,dword ptr [eax+40]
 0048982A    mov         edx,dword ptr [ebp-8]
 0048982D    mov         eax,dword ptr [ebp-24]
 00489830    call        004896B4
 00489835    inc         dword ptr [ebp-10]
 00489838    dec         dword ptr [ebp-20]
>0048983B    jne         00489800
 0048983D    mov         eax,dword ptr [ebp-1C]
 00489840    push        eax
 00489841    mov         eax,dword ptr [ebp-8]
 00489844    push        eax
 00489845    call        gdi32.RestoreDC
 0048984A    mov         eax,dword ptr [ebp-4]
 0048984D    and         word ptr [eax+54],0FF7F
 00489853    mov         esp,ebp
 00489855    pop         ebp
 00489856    ret         4
end;*}

//0048985C
procedure TWinControl.WMPaint(var Message:TWMPaint);
begin
{*
 0048985C    push        ebp
 0048985D    mov         ebp,esp
 0048985F    add         esp,0FFFFFF88
 00489862    mov         dword ptr [ebp-8],edx
 00489865    mov         dword ptr [ebp-4],eax
 00489868    mov         eax,dword ptr [ebp-4]
 0048986B    cmp         byte ptr [eax+1F8],0
>00489872    je          0048987D
 00489874    mov         eax,dword ptr [ebp-8]
 00489877    cmp         dword ptr [eax+4],0
>0048987B    je          004898B2
 0048987D    mov         eax,dword ptr [ebp-4]
 00489880    test        byte ptr [eax+55],1
>00489884    jne         004898A2
 00489886    mov         eax,dword ptr [ebp-4]
 00489889    call        00487E38
 0048988E    test        eax,eax
>00489890    jne         004898A2
 00489892    mov         edx,dword ptr [ebp-8]
 00489895    mov         eax,dword ptr [ebp-4]
 00489898    mov         ecx,dword ptr [eax]
 0048989A    call        dword ptr [ecx-10]
>0048989D    jmp         004899DC
 004898A2    mov         edx,dword ptr [ebp-8]
 004898A5    mov         eax,dword ptr [ebp-4]
 004898A8    call        TWinControl.PaintHandler
>004898AD    jmp         004899DC
 004898B2    push        0
 004898B4    call        user32.GetDC
 004898B9    mov         dword ptr [ebp-0C],eax
 004898BC    lea         edx,[ebp-68]
 004898BF    mov         eax,dword ptr [ebp-4]
 004898C2    mov         ecx,dword ptr [eax]
 004898C4    call        dword ptr [ecx+44]
 004898C7    mov         eax,dword ptr [ebp-5C]
 004898CA    push        eax
 004898CB    lea         edx,[ebp-78]
 004898CE    mov         eax,dword ptr [ebp-4]
 004898D1    mov         ecx,dword ptr [eax]
 004898D3    call        dword ptr [ecx+44]
 004898D6    mov         eax,dword ptr [ebp-70]
 004898D9    push        eax
 004898DA    mov         eax,dword ptr [ebp-0C]
 004898DD    push        eax
 004898DE    call        gdi32.CreateCompatibleBitmap
 004898E3    mov         dword ptr [ebp-14],eax
 004898E6    mov         eax,dword ptr [ebp-0C]
 004898E9    push        eax
 004898EA    push        0
 004898EC    call        user32.ReleaseDC
 004898F1    push        0
 004898F3    call        gdi32.CreateCompatibleDC
 004898F8    mov         dword ptr [ebp-10],eax
 004898FB    mov         eax,dword ptr [ebp-14]
 004898FE    push        eax
 004898FF    mov         eax,dword ptr [ebp-10]
 00489902    push        eax
 00489903    call        gdi32.SelectObject
 00489908    mov         dword ptr [ebp-18],eax
 0048990B    xor         eax,eax
 0048990D    push        ebp
 0048990E    push        4899D5
 00489913    push        dword ptr fs:[eax]
 00489916    mov         dword ptr fs:[eax],esp
 00489919    lea         eax,[ebp-58]
 0048991C    push        eax
 0048991D    mov         eax,dword ptr [ebp-4]
 00489920    call        TWinControl.GetHandle
 00489925    push        eax
 00489926    call        user32.BeginPaint
 0048992B    mov         dword ptr [ebp-0C],eax
 0048992E    mov         eax,dword ptr [ebp-10]
 00489931    push        eax
 00489932    mov         ecx,dword ptr [ebp-10]
 00489935    mov         edx,14
 0048993A    mov         eax,dword ptr [ebp-4]
 0048993D    call        00484FFC
 00489942    mov         eax,dword ptr [ebp-8]
 00489945    mov         edx,dword ptr [ebp-10]
 00489948    mov         dword ptr [eax+4],edx
 0048994B    mov         edx,dword ptr [ebp-8]
 0048994E    mov         eax,dword ptr [ebp-4]
 00489951    call        TWinControl.WMPaint
 00489956    mov         eax,dword ptr [ebp-8]
 00489959    xor         edx,edx
 0048995B    mov         dword ptr [eax+4],edx
 0048995E    push        0CC0020
 00489963    push        0
 00489965    push        0
 00489967    mov         eax,dword ptr [ebp-10]
 0048996A    push        eax
 0048996B    lea         edx,[ebp-68]
 0048996E    mov         eax,dword ptr [ebp-4]
 00489971    mov         ecx,dword ptr [eax]
 00489973    call        dword ptr [ecx+44]
 00489976    mov         eax,dword ptr [ebp-5C]
 00489979    push        eax
 0048997A    lea         edx,[ebp-78]
 0048997D    mov         eax,dword ptr [ebp-4]
 00489980    mov         ecx,dword ptr [eax]
 00489982    call        dword ptr [ecx+44]
 00489985    mov         eax,dword ptr [ebp-70]
 00489988    push        eax
 00489989    push        0
 0048998B    push        0
 0048998D    mov         eax,dword ptr [ebp-0C]
 00489990    push        eax
 00489991    call        gdi32.BitBlt
 00489996    lea         eax,[ebp-58]
 00489999    push        eax
 0048999A    mov         eax,dword ptr [ebp-4]
 0048999D    call        TWinControl.GetHandle
 004899A2    push        eax
 004899A3    call        user32.EndPaint
 004899A8    xor         eax,eax
 004899AA    pop         edx
 004899AB    pop         ecx
 004899AC    pop         ecx
 004899AD    mov         dword ptr fs:[eax],edx
 004899B0    push        4899DC
 004899B5    mov         eax,dword ptr [ebp-18]
 004899B8    push        eax
 004899B9    mov         eax,dword ptr [ebp-10]
 004899BC    push        eax
 004899BD    call        gdi32.SelectObject
 004899C2    mov         eax,dword ptr [ebp-10]
 004899C5    push        eax
 004899C6    call        gdi32.DeleteDC
 004899CB    mov         eax,dword ptr [ebp-14]
 004899CE    push        eax
 004899CF    call        gdi32.DeleteObject
 004899D4    ret
>004899D5    jmp         @HandleFinally
>004899DA    jmp         004899B5
 004899DC    mov         esp,ebp
 004899DE    pop         ebp
 004899DF    ret
*}
end;

//004899E0
{*procedure TWinControl.WMCommand(?:?);
begin
 004899E0    push        ebp
 004899E1    mov         ebp,esp
 004899E3    add         esp,0FFFFFFF8
 004899E6    mov         dword ptr [ebp-8],edx
 004899E9    mov         dword ptr [ebp-4],eax
 004899EC    mov         edx,dword ptr [ebp-8]
 004899EF    mov         eax,dword ptr [ebp-8]
 004899F2    mov         eax,dword ptr [eax+8]
 004899F5    call        004891DC
 004899FA    test        al,al
>004899FC    jne         00489A09
 004899FE    mov         edx,dword ptr [ebp-8]
 00489A01    mov         eax,dword ptr [ebp-4]
 00489A04    mov         ecx,dword ptr [eax]
 00489A06    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489A09    pop         ecx
 00489A0A    pop         ecx
 00489A0B    pop         ebp
 00489A0C    ret
end;*}

//00489A10
{*procedure TWinControl.WMNotify(?:?);
begin
 00489A10    push        ebp
 00489A11    mov         ebp,esp
 00489A13    add         esp,0FFFFFFF8
 00489A16    mov         dword ptr [ebp-8],edx
 00489A19    mov         dword ptr [ebp-4],eax
 00489A1C    mov         edx,dword ptr [ebp-8]
 00489A1F    mov         eax,dword ptr [ebp-8]
 00489A22    mov         eax,dword ptr [eax+8]
 00489A25    mov         eax,dword ptr [eax]
 00489A27    call        004891DC
 00489A2C    test        al,al
>00489A2E    jne         00489A3B
 00489A30    mov         edx,dword ptr [ebp-8]
 00489A33    mov         eax,dword ptr [ebp-4]
 00489A36    mov         ecx,dword ptr [eax]
 00489A38    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489A3B    pop         ecx
 00489A3C    pop         ecx
 00489A3D    pop         ebp
 00489A3E    ret
end;*}

//00489A40
{*procedure TWinControl.WMSysColorChange(?:?);
begin
 00489A40    push        ebp
 00489A41    mov         ebp,esp
 00489A43    add         esp,0FFFFFFF8
 00489A46    mov         dword ptr [ebp-8],edx
 00489A49    mov         dword ptr [ebp-4],eax
 00489A4C    call        0042D610
 00489A51    push        0
 00489A53    xor         ecx,ecx
 00489A55    mov         edx,0B024
 00489A5A    mov         eax,dword ptr [ebp-4]
 00489A5D    call        00484FFC
 00489A62    pop         ecx
 00489A63    pop         ecx
 00489A64    pop         ebp
 00489A65    ret
end;*}

//00489A68
{*procedure TWinControl.WMSettingChange(?:?);
begin
 00489A68    push        ebp
 00489A69    mov         ebp,esp
 00489A6B    add         esp,0FFFFFFF8
 00489A6E    mov         dword ptr [ebp-8],edx
 00489A71    mov         dword ptr [ebp-4],eax
 00489A74    mov         eax,dword ptr [ebp-8]
 00489A77    mov         eax,dword ptr [eax+8]
 00489A7A    push        eax
 00489A7B    mov         ecx,dword ptr [ebp-8]
 00489A7E    mov         ecx,dword ptr [ecx+4]
 00489A81    mov         edx,0B025
 00489A86    mov         eax,dword ptr [ebp-4]
 00489A89    call        00484FFC
 00489A8E    pop         ecx
 00489A8F    pop         ecx
 00489A90    pop         ebp
 00489A91    ret
end;*}

//00489A94
{*procedure TWinControl.WMFontChange(?:?);
begin
 00489A94    push        ebp
 00489A95    mov         ebp,esp
 00489A97    add         esp,0FFFFFFF8
 00489A9A    mov         dword ptr [ebp-8],edx
 00489A9D    mov         dword ptr [ebp-4],eax
 00489AA0    push        0
 00489AA2    xor         ecx,ecx
 00489AA4    mov         edx,0B026
 00489AA9    mov         eax,dword ptr [ebp-4]
 00489AAC    call        00484FFC
 00489AB1    pop         ecx
 00489AB2    pop         ecx
 00489AB3    pop         ebp
 00489AB4    ret
end;*}

//00489AB8
{*procedure TWinControl.WMTimeChange(?:?);
begin
 00489AB8    push        ebp
 00489AB9    mov         ebp,esp
 00489ABB    add         esp,0FFFFFFF8
 00489ABE    mov         dword ptr [ebp-8],edx
 00489AC1    mov         dword ptr [ebp-4],eax
 00489AC4    push        0
 00489AC6    xor         ecx,ecx
 00489AC8    mov         edx,0B027
 00489ACD    mov         eax,dword ptr [ebp-4]
 00489AD0    call        00484FFC
 00489AD5    pop         ecx
 00489AD6    pop         ecx
 00489AD7    pop         ebp
 00489AD8    ret
end;*}

//00489ADC
{*procedure TWinControl.WMHScroll(?:?);
begin
 00489ADC    push        ebp
 00489ADD    mov         ebp,esp
 00489ADF    add         esp,0FFFFFFF8
 00489AE2    mov         dword ptr [ebp-8],edx
 00489AE5    mov         dword ptr [ebp-4],eax
 00489AE8    mov         edx,dword ptr [ebp-8]
 00489AEB    mov         eax,dword ptr [ebp-8]
 00489AEE    mov         eax,dword ptr [eax+8]
 00489AF1    call        004891DC
 00489AF6    test        al,al
>00489AF8    jne         00489B05
 00489AFA    mov         edx,dword ptr [ebp-8]
 00489AFD    mov         eax,dword ptr [ebp-4]
 00489B00    mov         ecx,dword ptr [eax]
 00489B02    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489B05    pop         ecx
 00489B06    pop         ecx
 00489B07    pop         ebp
 00489B08    ret
end;*}

//00489B0C
{*procedure TWinControl.WMVScroll(?:?);
begin
 00489B0C    push        ebp
 00489B0D    mov         ebp,esp
 00489B0F    add         esp,0FFFFFFF8
 00489B12    mov         dword ptr [ebp-8],edx
 00489B15    mov         dword ptr [ebp-4],eax
 00489B18    mov         edx,dword ptr [ebp-8]
 00489B1B    mov         eax,dword ptr [ebp-8]
 00489B1E    mov         eax,dword ptr [eax+8]
 00489B21    call        004891DC
 00489B26    test        al,al
>00489B28    jne         00489B35
 00489B2A    mov         edx,dword ptr [ebp-8]
 00489B2D    mov         eax,dword ptr [ebp-4]
 00489B30    mov         ecx,dword ptr [eax]
 00489B32    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489B35    pop         ecx
 00489B36    pop         ecx
 00489B37    pop         ebp
 00489B38    ret
end;*}

//00489B3C
{*procedure TWinControl.WMCompareItem(?:?);
begin
 00489B3C    push        ebp
 00489B3D    mov         ebp,esp
 00489B3F    add         esp,0FFFFFFF8
 00489B42    mov         dword ptr [ebp-8],edx
 00489B45    mov         dword ptr [ebp-4],eax
 00489B48    mov         edx,dword ptr [ebp-8]
 00489B4B    mov         eax,dword ptr [ebp-8]
 00489B4E    mov         eax,dword ptr [eax+8]
 00489B51    mov         eax,dword ptr [eax+4]
 00489B54    call        004891DC
 00489B59    test        al,al
>00489B5B    jne         00489B68
 00489B5D    mov         edx,dword ptr [ebp-8]
 00489B60    mov         eax,dword ptr [ebp-4]
 00489B63    mov         ecx,dword ptr [eax]
 00489B65    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489B68    pop         ecx
 00489B69    pop         ecx
 00489B6A    pop         ebp
 00489B6B    ret
end;*}

//00489B6C
{*procedure TWinControl.WMDeleteItem(?:?);
begin
 00489B6C    push        ebp
 00489B6D    mov         ebp,esp
 00489B6F    add         esp,0FFFFFFF8
 00489B72    mov         dword ptr [ebp-8],edx
 00489B75    mov         dword ptr [ebp-4],eax
 00489B78    mov         edx,dword ptr [ebp-8]
 00489B7B    mov         eax,dword ptr [ebp-8]
 00489B7E    mov         eax,dword ptr [eax+8]
 00489B81    mov         eax,dword ptr [eax+4]
 00489B84    call        004891DC
 00489B89    test        al,al
>00489B8B    jne         00489B98
 00489B8D    mov         edx,dword ptr [ebp-8]
 00489B90    mov         eax,dword ptr [ebp-4]
 00489B93    mov         ecx,dword ptr [eax]
 00489B95    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489B98    pop         ecx
 00489B99    pop         ecx
 00489B9A    pop         ebp
 00489B9B    ret
end;*}

//00489B9C
{*procedure TWinControl.WMDrawItem(?:?);
begin
 00489B9C    push        ebp
 00489B9D    mov         ebp,esp
 00489B9F    add         esp,0FFFFFFF8
 00489BA2    mov         dword ptr [ebp-8],edx
 00489BA5    mov         dword ptr [ebp-4],eax
 00489BA8    mov         edx,dword ptr [ebp-8]
 00489BAB    mov         eax,dword ptr [ebp-8]
 00489BAE    mov         eax,dword ptr [eax+8]
 00489BB1    mov         eax,dword ptr [eax+4]
 00489BB4    call        004891DC
 00489BB9    test        al,al
>00489BBB    jne         00489BC8
 00489BBD    mov         edx,dword ptr [ebp-8]
 00489BC0    mov         eax,dword ptr [ebp-4]
 00489BC3    mov         ecx,dword ptr [eax]
 00489BC5    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489BC8    pop         ecx
 00489BC9    pop         ecx
 00489BCA    pop         ebp
 00489BCB    ret
end;*}

//00489BCC
{*procedure TWinControl.WMMeasureItem(?:?);
begin
 00489BCC    push        ebp
 00489BCD    mov         ebp,esp
 00489BCF    add         esp,0FFFFFFF8
 00489BD2    mov         dword ptr [ebp-8],edx
 00489BD5    mov         dword ptr [ebp-4],eax
 00489BD8    mov         edx,dword ptr [ebp-8]
 00489BDB    mov         eax,dword ptr [ebp-8]
 00489BDE    mov         eax,dword ptr [eax+8]
 00489BE1    mov         eax,dword ptr [eax+4]
 00489BE4    call        004891DC
 00489BE9    test        al,al
>00489BEB    jne         00489BF8
 00489BED    mov         edx,dword ptr [ebp-8]
 00489BF0    mov         eax,dword ptr [ebp-4]
 00489BF3    mov         ecx,dword ptr [eax]
 00489BF5    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489BF8    pop         ecx
 00489BF9    pop         ecx
 00489BFA    pop         ebp
 00489BFB    ret
end;*}

//00489BFC
{*procedure TWinControl.WMEraseBkgnd(?:?);
begin
 00489BFC    push        ebp
 00489BFD    mov         ebp,esp
 00489BFF    add         esp,0FFFFFFE4
 00489C02    mov         dword ptr [ebp-8],edx
 00489C05    mov         dword ptr [ebp-4],eax
 00489C08    call        0046BFC0
 00489C0D    mov         dword ptr [ebp-0C],eax
 00489C10    mov         eax,dword ptr [ebp-0C]
 00489C13    call        0046C0EC
 00489C18    test        al,al
>00489C1A    je          00489C4E
 00489C1C    mov         eax,dword ptr [ebp-4]
 00489C1F    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00489C23    je          00489C4E
 00489C25    mov         eax,dword ptr [ebp-4]
 00489C28    test        byte ptr [eax+52],4;TWinControl.?f52:byte
>00489C2C    je          00489C4E
 00489C2E    push        0
 00489C30    push        0
 00489C32    push        0
 00489C34    mov         eax,dword ptr [ebp-4]
 00489C37    call        TWinControl.GetHandle
 00489C3C    mov         edx,eax
 00489C3E    mov         ecx,dword ptr [ebp-8]
 00489C41    mov         ecx,dword ptr [ecx+4]
 00489C44    mov         eax,dword ptr [ebp-0C]
 00489C47    call        0046C2E8
>00489C4C    jmp         00489C92
 00489C4E    mov         eax,dword ptr [ebp-4]
 00489C51    cmp         byte ptr [eax+1F8],0;TWinControl.FDoubleBuffered:Boolean
>00489C58    je          00489C68
 00489C5A    mov         eax,dword ptr [ebp-8]
 00489C5D    mov         eax,dword ptr [eax+4]
 00489C60    mov         edx,dword ptr [ebp-8]
 00489C63    cmp         eax,dword ptr [edx+8]
>00489C66    jne         00489C92
 00489C68    mov         eax,dword ptr [ebp-4]
 00489C6B    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 00489C71    call        TBrush.GetHandle
 00489C76    push        eax
 00489C77    lea         edx,[ebp-1C]
 00489C7A    mov         eax,dword ptr [ebp-4]
 00489C7D    mov         ecx,dword ptr [eax]
 00489C7F    call        dword ptr [ecx+44];TWinControl.sub_0048C23C
 00489C82    lea         eax,[ebp-1C]
 00489C85    push        eax
 00489C86    mov         eax,dword ptr [ebp-8]
 00489C89    mov         eax,dword ptr [eax+4]
 00489C8C    push        eax
 00489C8D    call        user32.FillRect
 00489C92    mov         eax,dword ptr [ebp-8]
 00489C95    mov         dword ptr [eax+0C],1
 00489C9C    mov         esp,ebp
 00489C9E    pop         ebp
 00489C9F    ret
end;*}

//00489CA0
{*procedure TWinControl.WMWindowPosChangedMsg(?:?);
begin
 00489CA0    push        ebp
 00489CA1    mov         ebp,esp
 00489CA3    add         esp,0FFFFFFF4
 00489CA6    mov         dword ptr [ebp-8],edx
 00489CA9    mov         dword ptr [ebp-4],eax
 00489CAC    mov         eax,dword ptr [ebp-4]
 00489CAF    cmp         byte ptr [eax+1A5],0;TWinControl.FCtl3D:Boolean
>00489CB6    je          00489CD6
 00489CB8    mov         eax,dword ptr [ebp-4]
 00489CBB    test        byte ptr [eax+50],10;TWinControl.FControlStyle:TControlStyle
>00489CBF    je          00489CD6
 00489CC1    mov         eax,dword ptr [ebp-4]
 00489CC4    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>00489CC8    je          00489CD6
 00489CCA    mov         eax,dword ptr [ebp-8]
 00489CCD    mov         eax,dword ptr [eax+8]
 00489CD0    test        byte ptr [eax+18],8
>00489CD4    je          00489CDA
 00489CD6    xor         eax,eax
>00489CD8    jmp         00489CDC
 00489CDA    mov         al,1
 00489CDC    mov         byte ptr [ebp-9],al
 00489CDF    mov         eax,dword ptr [ebp-8]
 00489CE2    mov         eax,dword ptr [eax+8]
 00489CE5    test        byte ptr [eax+18],2
>00489CE9    jne         00489CFE
 00489CEB    mov         eax,dword ptr [ebp-4]
 00489CEE    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 00489CF4    push        eax
 00489CF5    call        user32.IsWindowVisible
 00489CFA    test        eax,eax
>00489CFC    jne         00489D02
 00489CFE    xor         eax,eax
>00489D00    jmp         00489D04
 00489D02    mov         al,1
 00489D04    mov         byte ptr [ebp-0A],al
 00489D07    mov         eax,dword ptr [ebp-8]
 00489D0A    mov         eax,dword ptr [eax+8]
 00489D0D    test        byte ptr [eax+18],1
>00489D11    jne         00489D26
 00489D13    mov         eax,dword ptr [ebp-4]
 00489D16    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 00489D1C    push        eax
 00489D1D    call        user32.IsWindowVisible
 00489D22    test        eax,eax
>00489D24    jne         00489D2A
 00489D26    xor         eax,eax
>00489D28    jmp         00489D2C
 00489D2A    mov         al,1
 00489D2C    mov         byte ptr [ebp-0B],al
 00489D2F    cmp         byte ptr [ebp-9],0
>00489D33    je          00489D45
 00489D35    mov         al,byte ptr [ebp-0A]
 00489D38    or          al,byte ptr [ebp-0B]
>00489D3B    je          00489D45
 00489D3D    mov         eax,dword ptr [ebp-4]
 00489D40    call        0048BF88
 00489D45    mov         eax,dword ptr [ebp-4]
 00489D48    test        byte ptr [eax+55],2;TWinControl.?f55:byte
>00489D4C    jne         00489D56
 00489D4E    mov         eax,dword ptr [ebp-4]
 00489D51    call        0048C5D8
 00489D56    mov         edx,dword ptr [ebp-8]
 00489D59    mov         eax,dword ptr [ebp-4]
 00489D5C    call        TControl.WMWindowPosChangedMsg
 00489D61    cmp         byte ptr [ebp-9],0
>00489D65    je          00489D83
 00489D67    mov         al,byte ptr [ebp-0A]
 00489D6A    or          al,byte ptr [ebp-0B]
>00489D6D    jne         00489D7B
 00489D6F    mov         eax,dword ptr [ebp-8]
 00489D72    mov         eax,dword ptr [eax+8]
 00489D75    test        byte ptr [eax+18],0C0
>00489D79    je          00489D83
 00489D7B    mov         eax,dword ptr [ebp-4]
 00489D7E    call        0048BF88
 00489D83    mov         esp,ebp
 00489D85    pop         ebp
 00489D86    ret
end;*}

//00489D88
{*procedure TWinControl.WMWindowPosChangingMsg(?:?);
begin
 00489D88    push        ebp
 00489D89    mov         ebp,esp
 00489D8B    add         esp,0FFFFFFF4
 00489D8E    mov         dword ptr [ebp-8],edx
 00489D91    mov         dword ptr [ebp-4],eax
 00489D94    mov         ax,[00489DF0];0xA gvar_00489DF0
 00489D9A    mov         edx,dword ptr [ebp-4]
 00489D9D    and         ax,word ptr [edx+1C];TWinControl.FComponentState:TComponentState
 00489DA1    mov         dx,word ptr ds:[489DF4];0x0 gvar_00489DF4
 00489DA8    cmp         dx,ax
>00489DAB    jne         00489DDE
 00489DAD    mov         eax,dword ptr [ebp-8]
 00489DB0    mov         eax,dword ptr [eax+8]
 00489DB3    mov         dword ptr [ebp-0C],eax
 00489DB6    mov         eax,dword ptr [ebp-0C]
 00489DB9    test        byte ptr [eax+18],1
>00489DBD    jne         00489DDE
 00489DBF    mov         eax,dword ptr [ebp-0C]
 00489DC2    lea         ecx,[eax+14]
 00489DC5    mov         eax,dword ptr [ebp-0C]
 00489DC8    lea         edx,[eax+10]
 00489DCB    mov         eax,dword ptr [ebp-4]
 00489DCE    call        00485780
 00489DD3    test        al,al
>00489DD5    jne         00489DDE
 00489DD7    mov         eax,dword ptr [ebp-0C]
 00489DDA    or          dword ptr [eax+18],1
 00489DDE    mov         edx,dword ptr [ebp-8]
 00489DE1    mov         eax,dword ptr [ebp-4]
 00489DE4    mov         ecx,dword ptr [eax]
 00489DE6    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489DE9    mov         esp,ebp
 00489DEB    pop         ebp
 00489DEC    ret
end;*}

//00489DF8
{*procedure TWinControl.WMSize(?:?);
begin
 00489DF8    push        ebp
 00489DF9    mov         ebp,esp
 00489DFB    add         esp,0FFFFFFF8
 00489DFE    push        esi
 00489DFF    mov         dword ptr [ebp-8],edx
 00489E02    mov         dword ptr [ebp-4],eax
 00489E05    mov         eax,dword ptr [ebp-4]
 00489E08    call        0048C5D8
 00489E0D    mov         edx,dword ptr [ebp-8]
 00489E10    mov         eax,dword ptr [ebp-4]
 00489E13    mov         ecx,dword ptr [eax]
 00489E15    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489E18    mov         eax,dword ptr [ebp-4]
 00489E1B    call        004878BC
 00489E20    mov         eax,dword ptr [ebp-4]
 00489E23    test        byte ptr [eax+1C],1;TWinControl.FComponentState:TComponentState
>00489E27    jne         00489E35
 00489E29    mov         eax,dword ptr [ebp-4]
 00489E2C    mov         si,0FFCF
 00489E30    call        @CallDynaInst;TControl.sub_0048271C
 00489E35    pop         esi
 00489E36    pop         ecx
 00489E37    pop         ecx
 00489E38    pop         ebp
 00489E39    ret
end;*}

//00489E3C
{*procedure TWinControl.WMMove(?:?);
begin
 00489E3C    push        ebp
 00489E3D    mov         ebp,esp
 00489E3F    add         esp,0FFFFFFF8
 00489E42    mov         dword ptr [ebp-8],edx
 00489E45    mov         dword ptr [ebp-4],eax
 00489E48    mov         edx,dword ptr [ebp-8]
 00489E4B    mov         eax,dword ptr [ebp-4]
 00489E4E    mov         ecx,dword ptr [eax]
 00489E50    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489E53    mov         eax,dword ptr [ebp-4]
 00489E56    call        0048C5D8
 00489E5B    pop         ecx
 00489E5C    pop         ecx
 00489E5D    pop         ebp
 00489E5E    ret
end;*}

//00489E60
{*procedure TWinControl.WMSetCursor(?:?);
begin
 00489E60    push        ebp
 00489E61    mov         ebp,esp
 00489E63    add         esp,0FFFFFFE0
 00489E66    push        ebx
 00489E67    mov         dword ptr [ebp-8],edx
 00489E6A    mov         dword ptr [ebp-4],eax
 00489E6D    mov         eax,dword ptr [ebp-8]
 00489E70    mov         eax,dword ptr [eax+4]
 00489E73    mov         edx,dword ptr [ebp-4]
 00489E76    cmp         eax,dword ptr [edx+180];TWinControl.FHandle:HWND
>00489E7C    jne         00489F8B
 00489E82    mov         eax,dword ptr [ebp-8]
 00489E85    mov         ax,word ptr [eax+8]
 00489E89    sub         ax,0FFFFFFFE
>00489E8D    je          00489F4A
 00489E93    sub         ax,3
>00489E97    jne         00489F8B
 00489E9D    mov         eax,[0056E604];^Screen:TScreen
 00489EA2    mov         eax,dword ptr [eax]
 00489EA4    mov         ax,word ptr [eax+44];TScreen.FCursor:TCursor
 00489EA8    mov         word ptr [ebp-0A],ax
 00489EAC    cmp         word ptr [ebp-0A],0
>00489EB1    jne         00489F21
 00489EB3    lea         eax,[ebp-18]
 00489EB6    push        eax
 00489EB7    call        user32.GetCursorPos
 00489EBC    push        0
 00489EBE    lea         ecx,[ebp-20]
 00489EC1    lea         edx,[ebp-18]
 00489EC4    mov         eax,dword ptr [ebp-4]
 00489EC7    call        TControl.ScreenToClient
 00489ECC    lea         edx,[ebp-20]
 00489ECF    xor         ecx,ecx
 00489ED1    mov         eax,dword ptr [ebp-4]
 00489ED4    call        00488D4C
 00489ED9    mov         dword ptr [ebp-10],eax
 00489EDC    cmp         dword ptr [ebp-10],0
>00489EE0    je          00489EFE
 00489EE2    mov         eax,dword ptr [ebp-10]
 00489EE5    test        byte ptr [eax+1C],10
>00489EE9    je          00489EF3
 00489EEB    mov         word ptr [ebp-0A],0FFFE
>00489EF1    jmp         00489EFE
 00489EF3    mov         eax,dword ptr [ebp-10]
 00489EF6    mov         ax,word ptr [eax+78]
 00489EFA    mov         word ptr [ebp-0A],ax
 00489EFE    cmp         word ptr [ebp-0A],0
>00489F03    jne         00489F21
 00489F05    mov         eax,dword ptr [ebp-4]
 00489F08    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>00489F0C    je          00489F16
 00489F0E    mov         word ptr [ebp-0A],0FFFE
>00489F14    jmp         00489F21
 00489F16    mov         eax,dword ptr [ebp-4]
 00489F19    mov         ax,word ptr [eax+78];TWinControl.Cursor:TCursor
 00489F1D    mov         word ptr [ebp-0A],ax
 00489F21    cmp         word ptr [ebp-0A],0
>00489F26    je          00489F8B
 00489F28    movsx       edx,word ptr [ebp-0A]
 00489F2C    mov         eax,[0056E604];^Screen:TScreen
 00489F31    mov         eax,dword ptr [eax]
 00489F33    call        004A9008
 00489F38    push        eax
 00489F39    call        user32.SetCursor
 00489F3E    mov         eax,dword ptr [ebp-8]
 00489F41    mov         dword ptr [eax+0C],1
>00489F48    jmp         00489F96
 00489F4A    mov         eax,dword ptr [ebp-8]
 00489F4D    cmp         word ptr [eax+0A],201
>00489F53    jne         00489F8B
 00489F55    mov         eax,[0056E3C0];^Application:TApplication
 00489F5A    mov         eax,dword ptr [eax]
 00489F5C    cmp         dword ptr [eax+30],0;TApplication.FHandle:HWND
>00489F60    je          00489F8B
 00489F62    mov         eax,[0056E3C0];^Application:TApplication
 00489F67    mov         eax,dword ptr [eax]
 00489F69    mov         eax,dword ptr [eax+30];TApplication.FHandle:HWND
 00489F6C    push        eax
 00489F6D    call        user32.GetLastActivePopup
 00489F72    mov         ebx,eax
 00489F74    call        user32.GetForegroundWindow
 00489F79    cmp         ebx,eax
>00489F7B    je          00489F8B
 00489F7D    mov         eax,[0056E3C0];^Application:TApplication
 00489F82    mov         eax,dword ptr [eax]
 00489F84    call        004AB074
>00489F89    jmp         00489F96
 00489F8B    mov         edx,dword ptr [ebp-8]
 00489F8E    mov         eax,dword ptr [ebp-4]
 00489F91    mov         ecx,dword ptr [eax]
 00489F93    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489F96    pop         ebx
 00489F97    mov         esp,ebp
 00489F99    pop         ebp
 00489F9A    ret
end;*}

//00489F9C
{*procedure TWinControl.WMSetFocus(?:?);
begin
 00489F9C    push        ebp
 00489F9D    mov         ebp,esp
 00489F9F    add         esp,0FFFFFFF8
 00489FA2    mov         dword ptr [ebp-8],edx
 00489FA5    mov         dword ptr [ebp-4],eax
 00489FA8    mov         edx,dword ptr [ebp-8]
 00489FAB    mov         eax,dword ptr [ebp-4]
 00489FAE    mov         ecx,dword ptr [eax]
 00489FB0    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489FB3    mov         eax,dword ptr [ebp-4]
 00489FB6    call        0048A034
 00489FBB    pop         ecx
 00489FBC    pop         ecx
 00489FBD    pop         ebp
 00489FBE    ret
end;*}

//00489FC0
{*procedure TWinControl.WMKillFocus(?:?);
begin
 00489FC0    push        ebp
 00489FC1    mov         ebp,esp
 00489FC3    add         esp,0FFFFFFF8
 00489FC6    mov         dword ptr [ebp-8],edx
 00489FC9    mov         dword ptr [ebp-4],eax
 00489FCC    mov         edx,dword ptr [ebp-8]
 00489FCF    mov         eax,dword ptr [ebp-4]
 00489FD2    mov         ecx,dword ptr [eax]
 00489FD4    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 00489FD7    mov         eax,dword ptr [ebp-4]
 00489FDA    call        0048A140
 00489FDF    pop         ecx
 00489FE0    pop         ecx
 00489FE1    pop         ebp
 00489FE2    ret
end;*}

//00489FE4
{*procedure TWinControl.sub_00489FE4(?:?);
begin
 00489FE4    push        ebp
 00489FE5    mov         ebp,esp
 00489FE7    add         esp,0FFFFFFF8
 00489FEA    mov         dword ptr [ebp-8],edx
 00489FED    mov         dword ptr [ebp-4],eax
 00489FF0    mov         eax,dword ptr [ebp-4]
 00489FF3    mov         byte ptr [eax+1F9],1;TWinControl.FInImeComposition:Boolean
 00489FFA    mov         edx,dword ptr [ebp-8]
 00489FFD    mov         eax,dword ptr [ebp-4]
 0048A000    mov         ecx,dword ptr [eax]
 0048A002    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048A005    pop         ecx
 0048A006    pop         ecx
 0048A007    pop         ebp
 0048A008    ret
end;*}

//0048A00C
{*procedure TWinControl.sub_0048A00C(?:?);
begin
 0048A00C    push        ebp
 0048A00D    mov         ebp,esp
 0048A00F    add         esp,0FFFFFFF8
 0048A012    mov         dword ptr [ebp-8],edx
 0048A015    mov         dword ptr [ebp-4],eax
 0048A018    mov         eax,dword ptr [ebp-4]
 0048A01B    mov         byte ptr [eax+1F9],0;TWinControl.FInImeComposition:Boolean
 0048A022    mov         edx,dword ptr [ebp-8]
 0048A025    mov         eax,dword ptr [ebp-4]
 0048A028    mov         ecx,dword ptr [eax]
 0048A02A    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048A02D    pop         ecx
 0048A02E    pop         ecx
 0048A02F    pop         ebp
 0048A030    ret
end;*}

//0048A034
procedure sub_0048A034(?:TWinControl);
begin
{*
 0048A034    push        ebp
 0048A035    mov         ebp,esp
 0048A037    add         esp,0FFFFFFF0
 0048A03A    xor         edx,edx
 0048A03C    mov         dword ptr [ebp-10],edx
 0048A03F    mov         dword ptr [ebp-4],eax
 0048A042    xor         eax,eax
 0048A044    push        ebp
 0048A045    push        48A132
 0048A04A    push        dword ptr fs:[eax]
 0048A04D    mov         dword ptr fs:[eax],esp
 0048A050    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048A055    cmp         byte ptr [eax+0C],0
>0048A059    je          0048A11C
 0048A05F    mov         eax,dword ptr [ebp-4]
 0048A062    cmp         dword ptr [eax+188],0;TWinControl.FImeName:TImeName
>0048A069    je          0048A106
 0048A06F    lea         edx,[ebp-10]
 0048A072    mov         eax,[0056E604];^Screen:TScreen
 0048A077    mov         eax,dword ptr [eax]
 0048A079    call        004A8F44
 0048A07E    mov         edx,dword ptr [ebp-10]
 0048A081    mov         eax,dword ptr [ebp-4]
 0048A084    mov         eax,dword ptr [eax+188];TWinControl.FImeName:TImeName
 0048A08A    call        0040BF44
 0048A08F    test        eax,eax
>0048A091    je          0048A106
 0048A093    mov         eax,[0056E604];^Screen:TScreen
 0048A098    mov         eax,dword ptr [eax]
 0048A09A    call        004A8D24
 0048A09F    mov         edx,dword ptr [eax]
 0048A0A1    call        dword ptr [edx+14]
 0048A0A4    test        eax,eax
>0048A0A6    je          0048A106
 0048A0A8    mov         eax,[0056E604];^Screen:TScreen
 0048A0AD    mov         eax,dword ptr [eax]
 0048A0AF    mov         eax,dword ptr [eax+3C];TScreen.FDefaultKbLayout:HKL
 0048A0B2    mov         dword ptr [ebp-0C],eax
 0048A0B5    mov         eax,dword ptr [ebp-4]
 0048A0B8    cmp         byte ptr [eax+184],0;TWinControl.FImeMode:TImeMode
>0048A0BF    je          0048A0FB
 0048A0C1    mov         eax,[0056E604];^Screen:TScreen
 0048A0C6    mov         eax,dword ptr [eax]
 0048A0C8    call        004A8D24
 0048A0CD    mov         edx,dword ptr [ebp-4]
 0048A0D0    mov         edx,dword ptr [edx+188];TWinControl.FImeName:TImeName
 0048A0D6    mov         ecx,dword ptr [eax]
 0048A0D8    call        dword ptr [ecx+54]
 0048A0DB    mov         dword ptr [ebp-8],eax
 0048A0DE    cmp         dword ptr [ebp-8],0
>0048A0E2    jl          0048A0FB
 0048A0E4    mov         eax,[0056E604];^Screen:TScreen
 0048A0E9    mov         eax,dword ptr [eax]
 0048A0EB    call        004A8D24
 0048A0F0    mov         edx,dword ptr [ebp-8]
 0048A0F3    mov         ecx,dword ptr [eax]
 0048A0F5    call        dword ptr [ecx+18]
 0048A0F8    mov         dword ptr [ebp-0C],eax
 0048A0FB    push        1
 0048A0FD    mov         eax,dword ptr [ebp-0C]
 0048A100    push        eax
 0048A101    call        user32.ActivateKeyboardLayout
 0048A106    mov         eax,dword ptr [ebp-4]
 0048A109    call        TWinControl.GetHandle
 0048A10E    mov         edx,dword ptr [ebp-4]
 0048A111    mov         dl,byte ptr [edx+184];TWinControl.FImeMode:TImeMode
 0048A117    call        00492208
 0048A11C    xor         eax,eax
 0048A11E    pop         edx
 0048A11F    pop         ecx
 0048A120    pop         ecx
 0048A121    mov         dword ptr fs:[eax],edx
 0048A124    push        48A139
 0048A129    lea         eax,[ebp-10]
 0048A12C    call        @LStrClr
 0048A131    ret
>0048A132    jmp         @HandleFinally
>0048A137    jmp         0048A129
 0048A139    mov         esp,ebp
 0048A13B    pop         ebp
 0048A13C    ret
*}
end;

//0048A140
procedure sub_0048A140(?:TWinControl);
begin
{*
 0048A140    push        ebp
 0048A141    mov         ebp,esp
 0048A143    add         esp,0FFFFFFF8
 0048A146    xor         edx,edx
 0048A148    mov         dword ptr [ebp-8],edx
 0048A14B    mov         dword ptr [ebp-4],eax
 0048A14E    xor         eax,eax
 0048A150    push        ebp
 0048A151    push        48A1DA
 0048A156    push        dword ptr fs:[eax]
 0048A159    mov         dword ptr fs:[eax],esp
 0048A15C    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048A161    cmp         byte ptr [eax+0C],0
>0048A165    je          0048A1C4
 0048A167    mov         eax,dword ptr [ebp-4]
 0048A16A    cmp         dword ptr [eax+188],0;TWinControl.FImeName:TImeName
>0048A171    je          0048A1A9
 0048A173    lea         edx,[ebp-8]
 0048A176    mov         eax,[0056E604];^Screen:TScreen
 0048A17B    mov         eax,dword ptr [eax]
 0048A17D    call        004A8F44
 0048A182    mov         edx,dword ptr [ebp-8]
 0048A185    mov         eax,dword ptr [ebp-4]
 0048A188    mov         eax,dword ptr [eax+188];TWinControl.FImeName:TImeName
 0048A18E    call        0040BF44
 0048A193    test        eax,eax
>0048A195    je          0048A1A9
 0048A197    push        1
 0048A199    mov         eax,[0056E604];^Screen:TScreen
 0048A19E    mov         eax,dword ptr [eax]
 0048A1A0    mov         eax,dword ptr [eax+3C];TScreen.FDefaultKbLayout:HKL
 0048A1A3    push        eax
 0048A1A4    call        user32.ActivateKeyboardLayout
 0048A1A9    mov         eax,dword ptr [ebp-4]
 0048A1AC    cmp         byte ptr [eax+184],0;TWinControl.FImeMode:TImeMode
>0048A1B3    jne         0048A1C4
 0048A1B5    mov         eax,dword ptr [ebp-4]
 0048A1B8    call        TWinControl.GetHandle
 0048A1BD    mov         dl,1
 0048A1BF    call        004921D0
 0048A1C4    xor         eax,eax
 0048A1C6    pop         edx
 0048A1C7    pop         ecx
 0048A1C8    pop         ecx
 0048A1C9    mov         dword ptr fs:[eax],edx
 0048A1CC    push        48A1E1
 0048A1D1    lea         eax,[ebp-8]
 0048A1D4    call        @LStrClr
 0048A1D9    ret
>0048A1DA    jmp         @HandleFinally
>0048A1DF    jmp         0048A1D1
 0048A1E1    pop         ecx
 0048A1E2    pop         ecx
 0048A1E3    pop         ebp
 0048A1E4    ret
*}
end;

//0048A1E8
{*procedure TWinControl.sub_0048A1E8(?:?; ?:?);
begin
 0048A1E8    push        ebp
 0048A1E9    mov         ebp,esp
 0048A1EB    add         esp,0FFFFFFF4
 0048A1EE    mov         dword ptr [ebp-0C],ecx
 0048A1F1    mov         dword ptr [ebp-8],edx
 0048A1F4    mov         dword ptr [ebp-4],eax
 0048A1F7    mov         edx,dword ptr [ebp-4]
 0048A1FA    mov         eax,dword ptr [ebp-8]
 0048A1FD    mov         ecx,dword ptr [eax]
 0048A1FF    call        dword ptr [ecx+68]
 0048A202    mov         esp,ebp
 0048A204    pop         ebp
 0048A205    ret
end;*}

//0048A208
{*procedure TWinControl.sub_0048A208(?:?);
begin
 0048A208    push        ebp
 0048A209    mov         ebp,esp
 0048A20B    add         esp,0FFFFFFF8
 0048A20E    mov         dword ptr [ebp-8],edx
 0048A211    mov         dword ptr [ebp-4],eax
 0048A214    pop         ecx
 0048A215    pop         ecx
 0048A216    pop         ebp
 0048A217    ret
end;*}

//0048A218
procedure TWinControl.sub_0048A218;
begin
{*
 0048A218    push        ebp
 0048A219    mov         ebp,esp
 0048A21B    push        ecx
 0048A21C    push        ebx
 0048A21D    mov         dword ptr [ebp-4],eax
 0048A220    mov         eax,dword ptr [ebp-4]
 0048A223    cmp         word ptr [eax+1C2],0;TWinControl.?f1C2:word
>0048A22B    je          0048A23F
 0048A22D    mov         ebx,dword ptr [ebp-4]
 0048A230    mov         edx,dword ptr [ebp-4]
 0048A233    mov         eax,dword ptr [ebx+1C4];TWinControl.?f1C4:dword
 0048A239    call        dword ptr [ebx+1C0];TWinControl.FOnEnter
 0048A23F    pop         ebx
 0048A240    pop         ecx
 0048A241    pop         ebp
 0048A242    ret
*}
end;

//0048A244
procedure TWinControl.sub_0048A244;
begin
{*
 0048A244    push        ebp
 0048A245    mov         ebp,esp
 0048A247    push        ecx
 0048A248    push        ebx
 0048A249    mov         dword ptr [ebp-4],eax
 0048A24C    mov         eax,dword ptr [ebp-4]
 0048A24F    cmp         word ptr [eax+1CA],0;TWinControl.?f1CA:word
>0048A257    je          0048A26B
 0048A259    mov         ebx,dword ptr [ebp-4]
 0048A25C    mov         edx,dword ptr [ebp-4]
 0048A25F    mov         eax,dword ptr [ebx+1CC];TWinControl.?f1CC:dword
 0048A265    call        dword ptr [ebx+1C8];TWinControl.FOnExit
 0048A26B    pop         ebx
 0048A26C    pop         ecx
 0048A26D    pop         ebp
 0048A26E    ret
*}
end;

//0048A270
{*procedure TWinControl.sub_0048A270(?:?; ?:?; ?:?);
begin
 0048A270    push        ebp
 0048A271    mov         ebp,esp
 0048A273    add         esp,0FFFFFFF4
 0048A276    push        ebx
 0048A277    mov         dword ptr [ebp-0C],ecx
 0048A27A    mov         dword ptr [ebp-8],edx
 0048A27D    mov         dword ptr [ebp-4],eax
 0048A280    mov         dx,word ptr [ebp+8]
 0048A284    mov         ax,word ptr [ebp-0C]
 0048A288    call        0041E6B4
 0048A28D    push        eax
 0048A28E    mov         ecx,dword ptr [ebp-8]
 0048A291    mov         edx,0B038
 0048A296    mov         eax,dword ptr [ebp-4]
 0048A299    call        00484FFC
 0048A29E    test        eax,eax
>0048A2A0    jl          0048A2CC
 0048A2A2    mov         eax,dword ptr [ebp-4]
 0048A2A5    cmp         word ptr [eax+1B2],0;TWinControl.?f1B2:word
>0048A2AD    je          0048A2CC
 0048A2AF    mov         eax,dword ptr [ebp-0C]
 0048A2B2    push        eax
 0048A2B3    mov         eax,dword ptr [ebp+8]
 0048A2B6    push        eax
 0048A2B7    mov         ebx,dword ptr [ebp-4]
 0048A2BA    mov         ecx,dword ptr [ebp-8]
 0048A2BD    mov         edx,dword ptr [ebp-4]
 0048A2C0    mov         eax,dword ptr [ebx+1B4];TWinControl.?f1B4:dword
 0048A2C6    call        dword ptr [ebx+1B0];TWinControl.FOnDockDrop
 0048A2CC    pop         ebx
 0048A2CD    mov         esp,ebp
 0048A2CF    pop         ebp
 0048A2D0    ret         4
end;*}

//0048A2D4
{*procedure TWinControl.sub_0048A2D4(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 0048A2D4    push        ebp
 0048A2D5    mov         ebp,esp
 0048A2D7    add         esp,0FFFFFFF4
 0048A2DA    push        ebx
 0048A2DB    mov         dword ptr [ebp-0C],ecx
 0048A2DE    mov         dword ptr [ebp-8],edx
 0048A2E1    mov         dword ptr [ebp-4],eax
 0048A2E4    mov         eax,dword ptr [ebp-4]
 0048A2E7    cmp         word ptr [eax+1BA],0;TWinControl.?f1BA:word
>0048A2EF    je          0048A316
 0048A2F1    mov         eax,dword ptr [ebp-0C]
 0048A2F4    push        eax
 0048A2F5    mov         eax,dword ptr [ebp+10]
 0048A2F8    push        eax
 0048A2F9    mov         al,byte ptr [ebp+0C]
 0048A2FC    push        eax
 0048A2FD    mov         eax,dword ptr [ebp+8]
 0048A300    push        eax
 0048A301    mov         ebx,dword ptr [ebp-4]
 0048A304    mov         ecx,dword ptr [ebp-8]
 0048A307    mov         edx,dword ptr [ebp-4]
 0048A30A    mov         eax,dword ptr [ebx+1BC];TWinControl.?f1BC:dword
 0048A310    call        dword ptr [ebx+1B8];TWinControl.FOnDockOver
 0048A316    pop         ebx
 0048A317    mov         esp,ebp
 0048A319    pop         ebp
 0048A31A    ret         0C
end;*}

//0048A320
{*procedure TWinControl.sub_0048A320(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 0048A320    push        ebp
 0048A321    mov         ebp,esp
 0048A323    add         esp,0FFFFFFF4
 0048A326    push        esi
 0048A327    mov         dword ptr [ebp-0C],ecx
 0048A32A    mov         dword ptr [ebp-8],edx
 0048A32D    mov         dword ptr [ebp-4],eax
 0048A330    mov         edx,dword ptr [ebp-8]
 0048A333    mov         eax,dword ptr [ebp-4]
 0048A336    mov         si,0FFD2
 0048A33A    call        @CallDynaInst;TControl.sub_004843F4
 0048A33F    mov         eax,dword ptr [ebp+10]
 0048A342    push        eax
 0048A343    mov         al,byte ptr [ebp+0C]
 0048A346    push        eax
 0048A347    mov         eax,dword ptr [ebp+8]
 0048A34A    push        eax
 0048A34B    mov         ecx,dword ptr [ebp-0C]
 0048A34E    mov         edx,dword ptr [ebp-8]
 0048A351    mov         eax,dword ptr [ebp-4]
 0048A354    mov         si,0FFC3
 0048A358    call        @CallDynaInst;TWinControl.sub_0048A2D4
 0048A35D    pop         esi
 0048A35E    mov         esp,ebp
 0048A360    pop         ebp
 0048A361    ret         0C
end;*}

//0048A364
{*procedure TWinControl.sub_0048A364(?:?; ?:?);
begin
 0048A364    push        ebp
 0048A365    mov         ebp,esp
 0048A367    add         esp,0FFFFFFF0
 0048A36A    push        ebx
 0048A36B    mov         dword ptr [ebp-0C],ecx
 0048A36E    mov         dword ptr [ebp-8],edx
 0048A371    mov         dword ptr [ebp-4],eax
 0048A374    mov         byte ptr [ebp-0D],1
 0048A378    mov         eax,dword ptr [ebp-4]
 0048A37B    cmp         word ptr [eax+1F2],0;TWinControl.?f1F2:word
>0048A383    je          0048A3A2
 0048A385    mov         eax,dword ptr [ebp-8]
 0048A388    push        eax
 0048A389    lea         eax,[ebp-0D]
 0048A38C    push        eax
 0048A38D    mov         ebx,dword ptr [ebp-4]
 0048A390    mov         ecx,dword ptr [ebp-0C]
 0048A393    mov         edx,dword ptr [ebp-4]
 0048A396    mov         eax,dword ptr [ebx+1F4];TWinControl.?f1F4:dword
 0048A39C    call        dword ptr [ebx+1F0];TWinControl.FOnUnDock
 0048A3A2    cmp         byte ptr [ebp-0D],0
>0048A3A6    je          0048A3C0
 0048A3A8    mov         eax,dword ptr [ebp-0C]
 0048A3AB    push        eax
 0048A3AC    mov         ecx,dword ptr [ebp-8]
 0048A3AF    mov         edx,0B039
 0048A3B4    mov         eax,dword ptr [ebp-4]
 0048A3B7    call        00484FFC
 0048A3BC    test        eax,eax
>0048A3BE    je          0048A3C4
 0048A3C0    xor         eax,eax
>0048A3C2    jmp         0048A3C6
 0048A3C4    mov         al,1
 0048A3C6    mov         byte ptr [ebp-0D],al
 0048A3C9    mov         al,byte ptr [ebp-0D]
 0048A3CC    pop         ebx
 0048A3CD    mov         esp,ebp
 0048A3CF    pop         ebp
 0048A3D0    ret
end;*}

//0048A3D4
{*procedure TWinControl.sub_0048A3D4(?:?; ?:?);
begin
 0048A3D4    push        ebp
 0048A3D5    mov         ebp,esp
 0048A3D7    add         esp,0FFFFFFF4
 0048A3DA    mov         dword ptr [ebp-0C],ecx
 0048A3DD    mov         dword ptr [ebp-8],edx
 0048A3E0    mov         dword ptr [ebp-4],eax
 0048A3E3    mov         edx,dword ptr [ebp-8]
 0048A3E6    mov         eax,dword ptr [ebp-4]
 0048A3E9    mov         eax,dword ptr [eax+4];TWinControl.FOwner:TComponent
 0048A3EC    call        0042A98C
 0048A3F1    mov         edx,dword ptr ds:[47DF94];TControl
 0048A3F7    call        @AsClass
 0048A3FC    mov         edx,dword ptr [ebp-0C]
 0048A3FF    mov         dword ptr [edx],eax
 0048A401    mov         esp,ebp
 0048A403    pop         ebp
 0048A404    ret
end;*}

//0048A408
{*function sub_0048A408(?:TWinControl):?;
begin
 0048A408    push        ebp
 0048A409    mov         ebp,esp
 0048A40B    add         esp,0FFFFFFF8
 0048A40E    mov         dword ptr [ebp-4],eax
 0048A411    mov         eax,dword ptr [ebp-4]
 0048A414    cmp         dword ptr [eax+178],0;TToolDockForm.FDockClients:TList
>0048A41B    je          0048A42E
 0048A41D    mov         eax,dword ptr [ebp-4]
 0048A420    mov         eax,dword ptr [eax+178];TToolDockForm.FDockClients:TList
 0048A426    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048A429    mov         dword ptr [ebp-8],eax
>0048A42C    jmp         0048A433
 0048A42E    xor         eax,eax
 0048A430    mov         dword ptr [ebp-8],eax
 0048A433    mov         eax,dword ptr [ebp-8]
 0048A436    pop         ecx
 0048A437    pop         ecx
 0048A438    pop         ebp
 0048A439    ret
end;*}

//0048A43C
{*function sub_0048A43C(?:TWinControl; ?:?):?;
begin
 0048A43C    push        ebp
 0048A43D    mov         ebp,esp
 0048A43F    add         esp,0FFFFFFF4
 0048A442    mov         dword ptr [ebp-8],edx
 0048A445    mov         dword ptr [ebp-4],eax
 0048A448    mov         eax,dword ptr [ebp-4]
 0048A44B    cmp         dword ptr [eax+178],0;TToolDockForm.FDockClients:TList
>0048A452    je          0048A46A
 0048A454    mov         edx,dword ptr [ebp-8]
 0048A457    mov         eax,dword ptr [ebp-4]
 0048A45A    mov         eax,dword ptr [eax+178];TToolDockForm.FDockClients:TList
 0048A460    call        TList.Get
 0048A465    mov         dword ptr [ebp-0C],eax
>0048A468    jmp         0048A46F
 0048A46A    xor         eax,eax
 0048A46C    mov         dword ptr [ebp-0C],eax
 0048A46F    mov         eax,dword ptr [ebp-0C]
 0048A472    mov         esp,ebp
 0048A474    pop         ebp
 0048A475    ret
end;*}

//0048A478
{*procedure TWinControl.sub_0048A478(?:?; ?:?; ?:?; ?:?);
begin
 0048A478    push        ebp
 0048A479    mov         ebp,esp
 0048A47B    add         esp,0FFFFFFEC
 0048A47E    push        ebx
 0048A47F    push        esi
 0048A480    push        edi
 0048A481    mov         esi,dword ptr [ebp+0C]
 0048A484    lea         edi,[ebp-14]
 0048A487    movs        dword ptr [edi],dword ptr [esi]
 0048A488    movs        dword ptr [edi],dword ptr [esi]
 0048A489    mov         dword ptr [ebp-0C],ecx
 0048A48C    mov         dword ptr [ebp-8],edx
 0048A48F    mov         dword ptr [ebp-4],eax
 0048A492    mov         eax,dword ptr [ebp-0C]
 0048A495    push        eax
 0048A496    mov         eax,dword ptr [ebp-4]
 0048A499    call        TWinControl.GetHandle
 0048A49E    push        eax
 0048A49F    call        user32.GetWindowRect
 0048A4A4    push        0A
 0048A4A6    push        0A
 0048A4A8    mov         eax,dword ptr [ebp-0C]
 0048A4AB    push        eax
 0048A4AC    call        user32.InflateRect
 0048A4B1    mov         eax,dword ptr [ebp-4]
 0048A4B4    cmp         word ptr [eax+1D2],0;TWinControl.?f1D2:word
>0048A4BC    je          0048A4DF
 0048A4BE    mov         eax,dword ptr [ebp-0C]
 0048A4C1    push        eax
 0048A4C2    lea         eax,[ebp-14]
 0048A4C5    push        eax
 0048A4C6    mov         eax,dword ptr [ebp+8]
 0048A4C9    push        eax
 0048A4CA    mov         ebx,dword ptr [ebp-4]
 0048A4CD    mov         ecx,dword ptr [ebp-8]
 0048A4D0    mov         edx,dword ptr [ebp-4]
 0048A4D3    mov         eax,dword ptr [ebx+1D4];TWinControl.?f1D4:dword
 0048A4D9    call        dword ptr [ebx+1D0];TWinControl.FOnGetSiteInfo
 0048A4DF    pop         edi
 0048A4E0    pop         esi
 0048A4E1    pop         ebx
 0048A4E2    mov         esp,ebp
 0048A4E4    pop         ebp
 0048A4E5    ret         8
end;*}

//0048A4E8
{*function sub_0048A4E8(?:Pointer):?;
begin
 0048A4E8    push        ebp
 0048A4E9    mov         ebp,esp
 0048A4EB    add         esp,0FFFFFFF4
 0048A4EE    mov         dword ptr [ebp-4],eax
 0048A4F1    mov         eax,dword ptr [ebp-4]
 0048A4F4    call        0048A408
 0048A4F9    mov         dword ptr [ebp-8],eax
 0048A4FC    cmp         dword ptr [ebp-8],0
>0048A500    jle         0048A531
 0048A502    mov         eax,dword ptr [ebp-8]
 0048A505    dec         eax
 0048A506    cmp         eax,0
>0048A509    jl          0048A531
 0048A50B    mov         dword ptr [ebp-0C],eax
 0048A50E    mov         edx,dword ptr [ebp-0C]
 0048A511    mov         eax,dword ptr [ebp-4]
 0048A514    mov         eax,dword ptr [eax+178]
 0048A51A    call        TList.Get
 0048A51F    cmp         byte ptr [eax+57],0
>0048A523    jne         0048A528
 0048A525    dec         dword ptr [ebp-8]
 0048A528    dec         dword ptr [ebp-0C]
 0048A52B    cmp         dword ptr [ebp-0C],0FFFFFFFF
>0048A52F    jne         0048A50E
 0048A531    mov         eax,dword ptr [ebp-8]
 0048A534    mov         esp,ebp
 0048A536    pop         ebp
 0048A537    ret
end;*}

//0048A538
procedure TWinControl.sub_0048A538;
begin
{*
 0048A538    push        ebp
 0048A539    mov         ebp,esp
 0048A53B    push        ecx
 0048A53C    mov         dword ptr [ebp-4],eax
 0048A53F    pop         ecx
 0048A540    pop         ebp
 0048A541    ret
*}
end;

//0048A544
{*procedure TWinControl.sub_0048A544(?:?);
begin
 0048A544    push        ebp
 0048A545    mov         ebp,esp
 0048A547    add         esp,0FFFFFFF8
 0048A54A    mov         dword ptr [ebp-8],edx
 0048A54D    mov         dword ptr [ebp-4],eax
 0048A550    mov         eax,dword ptr [ebp-4]
 0048A553    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>0048A55A    jne         0048A594
 0048A55C    mov         eax,dword ptr [ebp-4]
 0048A55F    cmp         byte ptr [eax+1A8],0;TWinControl.FDockSite:Boolean
>0048A566    je          0048A594
 0048A568    mov         eax,dword ptr [ebp-4]
 0048A56B    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>0048A572    je          0048A594
 0048A574    mov         ecx,dword ptr [ebp-4]
 0048A577    mov         dl,1
 0048A579    mov         eax,[0056C778];^gvar_0047F2D0
 0048A57E    call        dword ptr [eax+24]
 0048A581    mov         edx,eax
 0048A583    test        edx,edx
>0048A585    je          0048A58A
 0048A587    sub         edx,0FFFFFF8C
 0048A58A    mov         eax,dword ptr [ebp-8]
 0048A58D    call        @IntfCopy
>0048A592    jmp         0048A5A5
 0048A594    mov         eax,dword ptr [ebp-8]
 0048A597    mov         edx,dword ptr [ebp-4]
 0048A59A    mov         edx,dword ptr [edx+17C];TWinControl.FDockManager:IDockManager
 0048A5A0    call        @IntfCopy
 0048A5A5    mov         eax,dword ptr [ebp-4]
 0048A5A8    cmp         byte ptr [eax+1F8],0;TWinControl.FDoubleBuffered:Boolean
>0048A5AF    jne         0048A5BD
 0048A5B1    mov         eax,dword ptr [ebp-8]
 0048A5B4    cmp         dword ptr [eax],0
>0048A5B7    jne         0048A5BD
 0048A5B9    xor         eax,eax
>0048A5BB    jmp         0048A5BF
 0048A5BD    mov         al,1
 0048A5BF    mov         edx,dword ptr [ebp-4]
 0048A5C2    mov         byte ptr [edx+1F8],al;TWinControl.FDoubleBuffered:Boolean
 0048A5C8    pop         ecx
 0048A5C9    pop         ecx
 0048A5CA    pop         ebp
 0048A5CB    ret
end;*}

//0048A5CC
procedure TPanel.SetDockSite(Value:Boolean);
begin
{*
 0048A5CC    push        ebp
 0048A5CD    mov         ebp,esp
 0048A5CF    add         esp,0FFFFFFF4
 0048A5D2    push        esi
 0048A5D3    xor         ecx,ecx
 0048A5D5    mov         dword ptr [ebp-0C],ecx
 0048A5D8    mov         byte ptr [ebp-5],dl
 0048A5DB    mov         dword ptr [ebp-4],eax
 0048A5DE    xor         eax,eax
 0048A5E0    push        ebp
 0048A5E1    push        48A6A2
 0048A5E6    push        dword ptr fs:[eax]
 0048A5E9    mov         dword ptr fs:[eax],esp
 0048A5EC    mov         al,byte ptr [ebp-5]
 0048A5EF    mov         edx,dword ptr [ebp-4]
 0048A5F2    cmp         al,byte ptr [edx+1A8];TPanel.FDockSite:Boolean
>0048A5F8    je          0048A68C
 0048A5FE    mov         al,byte ptr [ebp-5]
 0048A601    mov         edx,dword ptr [ebp-4]
 0048A604    mov         byte ptr [edx+1A8],al;TPanel.FDockSite:Boolean
 0048A60A    mov         eax,dword ptr [ebp-4]
 0048A60D    test        byte ptr [eax+1C],10;TPanel.FComponentState:TComponentState
>0048A611    jne         0048A68C
 0048A613    mov         dl,byte ptr [ebp-5]
 0048A616    mov         eax,dword ptr [ebp-4]
 0048A619    call        004809D8
 0048A61E    cmp         byte ptr [ebp-5],0
>0048A622    jne         0048A64C
 0048A624    mov         eax,dword ptr [ebp-4]
 0048A627    mov         eax,dword ptr [eax+178];TPanel.FDockClients:TList
 0048A62D    call        TObject.Free
 0048A632    mov         eax,dword ptr [ebp-4]
 0048A635    xor         edx,edx
 0048A637    mov         dword ptr [eax+178],edx;TPanel.FDockClients:TList
 0048A63D    mov         eax,dword ptr [ebp-4]
 0048A640    add         eax,17C;TPanel.FDockManager:IDockManager
 0048A645    call        @IntfClear
>0048A64A    jmp         0048A68C
 0048A64C    mov         eax,dword ptr [ebp-4]
 0048A64F    cmp         dword ptr [eax+178],0;TPanel.FDockClients:TList
>0048A656    jne         0048A66D
 0048A658    mov         dl,1
 0048A65A    mov         eax,[0041D46C];TList
 0048A65F    call        TObject.Create;TList.Create
 0048A664    mov         edx,dword ptr [ebp-4]
 0048A667    mov         dword ptr [edx+178],eax;TPanel.FDockClients:TList
 0048A66D    lea         edx,[ebp-0C]
 0048A670    mov         eax,dword ptr [ebp-4]
 0048A673    mov         si,0FFC6
 0048A677    call        @CallDynaInst;TWinControl.sub_0048A544
 0048A67C    mov         edx,dword ptr [ebp-0C]
 0048A67F    mov         eax,dword ptr [ebp-4]
 0048A682    add         eax,17C;TPanel.FDockManager:IDockManager
 0048A687    call        @IntfCopy
 0048A68C    xor         eax,eax
 0048A68E    pop         edx
 0048A68F    pop         ecx
 0048A690    pop         ecx
 0048A691    mov         dword ptr fs:[eax],edx
 0048A694    push        48A6A9
 0048A699    lea         eax,[ebp-0C]
 0048A69C    call        @IntfClear
 0048A6A1    ret
>0048A6A2    jmp         @HandleFinally
>0048A6A7    jmp         0048A699
 0048A6A9    pop         esi
 0048A6AA    mov         esp,ebp
 0048A6AC    pop         ebp
 0048A6AD    ret
*}
end;

//0048A6B0
{*procedure TWinControl.CMDockClient(?:?);
begin
 0048A6B0    push        ebp
 0048A6B1    mov         ebp,esp
 0048A6B3    add         esp,0FFFFFFE4
 0048A6B6    push        ebx
 0048A6B7    push        esi
 0048A6B8    push        edi
 0048A6B9    mov         dword ptr [ebp-8],edx
 0048A6BC    mov         dword ptr [ebp-4],eax
 0048A6BF    mov         eax,dword ptr [ebp-8]
 0048A6C2    cmp         dword ptr [eax+0C],0
>0048A6C6    jne         0048A7A2
 0048A6CC    mov         eax,dword ptr [ebp-8]
 0048A6CF    mov         eax,dword ptr [eax+4]
 0048A6D2    lea         esi,[eax+44]
 0048A6D5    lea         edi,[ebp-1C]
 0048A6D8    movs        dword ptr [edi],dword ptr [esi]
 0048A6D9    movs        dword ptr [edi],dword ptr [esi]
 0048A6DA    movs        dword ptr [edi],dword ptr [esi]
 0048A6DB    movs        dword ptr [edi],dword ptr [esi]
 0048A6DC    push        2
 0048A6DE    lea         eax,[ebp-1C]
 0048A6E1    push        eax
 0048A6E2    mov         eax,dword ptr [ebp-4]
 0048A6E5    call        TWinControl.GetHandle
 0048A6EA    push        eax
 0048A6EB    push        0
 0048A6ED    call        user32.MapWindowPoints
 0048A6F2    mov         eax,dword ptr [ebp-4]
 0048A6F5    call        TWinControl.DisableAlign
 0048A6FA    xor         eax,eax
 0048A6FC    push        ebp
 0048A6FD    push        48A778
 0048A702    push        dword ptr fs:[eax]
 0048A705    mov         dword ptr fs:[eax],esp
 0048A708    mov         eax,dword ptr [ebp-8]
 0048A70B    mov         eax,dword ptr [eax+4]
 0048A70E    mov         eax,dword ptr [eax+38]
 0048A711    lea         ecx,[ebp-1C]
 0048A714    mov         edx,dword ptr [ebp-4]
 0048A717    mov         si,0FFCC
 0048A71B    call        @CallDynaInst
 0048A720    mov         eax,dword ptr [ebp-4]
 0048A723    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>0048A72A    je          0048A762
 0048A72C    mov         eax,dword ptr [ebp-4]
 0048A72F    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>0048A736    je          0048A762
 0048A738    mov         eax,dword ptr [ebp-8]
 0048A73B    mov         eax,dword ptr [eax+4]
 0048A73E    mov         eax,dword ptr [eax+58]
 0048A741    push        eax
 0048A742    mov         eax,dword ptr [ebp-8]
 0048A745    mov         eax,dword ptr [eax+4]
 0048A748    mov         cl,byte ptr [eax+54]
 0048A74B    mov         eax,dword ptr [ebp-8]
 0048A74E    mov         eax,dword ptr [eax+4]
 0048A751    mov         edx,dword ptr [eax+38]
 0048A754    mov         eax,dword ptr [ebp-4]
 0048A757    mov         eax,dword ptr [eax+17C];TWinControl.FDockManager:IDockManager
 0048A75D    mov         ebx,dword ptr [eax]
 0048A75F    call        dword ptr [ebx+18]
 0048A762    xor         eax,eax
 0048A764    pop         edx
 0048A765    pop         ecx
 0048A766    pop         ecx
 0048A767    mov         dword ptr fs:[eax],edx
 0048A76A    push        48A77F
 0048A76F    mov         eax,dword ptr [ebp-4]
 0048A772    call        TWinControl.EnableAlign
 0048A777    ret
>0048A778    jmp         @HandleFinally
>0048A77D    jmp         0048A76F
 0048A77F    mov         eax,dword ptr [ebp-4]
 0048A782    call        004A0740
 0048A787    mov         dword ptr [ebp-0C],eax
 0048A78A    cmp         dword ptr [ebp-0C],0
>0048A78E    je          0048A798
 0048A790    mov         eax,dword ptr [ebp-0C]
 0048A793    call        00483BE4
 0048A798    mov         eax,dword ptr [ebp-8]
 0048A79B    mov         dword ptr [eax+0C],1
 0048A7A2    pop         edi
 0048A7A3    pop         esi
 0048A7A4    pop         ebx
 0048A7A5    mov         esp,ebp
 0048A7A7    pop         ebp
 0048A7A8    ret
end;*}

//0048A7AC
{*procedure TWinControl.CMUndockClient(?:?);
begin
 0048A7AC    push        ebp
 0048A7AD    mov         ebp,esp
 0048A7AF    add         esp,0FFFFFFF8
 0048A7B2    mov         dword ptr [ebp-8],edx
 0048A7B5    mov         dword ptr [ebp-4],eax
 0048A7B8    mov         eax,dword ptr [ebp-8]
 0048A7BB    xor         edx,edx
 0048A7BD    mov         dword ptr [eax+0C],edx
 0048A7C0    mov         eax,dword ptr [ebp-4]
 0048A7C3    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>0048A7CA    je          0048A7EC
 0048A7CC    mov         eax,dword ptr [ebp-4]
 0048A7CF    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>0048A7D6    je          0048A7EC
 0048A7D8    mov         edx,dword ptr [ebp-8]
 0048A7DB    mov         edx,dword ptr [edx+8]
 0048A7DE    mov         eax,dword ptr [ebp-4]
 0048A7E1    mov         eax,dword ptr [eax+17C];TWinControl.FDockManager:IDockManager
 0048A7E7    mov         ecx,dword ptr [eax]
 0048A7E9    call        dword ptr [ecx+28]
 0048A7EC    pop         ecx
 0048A7ED    pop         ecx
 0048A7EE    pop         ebp
 0048A7EF    ret
end;*}

//0048A7F0
{*procedure TWinControl.CMFloat(?:?);
begin
 0048A7F0    push        ebp
 0048A7F1    mov         ebp,esp
 0048A7F3    add         esp,0FFFFFFF4
 0048A7F6    push        ebx
 0048A7F7    push        esi
 0048A7F8    mov         dword ptr [ebp-8],edx
 0048A7FB    mov         dword ptr [ebp-4],eax
 0048A7FE    mov         eax,dword ptr [ebp-4]
 0048A801    mov         edx,dword ptr [eax]
 0048A803    call        dword ptr [edx+58];TWinControl.sub_00486720
 0048A806    mov         ebx,eax
 0048A808    mov         eax,dword ptr [ebp-4]
 0048A80B    call        TObject.ClassType
 0048A810    cmp         ebx,eax
>0048A812    jne         0048A865
 0048A814    mov         eax,dword ptr [ebp-4]
 0048A817    mov         al,byte ptr [eax+57];TWinControl.FVisible:Boolean
 0048A81A    mov         byte ptr [ebp-9],al
 0048A81D    xor         eax,eax
 0048A81F    push        ebp
 0048A820    push        48A85E
 0048A825    push        dword ptr fs:[eax]
 0048A828    mov         dword ptr fs:[eax],esp
 0048A82B    mov         eax,dword ptr [ebp-8]
 0048A82E    mov         eax,dword ptr [eax+8]
 0048A831    lea         ecx,[eax+44]
 0048A834    xor         edx,edx
 0048A836    mov         eax,dword ptr [ebp-4]
 0048A839    mov         si,0FFCC
 0048A83D    call        @CallDynaInst;TControl.sub_00482C8C
 0048A842    xor         eax,eax
 0048A844    pop         edx
 0048A845    pop         ecx
 0048A846    pop         ecx
 0048A847    mov         dword ptr fs:[eax],edx
 0048A84A    push        48A870
 0048A84F    cmp         byte ptr [ebp-9],0
>0048A853    je          0048A85D
 0048A855    mov         eax,dword ptr [ebp-4]
 0048A858    call        00483BE4
 0048A85D    ret
>0048A85E    jmp         @HandleFinally
>0048A863    jmp         0048A84F
 0048A865    mov         edx,dword ptr [ebp-8]
 0048A868    mov         eax,dword ptr [ebp-4]
 0048A86B    call        TControl.CMFloat
 0048A870    pop         esi
 0048A871    pop         ebx
 0048A872    mov         esp,ebp
 0048A874    pop         ebp
 0048A875    ret
end;*}

//0048A878
{*procedure TWinControl.sub_0048A878(?:?; ?:?);
begin
 0048A878    push        ebp
 0048A879    mov         ebp,esp
 0048A87B    add         esp,0FFFFFFF4
 0048A87E    push        ebx
 0048A87F    mov         byte ptr [ebp-9],cl
 0048A882    mov         dword ptr [ebp-8],edx
 0048A885    mov         dword ptr [ebp-4],eax
 0048A888    mov         eax,dword ptr [ebp-4]
 0048A88B    cmp         word ptr [eax+1DA],0;TWinControl.?f1DA:word
>0048A893    je          0048A8AE
 0048A895    mov         al,byte ptr [ebp-9]
 0048A898    push        eax
 0048A899    mov         ecx,dword ptr [ebp-8]
 0048A89C    mov         ebx,dword ptr [ebp-4]
 0048A89F    mov         edx,dword ptr [ebp-4]
 0048A8A2    mov         eax,dword ptr [ebx+1DC];TWinControl.?f1DC:TMessageForm
 0048A8A8    call        dword ptr [ebx+1D8];TWinControl.FOnKeyDown
 0048A8AE    pop         ebx
 0048A8AF    mov         esp,ebp
 0048A8B1    pop         ebp
 0048A8B2    ret
end;*}

//0048A8B4
{*function sub_0048A8B4(?:TWinControl; ?:?):?;
begin
 0048A8B4    push        ebp
 0048A8B5    mov         ebp,esp
 0048A8B7    add         esp,0FFFFFFF0
 0048A8BA    push        esi
 0048A8BB    mov         dword ptr [ebp-8],edx
 0048A8BE    mov         dword ptr [ebp-4],eax
 0048A8C1    mov         byte ptr [ebp-9],1
 0048A8C5    mov         eax,dword ptr [ebp-4]
 0048A8C8    call        004A0740
 0048A8CD    mov         dword ptr [ebp-10],eax
 0048A8D0    cmp         dword ptr [ebp-10],0
>0048A8D4    je          0048A8F9
 0048A8D6    mov         eax,dword ptr [ebp-10]
 0048A8D9    cmp         eax,dword ptr [ebp-4]
>0048A8DC    je          0048A8F9
 0048A8DE    mov         eax,dword ptr [ebp-10]
 0048A8E1    cmp         byte ptr [eax+22D],0
>0048A8E8    je          0048A8F9
 0048A8EA    mov         edx,dword ptr [ebp-8]
 0048A8ED    mov         eax,dword ptr [ebp-10]
 0048A8F0    call        0048A8B4
 0048A8F5    test        al,al
>0048A8F7    jne         0048A933
 0048A8F9    mov         eax,dword ptr [ebp-8]
 0048A8FC    mov         eax,dword ptr [eax+8]
 0048A8FF    call        004A05E8
 0048A904    mov         byte ptr [ebp-0A],al
 0048A907    mov         eax,dword ptr [ebp-4]
 0048A90A    test        byte ptr [eax+51],10;TCustomCombo.?f51:byte
>0048A90E    jne         0048A92F
 0048A910    mov         edx,dword ptr [ebp-8]
 0048A913    add         edx,4
 0048A916    mov         cl,byte ptr [ebp-0A]
 0048A919    mov         eax,dword ptr [ebp-4]
 0048A91C    mov         si,0FFBC
 0048A920    call        @CallDynaInst;TWinControl.sub_0048A878
 0048A925    mov         eax,dword ptr [ebp-8]
 0048A928    cmp         word ptr [eax+4],0
>0048A92D    je          0048A933
 0048A92F    mov         byte ptr [ebp-9],0
 0048A933    mov         al,byte ptr [ebp-9]
 0048A936    pop         esi
 0048A937    mov         esp,ebp
 0048A939    pop         ebp
 0048A93A    ret
end;*}

//0048A93C
{*procedure TWinControl.WMKeyDown(?:?);
begin
 0048A93C    push        ebp
 0048A93D    mov         ebp,esp
 0048A93F    add         esp,0FFFFFFF8
 0048A942    mov         dword ptr [ebp-8],edx
 0048A945    mov         dword ptr [ebp-4],eax
 0048A948    mov         edx,dword ptr [ebp-8]
 0048A94B    mov         eax,dword ptr [ebp-4]
 0048A94E    call        0048A8B4
 0048A953    test        al,al
>0048A955    jne         0048A962
 0048A957    mov         edx,dword ptr [ebp-8]
 0048A95A    mov         eax,dword ptr [ebp-4]
 0048A95D    mov         ecx,dword ptr [eax]
 0048A95F    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048A962    mov         edx,dword ptr [ebp-8]
 0048A965    mov         dx,word ptr [edx+4]
 0048A969    mov         eax,dword ptr [ebp-4]
 0048A96C    call        0048D704
 0048A971    pop         ecx
 0048A972    pop         ecx
 0048A973    pop         ebp
 0048A974    ret
end;*}

//0048A978
{*procedure TWinControl.WMSysKeyDown(?:?);
begin
 0048A978    push        ebp
 0048A979    mov         ebp,esp
 0048A97B    add         esp,0FFFFFFF8
 0048A97E    mov         dword ptr [ebp-8],edx
 0048A981    mov         dword ptr [ebp-4],eax
 0048A984    mov         edx,dword ptr [ebp-8]
 0048A987    mov         eax,dword ptr [ebp-4]
 0048A98A    call        0048A8B4
 0048A98F    test        al,al
>0048A991    jne         0048A99E
 0048A993    mov         edx,dword ptr [ebp-8]
 0048A996    mov         eax,dword ptr [ebp-4]
 0048A999    mov         ecx,dword ptr [eax]
 0048A99B    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048A99E    mov         edx,dword ptr [ebp-8]
 0048A9A1    mov         dx,word ptr [edx+4]
 0048A9A5    mov         eax,dword ptr [ebp-4]
 0048A9A8    call        0048D704
 0048A9AD    pop         ecx
 0048A9AE    pop         ecx
 0048A9AF    pop         ebp
 0048A9B0    ret
end;*}

//0048A9B4
{*procedure TWinControl.sub_0048A9B4(?:?; ?:?);
begin
 0048A9B4    push        ebp
 0048A9B5    mov         ebp,esp
 0048A9B7    add         esp,0FFFFFFF4
 0048A9BA    push        ebx
 0048A9BB    mov         byte ptr [ebp-9],cl
 0048A9BE    mov         dword ptr [ebp-8],edx
 0048A9C1    mov         dword ptr [ebp-4],eax
 0048A9C4    mov         eax,dword ptr [ebp-4]
 0048A9C7    cmp         word ptr [eax+1EA],0;TWinControl.?f1EA:word
>0048A9CF    je          0048A9EA
 0048A9D1    mov         al,byte ptr [ebp-9]
 0048A9D4    push        eax
 0048A9D5    mov         ecx,dword ptr [ebp-8]
 0048A9D8    mov         ebx,dword ptr [ebp-4]
 0048A9DB    mov         edx,dword ptr [ebp-4]
 0048A9DE    mov         eax,dword ptr [ebx+1EC];TWinControl.?f1EC:dword
 0048A9E4    call        dword ptr [ebx+1E8];TWinControl.FOnKeyUp
 0048A9EA    pop         ebx
 0048A9EB    mov         esp,ebp
 0048A9ED    pop         ebp
 0048A9EE    ret
end;*}

//0048A9F0
{*function sub_0048A9F0(?:TWinControl; ?:?):?;
begin
 0048A9F0    push        ebp
 0048A9F1    mov         ebp,esp
 0048A9F3    add         esp,0FFFFFFF0
 0048A9F6    push        esi
 0048A9F7    mov         dword ptr [ebp-8],edx
 0048A9FA    mov         dword ptr [ebp-4],eax
 0048A9FD    mov         byte ptr [ebp-9],1
 0048AA01    mov         eax,dword ptr [ebp-4]
 0048AA04    call        004A0740
 0048AA09    mov         dword ptr [ebp-10],eax
 0048AA0C    cmp         dword ptr [ebp-10],0
>0048AA10    je          0048AA35
 0048AA12    mov         eax,dword ptr [ebp-10]
 0048AA15    cmp         eax,dword ptr [ebp-4]
>0048AA18    je          0048AA35
 0048AA1A    mov         eax,dword ptr [ebp-10]
 0048AA1D    cmp         byte ptr [eax+22D],0
>0048AA24    je          0048AA35
 0048AA26    mov         edx,dword ptr [ebp-8]
 0048AA29    mov         eax,dword ptr [ebp-10]
 0048AA2C    call        0048A9F0
 0048AA31    test        al,al
>0048AA33    jne         0048AA6F
 0048AA35    mov         eax,dword ptr [ebp-8]
 0048AA38    mov         eax,dword ptr [eax+8]
 0048AA3B    call        004A05E8
 0048AA40    mov         byte ptr [ebp-0A],al
 0048AA43    mov         eax,dword ptr [ebp-4]
 0048AA46    test        byte ptr [eax+51],10;TCustomCombo.?f51:byte
>0048AA4A    jne         0048AA6B
 0048AA4C    mov         edx,dword ptr [ebp-8]
 0048AA4F    add         edx,4
 0048AA52    mov         cl,byte ptr [ebp-0A]
 0048AA55    mov         eax,dword ptr [ebp-4]
 0048AA58    mov         si,0FFBB
 0048AA5C    call        @CallDynaInst;TWinControl.sub_0048A9B4
 0048AA61    mov         eax,dword ptr [ebp-8]
 0048AA64    cmp         word ptr [eax+4],0
>0048AA69    je          0048AA6F
 0048AA6B    mov         byte ptr [ebp-9],0
 0048AA6F    mov         al,byte ptr [ebp-9]
 0048AA72    pop         esi
 0048AA73    mov         esp,ebp
 0048AA75    pop         ebp
 0048AA76    ret
end;*}

//0048AA78
{*procedure TWinControl.WMKeyUp(?:?);
begin
 0048AA78    push        ebp
 0048AA79    mov         ebp,esp
 0048AA7B    add         esp,0FFFFFFF8
 0048AA7E    mov         dword ptr [ebp-8],edx
 0048AA81    mov         dword ptr [ebp-4],eax
 0048AA84    mov         edx,dword ptr [ebp-8]
 0048AA87    mov         eax,dword ptr [ebp-4]
 0048AA8A    call        0048A9F0
 0048AA8F    test        al,al
>0048AA91    jne         0048AA9E
 0048AA93    mov         edx,dword ptr [ebp-8]
 0048AA96    mov         eax,dword ptr [ebp-4]
 0048AA99    mov         ecx,dword ptr [eax]
 0048AA9B    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AA9E    pop         ecx
 0048AA9F    pop         ecx
 0048AAA0    pop         ebp
 0048AAA1    ret
end;*}

//0048AAA4
{*procedure TWinControl.WMSysKeyUp(?:?);
begin
 0048AAA4    push        ebp
 0048AAA5    mov         ebp,esp
 0048AAA7    add         esp,0FFFFFFF8
 0048AAAA    mov         dword ptr [ebp-8],edx
 0048AAAD    mov         dword ptr [ebp-4],eax
 0048AAB0    mov         edx,dword ptr [ebp-8]
 0048AAB3    mov         eax,dword ptr [ebp-4]
 0048AAB6    call        0048A9F0
 0048AABB    test        al,al
>0048AABD    jne         0048AACA
 0048AABF    mov         edx,dword ptr [ebp-8]
 0048AAC2    mov         eax,dword ptr [ebp-4]
 0048AAC5    mov         ecx,dword ptr [eax]
 0048AAC7    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AACA    pop         ecx
 0048AACB    pop         ecx
 0048AACC    pop         ebp
 0048AACD    ret
end;*}

//0048AAD0
{*procedure TWinControl.sub_0048AAD0(?:?);
begin
 0048AAD0    push        ebp
 0048AAD1    mov         ebp,esp
 0048AAD3    add         esp,0FFFFFFF8
 0048AAD6    push        ebx
 0048AAD7    mov         dword ptr [ebp-8],edx
 0048AADA    mov         dword ptr [ebp-4],eax
 0048AADD    mov         eax,dword ptr [ebp-4]
 0048AAE0    cmp         word ptr [eax+1E2],0;TWinControl.?f1E2:word
>0048AAE8    je          0048AAFF
 0048AAEA    mov         ecx,dword ptr [ebp-8]
 0048AAED    mov         ebx,dword ptr [ebp-4]
 0048AAF0    mov         edx,dword ptr [ebp-4]
 0048AAF3    mov         eax,dword ptr [ebx+1E4];TWinControl.?f1E4:dword
 0048AAF9    call        dword ptr [ebx+1E0];TWinControl.FOnKeyPress
 0048AAFF    pop         ebx
 0048AB00    pop         ecx
 0048AB01    pop         ecx
 0048AB02    pop         ebp
 0048AB03    ret
end;*}

//0048AB04
{*function sub_0048AB04(?:TWinControl; ?:?):?;
begin
 0048AB04    push        ebp
 0048AB05    mov         ebp,esp
 0048AB07    add         esp,0FFFFFFEC
 0048AB0A    push        esi
 0048AB0B    mov         dword ptr [ebp-8],edx
 0048AB0E    mov         dword ptr [ebp-4],eax
 0048AB11    mov         byte ptr [ebp-9],1
 0048AB15    mov         eax,dword ptr [ebp-4]
 0048AB18    call        004A0740
 0048AB1D    mov         dword ptr [ebp-10],eax
 0048AB20    cmp         dword ptr [ebp-10],0
>0048AB24    je          0048AB49
 0048AB26    mov         eax,dword ptr [ebp-10]
 0048AB29    cmp         eax,dword ptr [ebp-4]
>0048AB2C    je          0048AB49
 0048AB2E    mov         eax,dword ptr [ebp-10]
 0048AB31    cmp         byte ptr [eax+22D],0
>0048AB38    je          0048AB49
 0048AB3A    mov         edx,dword ptr [ebp-8]
 0048AB3D    mov         eax,dword ptr [ebp-10]
 0048AB40    call        0048AB04
 0048AB45    test        al,al
>0048AB47    jne         0048AB83
 0048AB49    mov         eax,dword ptr [ebp-4]
 0048AB4C    test        byte ptr [eax+51],10;TCustomCombo.?f51:byte
>0048AB50    jne         0048AB7F
 0048AB52    mov         eax,dword ptr [ebp-8]
 0048AB55    mov         al,byte ptr [eax+4]
 0048AB58    mov         byte ptr [ebp-11],al
 0048AB5B    lea         edx,[ebp-11]
 0048AB5E    mov         eax,dword ptr [ebp-4]
 0048AB61    mov         si,0FFBA
 0048AB65    call        @CallDynaInst;TWinControl.sub_0048AAD0
 0048AB6A    xor         eax,eax
 0048AB6C    mov         al,byte ptr [ebp-11]
 0048AB6F    mov         edx,dword ptr [ebp-8]
 0048AB72    mov         word ptr [edx+4],ax
 0048AB76    mov         eax,dword ptr [ebp-8]
 0048AB79    cmp         byte ptr [eax+4],0
>0048AB7D    je          0048AB83
 0048AB7F    mov         byte ptr [ebp-9],0
 0048AB83    mov         al,byte ptr [ebp-9]
 0048AB86    pop         esi
 0048AB87    mov         esp,ebp
 0048AB89    pop         ebp
 0048AB8A    ret
end;*}

//0048AB8C
{*procedure TWinControl.WMChar(?:?);
begin
 0048AB8C    push        ebp
 0048AB8D    mov         ebp,esp
 0048AB8F    add         esp,0FFFFFFF8
 0048AB92    mov         dword ptr [ebp-8],edx
 0048AB95    mov         dword ptr [ebp-4],eax
 0048AB98    mov         edx,dword ptr [ebp-8]
 0048AB9B    mov         eax,dword ptr [ebp-4]
 0048AB9E    call        0048AB04
 0048ABA3    test        al,al
>0048ABA5    jne         0048ABB2
 0048ABA7    mov         edx,dword ptr [ebp-8]
 0048ABAA    mov         eax,dword ptr [ebp-4]
 0048ABAD    mov         ecx,dword ptr [eax]
 0048ABAF    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048ABB2    pop         ecx
 0048ABB3    pop         ecx
 0048ABB4    pop         ebp
 0048ABB5    ret
end;*}

//0048ABB8
{*function sub_0048ABB8(?:TWinControl; ?:?):?;
begin
 0048ABB8    push        ebp
 0048ABB9    mov         ebp,esp
 0048ABBB    add         esp,0FFFFFFEC
 0048ABBE    mov         dword ptr [ebp-4],eax
 0048ABC1    mov         byte ptr [ebp-5],0
 0048ABC5    mov         eax,dword ptr [ebp-4]
 0048ABC8    cmp         byte ptr [eax+1A6],0
>0048ABCF    je          0048AC76
 0048ABD5    mov         eax,dword ptr [ebp-4]
 0048ABD8    call        00487E38
 0048ABDD    dec         eax
 0048ABDE    test        eax,eax
>0048ABE0    jl          0048AC76
 0048ABE6    inc         eax
 0048ABE7    mov         dword ptr [ebp-14],eax
 0048ABEA    mov         dword ptr [ebp-0C],0
 0048ABF1    mov         edx,dword ptr [ebp-0C]
 0048ABF4    mov         eax,dword ptr [ebp-4]
 0048ABF7    call        00487DCC
 0048ABFC    mov         dword ptr [ebp-10],eax
 0048ABFF    mov         eax,dword ptr [ebp-10]
 0048AC02    cmp         byte ptr [eax+57],0
>0048AC06    je          0048AC6A
 0048AC08    mov         eax,dword ptr [ebp-10]
 0048AC0B    mov         edx,dword ptr [eax]
 0048AC0D    call        dword ptr [edx+50]
 0048AC10    test        al,al
>0048AC12    je          0048AC6A
 0048AC14    mov         eax,dword ptr [ebp-10]
 0048AC17    test        byte ptr [eax+52],1
>0048AC1B    je          0048AC41
 0048AC1D    mov         eax,dword ptr [ebp+8]
 0048AC20    mov         eax,dword ptr [eax-4]
 0048AC23    mov         eax,dword ptr [eax+8]
 0048AC26    push        eax
 0048AC27    mov         eax,dword ptr [ebp+8]
 0048AC2A    mov         ecx,dword ptr [eax-4]
 0048AC2D    mov         ecx,dword ptr [ecx+4]
 0048AC30    mov         edx,112
 0048AC35    mov         eax,dword ptr [ebp-10]
 0048AC38    call        00484FFC
 0048AC3D    test        eax,eax
>0048AC3F    jne         0048AC64
 0048AC41    mov         eax,dword ptr [ebp-10]
 0048AC44    mov         edx,dword ptr ds:[47E678];TWinControl
 0048AC4A    call        @IsClass
 0048AC4F    test        al,al
>0048AC51    je          0048AC6A
 0048AC53    mov         eax,dword ptr [ebp+8]
 0048AC56    push        eax
 0048AC57    mov         eax,dword ptr [ebp-10]
 0048AC5A    call        0048ABB8
 0048AC5F    pop         ecx
 0048AC60    test        al,al
>0048AC62    je          0048AC6A
 0048AC64    mov         byte ptr [ebp-5],1
>0048AC68    jmp         0048AC76
 0048AC6A    inc         dword ptr [ebp-0C]
 0048AC6D    dec         dword ptr [ebp-14]
>0048AC70    jne         0048ABF1
 0048AC76    mov         al,byte ptr [ebp-5]
 0048AC79    mov         esp,ebp
 0048AC7B    pop         ebp
 0048AC7C    ret
end;*}

//0048AC80
{*procedure TWinControl.WMSysCommand(?:?);
begin
 0048AC80    push        ebp
 0048AC81    mov         ebp,esp
 0048AC83    add         esp,0FFFFFFF4
 0048AC86    mov         dword ptr [ebp-4],edx
 0048AC89    mov         dword ptr [ebp-8],eax
 0048AC8C    mov         eax,dword ptr [ebp-4]
 0048AC8F    mov         eax,dword ptr [eax+4]
 0048AC92    and         eax,0FFF0
 0048AC97    cmp         eax,0F100
>0048AC9C    jne         0048AD05
 0048AC9E    mov         eax,dword ptr [ebp-4]
 0048ACA1    cmp         word ptr [eax+8],20
>0048ACA6    je          0048AD05
 0048ACA8    mov         eax,dword ptr [ebp-4]
 0048ACAB    cmp         word ptr [eax+8],2D
>0048ACB0    je          0048AD05
 0048ACB2    mov         eax,dword ptr [ebp-8]
 0048ACB5    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048ACBB    push        eax
 0048ACBC    call        user32.IsIconic
 0048ACC1    test        eax,eax
>0048ACC3    jne         0048AD05
 0048ACC5    call        user32.GetCapture
 0048ACCA    test        eax,eax
>0048ACCC    jne         0048AD05
 0048ACCE    mov         eax,[0056E3C0];^Application:TApplication
 0048ACD3    mov         eax,dword ptr [eax]
 0048ACD5    mov         eax,dword ptr [eax+44];TApplication.FMainForm:TForm
 0048ACD8    cmp         eax,dword ptr [ebp-8]
>0048ACDB    je          0048AD05
 0048ACDD    mov         eax,dword ptr [ebp-8]
 0048ACE0    call        004A0740
 0048ACE5    mov         dword ptr [ebp-0C],eax
 0048ACE8    cmp         dword ptr [ebp-0C],0
>0048ACEC    je          0048AD05
 0048ACEE    mov         eax,dword ptr [ebp-4]
 0048ACF1    push        eax
 0048ACF2    xor         ecx,ecx
 0048ACF4    mov         edx,0B017
 0048ACF9    mov         eax,dword ptr [ebp-0C]
 0048ACFC    call        00484FFC
 0048AD01    test        eax,eax
>0048AD03    jne         0048AD30
 0048AD05    mov         eax,dword ptr [ebp-4]
 0048AD08    mov         eax,dword ptr [eax+4]
 0048AD0B    and         eax,0FFF0
 0048AD10    cmp         eax,0F100
>0048AD15    jne         0048AD25
 0048AD17    push        ebp
 0048AD18    mov         eax,dword ptr [ebp-8]
 0048AD1B    call        0048ABB8
 0048AD20    pop         ecx
 0048AD21    test        al,al
>0048AD23    jne         0048AD30
 0048AD25    mov         edx,dword ptr [ebp-4]
 0048AD28    mov         eax,dword ptr [ebp-8]
 0048AD2B    mov         ecx,dword ptr [eax]
 0048AD2D    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AD30    mov         esp,ebp
 0048AD32    pop         ebp
 0048AD33    ret
end;*}

//0048AD34
{*procedure TWinControl.WMCharToItem(?:?);
begin
 0048AD34    push        ebp
 0048AD35    mov         ebp,esp
 0048AD37    add         esp,0FFFFFFF8
 0048AD3A    mov         dword ptr [ebp-8],edx
 0048AD3D    mov         dword ptr [ebp-4],eax
 0048AD40    mov         edx,dword ptr [ebp-8]
 0048AD43    mov         eax,dword ptr [ebp-8]
 0048AD46    mov         eax,dword ptr [eax+8]
 0048AD49    call        004891DC
 0048AD4E    test        al,al
>0048AD50    jne         0048AD5D
 0048AD52    mov         edx,dword ptr [ebp-8]
 0048AD55    mov         eax,dword ptr [ebp-4]
 0048AD58    mov         ecx,dword ptr [eax]
 0048AD5A    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AD5D    pop         ecx
 0048AD5E    pop         ecx
 0048AD5F    pop         ebp
 0048AD60    ret
end;*}

//0048AD64
{*procedure TWinControl.WMParentNotify(?:?);
begin
 0048AD64    push        ebp
 0048AD65    mov         ebp,esp
 0048AD67    add         esp,0FFFFFFF8
 0048AD6A    mov         dword ptr [ebp-8],edx
 0048AD6D    mov         dword ptr [ebp-4],eax
 0048AD70    mov         eax,dword ptr [ebp-8]
 0048AD73    cmp         word ptr [eax+4],1
>0048AD78    je          0048AD84
 0048AD7A    mov         eax,dword ptr [ebp-8]
 0048AD7D    cmp         word ptr [eax+4],2
>0048AD82    jne         0048AD96
 0048AD84    mov         edx,dword ptr [ebp-8]
 0048AD87    mov         eax,dword ptr [ebp-8]
 0048AD8A    mov         eax,dword ptr [eax+8]
 0048AD8D    call        004891DC
 0048AD92    test        al,al
>0048AD94    jne         0048ADA1
 0048AD96    mov         edx,dword ptr [ebp-8]
 0048AD99    mov         eax,dword ptr [ebp-4]
 0048AD9C    mov         ecx,dword ptr [eax]
 0048AD9E    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048ADA1    pop         ecx
 0048ADA2    pop         ecx
 0048ADA3    pop         ebp
 0048ADA4    ret
end;*}

//0048ADA8
{*procedure TWinControl.WMVKeyToItem(?:?);
begin
 0048ADA8    push        ebp
 0048ADA9    mov         ebp,esp
 0048ADAB    add         esp,0FFFFFFF8
 0048ADAE    mov         dword ptr [ebp-8],edx
 0048ADB1    mov         dword ptr [ebp-4],eax
 0048ADB4    mov         edx,dword ptr [ebp-8]
 0048ADB7    mov         eax,dword ptr [ebp-8]
 0048ADBA    mov         eax,dword ptr [eax+8]
 0048ADBD    call        004891DC
 0048ADC2    test        al,al
>0048ADC4    jne         0048ADD1
 0048ADC6    mov         edx,dword ptr [ebp-8]
 0048ADC9    mov         eax,dword ptr [ebp-4]
 0048ADCC    mov         ecx,dword ptr [eax]
 0048ADCE    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048ADD1    pop         ecx
 0048ADD2    pop         ecx
 0048ADD3    pop         ebp
 0048ADD4    ret
end;*}

//0048ADD8
{*procedure TWinControl.WMDestroy(?:?);
begin
 0048ADD8    push        ebp
 0048ADD9    mov         ebp,esp
 0048ADDB    add         esp,0FFFFFFF8
 0048ADDE    mov         dword ptr [ebp-8],edx
 0048ADE1    mov         dword ptr [ebp-4],eax
 0048ADE4    mov         edx,dword ptr [ebp-8]
 0048ADE7    mov         eax,dword ptr [ebp-4]
 0048ADEA    mov         ecx,dword ptr [eax]
 0048ADEC    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048ADEF    movzx       eax,word ptr ds:[571DAA];0x0 ControlAtom:TAtom
 0048ADF6    push        eax
 0048ADF7    mov         eax,dword ptr [ebp-4]
 0048ADFA    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048AE00    push        eax
 0048AE01    call        user32.RemovePropA
 0048AE06    movzx       eax,word ptr ds:[571DA8];0x0 WindowAtom:TAtom
 0048AE0D    push        eax
 0048AE0E    mov         eax,dword ptr [ebp-4]
 0048AE11    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048AE17    push        eax
 0048AE18    call        user32.RemovePropA
 0048AE1D    pop         ecx
 0048AE1E    pop         ecx
 0048AE1F    pop         ebp
 0048AE20    ret
end;*}

//0048AE24
{*procedure TWinControl.WMNCDestroy(?:?);
begin
 0048AE24    push        ebp
 0048AE25    mov         ebp,esp
 0048AE27    add         esp,0FFFFFFF8
 0048AE2A    mov         dword ptr [ebp-8],edx
 0048AE2D    mov         dword ptr [ebp-4],eax
 0048AE30    mov         edx,dword ptr [ebp-8]
 0048AE33    mov         eax,dword ptr [ebp-4]
 0048AE36    mov         ecx,dword ptr [eax]
 0048AE38    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AE3B    mov         eax,dword ptr [ebp-4]
 0048AE3E    xor         edx,edx
 0048AE40    mov         dword ptr [eax+180],edx;TWinControl.FHandle:HWND
 0048AE46    mov         eax,dword ptr [ebp-4]
 0048AE49    mov         byte ptr [eax+1A6],0;TWinControl.FShowing:Boolean
 0048AE50    pop         ecx
 0048AE51    pop         ecx
 0048AE52    pop         ebp
 0048AE53    ret
end;*}

//0048AE54
{*procedure TWinControl.WMNCHitTest(?:?);
begin
 0048AE54    push        ebp
 0048AE55    mov         ebp,esp
 0048AE57    add         esp,0FFFFFFF8
 0048AE5A    mov         dword ptr [ebp-8],edx
 0048AE5D    mov         dword ptr [ebp-4],eax
 0048AE60    mov         eax,dword ptr [ebp-4]
 0048AE63    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048AE67    je          0048AE7E
 0048AE69    mov         eax,dword ptr [ebp-4]
 0048AE6C    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048AE70    je          0048AE7E
 0048AE72    mov         eax,dword ptr [ebp-8]
 0048AE75    mov         dword ptr [eax+0C],1
>0048AE7C    jmp         0048AE89
 0048AE7E    mov         edx,dword ptr [ebp-8]
 0048AE81    mov         eax,dword ptr [ebp-4]
 0048AE84    mov         ecx,dword ptr [eax]
 0048AE86    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AE89    pop         ecx
 0048AE8A    pop         ecx
 0048AE8B    pop         ebp
 0048AE8C    ret
end;*}

//0048AE90
{*procedure TWinControl.sub_0048251C(?:?);
begin
 0048AE90    push        ebp
 0048AE91    mov         ebp,esp
 0048AE93    add         esp,0FFFFFFF4
 0048AE96    push        esi
 0048AE97    mov         byte ptr [ebp-5],dl
 0048AE9A    mov         dword ptr [ebp-4],eax
 0048AE9D    mov         dl,byte ptr [ebp-5]
 0048AEA0    mov         eax,dword ptr [ebp-4]
 0048AEA3    call        TControl.sub_0048251C
 0048AEA8    mov         byte ptr [ebp-6],al
 0048AEAB    mov         eax,dword ptr [ebp-4]
 0048AEAE    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>0048AEB2    je          0048AEF3
 0048AEB4    mov         eax,dword ptr [ebp-4]
 0048AEB7    call        00487E38
 0048AEBC    dec         eax
 0048AEBD    cmp         eax,0
>0048AEC0    jl          0048AEF3
 0048AEC2    mov         dword ptr [ebp-0C],eax
 0048AEC5    mov         al,byte ptr [ebp-5]
 0048AEC8    and         al,byte ptr [ebp-6]
>0048AECB    jne         0048AEF3
 0048AECD    mov         edx,dword ptr [ebp-0C]
 0048AED0    mov         eax,dword ptr [ebp-4]
 0048AED3    call        00487DCC
 0048AED8    mov         dl,byte ptr [ebp-5]
 0048AEDB    mov         si,0FFD1
 0048AEDF    call        @CallDynaInst
 0048AEE4    or          al,byte ptr [ebp-6]
 0048AEE7    mov         byte ptr [ebp-6],al
 0048AEEA    dec         dword ptr [ebp-0C]
 0048AEED    cmp         dword ptr [ebp-0C],0FFFFFFFF
>0048AEF1    jne         0048AEC5
 0048AEF3    mov         al,byte ptr [ebp-6]
 0048AEF6    pop         esi
 0048AEF7    mov         esp,ebp
 0048AEF9    pop         ebp
 0048AEFA    ret
end;*}

//0048AEFC
{*procedure TWinControl.WMQueryNewPalette(?:?);
begin
 0048AEFC    push        ebp
 0048AEFD    mov         ebp,esp
 0048AEFF    add         esp,0FFFFFFF8
 0048AF02    push        esi
 0048AF03    mov         dword ptr [ebp-8],edx
 0048AF06    mov         dword ptr [ebp-4],eax
 0048AF09    mov         eax,dword ptr [ebp-4]
 0048AF0C    or          word ptr [eax+54],4;TWinControl.FControlState:TControlState
 0048AF11    mov         dl,1
 0048AF13    mov         eax,dword ptr [ebp-4]
 0048AF16    mov         si,0FFD1
 0048AF1A    call        @CallDynaInst;TWinControl.sub_0048251C
 0048AF1F    and         eax,7F
 0048AF22    mov         edx,dword ptr [ebp-8]
 0048AF25    mov         dword ptr [edx+0C],eax
 0048AF28    pop         esi
 0048AF29    pop         ecx
 0048AF2A    pop         ecx
 0048AF2B    pop         ebp
 0048AF2C    ret
end;*}

//0048AF30
{*procedure TWinControl.WMPaletteChanged(?:?);
begin
 0048AF30    push        ebp
 0048AF31    mov         ebp,esp
 0048AF33    add         esp,0FFFFFFF8
 0048AF36    push        esi
 0048AF37    mov         dword ptr [ebp-8],edx
 0048AF3A    mov         dword ptr [ebp-4],eax
 0048AF3D    xor         edx,edx
 0048AF3F    mov         eax,dword ptr [ebp-4]
 0048AF42    mov         si,0FFD1
 0048AF46    call        @CallDynaInst;TWinControl.sub_0048251C
 0048AF4B    and         eax,7F
 0048AF4E    mov         edx,dword ptr [ebp-8]
 0048AF51    mov         dword ptr [edx+0C],eax
 0048AF54    pop         esi
 0048AF55    pop         ecx
 0048AF56    pop         ecx
 0048AF57    pop         ebp
 0048AF58    ret
end;*}

//0048AF5C
{*procedure TWinControl.CMShowHintChanged(?:?);
begin
 0048AF5C    push        ebp
 0048AF5D    mov         ebp,esp
 0048AF5F    add         esp,0FFFFFFF8
 0048AF62    mov         dword ptr [ebp-8],edx
 0048AF65    mov         dword ptr [ebp-4],eax
 0048AF68    mov         edx,dword ptr [ebp-8]
 0048AF6B    mov         eax,dword ptr [ebp-4]
 0048AF6E    mov         ecx,dword ptr [eax]
 0048AF70    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048AF73    mov         dx,0B023
 0048AF77    mov         eax,dword ptr [ebp-4]
 0048AF7A    call        00487ED8
 0048AF7F    pop         ecx
 0048AF80    pop         ecx
 0048AF81    pop         ebp
 0048AF82    ret
end;*}

//0048AF84
procedure TWinControl.CMBiDiModeChanged(var Message:TMessage);
begin
{*
 0048AF84    push        ebp
 0048AF85    mov         ebp,esp
 0048AF87    add         esp,0FFFFFFF8
 0048AF8A    mov         dword ptr [ebp-8],edx
 0048AF8D    mov         dword ptr [ebp-4],eax
 0048AF90    mov         edx,dword ptr [ebp-8]
 0048AF93    mov         eax,dword ptr [ebp-4]
 0048AF96    call        TControl.CMBiDiModeChanged
 0048AF9B    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048AFA0    cmp         byte ptr [eax+0D],0
>0048AFA4    je          0048AFB7
 0048AFA6    mov         eax,dword ptr [ebp-8]
 0048AFA9    cmp         dword ptr [eax+4],0
>0048AFAD    jne         0048AFB7
 0048AFAF    mov         eax,dword ptr [ebp-4]
 0048AFB2    call        TWinControl.RecreateWnd
 0048AFB7    mov         dx,0B03D
 0048AFBB    mov         eax,dword ptr [ebp-4]
 0048AFBE    call        00487ED8
 0048AFC3    pop         ecx
 0048AFC4    pop         ecx
 0048AFC5    pop         ebp
 0048AFC6    ret
*}
end;

//0048AFC8
{*procedure TWinControl.CMEnter(?:?);
begin
 0048AFC8    push        ebp
 0048AFC9    mov         ebp,esp
 0048AFCB    add         esp,0FFFFFFF8
 0048AFCE    push        esi
 0048AFCF    mov         dword ptr [ebp-8],edx
 0048AFD2    mov         dword ptr [ebp-4],eax
 0048AFD5    mov         eax,[0056E638];^gvar_0057196C:Integer
 0048AFDA    cmp         byte ptr [eax+0D],0
>0048AFDE    je          0048B036
 0048AFE0    mov         eax,dword ptr [ebp-4]
 0048AFE3    call        0048412C
 0048AFE8    test        al,al
>0048AFEA    je          0048B012
 0048AFEC    mov         eax,[0056E3C0];^Application:TApplication
 0048AFF1    mov         eax,dword ptr [eax]
 0048AFF3    cmp         dword ptr [eax+38],0;TApplication.FBiDiKeyboard:String
>0048AFF7    je          0048B036
 0048AFF9    push        1
 0048AFFB    mov         eax,[0056E3C0];^Application:TApplication
 0048B000    mov         eax,dword ptr [eax]
 0048B002    mov         eax,dword ptr [eax+38];TApplication.FBiDiKeyboard:String
 0048B005    call        @LStrToPChar
 0048B00A    push        eax
 0048B00B    call        user32.LoadKeyboardLayoutA
>0048B010    jmp         0048B036
 0048B012    mov         eax,[0056E3C0];^Application:TApplication
 0048B017    mov         eax,dword ptr [eax]
 0048B019    cmp         dword ptr [eax+3C],0;TApplication.FNonBiDiKeyboard:String
>0048B01D    je          0048B036
 0048B01F    push        1
 0048B021    mov         eax,[0056E3C0];^Application:TApplication
 0048B026    mov         eax,dword ptr [eax]
 0048B028    mov         eax,dword ptr [eax+3C];TApplication.FNonBiDiKeyboard:String
 0048B02B    call        @LStrToPChar
 0048B030    push        eax
 0048B031    call        user32.LoadKeyboardLayoutA
 0048B036    mov         eax,dword ptr [ebp-4]
 0048B039    mov         si,0FFC2
 0048B03D    call        @CallDynaInst;TWinControl.sub_0048A218
 0048B042    pop         esi
 0048B043    pop         ecx
 0048B044    pop         ecx
 0048B045    pop         ebp
 0048B046    ret
end;*}

//0048B048
{*procedure TWinControl.CMExit(?:?);
begin
 0048B048    push        ebp
 0048B049    mov         ebp,esp
 0048B04B    add         esp,0FFFFFFF8
 0048B04E    push        esi
 0048B04F    mov         dword ptr [ebp-8],edx
 0048B052    mov         dword ptr [ebp-4],eax
 0048B055    mov         eax,dword ptr [ebp-4]
 0048B058    mov         si,0FFC1
 0048B05C    call        @CallDynaInst;TWinControl.sub_0048A244
 0048B061    pop         esi
 0048B062    pop         ecx
 0048B063    pop         ecx
 0048B064    pop         ebp
 0048B065    ret
end;*}

//0048B068
{*procedure TWinControl.CMDesignHitTest(?:?);
begin
 0048B068    push        ebp
 0048B069    mov         ebp,esp
 0048B06B    add         esp,0FFFFFFF8
 0048B06E    mov         dword ptr [ebp-8],edx
 0048B071    mov         dword ptr [ebp-4],eax
 0048B074    mov         edx,dword ptr [ebp-8]
 0048B077    mov         eax,dword ptr [ebp-4]
 0048B07A    call        00488E08
 0048B07F    test        al,al
>0048B081    jne         0048B08E
 0048B083    mov         edx,dword ptr [ebp-8]
 0048B086    mov         eax,dword ptr [ebp-4]
 0048B089    call        TControl.CMDesignHitTest
 0048B08E    pop         ecx
 0048B08F    pop         ecx
 0048B090    pop         ebp
 0048B091    ret
end;*}

//0048B094
{*procedure TWinControl.CMChanged(?:?);
begin
 0048B094    push        ebp
 0048B095    mov         ebp,esp
 0048B097    add         esp,0FFFFFFF8
 0048B09A    push        ebx
 0048B09B    mov         dword ptr [ebp-8],edx
 0048B09E    mov         dword ptr [ebp-4],eax
 0048B0A1    mov         eax,dword ptr [ebp-4]
 0048B0A4    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048B0A8    je          0048B0B9
 0048B0AA    mov         edx,dword ptr [ebp-8]
 0048B0AD    mov         eax,dword ptr [ebp-4]
 0048B0B0    mov         ebx,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048B0B3    mov         eax,dword ptr [ebx+3C];TWinControl.?f3C:TControl
 0048B0B6    call        dword ptr [ebx+38];TWinControl.FWindowProc
 0048B0B9    pop         ebx
 0048B0BA    pop         ecx
 0048B0BB    pop         ecx
 0048B0BC    pop         ebp
 0048B0BD    ret
end;*}

//0048B0C0
{*procedure TWinControl.CMChildKey(?:?);
begin
 0048B0C0    push        ebp
 0048B0C1    mov         ebp,esp
 0048B0C3    add         esp,0FFFFFFF8
 0048B0C6    push        ebx
 0048B0C7    mov         dword ptr [ebp-8],edx
 0048B0CA    mov         dword ptr [ebp-4],eax
 0048B0CD    mov         eax,dword ptr [ebp-4]
 0048B0D0    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048B0D4    je          0048B0E5
 0048B0D6    mov         edx,dword ptr [ebp-8]
 0048B0D9    mov         eax,dword ptr [ebp-4]
 0048B0DC    mov         ebx,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048B0DF    mov         eax,dword ptr [ebx+3C];TWinControl.?f3C:TControl
 0048B0E2    call        dword ptr [ebx+38];TWinControl.FWindowProc
 0048B0E5    pop         ebx
 0048B0E6    pop         ecx
 0048B0E7    pop         ecx
 0048B0E8    pop         ebp
 0048B0E9    ret
end;*}

//0048B0EC
{*procedure TWinControl.CMDialogKey(?:?);
begin
 0048B0EC    push        ebp
 0048B0ED    mov         ebp,esp
 0048B0EF    add         esp,0FFFFFFF8
 0048B0F2    mov         dword ptr [ebp-8],edx
 0048B0F5    mov         dword ptr [ebp-4],eax
 0048B0F8    mov         edx,dword ptr [ebp-8]
 0048B0FB    mov         eax,dword ptr [ebp-4]
 0048B0FE    call        00487E84
 0048B103    pop         ecx
 0048B104    pop         ecx
 0048B105    pop         ebp
 0048B106    ret
end;*}

//0048B108
{*procedure TWinControl.CMDialogChar(?:?);
begin
 0048B108    push        ebp
 0048B109    mov         ebp,esp
 0048B10B    add         esp,0FFFFFFF8
 0048B10E    mov         dword ptr [ebp-8],edx
 0048B111    mov         dword ptr [ebp-4],eax
 0048B114    mov         edx,dword ptr [ebp-8]
 0048B117    mov         eax,dword ptr [ebp-4]
 0048B11A    call        00487E84
 0048B11F    pop         ecx
 0048B120    pop         ecx
 0048B121    pop         ebp
 0048B122    ret
end;*}

//0048B124
{*procedure TWinControl.CMFocusChenged(?:?);
begin
 0048B124    push        ebp
 0048B125    mov         ebp,esp
 0048B127    add         esp,0FFFFFFF8
 0048B12A    mov         dword ptr [ebp-8],edx
 0048B12D    mov         dword ptr [ebp-4],eax
 0048B130    mov         edx,dword ptr [ebp-8]
 0048B133    mov         eax,dword ptr [ebp-4]
 0048B136    call        00487E84
 0048B13B    pop         ecx
 0048B13C    pop         ecx
 0048B13D    pop         ebp
 0048B13E    ret
end;*}

//0048B140
{*procedure TWinControl.CMVisibleChanged(?:?);
begin
 0048B140    push        ebp
 0048B141    mov         ebp,esp
 0048B143    add         esp,0FFFFFFF8
 0048B146    mov         dword ptr [ebp-8],edx
 0048B149    mov         dword ptr [ebp-4],eax
 0048B14C    mov         eax,dword ptr [ebp-4]
 0048B14F    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>0048B153    jne         0048B168
 0048B155    mov         eax,dword ptr [ebp-4]
 0048B158    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048B15C    je          0048B168
 0048B15E    xor         edx,edx
 0048B160    mov         eax,dword ptr [ebp-4]
 0048B163    call        00487B60
 0048B168    mov         eax,dword ptr [ebp-4]
 0048B16B    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B16F    je          0048B17A
 0048B171    mov         eax,dword ptr [ebp-4]
 0048B174    test        byte ptr [eax+51],4;TWinControl.?f51:byte
>0048B178    je          0048B182
 0048B17A    mov         eax,dword ptr [ebp-4]
 0048B17D    call        00488ADC
 0048B182    pop         ecx
 0048B183    pop         ecx
 0048B184    pop         ebp
 0048B185    ret
end;*}

//0048B188
{*procedure TWinControl.CMShowingChanged(?:?);
begin
 0048B188    push        ebp
 0048B189    mov         ebp,esp
 0048B18B    add         esp,0FFFFFFF8
 0048B18E    mov         dword ptr [ebp-8],edx
 0048B191    mov         dword ptr [ebp-4],eax
 0048B194    mov         eax,dword ptr [ebp-4]
 0048B197    movzx       eax,byte ptr [eax+1A6];TWinControl.FShowing:Boolean
 0048B19E    movzx       eax,word ptr [eax*2+56C838]
 0048B1A6    push        eax
 0048B1A7    push        0
 0048B1A9    push        0
 0048B1AB    push        0
 0048B1AD    push        0
 0048B1AF    push        0
 0048B1B1    mov         eax,dword ptr [ebp-4]
 0048B1B4    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B1BA    push        eax
 0048B1BB    call        user32.SetWindowPos
 0048B1C0    pop         ecx
 0048B1C1    pop         ecx
 0048B1C2    pop         ebp
 0048B1C3    ret
end;*}

//0048B1C4
{*procedure TWinControl.CMEnabledChanged(?:?);
begin
 0048B1C4    push        ebp
 0048B1C5    mov         ebp,esp
 0048B1C7    add         esp,0FFFFFFF8
 0048B1CA    mov         dword ptr [ebp-8],edx
 0048B1CD    mov         dword ptr [ebp-4],eax
 0048B1D0    mov         eax,dword ptr [ebp-4]
 0048B1D3    mov         edx,dword ptr [eax]
 0048B1D5    call        dword ptr [edx+50];TImage.GetEnabled
 0048B1D8    test        al,al
>0048B1DA    jne         0048B1EF
 0048B1DC    mov         eax,dword ptr [ebp-4]
 0048B1DF    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048B1E3    je          0048B1EF
 0048B1E5    xor         edx,edx
 0048B1E7    mov         eax,dword ptr [ebp-4]
 0048B1EA    call        00487B60
 0048B1EF    mov         eax,dword ptr [ebp-4]
 0048B1F2    call        TWinControl.HandleAllocated
 0048B1F7    test        al,al
>0048B1F9    je          0048B220
 0048B1FB    mov         eax,dword ptr [ebp-4]
 0048B1FE    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B202    jne         0048B220
 0048B204    mov         eax,dword ptr [ebp-4]
 0048B207    mov         edx,dword ptr [eax]
 0048B209    call        dword ptr [edx+50];TImage.GetEnabled
 0048B20C    neg         al
 0048B20E    sbb         eax,eax
 0048B210    push        eax
 0048B211    mov         eax,dword ptr [ebp-4]
 0048B214    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B21A    push        eax
 0048B21B    call        user32.EnableWindow
 0048B220    pop         ecx
 0048B221    pop         ecx
 0048B222    pop         ebp
 0048B223    ret
end;*}

//0048B224
{*procedure TWinControl.CMColorChanged(?:?);
begin
 0048B224    push        ebp
 0048B225    mov         ebp,esp
 0048B227    add         esp,0FFFFFFF8
 0048B22A    mov         dword ptr [ebp-8],edx
 0048B22D    mov         dword ptr [ebp-4],eax
 0048B230    mov         edx,dword ptr [ebp-8]
 0048B233    mov         eax,dword ptr [ebp-4]
 0048B236    call        TControl.CMColorChanged
 0048B23B    mov         eax,dword ptr [ebp-4]
 0048B23E    mov         edx,dword ptr [eax+70];TWinControl.FColor:TColor
 0048B241    mov         eax,dword ptr [ebp-4]
 0048B244    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 0048B24A    call        TBrush.SetColor
 0048B24F    mov         dx,0B009
 0048B253    mov         eax,dword ptr [ebp-4]
 0048B256    call        00487ED8
 0048B25B    pop         ecx
 0048B25C    pop         ecx
 0048B25D    pop         ebp
 0048B25E    ret
end;*}

//0048B260
{*procedure TWinControl.CMFontChanged(?:?);
begin
 0048B260    push        ebp
 0048B261    mov         ebp,esp
 0048B263    add         esp,0FFFFFFF8
 0048B266    mov         dword ptr [ebp-8],edx
 0048B269    mov         dword ptr [ebp-4],eax
 0048B26C    mov         edx,dword ptr [ebp-8]
 0048B26F    mov         eax,dword ptr [ebp-4]
 0048B272    call        TControl.CMFontChanged
 0048B277    mov         eax,dword ptr [ebp-4]
 0048B27A    call        TWinControl.HandleAllocated
 0048B27F    test        al,al
>0048B281    je          0048B29F
 0048B283    push        0
 0048B285    mov         eax,dword ptr [ebp-4]
 0048B288    mov         eax,dword ptr [eax+68];TWinControl.FFont:TFont
 0048B28B    call        0042E12C
 0048B290    mov         ecx,eax
 0048B292    mov         edx,30
 0048B297    mov         eax,dword ptr [ebp-4]
 0048B29A    call        00484FFC
 0048B29F    mov         dx,0B008
 0048B2A3    mov         eax,dword ptr [ebp-4]
 0048B2A6    call        00487ED8
 0048B2AB    pop         ecx
 0048B2AC    pop         ecx
 0048B2AD    pop         ebp
 0048B2AE    ret
end;*}

//0048B2B0
{*procedure TWinControl.CMCursorChanged(?:?);
begin
 0048B2B0    push        ebp
 0048B2B1    mov         ebp,esp
 0048B2B3    add         esp,0FFFFFFF0
 0048B2B6    mov         dword ptr [ebp-10],edx
 0048B2B9    mov         dword ptr [ebp-4],eax
 0048B2BC    call        user32.GetCapture
 0048B2C1    test        eax,eax
>0048B2C3    jne         0048B2F6
 0048B2C5    lea         eax,[ebp-0C]
 0048B2C8    push        eax
 0048B2C9    call        user32.GetCursorPos
 0048B2CE    lea         eax,[ebp-0C]
 0048B2D1    xor         edx,edx
 0048B2D3    call        00481798
 0048B2D8    cmp         eax,dword ptr [ebp-4]
>0048B2DB    jne         0048B2F6
 0048B2DD    push        1
 0048B2DF    mov         eax,dword ptr [ebp-4]
 0048B2E2    call        TWinControl.GetHandle
 0048B2E7    mov         ecx,eax
 0048B2E9    mov         edx,20
 0048B2EE    mov         eax,dword ptr [ebp-4]
 0048B2F1    call        00484FFC
 0048B2F6    mov         esp,ebp
 0048B2F8    pop         ebp
 0048B2F9    ret
end;*}

//0048B2FC
{*procedure TWinControl.CMBorderChanged(?:?);
begin
 0048B2FC    push        ebp
 0048B2FD    mov         ebp,esp
 0048B2FF    add         esp,0FFFFFFF8
 0048B302    mov         dword ptr [ebp-8],edx
 0048B305    mov         dword ptr [ebp-4],eax
 0048B308    mov         edx,dword ptr [ebp-8]
 0048B30B    mov         eax,dword ptr [ebp-4]
 0048B30E    mov         ecx,dword ptr [eax]
 0048B310    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048B313    mov         eax,dword ptr [ebp-4]
 0048B316    call        TWinControl.HandleAllocated
 0048B31B    test        al,al
>0048B31D    je          0048B34A
 0048B31F    push        37
 0048B321    push        0
 0048B323    push        0
 0048B325    push        0
 0048B327    push        0
 0048B329    push        0
 0048B32B    mov         eax,dword ptr [ebp-4]
 0048B32E    call        TWinControl.GetHandle
 0048B333    push        eax
 0048B334    call        user32.SetWindowPos
 0048B339    mov         eax,dword ptr [ebp-4]
 0048B33C    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>0048B340    je          0048B34A
 0048B342    mov         eax,dword ptr [ebp-4]
 0048B345    mov         edx,dword ptr [eax]
 0048B347    call        dword ptr [edx+7C];TWinControl.sub_0048BE68
 0048B34A    pop         ecx
 0048B34B    pop         ecx
 0048B34C    pop         ebp
 0048B34D    ret
end;*}

//0048B350
{*procedure TWinControl.CMCtl3DChanged(?:?);
begin
 0048B350    push        ebp
 0048B351    mov         ebp,esp
 0048B353    add         esp,0FFFFFFF8
 0048B356    mov         dword ptr [ebp-8],edx
 0048B359    mov         dword ptr [ebp-4],eax
 0048B35C    mov         eax,dword ptr [ebp-4]
 0048B35F    test        byte ptr [eax+50],10;TWinControl.FControlStyle:TControlStyle
>0048B363    je          0048B395
 0048B365    mov         eax,dword ptr [ebp-4]
 0048B368    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048B36C    je          0048B395
 0048B36E    mov         eax,dword ptr [ebp-4]
 0048B371    call        TWinControl.HandleAllocated
 0048B376    test        al,al
>0048B378    je          0048B395
 0048B37A    mov         eax,dword ptr [ebp-4]
 0048B37D    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B383    push        eax
 0048B384    call        user32.IsWindowVisible
 0048B389    test        eax,eax
>0048B38B    je          0048B395
 0048B38D    mov         eax,dword ptr [ebp-4]
 0048B390    call        0048BF88
 0048B395    mov         dx,0B011
 0048B399    mov         eax,dword ptr [ebp-4]
 0048B39C    call        00487ED8
 0048B3A1    pop         ecx
 0048B3A2    pop         ecx
 0048B3A3    pop         ebp
 0048B3A4    ret
end;*}

//0048B3A8
{*procedure TWinControl.CMParentCtl3DChanged(?:?);
begin
 0048B3A8    push        ebp
 0048B3A9    mov         ebp,esp
 0048B3AB    add         esp,0FFFFFFF8
 0048B3AE    mov         dword ptr [ebp-8],edx
 0048B3B1    mov         dword ptr [ebp-4],eax
 0048B3B4    mov         eax,dword ptr [ebp-4]
 0048B3B7    cmp         byte ptr [eax+1A9],0;TWinControl.FParentCtl3D:Boolean
>0048B3BE    je          0048B3FB
 0048B3C0    mov         eax,dword ptr [ebp-8]
 0048B3C3    cmp         dword ptr [eax+4],0
>0048B3C7    je          0048B3DD
 0048B3C9    mov         eax,dword ptr [ebp-8]
 0048B3CC    cmp         dword ptr [eax+8],0
 0048B3D0    setne       dl
 0048B3D3    mov         eax,dword ptr [ebp-4]
 0048B3D6    call        TPanel.SetCtl3D
>0048B3DB    jmp         0048B3F1
 0048B3DD    mov         eax,dword ptr [ebp-4]
 0048B3E0    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048B3E3    mov         dl,byte ptr [eax+1A5];TWinControl.FCtl3D:Boolean
 0048B3E9    mov         eax,dword ptr [ebp-4]
 0048B3EC    call        TPanel.SetCtl3D
 0048B3F1    mov         eax,dword ptr [ebp-4]
 0048B3F4    mov         byte ptr [eax+1A9],1;TWinControl.FParentCtl3D:Boolean
 0048B3FB    pop         ecx
 0048B3FC    pop         ecx
 0048B3FD    pop         ebp
 0048B3FE    ret
end;*}

//0048B400
{*procedure TWinControl.CMSysColorChange(?:?);
begin
 0048B400    push        ebp
 0048B401    mov         ebp,esp
 0048B403    add         esp,0FFFFFFF8
 0048B406    mov         dword ptr [ebp-8],edx
 0048B409    mov         dword ptr [ebp-4],eax
 0048B40C    mov         edx,dword ptr [ebp-8]
 0048B40F    mov         eax,dword ptr [ebp-4]
 0048B412    call        00487E84
 0048B417    pop         ecx
 0048B418    pop         ecx
 0048B419    pop         ebp
 0048B41A    ret
end;*}

//0048B41C
{*procedure TWinControl.CMWinIniChange(?:?);
begin
 0048B41C    push        ebp
 0048B41D    mov         ebp,esp
 0048B41F    add         esp,0FFFFFFF8
 0048B422    mov         dword ptr [ebp-8],edx
 0048B425    mov         dword ptr [ebp-4],eax
 0048B428    mov         edx,dword ptr [ebp-8]
 0048B42B    mov         eax,dword ptr [ebp-4]
 0048B42E    call        00487E84
 0048B433    pop         ecx
 0048B434    pop         ecx
 0048B435    pop         ebp
 0048B436    ret
end;*}

//0048B438
{*procedure TWinControl.CMFontChange(?:?);
begin
 0048B438    push        ebp
 0048B439    mov         ebp,esp
 0048B43B    add         esp,0FFFFFFF8
 0048B43E    mov         dword ptr [ebp-8],edx
 0048B441    mov         dword ptr [ebp-4],eax
 0048B444    mov         edx,dword ptr [ebp-8]
 0048B447    mov         eax,dword ptr [ebp-4]
 0048B44A    call        00487E84
 0048B44F    pop         ecx
 0048B450    pop         ecx
 0048B451    pop         ebp
 0048B452    ret
end;*}

//0048B454
{*procedure TWinControl.CMTimeChange(?:?);
begin
 0048B454    push        ebp
 0048B455    mov         ebp,esp
 0048B457    add         esp,0FFFFFFF8
 0048B45A    mov         dword ptr [ebp-8],edx
 0048B45D    mov         dword ptr [ebp-4],eax
 0048B460    mov         edx,dword ptr [ebp-8]
 0048B463    mov         eax,dword ptr [ebp-4]
 0048B466    call        00487E84
 0048B46B    pop         ecx
 0048B46C    pop         ecx
 0048B46D    pop         ebp
 0048B46E    ret
end;*}

//0048B470
{*procedure TWinControl.CMDrag(?:?);
begin
 0048B470    push        ebp
 0048B471    mov         ebp,esp
 0048B473    add         esp,0FFFFFFEC
 0048B476    mov         dword ptr [ebp-8],edx
 0048B479    mov         dword ptr [ebp-4],eax
 0048B47C    mov         eax,dword ptr [ebp-8]
 0048B47F    mov         eax,dword ptr [eax+8]
 0048B482    mov         dword ptr [ebp-0C],eax
 0048B485    mov         eax,dword ptr [ebp-8]
 0048B488    mov         al,byte ptr [eax+4]
 0048B48B    sub         al,4
>0048B48D    jb          0048B495
 0048B48F    dec         al
>0048B491    je          0048B4AE
>0048B493    jmp         0048B4E5
 0048B495    mov         eax,dword ptr [ebp-0C]
 0048B498    cmp         dword ptr [eax+0C],0
>0048B49C    je          0048B4E5
 0048B49E    mov         edx,dword ptr [ebp-8]
 0048B4A1    mov         eax,dword ptr [ebp-0C]
 0048B4A4    mov         eax,dword ptr [eax+0C]
 0048B4A7    call        004848EC
>0048B4AC    jmp         0048B4E5
 0048B4AE    push        0
 0048B4B0    lea         ecx,[ebp-14]
 0048B4B3    mov         eax,dword ptr [ebp-0C]
 0048B4B6    mov         edx,eax
 0048B4B8    mov         eax,dword ptr [ebp-4]
 0048B4BB    call        TControl.ScreenToClient
 0048B4C0    lea         edx,[ebp-14]
 0048B4C3    xor         ecx,ecx
 0048B4C5    mov         eax,dword ptr [ebp-4]
 0048B4C8    call        00488D4C
 0048B4CD    mov         edx,dword ptr [ebp-8]
 0048B4D0    mov         dword ptr [edx+0C],eax
 0048B4D3    mov         eax,dword ptr [ebp-8]
 0048B4D6    cmp         dword ptr [eax+0C],0
>0048B4DA    jne         0048B4E5
 0048B4DC    mov         eax,dword ptr [ebp-8]
 0048B4DF    mov         edx,dword ptr [ebp-4]
 0048B4E2    mov         dword ptr [eax+0C],edx
 0048B4E5    mov         esp,ebp
 0048B4E7    pop         ebp
 0048B4E8    ret
end;*}

//0048B4EC
{*procedure TWinControl.CMControlLIstChange(?:?);
begin
 0048B4EC    push        ebp
 0048B4ED    mov         ebp,esp
 0048B4EF    add         esp,0FFFFFFF8
 0048B4F2    push        ebx
 0048B4F3    mov         dword ptr [ebp-8],edx
 0048B4F6    mov         dword ptr [ebp-4],eax
 0048B4F9    mov         eax,dword ptr [ebp-4]
 0048B4FC    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048B500    je          0048B511
 0048B502    mov         edx,dword ptr [ebp-8]
 0048B505    mov         eax,dword ptr [ebp-4]
 0048B508    mov         ebx,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048B50B    mov         eax,dword ptr [ebx+3C];TWinControl.?f3C:TControl
 0048B50E    call        dword ptr [ebx+38];TWinControl.FWindowProc
 0048B511    pop         ebx
 0048B512    pop         ecx
 0048B513    pop         ecx
 0048B514    pop         ebp
 0048B515    ret
end;*}

//0048B518
{*procedure TWinControl.CMSysFontChanged(?:?);
begin
 0048B518    push        ebp
 0048B519    mov         ebp,esp
 0048B51B    add         esp,0FFFFFFF8
 0048B51E    mov         dword ptr [ebp-8],edx
 0048B521    mov         dword ptr [ebp-4],eax
 0048B524    mov         edx,dword ptr [ebp-8]
 0048B527    mov         eax,dword ptr [ebp-4]
 0048B52A    call        TControl.CMSysFontChanged
 0048B52F    mov         edx,dword ptr [ebp-8]
 0048B532    mov         eax,dword ptr [ebp-4]
 0048B535    call        00487E84
 0048B53A    pop         ecx
 0048B53B    pop         ecx
 0048B53C    pop         ebp
 0048B53D    ret
end;*}

//0048B540
{*function sub_0048B540(?:TWinControl; ?:?):?;
begin
 0048B540    push        ebp
 0048B541    mov         ebp,esp
 0048B543    add         esp,0FFFFFFE8
 0048B546    push        esi
 0048B547    mov         dword ptr [ebp-8],edx
 0048B54A    mov         dword ptr [ebp-4],eax
 0048B54D    mov         byte ptr [ebp-9],1
 0048B551    mov         eax,dword ptr [ebp-4]
 0048B554    test        byte ptr [eax+1C],10
>0048B558    jne         0048B5CA
 0048B55A    mov         eax,dword ptr [ebp-4]
 0048B55D    mov         dword ptr [ebp-10],eax
 0048B560    cmp         dword ptr [ebp-10],0
>0048B564    je          0048B5A6
 0048B566    mov         eax,dword ptr [ebp-10]
 0048B569    mov         si,0FFD6
 0048B56D    call        @CallDynaInst
 0048B572    mov         dword ptr [ebp-18],eax
 0048B575    cmp         dword ptr [ebp-18],0
>0048B579    je          0048B597
 0048B57B    mov         eax,dword ptr [ebp-18]
 0048B57E    cmp         dword ptr [eax+38],0
>0048B582    je          0048B597
 0048B584    mov         edx,dword ptr [ebp-8]
 0048B587    mov         eax,dword ptr [ebp-18]
 0048B58A    mov         si,0FFEF
 0048B58E    call        @CallDynaInst
 0048B593    test        al,al
>0048B595    jne         0048B5E9
 0048B597    mov         eax,dword ptr [ebp-10]
 0048B59A    mov         eax,dword ptr [eax+30]
 0048B59D    mov         dword ptr [ebp-10],eax
 0048B5A0    cmp         dword ptr [ebp-10],0
>0048B5A4    jne         0048B566
 0048B5A6    mov         eax,dword ptr [ebp-4]
 0048B5A9    call        004A0740
 0048B5AE    mov         dword ptr [ebp-14],eax
 0048B5B1    cmp         dword ptr [ebp-14],0
>0048B5B5    je          0048B5CA
 0048B5B7    mov         edx,dword ptr [ebp-8]
 0048B5BA    mov         eax,dword ptr [ebp-14]
 0048B5BD    mov         si,0FFAB
 0048B5C1    call        @CallDynaInst
 0048B5C6    test        al,al
>0048B5C8    jne         0048B5E9
 0048B5CA    mov         ecx,dword ptr [ebp-8]
 0048B5CD    mov         ecx,dword ptr [ecx+8]
 0048B5D0    mov         edx,dword ptr [ebp-8]
 0048B5D3    movzx       edx,word ptr [edx+4]
 0048B5D7    mov         eax,0B016
 0048B5DC    call        0047F80C
 0048B5E1    test        eax,eax
>0048B5E3    jne         0048B5E9
 0048B5E5    mov         byte ptr [ebp-9],0
 0048B5E9    mov         al,byte ptr [ebp-9]
 0048B5EC    pop         esi
 0048B5ED    mov         esp,ebp
 0048B5EF    pop         ebp
 0048B5F0    ret
end;*}

//0048B5F4
{*procedure TWinControl.sub_0048B5F4(?:?);
begin
 0048B5F4    push        ebp
 0048B5F5    mov         ebp,esp
 0048B5F7    add         esp,0FFFFFFF4
 0048B5FA    mov         dword ptr [ebp-8],edx
 0048B5FD    mov         dword ptr [ebp-4],eax
 0048B600    mov         eax,dword ptr [ebp-8]
 0048B603    mov         dword ptr [eax+0C],1
 0048B60A    mov         edx,dword ptr [ebp-8]
 0048B60D    mov         dx,word ptr [edx+4]
 0048B611    mov         eax,dword ptr [ebp-4]
 0048B614    call        0048D704
 0048B619    mov         edx,dword ptr [ebp-8]
 0048B61C    mov         eax,dword ptr [ebp-4]
 0048B61F    call        0048B540
 0048B624    test        al,al
>0048B626    jne         0048B707
 0048B62C    mov         eax,dword ptr [ebp-4]
 0048B62F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B633    jne         0048B6FF
 0048B639    mov         eax,dword ptr [ebp-4]
 0048B63C    push        eax
 0048B63D    mov         ecx,dword ptr [ebp-8]
 0048B640    movzx       ecx,word ptr [ecx+4]
 0048B644    mov         edx,0B02E
 0048B649    mov         eax,dword ptr [ebp-4]
 0048B64C    call        00484FFC
 0048B651    test        eax,eax
>0048B653    jne         0048B707
 0048B659    xor         eax,eax
 0048B65B    mov         dword ptr [ebp-0C],eax
 0048B65E    mov         eax,dword ptr [ebp-8]
 0048B661    movzx       eax,word ptr [eax+4]
 0048B665    cmp         eax,1B
>0048B668    jg          0048B67D
>0048B66A    je          0048B69E
 0048B66C    sub         eax,3
>0048B66F    je          0048B69E
 0048B671    sub         eax,6
>0048B674    je          0048B68C
 0048B676    sub         eax,4
>0048B679    je          0048B69E
>0048B67B    jmp         0048B6A5
 0048B67D    add         eax,0FFFFFFDB
 0048B680    sub         eax,4
>0048B683    jb          0048B695
 0048B685    sub         eax,2
>0048B688    je          0048B69E
>0048B68A    jmp         0048B6A5
 0048B68C    mov         dword ptr [ebp-0C],2
>0048B693    jmp         0048B6A5
 0048B695    mov         dword ptr [ebp-0C],1
>0048B69C    jmp         0048B6A5
 0048B69E    mov         dword ptr [ebp-0C],4
 0048B6A5    cmp         dword ptr [ebp-0C],0
>0048B6A9    je          0048B6FF
 0048B6AB    push        0
 0048B6AD    mov         ecx,dword ptr [ebp-8]
 0048B6B0    movzx       ecx,word ptr [ecx+4]
 0048B6B4    mov         edx,0B01E
 0048B6B9    mov         eax,dword ptr [ebp-4]
 0048B6BC    call        00484FFC
 0048B6C1    test        eax,eax
>0048B6C3    jne         0048B6FF
 0048B6C5    push        0
 0048B6C7    xor         ecx,ecx
 0048B6C9    mov         edx,87
 0048B6CE    mov         eax,dword ptr [ebp-4]
 0048B6D1    call        00484FFC
 0048B6D6    and         eax,dword ptr [ebp-0C]
>0048B6D9    jne         0048B6FF
 0048B6DB    mov         eax,dword ptr [ebp-8]
 0048B6DE    mov         eax,dword ptr [eax+8]
 0048B6E1    push        eax
 0048B6E2    mov         eax,dword ptr [ebp-4]
 0048B6E5    call        004A0740
 0048B6EA    mov         ecx,dword ptr [ebp-8]
 0048B6ED    movzx       ecx,word ptr [ecx+4]
 0048B6F1    mov         edx,0B005
 0048B6F6    call        00484FFC
 0048B6FB    test        eax,eax
>0048B6FD    jne         0048B707
 0048B6FF    mov         eax,dword ptr [ebp-8]
 0048B702    xor         edx,edx
 0048B704    mov         dword ptr [eax+0C],edx
 0048B707    mov         esp,ebp
 0048B709    pop         ebp
 0048B70A    ret
end;*}

//0048B70C
{*procedure TWinControl.sub_0048B70C(?:?);
begin
 0048B70C    push        ebp
 0048B70D    mov         ebp,esp
 0048B70F    add         esp,0FFFFFFF8
 0048B712    mov         dword ptr [ebp-8],edx
 0048B715    mov         dword ptr [ebp-4],eax
 0048B718    mov         eax,dword ptr [ebp-4]
 0048B71B    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B71F    jne         0048B769
 0048B721    mov         eax,dword ptr [ebp-8]
 0048B724    movzx       eax,word ptr [eax+4]
 0048B728    cmp         eax,1B
>0048B72B    jg          0048B740
>0048B72D    je          0048B74D
 0048B72F    sub         eax,3
>0048B732    je          0048B74D
 0048B734    sub         eax,6
>0048B737    je          0048B74D
 0048B739    sub         eax,4
>0048B73C    je          0048B74D
>0048B73E    jmp         0048B769
 0048B740    add         eax,0FFFFFFDB
 0048B743    sub         eax,4
>0048B746    jb          0048B74D
 0048B748    sub         eax,2
>0048B74B    jne         0048B769
 0048B74D    push        0
 0048B74F    mov         ecx,dword ptr [ebp-8]
 0048B752    movzx       ecx,word ptr [ecx+4]
 0048B756    mov         edx,0B01E
 0048B75B    mov         eax,dword ptr [ebp-4]
 0048B75E    call        00484FFC
 0048B763    mov         edx,dword ptr [ebp-8]
 0048B766    mov         dword ptr [edx+0C],eax
 0048B769    pop         ecx
 0048B76A    pop         ecx
 0048B76B    pop         ebp
 0048B76C    ret
end;*}

//0048B770
{*procedure TWinControl.sub_0048B770(?:?);
begin
 0048B770    push        ebp
 0048B771    mov         ebp,esp
 0048B773    add         esp,0FFFFFFF8
 0048B776    mov         dword ptr [ebp-8],edx
 0048B779    mov         dword ptr [ebp-4],eax
 0048B77C    mov         eax,dword ptr [ebp-4]
 0048B77F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B783    jne         0048B7D0
 0048B785    mov         eax,dword ptr [ebp-8]
 0048B788    mov         dword ptr [eax+0C],1
 0048B78F    push        0
 0048B791    xor         ecx,ecx
 0048B793    mov         edx,87
 0048B798    mov         eax,dword ptr [ebp-4]
 0048B79B    call        00484FFC
 0048B7A0    test        al,80
>0048B7A2    jne         0048B7C8
 0048B7A4    mov         eax,dword ptr [ebp-8]
 0048B7A7    mov         eax,dword ptr [eax+8]
 0048B7AA    push        eax
 0048B7AB    mov         eax,dword ptr [ebp-4]
 0048B7AE    call        004A0740
 0048B7B3    mov         ecx,dword ptr [ebp-8]
 0048B7B6    movzx       ecx,word ptr [ecx+4]
 0048B7BA    mov         edx,0B006
 0048B7BF    call        00484FFC
 0048B7C4    test        eax,eax
>0048B7C6    jne         0048B7D0
 0048B7C8    mov         eax,dword ptr [ebp-8]
 0048B7CB    xor         edx,edx
 0048B7CD    mov         dword ptr [eax+0C],edx
 0048B7D0    pop         ecx
 0048B7D1    pop         ecx
 0048B7D2    pop         ebp
 0048B7D3    ret
end;*}

//0048B7D4
{*procedure TWinControl.sub_0048B7D4(?:?);
begin
 0048B7D4    push        ebp
 0048B7D5    mov         ebp,esp
 0048B7D7    add         esp,0FFFFFFF8
 0048B7DA    mov         dword ptr [ebp-8],edx
 0048B7DD    mov         dword ptr [ebp-4],eax
 0048B7E0    mov         eax,dword ptr [ebp-8]
 0048B7E3    mov         dword ptr [eax+0C],1
 0048B7EA    mov         edx,dword ptr [ebp-8]
 0048B7ED    mov         eax,dword ptr [ebp-4]
 0048B7F0    call        0048B540
 0048B7F5    test        al,al
>0048B7F7    jne         0048B84A
 0048B7F9    mov         eax,dword ptr [ebp-4]
 0048B7FC    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B800    jne         0048B842
 0048B802    mov         eax,dword ptr [ebp-4]
 0048B805    push        eax
 0048B806    mov         ecx,dword ptr [ebp-8]
 0048B809    movzx       ecx,word ptr [ecx+4]
 0048B80D    mov         edx,0B02E
 0048B812    mov         eax,dword ptr [ebp-4]
 0048B815    call        00484FFC
 0048B81A    test        eax,eax
>0048B81C    jne         0048B84A
 0048B81E    mov         eax,dword ptr [ebp-8]
 0048B821    mov         eax,dword ptr [eax+8]
 0048B824    push        eax
 0048B825    mov         eax,dword ptr [ebp-4]
 0048B828    call        004A0740
 0048B82D    mov         ecx,dword ptr [ebp-8]
 0048B830    movzx       ecx,word ptr [ecx+4]
 0048B834    mov         edx,0B005
 0048B839    call        00484FFC
 0048B83E    test        eax,eax
>0048B840    jne         0048B84A
 0048B842    mov         eax,dword ptr [ebp-8]
 0048B845    xor         edx,edx
 0048B847    mov         dword ptr [eax+0C],edx
 0048B84A    pop         ecx
 0048B84B    pop         ecx
 0048B84C    pop         ebp
 0048B84D    ret
end;*}

//0048B850
{*procedure TWinControl.sub_0048B850(?:?);
begin
 0048B850    push        ebp
 0048B851    mov         ebp,esp
 0048B853    add         esp,0FFFFFFF8
 0048B856    mov         dword ptr [ebp-8],edx
 0048B859    mov         dword ptr [ebp-4],eax
 0048B85C    mov         eax,dword ptr [ebp-4]
 0048B85F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048B863    jne         0048B895
 0048B865    mov         eax,dword ptr [ebp-8]
 0048B868    cmp         word ptr [eax+4],20
>0048B86D    je          0048B895
 0048B86F    mov         eax,dword ptr [ebp-8]
 0048B872    mov         eax,dword ptr [eax+8]
 0048B875    push        eax
 0048B876    mov         eax,dword ptr [ebp-4]
 0048B879    call        004A0740
 0048B87E    mov         ecx,dword ptr [ebp-8]
 0048B881    movzx       ecx,word ptr [ecx+4]
 0048B885    mov         edx,0B006
 0048B88A    call        00484FFC
 0048B88F    mov         edx,dword ptr [ebp-8]
 0048B892    mov         dword ptr [edx+0C],eax
 0048B895    pop         ecx
 0048B896    pop         ecx
 0048B897    pop         ebp
 0048B898    ret
end;*}

//0048B89C
{*procedure sub_0048B89C(?:?; ?:?; ?:?; ?:?);
begin
 0048B89C    push        ebp
 0048B89D    mov         ebp,esp
 0048B89F    add         esp,0FFFFFFB8
 0048B8A2    push        esi
 0048B8A3    push        edi
 0048B8A4    mov         dword ptr [ebp-0C],ecx
 0048B8A7    mov         dword ptr [ebp-8],edx
 0048B8AA    mov         dword ptr [ebp-4],eax
 0048B8AD    mov         eax,dword ptr [ebp-8]
 0048B8B0    mov         edx,dword ptr [ebp-4]
 0048B8B3    cmp         eax,dword ptr [edx+40];TWinControl.Left:Integer
>0048B8B6    jne         0048B8DD
 0048B8B8    mov         eax,dword ptr [ebp-0C]
 0048B8BB    mov         edx,dword ptr [ebp-4]
 0048B8BE    cmp         eax,dword ptr [edx+44];TWinControl.Top:Integer
>0048B8C1    jne         0048B8DD
 0048B8C3    mov         eax,dword ptr [ebp+0C]
 0048B8C6    mov         edx,dword ptr [ebp-4]
 0048B8C9    cmp         eax,dword ptr [edx+48];TWinControl.Width:Integer
>0048B8CC    jne         0048B8DD
 0048B8CE    mov         eax,dword ptr [ebp+8]
 0048B8D1    mov         edx,dword ptr [ebp-4]
 0048B8D4    cmp         eax,dword ptr [edx+4C];TWinControl.Height:Integer
>0048B8D7    je          0048B9A7
 0048B8DD    mov         eax,dword ptr [ebp-4]
 0048B8E0    call        TWinControl.HandleAllocated
 0048B8E5    test        al,al
>0048B8E7    je          0048B921
 0048B8E9    mov         eax,dword ptr [ebp-4]
 0048B8EC    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B8F2    push        eax
 0048B8F3    call        user32.IsIconic
 0048B8F8    test        eax,eax
>0048B8FA    jne         0048B921
 0048B8FC    push        14
 0048B8FE    mov         eax,dword ptr [ebp+8]
 0048B901    push        eax
 0048B902    mov         eax,dword ptr [ebp+0C]
 0048B905    push        eax
 0048B906    mov         eax,dword ptr [ebp-0C]
 0048B909    push        eax
 0048B90A    mov         eax,dword ptr [ebp-8]
 0048B90D    push        eax
 0048B90E    push        0
 0048B910    mov         eax,dword ptr [ebp-4]
 0048B913    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B919    push        eax
 0048B91A    call        user32.SetWindowPos
>0048B91F    jmp         0048B993
 0048B921    mov         eax,dword ptr [ebp-8]
 0048B924    mov         edx,dword ptr [ebp-4]
 0048B927    mov         dword ptr [edx+40],eax;TWinControl.Left:Integer
 0048B92A    mov         eax,dword ptr [ebp-0C]
 0048B92D    mov         edx,dword ptr [ebp-4]
 0048B930    mov         dword ptr [edx+44],eax;TWinControl.Top:Integer
 0048B933    mov         eax,dword ptr [ebp+0C]
 0048B936    mov         edx,dword ptr [ebp-4]
 0048B939    mov         dword ptr [edx+48],eax;TWinControl.Width:Integer
 0048B93C    mov         eax,dword ptr [ebp+8]
 0048B93F    mov         edx,dword ptr [ebp-4]
 0048B942    mov         dword ptr [edx+4C],eax;TWinControl.Height:Integer
 0048B945    mov         eax,dword ptr [ebp-4]
 0048B948    call        TWinControl.HandleAllocated
 0048B94D    test        al,al
>0048B94F    je          0048B993
 0048B951    mov         dword ptr [ebp-38],2C
 0048B958    lea         eax,[ebp-38]
 0048B95B    push        eax
 0048B95C    mov         eax,dword ptr [ebp-4]
 0048B95F    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B965    push        eax
 0048B966    call        user32.GetWindowPlacement
 0048B96B    lea         edx,[ebp-48]
 0048B96E    mov         eax,dword ptr [ebp-4]
 0048B971    call        00482ECC
 0048B976    lea         esi,[ebp-48]
 0048B979    lea         edi,[ebp-1C]
 0048B97C    movs        dword ptr [edi],dword ptr [esi]
 0048B97D    movs        dword ptr [edi],dword ptr [esi]
 0048B97E    movs        dword ptr [edi],dword ptr [esi]
 0048B97F    movs        dword ptr [edi],dword ptr [esi]
 0048B980    lea         eax,[ebp-38]
 0048B983    push        eax
 0048B984    mov         eax,dword ptr [ebp-4]
 0048B987    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048B98D    push        eax
 0048B98E    call        user32.SetWindowPlacement
 0048B993    mov         eax,dword ptr [ebp-4]
 0048B996    call        00482A00
 0048B99B    mov         eax,dword ptr [ebp-4]
 0048B99E    mov         si,0FFD0
 0048B9A2    call        @CallDynaInst;TControl.sub_004826F8
 0048B9A7    pop         edi
 0048B9A8    pop         esi
 0048B9A9    mov         esp,ebp
 0048B9AB    pop         ebp
 0048B9AC    ret         8
end;*}

//0048B9B0
{*procedure sub_0048B9B0(?:TWinControl; ?:?; ?:Integer);
begin
 0048B9B0    push        ebp
 0048B9B1    mov         ebp,esp
 0048B9B3    add         esp,0FFFFFFEC
 0048B9B6    push        esi
 0048B9B7    mov         dword ptr [ebp-0C],ecx
 0048B9BA    mov         dword ptr [ebp-8],edx
 0048B9BD    mov         dword ptr [ebp-4],eax
 0048B9C0    mov         eax,dword ptr [ebp-4]
 0048B9C3    call        00487E38
 0048B9C8    dec         eax
 0048B9C9    test        eax,eax
>0048B9CB    jl          0048B9FA
 0048B9CD    inc         eax
 0048B9CE    mov         dword ptr [ebp-14],eax
 0048B9D1    mov         dword ptr [ebp-10],0
 0048B9D8    mov         edx,dword ptr [ebp-10]
 0048B9DB    mov         eax,dword ptr [ebp-4]
 0048B9DE    call        00487DCC
 0048B9E3    mov         ecx,dword ptr [ebp-0C]
 0048B9E6    mov         edx,dword ptr [ebp-8]
 0048B9E9    mov         si,0FFEC
 0048B9ED    call        @CallDynaInst
 0048B9F2    inc         dword ptr [ebp-10]
 0048B9F5    dec         dword ptr [ebp-14]
>0048B9F8    jne         0048B9D8
 0048B9FA    pop         esi
 0048B9FB    mov         esp,ebp
 0048B9FD    pop         ebp
 0048B9FE    ret
end;*}

//0048BA00
{*procedure TWinControl.sub_00483238(?:?; ?:?);
begin
 0048BA00    push        ebp
 0048BA01    mov         ebp,esp
 0048BA03    add         esp,0FFFFFFF4
 0048BA06    mov         dword ptr [ebp-0C],ecx
 0048BA09    mov         dword ptr [ebp-8],edx
 0048BA0C    mov         dword ptr [ebp-4],eax
 0048BA0F    mov         eax,dword ptr [ebp-4]
 0048BA12    call        TWinControl.DisableAlign
 0048BA17    xor         eax,eax
 0048BA19    push        ebp
 0048BA1A    push        48BAB4
 0048BA1F    push        dword ptr fs:[eax]
 0048BA22    mov         dword ptr fs:[eax],esp
 0048BA25    mov         ecx,dword ptr [ebp-0C]
 0048BA28    mov         edx,dword ptr [ebp-8]
 0048BA2B    mov         eax,dword ptr [ebp-4]
 0048BA2E    call        0048B9B0
 0048BA33    mov         eax,dword ptr [ebp-8]
 0048BA36    cmp         eax,dword ptr [ebp-0C]
>0048BA39    je          0048BA90
 0048BA3B    mov         eax,dword ptr [ebp-4]
 0048BA3E    test        byte ptr [eax+1C],2;TWinControl.FComponentState:TComponentState
>0048BA42    je          0048BA90
 0048BA44    mov         eax,dword ptr [ebp-4]
 0048BA47    test        byte ptr [eax+98],20;TWinControl.FScalingFlags:TScalingFlags
>0048BA4E    je          0048BA90
 0048BA50    mov         eax,dword ptr [ebp-0C]
 0048BA53    push        eax
 0048BA54    mov         eax,dword ptr [ebp-8]
 0048BA57    push        eax
 0048BA58    mov         eax,dword ptr [ebp-4]
 0048BA5B    mov         eax,dword ptr [eax+1FA];TWinControl.FDesignSize:TPoint
 0048BA61    push        eax
 0048BA62    call        kernel32.MulDiv
 0048BA67    mov         edx,dword ptr [ebp-4]
 0048BA6A    mov         dword ptr [edx+1FA],eax;TWinControl.FDesignSize:TPoint
 0048BA70    mov         eax,dword ptr [ebp-0C]
 0048BA73    push        eax
 0048BA74    mov         eax,dword ptr [ebp-8]
 0048BA77    push        eax
 0048BA78    mov         eax,dword ptr [ebp-4]
 0048BA7B    mov         eax,dword ptr [eax+1FE]
 0048BA81    push        eax
 0048BA82    call        kernel32.MulDiv
 0048BA87    mov         edx,dword ptr [ebp-4]
 0048BA8A    mov         dword ptr [edx+1FE],eax
 0048BA90    mov         ecx,dword ptr [ebp-0C]
 0048BA93    mov         edx,dword ptr [ebp-8]
 0048BA96    mov         eax,dword ptr [ebp-4]
 0048BA99    call        TControl.sub_00483238
 0048BA9E    xor         eax,eax
 0048BAA0    pop         edx
 0048BAA1    pop         ecx
 0048BAA2    pop         ecx
 0048BAA3    mov         dword ptr fs:[eax],edx
 0048BAA6    push        48BABB
 0048BAAB    mov         eax,dword ptr [ebp-4]
 0048BAAE    call        TWinControl.EnableAlign
 0048BAB3    ret
>0048BAB4    jmp         @HandleFinally
>0048BAB9    jmp         0048BAAB
 0048BABB    mov         esp,ebp
 0048BABD    pop         ebp
 0048BABE    ret
end;*}

//0048BAC0
{*procedure sub_0048BAC0(?:TScrollingWinControl; ?:?; ?:?);
begin
 0048BAC0    push        ebp
 0048BAC1    mov         ebp,esp
 0048BAC3    add         esp,0FFFFFFE4
 0048BAC6    mov         dword ptr [ebp-0C],ecx
 0048BAC9    mov         dword ptr [ebp-8],edx
 0048BACC    mov         dword ptr [ebp-4],eax
 0048BACF    mov         eax,dword ptr [ebp-4]
 0048BAD2    cmp         dword ptr [eax+180],0
>0048BAD9    je          0048BAEE
 0048BADB    mov         eax,dword ptr [ebp-4]
 0048BADE    mov         eax,dword ptr [eax+180]
 0048BAE4    push        eax
 0048BAE5    call        user32.IsWindowVisible
 0048BAEA    test        eax,eax
>0048BAEC    jne         0048BAF2
 0048BAEE    xor         eax,eax
>0048BAF0    jmp         0048BAF4
 0048BAF2    mov         al,1
 0048BAF4    mov         byte ptr [ebp-0D],al
 0048BAF7    cmp         byte ptr [ebp-0D],0
>0048BAFB    je          0048BB18
 0048BAFD    push        0
 0048BAFF    push        0
 0048BB01    mov         eax,dword ptr [ebp-0C]
 0048BB04    push        eax
 0048BB05    mov         eax,dword ptr [ebp-8]
 0048BB08    push        eax
 0048BB09    mov         eax,dword ptr [ebp-4]
 0048BB0C    mov         eax,dword ptr [eax+180]
 0048BB12    push        eax
 0048BB13    call        user32.ScrollWindow
 0048BB18    mov         eax,dword ptr [ebp-4]
 0048BB1B    call        00487E38
 0048BB20    dec         eax
 0048BB21    test        eax,eax
>0048BB23    jl          0048BBBB
 0048BB29    inc         eax
 0048BB2A    mov         dword ptr [ebp-1C],eax
 0048BB2D    mov         dword ptr [ebp-14],0
 0048BB34    mov         edx,dword ptr [ebp-14]
 0048BB37    mov         eax,dword ptr [ebp-4]
 0048BB3A    call        00487DCC
 0048BB3F    mov         dword ptr [ebp-18],eax
 0048BB42    mov         eax,dword ptr [ebp-18]
 0048BB45    mov         edx,dword ptr ds:[47E678];TWinControl
 0048BB4B    call        @IsClass
 0048BB50    test        al,al
>0048BB52    je          0048BB60
 0048BB54    mov         eax,dword ptr [ebp-18]
 0048BB57    cmp         dword ptr [eax+180],0
>0048BB5E    jne         0048BB74
 0048BB60    mov         eax,dword ptr [ebp-8]
 0048BB63    mov         edx,dword ptr [ebp-18]
 0048BB66    add         dword ptr [edx+40],eax
 0048BB69    mov         eax,dword ptr [ebp-0C]
 0048BB6C    mov         edx,dword ptr [ebp-18]
 0048BB6F    add         dword ptr [edx+44],eax
>0048BB72    jmp         0048BBAF
 0048BB74    cmp         byte ptr [ebp-0D],0
>0048BB78    jne         0048BBAF
 0048BB7A    push        14
 0048BB7C    mov         eax,dword ptr [ebp-18]
 0048BB7F    mov         eax,dword ptr [eax+4C]
 0048BB82    push        eax
 0048BB83    mov         eax,dword ptr [ebp-18]
 0048BB86    mov         eax,dword ptr [eax+48]
 0048BB89    push        eax
 0048BB8A    mov         eax,dword ptr [ebp-18]
 0048BB8D    mov         eax,dword ptr [eax+44]
 0048BB90    add         eax,dword ptr [ebp-0C]
 0048BB93    push        eax
 0048BB94    mov         eax,dword ptr [ebp-18]
 0048BB97    mov         eax,dword ptr [eax+40]
 0048BB9A    add         eax,dword ptr [ebp-8]
 0048BB9D    push        eax
 0048BB9E    push        0
 0048BBA0    mov         eax,dword ptr [ebp-18]
 0048BBA3    mov         eax,dword ptr [eax+180]
 0048BBA9    push        eax
 0048BBAA    call        user32.SetWindowPos
 0048BBAF    inc         dword ptr [ebp-14]
 0048BBB2    dec         dword ptr [ebp-1C]
>0048BBB5    jne         0048BB34
 0048BBBB    mov         eax,dword ptr [ebp-4]
 0048BBBE    call        004878BC
 0048BBC3    mov         esp,ebp
 0048BBC5    pop         ebp
 0048BBC6    ret
end;*}

//0048BBC8
{*procedure sub_0048BBC8(?:?);
begin
 0048BBC8    push        ebp
 0048BBC9    mov         ebp,esp
 0048BBCB    add         esp,0FFFFFFF8
 0048BBCE    mov         dword ptr [ebp-8],edx
 0048BBD1    mov         dword ptr [ebp-4],eax
 0048BBD4    mov         eax,dword ptr [ebp-4]
 0048BBD7    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048BBDB    je          0048BBEE
 0048BBDD    mov         edx,dword ptr [ebp-4]
 0048BBE0    mov         eax,dword ptr [ebp-4]
 0048BBE3    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048BBE6    mov         ecx,dword ptr [eax]
 0048BBE8    call        dword ptr [ecx+0C0];TWinControl.sub_0048BBC8
 0048BBEE    pop         ecx
 0048BBEF    pop         ecx
 0048BBF0    pop         ebp
 0048BBF1    ret
end;*}

//0048BBF4
{*procedure sub_0048BBF4(?:TWinControl; ?:?);
begin
 0048BBF4    push        ebp
 0048BBF5    mov         ebp,esp
 0048BBF7    add         esp,0FFFFFFEC
 0048BBFA    mov         dword ptr [ebp-8],edx
 0048BBFD    mov         dword ptr [ebp-4],eax
 0048BC00    mov         eax,dword ptr [ebp-4]
 0048BC03    cmp         dword ptr [eax+30],0
>0048BC07    je          0048BD4D
 0048BC0D    mov         eax,dword ptr [ebp-4]
 0048BC10    mov         eax,dword ptr [eax+30]
 0048BC13    cmp         dword ptr [eax+198],0
>0048BC1A    je          0048BC2E
 0048BC1C    mov         eax,dword ptr [ebp-4]
 0048BC1F    mov         eax,dword ptr [eax+30]
 0048BC22    mov         eax,dword ptr [eax+198]
 0048BC28    mov         eax,dword ptr [eax+8]
 0048BC2B    sub         dword ptr [ebp-8],eax
 0048BC2E    mov         eax,dword ptr [ebp-4]
 0048BC31    mov         eax,dword ptr [eax+30]
 0048BC34    mov         eax,dword ptr [eax+19C]
 0048BC3A    mov         edx,dword ptr [ebp-4]
 0048BC3D    call        004202BC
 0048BC42    mov         dword ptr [ebp-0C],eax
 0048BC45    cmp         dword ptr [ebp-0C],0
>0048BC49    jl          0048BCAA
 0048BC4B    mov         eax,dword ptr [ebp-4]
 0048BC4E    mov         eax,dword ptr [eax+30]
 0048BC51    mov         eax,dword ptr [eax+19C]
 0048BC57    mov         eax,dword ptr [eax+8]
 0048BC5A    mov         dword ptr [ebp-10],eax
 0048BC5D    cmp         dword ptr [ebp-8],0
>0048BC61    jge         0048BC68
 0048BC63    xor         eax,eax
 0048BC65    mov         dword ptr [ebp-8],eax
 0048BC68    mov         eax,dword ptr [ebp-8]
 0048BC6B    cmp         eax,dword ptr [ebp-10]
>0048BC6E    jl          0048BC77
 0048BC70    mov         eax,dword ptr [ebp-10]
 0048BC73    dec         eax
 0048BC74    mov         dword ptr [ebp-8],eax
 0048BC77    mov         eax,dword ptr [ebp-8]
 0048BC7A    cmp         eax,dword ptr [ebp-0C]
>0048BC7D    je          0048BCAA
 0048BC7F    mov         eax,dword ptr [ebp-4]
 0048BC82    mov         eax,dword ptr [eax+30]
 0048BC85    mov         eax,dword ptr [eax+19C]
 0048BC8B    mov         edx,dword ptr [ebp-0C]
 0048BC8E    call        00420094
 0048BC93    mov         eax,dword ptr [ebp-4]
 0048BC96    mov         eax,dword ptr [eax+30]
 0048BC99    mov         eax,dword ptr [eax+19C]
 0048BC9F    mov         ecx,dword ptr [ebp-4]
 0048BCA2    mov         edx,dword ptr [ebp-8]
 0048BCA5    call        00420308
 0048BCAA    mov         eax,dword ptr [ebp-4]
 0048BCAD    cmp         dword ptr [eax+180],0
>0048BCB4    je          0048BD4D
 0048BCBA    cmp         dword ptr [ebp-8],0
>0048BCBE    jne         0048BCC9
 0048BCC0    mov         dword ptr [ebp-14],1
>0048BCC7    jmp         0048BD30
 0048BCC9    mov         eax,dword ptr [ebp-4]
 0048BCCC    mov         eax,dword ptr [eax+30]
 0048BCCF    mov         eax,dword ptr [eax+19C]
 0048BCD5    mov         eax,dword ptr [eax+8]
 0048BCD8    dec         eax
 0048BCD9    cmp         eax,dword ptr [ebp-8]
>0048BCDC    jne         0048BCE5
 0048BCDE    xor         eax,eax
 0048BCE0    mov         dword ptr [ebp-14],eax
>0048BCE3    jmp         0048BD30
 0048BCE5    mov         eax,dword ptr [ebp-8]
 0048BCE8    cmp         eax,dword ptr [ebp-0C]
>0048BCEB    jle         0048BD0C
 0048BCED    mov         edx,dword ptr [ebp-8]
 0048BCF0    inc         edx
 0048BCF1    mov         eax,dword ptr [ebp-4]
 0048BCF4    mov         eax,dword ptr [eax+30]
 0048BCF7    mov         eax,dword ptr [eax+19C]
 0048BCFD    call        TList.Get
 0048BD02    call        TWinControl.GetHandle
 0048BD07    mov         dword ptr [ebp-14],eax
>0048BD0A    jmp         0048BD30
 0048BD0C    mov         eax,dword ptr [ebp-8]
 0048BD0F    cmp         eax,dword ptr [ebp-0C]
>0048BD12    jge         0048BD4D
 0048BD14    mov         eax,dword ptr [ebp-4]
 0048BD17    mov         eax,dword ptr [eax+30]
 0048BD1A    mov         eax,dword ptr [eax+19C]
 0048BD20    mov         edx,dword ptr [ebp-8]
 0048BD23    call        TList.Get
 0048BD28    call        TWinControl.GetHandle
 0048BD2D    mov         dword ptr [ebp-14],eax
 0048BD30    push        3
 0048BD32    push        0
 0048BD34    push        0
 0048BD36    push        0
 0048BD38    push        0
 0048BD3A    mov         eax,dword ptr [ebp-14]
 0048BD3D    push        eax
 0048BD3E    mov         eax,dword ptr [ebp-4]
 0048BD41    mov         eax,dword ptr [eax+180]
 0048BD47    push        eax
 0048BD48    call        user32.SetWindowPos
 0048BD4D    mov         esp,ebp
 0048BD4F    pop         ebp
 0048BD50    ret
end;*}

//0048BD54
{*procedure TWinControl.sub_00483CD4(?:?);
begin
 0048BD54    push        ebp
 0048BD55    mov         ebp,esp
 0048BD57    add         esp,0FFFFFFF0
 0048BD5A    mov         byte ptr [ebp-5],dl
 0048BD5D    mov         dword ptr [ebp-4],eax
 0048BD60    mov         eax,dword ptr [ebp-4]
 0048BD63    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048BD67    je          0048BDBF
 0048BD69    cmp         byte ptr [ebp-5],0
>0048BD6D    je          0048BD84
 0048BD6F    mov         eax,dword ptr [ebp-4]
 0048BD72    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048BD75    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 0048BD7B    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048BD7E    dec         eax
 0048BD7F    mov         dword ptr [ebp-0C],eax
>0048BD82    jmp         0048BD89
 0048BD84    xor         eax,eax
 0048BD86    mov         dword ptr [ebp-0C],eax
 0048BD89    xor         eax,eax
 0048BD8B    mov         dword ptr [ebp-10],eax
 0048BD8E    mov         eax,dword ptr [ebp-4]
 0048BD91    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048BD94    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>0048BD9B    je          0048BDAF
 0048BD9D    mov         eax,dword ptr [ebp-4]
 0048BDA0    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048BDA3    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 0048BDA9    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048BDAC    mov         dword ptr [ebp-10],eax
 0048BDAF    mov         edx,dword ptr [ebp-10]
 0048BDB2    add         edx,dword ptr [ebp-0C]
 0048BDB5    mov         eax,dword ptr [ebp-4]
 0048BDB8    call        0048BBF4
>0048BDBD    jmp         0048BDF2
 0048BDBF    mov         eax,dword ptr [ebp-4]
 0048BDC2    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>0048BDC9    je          0048BDF2
 0048BDCB    push        3
 0048BDCD    push        0
 0048BDCF    push        0
 0048BDD1    push        0
 0048BDD3    push        0
 0048BDD5    xor         eax,eax
 0048BDD7    mov         al,byte ptr [ebp-5]
 0048BDDA    movzx       eax,word ptr [eax*2+56C83C]
 0048BDE2    push        eax
 0048BDE3    mov         eax,dword ptr [ebp-4]
 0048BDE6    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048BDEC    push        eax
 0048BDED    call        user32.SetWindowPos
 0048BDF2    mov         esp,ebp
 0048BDF4    pop         ebp
 0048BDF5    ret
end;*}

//0048BDF8
{*function sub_0048BDF8(?:?):?;
begin
 0048BDF8    push        ebp
 0048BDF9    mov         ebp,esp
 0048BDFB    add         esp,0FFFFFFF4
 0048BDFE    mov         dword ptr [ebp-8],edx
 0048BE01    mov         dword ptr [ebp-4],eax
 0048BE04    mov         eax,dword ptr [ebp-4]
 0048BE07    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048BE0B    je          0048BE24
 0048BE0D    push        12
 0048BE0F    push        0
 0048BE11    mov         eax,dword ptr [ebp-4]
 0048BE14    call        TWinControl.GetHandle
 0048BE19    push        eax
 0048BE1A    call        user32.GetDCEx
 0048BE1F    mov         dword ptr [ebp-0C],eax
>0048BE22    jmp         0048BE35
 0048BE24    mov         eax,dword ptr [ebp-4]
 0048BE27    call        TWinControl.GetHandle
 0048BE2C    push        eax
 0048BE2D    call        user32.GetDC
 0048BE32    mov         dword ptr [ebp-0C],eax
 0048BE35    cmp         dword ptr [ebp-0C],0
>0048BE39    jne         0048BE52
 0048BE3B    mov         ecx,dword ptr ds:[56E38C];^SWindowDCError:TResStringRec
 0048BE41    mov         dl,1
 0048BE43    mov         eax,[0041D3B0];EOutOfResources
 0048BE48    call        Exception.Create;EOutOfResources.Create
 0048BE4D    call        @RaiseExcept
 0048BE52    mov         eax,dword ptr [ebp-8]
 0048BE55    mov         edx,dword ptr [ebp-4]
 0048BE58    mov         edx,dword ptr [edx+180];TWinControl.FHandle:HWND
 0048BE5E    mov         dword ptr [eax],edx
 0048BE60    mov         eax,dword ptr [ebp-0C]
 0048BE63    mov         esp,ebp
 0048BE65    pop         ebp
 0048BE66    ret
end;*}

//0048BE68
procedure sub_0048BE68;
begin
{*
 0048BE68    push        ebp
 0048BE69    mov         ebp,esp
 0048BE6B    push        ecx
 0048BE6C    mov         dword ptr [ebp-4],eax
 0048BE6F    push        0
 0048BE71    xor         ecx,ecx
 0048BE73    mov         edx,0B034
 0048BE78    mov         eax,dword ptr [ebp-4]
 0048BE7B    call        00484FFC
 0048BE80    pop         ecx
 0048BE81    pop         ebp
 0048BE82    ret
*}
end;

//0048BE84
{*procedure TWinControl.CMInvalidate(?:?);
begin
 0048BE84    push        ebp
 0048BE85    mov         ebp,esp
 0048BE87    add         esp,0FFFFFFF0
 0048BE8A    mov         dword ptr [ebp-8],edx
 0048BE8D    mov         dword ptr [ebp-4],eax
 0048BE90    mov         eax,dword ptr [ebp-4]
 0048BE93    call        TWinControl.HandleAllocated
 0048BE98    test        al,al
>0048BE9A    je          0048BF3A
 0048BEA0    mov         eax,dword ptr [ebp-4]
 0048BEA3    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048BEA7    je          0048BEC0
 0048BEA9    push        0
 0048BEAB    mov         ecx,1
 0048BEB0    mov         edx,0B034
 0048BEB5    mov         eax,dword ptr [ebp-4]
 0048BEB8    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048BEBB    call        00484FFC
 0048BEC0    mov         eax,dword ptr [ebp-8]
 0048BEC3    cmp         dword ptr [eax+4],0
>0048BEC7    jne         0048BF3A
 0048BEC9    mov         eax,dword ptr [ebp-4]
 0048BECC    test        byte ptr [eax+50],40;TWinControl.FControlStyle:TControlStyle
 0048BED0    setne       al
 0048BED3    xor         al,1
 0048BED5    neg         al
 0048BED7    sbb         eax,eax
 0048BED9    push        eax
 0048BEDA    push        0
 0048BEDC    mov         eax,dword ptr [ebp-4]
 0048BEDF    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048BEE5    push        eax
 0048BEE6    call        user32.InvalidateRect
 0048BEEB    call        0046BFC0
 0048BEF0    call        0046C0EC
 0048BEF5    test        al,al
>0048BEF7    je          0048BF3A
 0048BEF9    mov         eax,dword ptr [ebp-4]
 0048BEFC    call        00487E38
 0048BF01    dec         eax
 0048BF02    test        eax,eax
>0048BF04    jl          0048BF3A
 0048BF06    inc         eax
 0048BF07    mov         dword ptr [ebp-10],eax
 0048BF0A    mov         dword ptr [ebp-0C],0
 0048BF11    mov         edx,dword ptr [ebp-0C]
 0048BF14    mov         eax,dword ptr [ebp-4]
 0048BF17    call        00487DCC
 0048BF1C    test        byte ptr [eax+52],4
>0048BF20    je          0048BF32
 0048BF22    mov         edx,dword ptr [ebp-0C]
 0048BF25    mov         eax,dword ptr [ebp-4]
 0048BF28    call        00487DCC
 0048BF2D    mov         edx,dword ptr [eax]
 0048BF2F    call        dword ptr [edx+7C]
 0048BF32    inc         dword ptr [ebp-0C]
 0048BF35    dec         dword ptr [ebp-10]
>0048BF38    jne         0048BF11
 0048BF3A    mov         esp,ebp
 0048BF3C    pop         ebp
 0048BF3D    ret
end;*}

//0048BF40
procedure sub_0048BF40;
begin
{*
 0048BF40    push        ebp
 0048BF41    mov         ebp,esp
 0048BF43    push        ecx
 0048BF44    mov         dword ptr [ebp-4],eax
 0048BF47    mov         eax,dword ptr [ebp-4]
 0048BF4A    call        TWinControl.HandleAllocated
 0048BF4F    test        al,al
>0048BF51    je          0048BF62
 0048BF53    mov         eax,dword ptr [ebp-4]
 0048BF56    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048BF5C    push        eax
 0048BF5D    call        user32.UpdateWindow
 0048BF62    pop         ecx
 0048BF63    pop         ebp
 0048BF64    ret
*}
end;

//0048BF68
procedure sub_0048BF68;
begin
{*
 0048BF68    push        ebp
 0048BF69    mov         ebp,esp
 0048BF6B    push        ecx
 0048BF6C    mov         dword ptr [ebp-4],eax
 0048BF6F    mov         eax,dword ptr [ebp-4]
 0048BF72    mov         edx,dword ptr [eax]
 0048BF74    call        dword ptr [edx+7C];TWinControl.sub_0048BE68
 0048BF77    mov         eax,dword ptr [ebp-4]
 0048BF7A    mov         edx,dword ptr [eax]
 0048BF7C    call        dword ptr [edx+88];TWinControl.sub_0048BF40
 0048BF82    pop         ecx
 0048BF83    pop         ebp
 0048BF84    ret
*}
end;

//0048BF88
procedure sub_0048BF88(?:TWinControl);
begin
{*
 0048BF88    push        ebp
 0048BF89    mov         ebp,esp
 0048BF8B    add         esp,0FFFFFFEC
 0048BF8E    mov         dword ptr [ebp-4],eax
 0048BF91    lea         edx,[ebp-14]
 0048BF94    mov         eax,dword ptr [ebp-4]
 0048BF97    call        00482ECC
 0048BF9C    push        1
 0048BF9E    push        1
 0048BFA0    lea         eax,[ebp-14]
 0048BFA3    push        eax
 0048BFA4    call        user32.InflateRect
 0048BFA9    push        0FF
 0048BFAB    lea         eax,[ebp-14]
 0048BFAE    push        eax
 0048BFAF    mov         eax,dword ptr [ebp-4]
 0048BFB2    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048BFB5    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048BFBB    push        eax
 0048BFBC    call        user32.InvalidateRect
 0048BFC1    mov         esp,ebp
 0048BFC3    pop         ebp
 0048BFC4    ret
*}
end;

//0048BFC8
procedure TWinControl.sub_0048BFC8;
begin
{*
 0048BFC8    push        ebp
 0048BFC9    mov         ebp,esp
 0048BFCB    add         esp,0FFFFFFF0
 0048BFCE    mov         dword ptr [ebp-4],eax
 0048BFD1    mov         byte ptr [ebp-5],0
 0048BFD5    mov         eax,dword ptr [ebp-4]
 0048BFD8    call        004A0740
 0048BFDD    mov         dword ptr [ebp-10],eax
 0048BFE0    cmp         dword ptr [ebp-10],0
>0048BFE4    je          0048C01E
 0048BFE6    mov         eax,dword ptr [ebp-4]
 0048BFE9    mov         dword ptr [ebp-0C],eax
 0048BFEC    mov         eax,dword ptr [ebp-0C]
 0048BFEF    cmp         eax,dword ptr [ebp-10]
>0048BFF2    je          0048C01A
 0048BFF4    mov         eax,dword ptr [ebp-0C]
 0048BFF7    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>0048BFFB    je          0048C01E
 0048BFFD    mov         eax,dword ptr [ebp-0C]
 0048C000    mov         edx,dword ptr [eax]
 0048C002    call        dword ptr [edx+50];TImage.GetEnabled
 0048C005    test        al,al
>0048C007    je          0048C01E
 0048C009    mov         eax,dword ptr [ebp-0C]
 0048C00C    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048C00F    mov         dword ptr [ebp-0C],eax
 0048C012    mov         eax,dword ptr [ebp-0C]
 0048C015    cmp         eax,dword ptr [ebp-10]
>0048C018    jne         0048BFF4
 0048C01A    mov         byte ptr [ebp-5],1
 0048C01E    mov         al,byte ptr [ebp-5]
 0048C021    mov         esp,ebp
 0048C023    pop         ebp
 0048C024    ret
*}
end;

//0048C028
procedure sub_0048C028;
begin
{*
 0048C028    push        ebp
 0048C029    mov         ebp,esp
 0048C02B    add         esp,0FFFFFFF8
 0048C02E    mov         dword ptr [ebp-4],eax
 0048C031    mov         eax,dword ptr [ebp-4]
 0048C034    call        004A0740
 0048C039    mov         dword ptr [ebp-8],eax
 0048C03C    cmp         dword ptr [ebp-8],0
>0048C040    je          0048C04F
 0048C042    mov         edx,dword ptr [ebp-4]
 0048C045    mov         eax,dword ptr [ebp-8]
 0048C048    call        004A53CC
>0048C04D    jmp         0048C073
 0048C04F    mov         eax,dword ptr [ebp-4]
 0048C052    cmp         dword ptr [eax+190],0;TWinControl.FParentWindow:HWND
>0048C059    je          0048C06B
 0048C05B    mov         eax,dword ptr [ebp-4]
 0048C05E    call        TWinControl.GetHandle
 0048C063    push        eax
 0048C064    call        user32.SetFocus
>0048C069    jmp         0048C073
 0048C06B    mov         eax,dword ptr [ebp-4]
 0048C06E    call        004A0784
 0048C073    pop         ecx
 0048C074    pop         ecx
 0048C075    pop         ebp
 0048C076    ret
*}
end;

//0048C078
procedure TWinControl.sub_0048C078;
begin
{*
 0048C078    push        ebp
 0048C079    mov         ebp,esp
 0048C07B    add         esp,0FFFFFFF8
 0048C07E    mov         dword ptr [ebp-4],eax
 0048C081    mov         eax,dword ptr [ebp-4]
 0048C084    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>0048C08B    je          0048C09D
 0048C08D    call        user32.GetFocus
 0048C092    mov         edx,dword ptr [ebp-4]
 0048C095    cmp         eax,dword ptr [edx+180];TWinControl.FHandle:HWND
>0048C09B    je          0048C0A1
 0048C09D    xor         eax,eax
>0048C09F    jmp         0048C0A3
 0048C0A1    mov         al,1
 0048C0A3    mov         byte ptr [ebp-5],al
 0048C0A6    mov         al,byte ptr [ebp-5]
 0048C0A9    pop         ecx
 0048C0AA    pop         ecx
 0048C0AB    pop         ebp
 0048C0AC    ret
*}
end;

//0048C0B0
procedure sub_0048C0B0(?:TWinControl);
begin
{*
 0048C0B0    push        ebp
 0048C0B1    mov         ebp,esp
 0048C0B3    push        ecx
 0048C0B4    mov         dword ptr [ebp-4],eax
 0048C0B7    mov         eax,dword ptr [ebp-4]
 0048C0BA    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>0048C0C1    jne         0048C0E2
 0048C0C3    mov         eax,dword ptr [ebp-4]
 0048C0C6    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>0048C0CA    je          0048C0D7
 0048C0CC    mov         eax,dword ptr [ebp-4]
 0048C0CF    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 0048C0D2    call        0048C0B0
 0048C0D7    mov         eax,dword ptr [ebp-4]
 0048C0DA    mov         edx,dword ptr [eax]
 0048C0DC    call        dword ptr [edx+94];TWinControl.sub_004887E4
 0048C0E2    pop         ecx
 0048C0E3    pop         ebp
 0048C0E4    ret
*}
end;

//0048C0E8
function TWinControl.GetHandle:HWND;
begin
{*
 0048C0E8    push        ebp
 0048C0E9    mov         ebp,esp
 0048C0EB    add         esp,0FFFFFFF8
 0048C0EE    mov         dword ptr [ebp-4],eax
 0048C0F1    mov         eax,dword ptr [ebp-4]
 0048C0F4    call        0048C0B0
 0048C0F9    mov         eax,dword ptr [ebp-4]
 0048C0FC    mov         eax,dword ptr [eax+180]
 0048C102    mov         dword ptr [ebp-8],eax
 0048C105    mov         eax,dword ptr [ebp-8]
 0048C108    pop         ecx
 0048C109    pop         ecx
 0048C10A    pop         ebp
 0048C10B    ret
*}
end;

//0048C10C
{*procedure sub_0048C10C(?:?);
begin
 0048C10C    push        ebp
 0048C10D    mov         ebp,esp
 0048C10F    add         esp,0FFFFFFEC
 0048C112    mov         dword ptr [ebp-8],edx
 0048C115    mov         dword ptr [ebp-4],eax
 0048C118    push        0
 0048C11A    mov         eax,dword ptr [ebp-8]
 0048C11D    push        eax
 0048C11E    xor         ecx,ecx
 0048C120    mov         edx,7FFFFFFF
 0048C125    mov         eax,7FFFFFFF
 0048C12A    call        0041E714
 0048C12F    mov         eax,dword ptr [ebp-4]
 0048C132    call        00487E38
 0048C137    dec         eax
 0048C138    test        eax,eax
>0048C13A    jl          0048C202
 0048C140    inc         eax
 0048C141    mov         dword ptr [ebp-10],eax
 0048C144    mov         dword ptr [ebp-0C],0
 0048C14B    mov         edx,dword ptr [ebp-0C]
 0048C14E    mov         eax,dword ptr [ebp-4]
 0048C151    call        00487DCC
 0048C156    mov         dword ptr [ebp-14],eax
 0048C159    mov         eax,dword ptr [ebp-14]
 0048C15C    cmp         byte ptr [eax+57],0
>0048C160    jne         0048C178
 0048C162    mov         eax,dword ptr [ebp-14]
 0048C165    test        byte ptr [eax+1C],10
>0048C169    je          0048C1F6
 0048C16F    mov         eax,dword ptr [ebp-14]
 0048C172    test        byte ptr [eax+51],4
>0048C176    jne         0048C1F6
 0048C178    mov         eax,dword ptr [ebp-8]
 0048C17B    mov         eax,dword ptr [eax]
 0048C17D    mov         edx,dword ptr [ebp-14]
 0048C180    cmp         eax,dword ptr [edx+40]
>0048C183    jle         0048C190
 0048C185    mov         eax,dword ptr [ebp-8]
 0048C188    mov         edx,dword ptr [ebp-14]
 0048C18B    mov         edx,dword ptr [edx+40]
 0048C18E    mov         dword ptr [eax],edx
 0048C190    mov         eax,dword ptr [ebp-8]
 0048C193    mov         eax,dword ptr [eax+4]
 0048C196    mov         edx,dword ptr [ebp-14]
 0048C199    cmp         eax,dword ptr [edx+44]
>0048C19C    jle         0048C1AA
 0048C19E    mov         eax,dword ptr [ebp-8]
 0048C1A1    mov         edx,dword ptr [ebp-14]
 0048C1A4    mov         edx,dword ptr [edx+44]
 0048C1A7    mov         dword ptr [eax+4],edx
 0048C1AA    mov         eax,dword ptr [ebp-14]
 0048C1AD    mov         eax,dword ptr [eax+40]
 0048C1B0    mov         edx,dword ptr [ebp-14]
 0048C1B3    add         eax,dword ptr [edx+48]
 0048C1B6    mov         edx,dword ptr [ebp-8]
 0048C1B9    cmp         eax,dword ptr [edx+8]
>0048C1BC    jle         0048C1D0
 0048C1BE    mov         eax,dword ptr [ebp-14]
 0048C1C1    mov         eax,dword ptr [eax+40]
 0048C1C4    mov         edx,dword ptr [ebp-14]
 0048C1C7    add         eax,dword ptr [edx+48]
 0048C1CA    mov         edx,dword ptr [ebp-8]
 0048C1CD    mov         dword ptr [edx+8],eax
 0048C1D0    mov         eax,dword ptr [ebp-14]
 0048C1D3    mov         eax,dword ptr [eax+44]
 0048C1D6    mov         edx,dword ptr [ebp-14]
 0048C1D9    add         eax,dword ptr [edx+4C]
 0048C1DC    mov         edx,dword ptr [ebp-8]
 0048C1DF    cmp         eax,dword ptr [edx+0C]
>0048C1E2    jle         0048C1F6
 0048C1E4    mov         eax,dword ptr [ebp-14]
 0048C1E7    mov         eax,dword ptr [eax+44]
 0048C1EA    mov         edx,dword ptr [ebp-14]
 0048C1ED    add         eax,dword ptr [edx+4C]
 0048C1F0    mov         edx,dword ptr [ebp-8]
 0048C1F3    mov         dword ptr [edx+0C],eax
 0048C1F6    inc         dword ptr [ebp-0C]
 0048C1F9    dec         dword ptr [ebp-10]
>0048C1FC    jne         0048C14B
 0048C202    mov         esp,ebp
 0048C204    pop         ebp
 0048C205    ret
end;*}

//0048C208
{*procedure sub_0048C208(?:?);
begin
 0048C208    push        ebp
 0048C209    mov         ebp,esp
 0048C20B    add         esp,0FFFFFFF8
 0048C20E    mov         dword ptr [ebp-8],edx
 0048C211    mov         dword ptr [ebp-4],eax
 0048C214    mov         eax,dword ptr [ebp-8]
 0048C217    xor         edx,edx
 0048C219    mov         dword ptr [eax],edx
 0048C21B    mov         eax,dword ptr [ebp-8]
 0048C21E    xor         edx,edx
 0048C220    mov         dword ptr [eax+4],edx
 0048C223    mov         eax,dword ptr [ebp-8]
 0048C226    push        eax
 0048C227    mov         eax,dword ptr [ebp-4]
 0048C22A    call        TWinControl.GetHandle
 0048C22F    push        eax
 0048C230    call        user32.ClientToScreen
 0048C235    pop         ecx
 0048C236    pop         ecx
 0048C237    pop         ebp
 0048C238    ret
end;*}

//0048C23C
{*procedure sub_0048C23C(?:?);
begin
 0048C23C    push        ebp
 0048C23D    mov         ebp,esp
 0048C23F    add         esp,0FFFFFFF8
 0048C242    mov         dword ptr [ebp-8],edx
 0048C245    mov         dword ptr [ebp-4],eax
 0048C248    mov         eax,dword ptr [ebp-8]
 0048C24B    push        eax
 0048C24C    mov         eax,dword ptr [ebp-4]
 0048C24F    call        TWinControl.GetHandle
 0048C254    push        eax
 0048C255    call        user32.GetClientRect
 0048C25A    pop         ecx
 0048C25B    pop         ecx
 0048C25C    pop         ebp
 0048C25D    ret
end;*}

//0048C260
procedure TWinControl.sub_0048673C;
begin
{*
 0048C260    push        ebp
 0048C261    mov         ebp,esp
 0048C263    push        ecx
 0048C264    push        esi
 0048C265    mov         dword ptr [ebp-4],eax
 0048C268    mov         eax,dword ptr [ebp-4]
 0048C26B    test        byte ptr [eax+1C],1;TWinControl.FComponentState:TComponentState
>0048C26F    jne         0048C2AD
 0048C271    mov         eax,dword ptr [ebp-4]
 0048C274    call        TWinControl.HandleAllocated
 0048C279    test        al,al
>0048C27B    je          0048C2AD
 0048C27D    push        16
 0048C27F    mov         eax,dword ptr [ebp-4]
 0048C282    mov         eax,dword ptr [eax+4C];TWinControl.Height:Integer
 0048C285    push        eax
 0048C286    mov         eax,dword ptr [ebp-4]
 0048C289    mov         eax,dword ptr [eax+48];TWinControl.Width:Integer
 0048C28C    push        eax
 0048C28D    push        0
 0048C28F    push        0
 0048C291    push        0
 0048C293    mov         eax,dword ptr [ebp-4]
 0048C296    call        TWinControl.GetHandle
 0048C29B    push        eax
 0048C29C    call        user32.SetWindowPos
 0048C2A1    mov         eax,dword ptr [ebp-4]
 0048C2A4    mov         si,0FFD0
 0048C2A8    call        @CallDynaInst;TControl.sub_004826F8
 0048C2AD    pop         esi
 0048C2AE    pop         ecx
 0048C2AF    pop         ebp
 0048C2B0    ret
*}
end;

//0048C2B4
procedure TStatusBar.SetBorderWidth(Value:TBorderWidth);
begin
{*
 0048C2B4    push        ebp
 0048C2B5    mov         ebp,esp
 0048C2B7    add         esp,0FFFFFFF8
 0048C2BA    mov         dword ptr [ebp-8],edx
 0048C2BD    mov         dword ptr [ebp-4],eax
 0048C2C0    mov         eax,dword ptr [ebp-4]
 0048C2C3    mov         eax,dword ptr [eax+16C];TStatusBar.FBorderWidth:TBorderWidth
 0048C2C9    cmp         eax,dword ptr [ebp-8]
>0048C2CC    je          0048C2EB
 0048C2CE    mov         eax,dword ptr [ebp-8]
 0048C2D1    mov         edx,dword ptr [ebp-4]
 0048C2D4    mov         dword ptr [edx+16C],eax;TStatusBar.FBorderWidth:TBorderWidth
 0048C2DA    push        0
 0048C2DC    xor         ecx,ecx
 0048C2DE    mov         edx,0B03B
 0048C2E3    mov         eax,dword ptr [ebp-4]
 0048C2E6    call        00484FFC
 0048C2EB    pop         ecx
 0048C2EC    pop         ecx
 0048C2ED    pop         ebp
 0048C2EE    ret
*}
end;

//0048C2F0
procedure TPanel.SetCtl3D(Value:Boolean);
begin
{*
 0048C2F0    push        ebp
 0048C2F1    mov         ebp,esp
 0048C2F3    add         esp,0FFFFFFF8
 0048C2F6    mov         byte ptr [ebp-5],dl
 0048C2F9    mov         dword ptr [ebp-4],eax
 0048C2FC    mov         eax,dword ptr [ebp-4]
 0048C2FF    mov         al,byte ptr [eax+1A5];TPanel.FCtl3D:Boolean
 0048C305    cmp         al,byte ptr [ebp-5]
>0048C308    je          0048C331
 0048C30A    mov         al,byte ptr [ebp-5]
 0048C30D    mov         edx,dword ptr [ebp-4]
 0048C310    mov         byte ptr [edx+1A5],al;TPanel.FCtl3D:Boolean
 0048C316    mov         eax,dword ptr [ebp-4]
 0048C319    mov         byte ptr [eax+1A9],0;TPanel.FParentCtl3D:Boolean
 0048C320    push        0
 0048C322    xor         ecx,ecx
 0048C324    mov         edx,0B010
 0048C329    mov         eax,dword ptr [ebp-4]
 0048C32C    call        00484FFC
 0048C331    pop         ecx
 0048C332    pop         ecx
 0048C333    pop         ebp
 0048C334    ret
*}
end;

//0048C338
function TPanel.IsStoredCtl3D(Value:Boolean):Boolean;
begin
{*
 0048C338    push        ebp
 0048C339    mov         ebp,esp
 0048C33B    add         esp,0FFFFFFF8
 0048C33E    mov         dword ptr [ebp-4],eax
 0048C341    mov         eax,dword ptr [ebp-4]
 0048C344    mov         al,byte ptr [eax+1A9];TPanel.FParentCtl3D:Boolean
 0048C34A    xor         al,1
 0048C34C    mov         byte ptr [ebp-5],al
 0048C34F    mov         al,byte ptr [ebp-5]
 0048C352    pop         ecx
 0048C353    pop         ecx
 0048C354    pop         ebp
 0048C355    ret
*}
end;

//0048C358
procedure TPanel.SetParentCtl3D(Value:Boolean);
begin
{*
 0048C358    push        ebp
 0048C359    mov         ebp,esp
 0048C35B    add         esp,0FFFFFFF8
 0048C35E    mov         byte ptr [ebp-5],dl
 0048C361    mov         dword ptr [ebp-4],eax
 0048C364    mov         eax,dword ptr [ebp-4]
 0048C367    mov         al,byte ptr [eax+1A9];TPanel.FParentCtl3D:Boolean
 0048C36D    cmp         al,byte ptr [ebp-5]
>0048C370    je          0048C3A1
 0048C372    mov         al,byte ptr [ebp-5]
 0048C375    mov         edx,dword ptr [ebp-4]
 0048C378    mov         byte ptr [edx+1A9],al;TPanel.FParentCtl3D:Boolean
 0048C37E    mov         eax,dword ptr [ebp-4]
 0048C381    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>0048C385    je          0048C3A1
 0048C387    mov         eax,dword ptr [ebp-4]
 0048C38A    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>0048C38E    jne         0048C3A1
 0048C390    push        0
 0048C392    xor         ecx,ecx
 0048C394    mov         edx,0B011
 0048C399    mov         eax,dword ptr [ebp-4]
 0048C39C    call        00484FFC
 0048C3A1    pop         ecx
 0048C3A2    pop         ecx
 0048C3A3    pop         ebp
 0048C3A4    ret
*}
end;

//0048C3A8
{*function TPanel.GetTabOrder:?;
begin
 0048C3A8    push        ebp
 0048C3A9    mov         ebp,esp
 0048C3AB    add         esp,0FFFFFFF8
 0048C3AE    mov         dword ptr [ebp-4],eax
 0048C3B1    mov         eax,dword ptr [ebp-4]
 0048C3B4    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>0048C3B8    je          0048C3D4
 0048C3BA    mov         eax,dword ptr [ebp-4]
 0048C3BD    mov         eax,dword ptr [eax+30];TPanel.FParent:TWinControl
 0048C3C0    mov         eax,dword ptr [eax+194];TWinControl.FTabList:TList
 0048C3C6    mov         edx,dword ptr [ebp-4]
 0048C3C9    call        004202BC
 0048C3CE    mov         word ptr [ebp-6],ax
>0048C3D2    jmp         0048C3DA
 0048C3D4    mov         word ptr [ebp-6],0FFFF
 0048C3DA    mov         ax,word ptr [ebp-6]
 0048C3DE    pop         ecx
 0048C3DF    pop         ecx
 0048C3E0    pop         ebp
 0048C3E1    ret
end;*}

//0048C3E4
{*procedure sub_0048C3E4(?:Pointer; ?:?);
begin
 0048C3E4    push        ebp
 0048C3E5    mov         ebp,esp
 0048C3E7    add         esp,0FFFFFFF0
 0048C3EA    mov         word ptr [ebp-6],dx
 0048C3EE    mov         dword ptr [ebp-4],eax
 0048C3F1    mov         eax,dword ptr [ebp-4]
 0048C3F4    call        TPanel.GetTabOrder
 0048C3F9    movsx       eax,ax
 0048C3FC    mov         dword ptr [ebp-0C],eax
 0048C3FF    cmp         dword ptr [ebp-0C],0
>0048C403    jl          0048C46B
 0048C405    mov         eax,dword ptr [ebp-4]
 0048C408    mov         eax,dword ptr [eax+30]
 0048C40B    mov         eax,dword ptr [eax+194]
 0048C411    mov         eax,dword ptr [eax+8]
 0048C414    mov         dword ptr [ebp-10],eax
 0048C417    cmp         word ptr [ebp-6],0
>0048C41C    jge         0048C424
 0048C41E    mov         word ptr [ebp-6],0
 0048C424    movsx       eax,word ptr [ebp-6]
 0048C428    cmp         eax,dword ptr [ebp-10]
>0048C42B    jl          0048C436
 0048C42D    mov         ax,word ptr [ebp-10]
 0048C431    dec         eax
 0048C432    mov         word ptr [ebp-6],ax
 0048C436    movsx       eax,word ptr [ebp-6]
 0048C43A    cmp         eax,dword ptr [ebp-0C]
>0048C43D    je          0048C46B
 0048C43F    mov         eax,dword ptr [ebp-4]
 0048C442    mov         eax,dword ptr [eax+30]
 0048C445    mov         eax,dword ptr [eax+194]
 0048C44B    mov         edx,dword ptr [ebp-0C]
 0048C44E    call        00420094
 0048C453    movsx       edx,word ptr [ebp-6]
 0048C457    mov         eax,dword ptr [ebp-4]
 0048C45A    mov         eax,dword ptr [eax+30]
 0048C45D    mov         eax,dword ptr [eax+194]
 0048C463    mov         ecx,dword ptr [ebp-4]
 0048C466    call        00420308
 0048C46B    mov         esp,ebp
 0048C46D    pop         ebp
 0048C46E    ret
end;*}

//0048C470
procedure TPanel.SetTabOrder(Value:TTabOrder);
begin
{*
 0048C470    push        ebp
 0048C471    mov         ebp,esp
 0048C473    add         esp,0FFFFFFF8
 0048C476    mov         word ptr [ebp-6],dx
 0048C47A    mov         dword ptr [ebp-4],eax
 0048C47D    mov         eax,dword ptr [ebp-4]
 0048C480    test        byte ptr [eax+54],8;TPanel.FControlState:TControlState
>0048C484    je          0048C495
 0048C486    movsx       eax,word ptr [ebp-6]
 0048C48A    mov         edx,dword ptr [ebp-4]
 0048C48D    mov         dword ptr [edx+1A0],eax;TPanel.FTabOrder:Integer
>0048C493    jmp         0048C4A1
 0048C495    mov         dx,word ptr [ebp-6]
 0048C499    mov         eax,dword ptr [ebp-4]
 0048C49C    call        0048C3E4
 0048C4A1    pop         ecx
 0048C4A2    pop         ecx
 0048C4A3    pop         ebp
 0048C4A4    ret
*}
end;

//0048C4A8
procedure TPanel.SetTabStop(Value:Boolean);
begin
{*
 0048C4A8    push        ebp
 0048C4A9    mov         ebp,esp
 0048C4AB    add         esp,0FFFFFFF4
 0048C4AE    mov         byte ptr [ebp-5],dl
 0048C4B1    mov         dword ptr [ebp-4],eax
 0048C4B4    mov         eax,dword ptr [ebp-4]
 0048C4B7    mov         al,byte ptr [eax+1A4];TPanel.FTabStop:Boolean
 0048C4BD    cmp         al,byte ptr [ebp-5]
>0048C4C0    je          0048C526
 0048C4C2    mov         al,byte ptr [ebp-5]
 0048C4C5    mov         edx,dword ptr [ebp-4]
 0048C4C8    mov         byte ptr [edx+1A4],al;TPanel.FTabStop:Boolean
 0048C4CE    mov         eax,dword ptr [ebp-4]
 0048C4D1    call        TWinControl.HandleAllocated
 0048C4D6    test        al,al
>0048C4D8    je          0048C515
 0048C4DA    push        0F0
 0048C4DC    mov         eax,dword ptr [ebp-4]
 0048C4DF    mov         eax,dword ptr [eax+180];TPanel.FHandle:HWND
 0048C4E5    push        eax
 0048C4E6    call        user32.GetWindowLongA
 0048C4EB    and         eax,0FFFEFFFF
 0048C4F0    mov         dword ptr [ebp-0C],eax
 0048C4F3    cmp         byte ptr [ebp-5],0
>0048C4F7    je          0048C500
 0048C4F9    or          dword ptr [ebp-0C],10000
 0048C500    mov         eax,dword ptr [ebp-0C]
 0048C503    push        eax
 0048C504    push        0F0
 0048C506    mov         eax,dword ptr [ebp-4]
 0048C509    mov         eax,dword ptr [eax+180];TPanel.FHandle:HWND
 0048C50F    push        eax
 0048C510    call        user32.SetWindowLongA
 0048C515    push        0
 0048C517    xor         ecx,ecx
 0048C519    mov         edx,0B028
 0048C51E    mov         eax,dword ptr [ebp-4]
 0048C521    call        00484FFC
 0048C526    mov         esp,ebp
 0048C528    pop         ebp
 0048C529    ret
*}
end;

//0048C52C
procedure TPanel.SetUseDockManager(Value:Boolean);
begin
{*
 0048C52C    push        ebp
 0048C52D    mov         ebp,esp
 0048C52F    add         esp,0FFFFFFF4
 0048C532    push        esi
 0048C533    xor         ecx,ecx
 0048C535    mov         dword ptr [ebp-0C],ecx
 0048C538    mov         byte ptr [ebp-5],dl
 0048C53B    mov         dword ptr [ebp-4],eax
 0048C53E    xor         eax,eax
 0048C540    push        ebp
 0048C541    push        48C5AC
 0048C546    push        dword ptr fs:[eax]
 0048C549    mov         dword ptr fs:[eax],esp
 0048C54C    mov         eax,dword ptr [ebp-4]
 0048C54F    mov         al,byte ptr [eax+1A7];TPanel.FUseDockManager:Boolean
 0048C555    cmp         al,byte ptr [ebp-5]
>0048C558    je          0048C596
 0048C55A    mov         al,byte ptr [ebp-5]
 0048C55D    mov         edx,dword ptr [ebp-4]
 0048C560    mov         byte ptr [edx+1A7],al;TPanel.FUseDockManager:Boolean
 0048C566    mov         eax,dword ptr [ebp-4]
 0048C569    test        byte ptr [eax+1C],10;TPanel.FComponentState:TComponentState
 0048C56D    setne       al
 0048C570    xor         al,1
 0048C572    and         al,byte ptr [ebp-5]
>0048C575    je          0048C596
 0048C577    lea         edx,[ebp-0C]
 0048C57A    mov         eax,dword ptr [ebp-4]
 0048C57D    mov         si,0FFC6
 0048C581    call        @CallDynaInst;TWinControl.sub_0048A544
 0048C586    mov         edx,dword ptr [ebp-0C]
 0048C589    mov         eax,dword ptr [ebp-4]
 0048C58C    add         eax,17C;TPanel.FDockManager:IDockManager
 0048C591    call        @IntfCopy
 0048C596    xor         eax,eax
 0048C598    pop         edx
 0048C599    pop         ecx
 0048C59A    pop         ecx
 0048C59B    mov         dword ptr fs:[eax],edx
 0048C59E    push        48C5B3
 0048C5A3    lea         eax,[ebp-0C]
 0048C5A6    call        @IntfClear
 0048C5AB    ret
>0048C5AC    jmp         @HandleFinally
>0048C5B1    jmp         0048C5A3
 0048C5B3    pop         esi
 0048C5B4    mov         esp,ebp
 0048C5B6    pop         ebp
 0048C5B7    ret
*}
end;

//0048C5B8
function TWinControl.HandleAllocated:Boolean;
begin
{*
 0048C5B8    push        ebp
 0048C5B9    mov         ebp,esp
 0048C5BB    add         esp,0FFFFFFF8
 0048C5BE    mov         dword ptr [ebp-4],eax
 0048C5C1    mov         eax,dword ptr [ebp-4]
 0048C5C4    cmp         dword ptr [eax+180],0
 0048C5CB    setne       byte ptr [ebp-5]
 0048C5CF    mov         al,byte ptr [ebp-5]
 0048C5D2    pop         ecx
 0048C5D3    pop         ecx
 0048C5D4    pop         ebp
 0048C5D5    ret
*}
end;

//0048C5D8
procedure sub_0048C5D8(?:TWinControl);
begin
{*
 0048C5D8    push        ebp
 0048C5D9    mov         ebp,esp
 0048C5DB    add         esp,0FFFFFFBC
 0048C5DE    push        esi
 0048C5DF    push        edi
 0048C5E0    mov         dword ptr [ebp-4],eax
 0048C5E3    mov         eax,dword ptr [ebp-4]
 0048C5E6    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048C5EC    push        eax
 0048C5ED    call        user32.IsIconic
 0048C5F2    test        eax,eax
>0048C5F4    je          0048C61C
 0048C5F6    mov         dword ptr [ebp-44],2C
 0048C5FD    lea         eax,[ebp-44]
 0048C600    push        eax
 0048C601    mov         eax,dword ptr [ebp-4]
 0048C604    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048C60A    push        eax
 0048C60B    call        user32.GetWindowPlacement
 0048C610    lea         esi,[ebp-28]
 0048C613    lea         edi,[ebp-18]
 0048C616    movs        dword ptr [edi],dword ptr [esi]
 0048C617    movs        dword ptr [edi],dword ptr [esi]
 0048C618    movs        dword ptr [edi],dword ptr [esi]
 0048C619    movs        dword ptr [edi],dword ptr [esi]
>0048C61A    jmp         0048C62F
 0048C61C    lea         eax,[ebp-18]
 0048C61F    push        eax
 0048C620    mov         eax,dword ptr [ebp-4]
 0048C623    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048C629    push        eax
 0048C62A    call        user32.GetWindowRect
 0048C62F    push        0F0
 0048C631    mov         eax,dword ptr [ebp-4]
 0048C634    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048C63A    push        eax
 0048C63B    call        user32.GetWindowLongA
 0048C640    test        eax,40000000
>0048C645    je          0048C67B
 0048C647    push        0F8
 0048C649    mov         eax,dword ptr [ebp-4]
 0048C64C    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 0048C652    push        eax
 0048C653    call        user32.GetWindowLongA
 0048C658    mov         dword ptr [ebp-8],eax
 0048C65B    cmp         dword ptr [ebp-8],0
>0048C65F    je          0048C67B
 0048C661    lea         eax,[ebp-18]
 0048C664    push        eax
 0048C665    mov         eax,dword ptr [ebp-8]
 0048C668    push        eax
 0048C669    call        user32.ScreenToClient
 0048C66E    lea         eax,[ebp-10]
 0048C671    push        eax
 0048C672    mov         eax,dword ptr [ebp-8]
 0048C675    push        eax
 0048C676    call        user32.ScreenToClient
 0048C67B    mov         eax,dword ptr [ebp-18]
 0048C67E    mov         edx,dword ptr [ebp-4]
 0048C681    mov         dword ptr [edx+40],eax;TWinControl.Left:Integer
 0048C684    mov         eax,dword ptr [ebp-14]
 0048C687    mov         edx,dword ptr [ebp-4]
 0048C68A    mov         dword ptr [edx+44],eax;TWinControl.Top:Integer
 0048C68D    mov         eax,dword ptr [ebp-10]
 0048C690    sub         eax,dword ptr [ebp-18]
 0048C693    mov         edx,dword ptr [ebp-4]
 0048C696    mov         dword ptr [edx+48],eax;TWinControl.Width:Integer
 0048C699    mov         eax,dword ptr [ebp-0C]
 0048C69C    sub         eax,dword ptr [ebp-14]
 0048C69F    mov         edx,dword ptr [ebp-4]
 0048C6A2    mov         dword ptr [edx+4C],eax;TWinControl.Height:Integer
 0048C6A5    mov         eax,dword ptr [ebp-4]
 0048C6A8    call        00482A00
 0048C6AD    pop         edi
 0048C6AE    pop         esi
 0048C6AF    mov         esp,ebp
 0048C6B1    pop         ebp
 0048C6B2    ret
*}
end;

//0048C6B4
{*procedure TWinControl.sub_0048C6B4(?:?);
begin
 0048C6B4    push        ebp
 0048C6B5    mov         ebp,esp
 0048C6B7    add         esp,0FFFFFFEC
 0048C6BA    push        esi
 0048C6BB    mov         dword ptr [ebp-8],edx
 0048C6BE    mov         dword ptr [ebp-4],eax
 0048C6C1    mov         eax,dword ptr [ebp-4]
 0048C6C4    cmp         dword ptr [eax+194],0;TWinControl.FTabList:TList
>0048C6CB    je          0048C71F
 0048C6CD    mov         eax,dword ptr [ebp-4]
 0048C6D0    mov         eax,dword ptr [eax+194];TWinControl.FTabList:TList
 0048C6D6    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048C6D9    dec         eax
 0048C6DA    test        eax,eax
>0048C6DC    jl          0048C71F
 0048C6DE    inc         eax
 0048C6DF    mov         dword ptr [ebp-14],eax
 0048C6E2    mov         dword ptr [ebp-0C],0
 0048C6E9    mov         eax,dword ptr [ebp-4]
 0048C6EC    mov         eax,dword ptr [eax+194];TWinControl.FTabList:TList
 0048C6F2    mov         edx,dword ptr [ebp-0C]
 0048C6F5    call        TList.Get
 0048C6FA    mov         dword ptr [ebp-10],eax
 0048C6FD    mov         edx,dword ptr [ebp-10]
 0048C700    mov         eax,dword ptr [ebp-8]
 0048C703    call        TList.Add
 0048C708    mov         edx,dword ptr [ebp-8]
 0048C70B    mov         eax,dword ptr [ebp-10]
 0048C70E    mov         si,0FFB4
 0048C712    call        @CallDynaInst
 0048C717    inc         dword ptr [ebp-0C]
 0048C71A    dec         dword ptr [ebp-14]
>0048C71D    jne         0048C6E9
 0048C71F    pop         esi
 0048C720    mov         esp,ebp
 0048C722    pop         ebp
 0048C723    ret
end;*}

//0048C724
{*function sub_0048C724(?:TCustomGroupBox; ?:?; ?:?; ?:?; ?:?):?;
begin
 0048C724    push        ebp
 0048C725    mov         ebp,esp
 0048C727    add         esp,0FFFFFFE4
 0048C72A    push        esi
 0048C72B    mov         byte ptr [ebp-9],cl
 0048C72E    mov         dword ptr [ebp-8],edx
 0048C731    mov         dword ptr [ebp-4],eax
 0048C734    xor         eax,eax
 0048C736    mov         dword ptr [ebp-10],eax
 0048C739    mov         dl,1
 0048C73B    mov         eax,[0041D46C];TList
 0048C740    call        TObject.Create;TList.Create
 0048C745    mov         dword ptr [ebp-1C],eax
 0048C748    xor         eax,eax
 0048C74A    push        ebp
 0048C74B    push        48C83F
 0048C750    push        dword ptr fs:[eax]
 0048C753    mov         dword ptr fs:[eax],esp
 0048C756    mov         edx,dword ptr [ebp-1C]
 0048C759    mov         eax,dword ptr [ebp-4]
 0048C75C    mov         si,0FFB4
 0048C760    call        @CallDynaInst
 0048C765    mov         eax,dword ptr [ebp-1C]
 0048C768    cmp         dword ptr [eax+8],0;TList.FCount:Integer
>0048C76C    jle         0048C829
 0048C772    mov         edx,dword ptr [ebp-8]
 0048C775    mov         eax,dword ptr [ebp-1C]
 0048C778    call        004202BC
 0048C77D    mov         dword ptr [ebp-18],eax
 0048C780    cmp         dword ptr [ebp-18],0FFFFFFFF
>0048C784    jne         0048C79D
 0048C786    cmp         byte ptr [ebp-9],0
>0048C78A    je          0048C798
 0048C78C    mov         eax,dword ptr [ebp-1C]
 0048C78F    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048C792    dec         eax
 0048C793    mov         dword ptr [ebp-18],eax
>0048C796    jmp         0048C79D
 0048C798    xor         eax,eax
 0048C79A    mov         dword ptr [ebp-18],eax
 0048C79D    mov         eax,dword ptr [ebp-18]
 0048C7A0    mov         dword ptr [ebp-14],eax
 0048C7A3    cmp         byte ptr [ebp-9],0
>0048C7A7    je          0048C7BE
 0048C7A9    inc         dword ptr [ebp-14]
 0048C7AC    mov         eax,dword ptr [ebp-1C]
 0048C7AF    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048C7B2    cmp         eax,dword ptr [ebp-14]
>0048C7B5    jne         0048C7D0
 0048C7B7    xor         eax,eax
 0048C7B9    mov         dword ptr [ebp-14],eax
>0048C7BC    jmp         0048C7D0
 0048C7BE    cmp         dword ptr [ebp-14],0
>0048C7C2    jne         0048C7CD
 0048C7C4    mov         eax,dword ptr [ebp-1C]
 0048C7C7    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 0048C7CA    mov         dword ptr [ebp-14],eax
 0048C7CD    dec         dword ptr [ebp-14]
 0048C7D0    mov         edx,dword ptr [ebp-14]
 0048C7D3    mov         eax,dword ptr [ebp-1C]
 0048C7D6    call        TList.Get
 0048C7DB    mov         dword ptr [ebp-8],eax
 0048C7DE    mov         eax,dword ptr [ebp-8]
 0048C7E1    mov         si,0FFB8
 0048C7E5    call        @CallDynaInst
 0048C7EA    test        al,al
>0048C7EC    je          0048C817
 0048C7EE    cmp         byte ptr [ebp+0C],0
>0048C7F2    je          0048C800
 0048C7F4    mov         eax,dword ptr [ebp-8]
 0048C7F7    cmp         byte ptr [eax+1A4],0
>0048C7FE    je          0048C817
 0048C800    cmp         byte ptr [ebp+8],0
>0048C804    je          0048C811
 0048C806    mov         eax,dword ptr [ebp-8]
 0048C809    mov         eax,dword ptr [eax+30]
 0048C80C    cmp         eax,dword ptr [ebp-4]
>0048C80F    jne         0048C817
 0048C811    mov         eax,dword ptr [ebp-8]
 0048C814    mov         dword ptr [ebp-10],eax
 0048C817    cmp         dword ptr [ebp-10],0
>0048C81B    jne         0048C829
 0048C81D    mov         eax,dword ptr [ebp-14]
 0048C820    cmp         eax,dword ptr [ebp-18]
>0048C823    jne         0048C7A3
 0048C829    xor         eax,eax
 0048C82B    pop         edx
 0048C82C    pop         ecx
 0048C82D    pop         ecx
 0048C82E    mov         dword ptr fs:[eax],edx
 0048C831    push        48C846
 0048C836    mov         eax,dword ptr [ebp-1C]
 0048C839    call        TObject.Free
 0048C83E    ret
>0048C83F    jmp         @HandleFinally
>0048C844    jmp         0048C836
 0048C846    mov         eax,dword ptr [ebp-10]
 0048C849    pop         esi
 0048C84A    mov         esp,ebp
 0048C84C    pop         ebp
 0048C84D    ret         8
end;*}

//0048C850
{*procedure sub_0048C850(?:TWinControl; ?:TWinControl; ?:?; ?:?);
begin
 0048C850    push        ebp
 0048C851    mov         ebp,esp
 0048C853    add         esp,0FFFFFFF4
 0048C856    mov         byte ptr [ebp-9],cl
 0048C859    mov         dword ptr [ebp-8],edx
 0048C85C    mov         dword ptr [ebp-4],eax
 0048C85F    mov         al,byte ptr [ebp+8]
 0048C862    push        eax
 0048C863    mov         al,byte ptr [ebp+8]
 0048C866    xor         al,1
 0048C868    push        eax
 0048C869    mov         cl,byte ptr [ebp-9]
 0048C86C    mov         edx,dword ptr [ebp-8]
 0048C86F    mov         eax,dword ptr [ebp-4]
 0048C872    call        0048C724
 0048C877    mov         dword ptr [ebp-8],eax
 0048C87A    cmp         dword ptr [ebp-8],0
>0048C87E    je          0048C88B
 0048C880    mov         eax,dword ptr [ebp-8]
 0048C883    mov         edx,dword ptr [eax]
 0048C885    call        dword ptr [edx+0C4]
 0048C88B    mov         esp,ebp
 0048C88D    pop         ebp
 0048C88E    ret         4
end;*}

//0048C894
procedure sub_0048C894(?:TCustomGroupBox);
begin
{*
 0048C894    push        ebp
 0048C895    mov         ebp,esp
 0048C897    add         esp,0FFFFFFF4
 0048C89A    mov         dword ptr [ebp-4],eax
 0048C89D    mov         eax,dword ptr [ebp-4]
 0048C8A0    call        004A0740
 0048C8A5    mov         dword ptr [ebp-8],eax
 0048C8A8    cmp         dword ptr [ebp-8],0
>0048C8AC    je          0048C8EB
 0048C8AE    push        1
 0048C8B0    push        0
 0048C8B2    mov         cl,1
 0048C8B4    xor         edx,edx
 0048C8B6    mov         eax,dword ptr [ebp-4]
 0048C8B9    call        0048C724
 0048C8BE    mov         dword ptr [ebp-0C],eax
 0048C8C1    cmp         dword ptr [ebp-0C],0
>0048C8C5    jne         0048C8DA
 0048C8C7    push        0
 0048C8C9    push        0
 0048C8CB    mov         cl,1
 0048C8CD    xor         edx,edx
 0048C8CF    mov         eax,dword ptr [ebp-4]
 0048C8D2    call        0048C724
 0048C8D7    mov         dword ptr [ebp-0C],eax
 0048C8DA    cmp         dword ptr [ebp-0C],0
>0048C8DE    je          0048C8EB
 0048C8E0    mov         edx,dword ptr [ebp-0C]
 0048C8E3    mov         eax,dword ptr [ebp-8]
 0048C8E6    call        TForm.SetActiveControl
 0048C8EB    mov         esp,ebp
 0048C8ED    pop         ebp
 0048C8EE    ret
*}
end;

//0048C8F0
{*procedure TWinControl.sub_0042A788(?:?; ?:?);
begin
 0048C8F0    push        ebp
 0048C8F1    mov         ebp,esp
 0048C8F3    add         esp,0FFFFFFEC
 0048C8F6    mov         dword ptr [ebp-8],edx
 0048C8F9    mov         dword ptr [ebp-4],eax
 0048C8FC    mov         eax,dword ptr [ebp-4]
 0048C8FF    call        00487E38
 0048C904    dec         eax
 0048C905    test        eax,eax
>0048C907    jl          0048C93E
 0048C909    inc         eax
 0048C90A    mov         dword ptr [ebp-14],eax
 0048C90D    mov         dword ptr [ebp-0C],0
 0048C914    mov         edx,dword ptr [ebp-0C]
 0048C917    mov         eax,dword ptr [ebp-4]
 0048C91A    call        00487DCC
 0048C91F    mov         dword ptr [ebp-10],eax
 0048C922    mov         eax,dword ptr [ebp-10]
 0048C925    mov         eax,dword ptr [eax+4]
 0048C928    cmp         eax,dword ptr [ebp-8]
>0048C92B    jne         0048C936
 0048C92D    mov         edx,dword ptr [ebp-10]
 0048C930    mov         eax,dword ptr [ebp+0C]
 0048C933    call        dword ptr [ebp+8]
 0048C936    inc         dword ptr [ebp-0C]
 0048C939    dec         dword ptr [ebp-14]
>0048C93C    jne         0048C914
 0048C93E    mov         esp,ebp
 0048C940    pop         ebp
 0048C941    ret         8
end;*}

//0048C944
{*procedure TWinControl.sub_0042A808(?:?; ?:?);
begin
 0048C944    push        ebp
 0048C945    mov         ebp,esp
 0048C947    add         esp,0FFFFFFF4
 0048C94A    mov         dword ptr [ebp-0C],ecx
 0048C94D    mov         dword ptr [ebp-8],edx
 0048C950    mov         dword ptr [ebp-4],eax
 0048C953    mov         eax,dword ptr [ebp-8]
 0048C956    mov         edx,dword ptr ds:[47E678];TWinControl
 0048C95C    call        @IsClass
 0048C961    test        al,al
>0048C963    je          0048C972
 0048C965    mov         edx,dword ptr [ebp-0C]
 0048C968    mov         eax,dword ptr [ebp-8]
 0048C96B    call        0048BBF4
>0048C970    jmp         0048C98F
 0048C972    mov         eax,dword ptr [ebp-8]
 0048C975    mov         edx,dword ptr ds:[47DF94];TControl
 0048C97B    call        @IsClass
 0048C980    test        al,al
>0048C982    je          0048C98F
 0048C984    mov         edx,dword ptr [ebp-0C]
 0048C987    mov         eax,dword ptr [ebp-8]
 0048C98A    call        00483C00
 0048C98F    mov         esp,ebp
 0048C991    pop         ebp
 0048C992    ret
end;*}

//0048C994
{*function sub_0048C994(?:?; ?:?):?;
begin
 0048C994    push        ebp
 0048C995    mov         ebp,esp
 0048C997    add         esp,0FFFFFFF0
 0048C99A    mov         dword ptr [ebp-0C],ecx
 0048C99D    mov         dword ptr [ebp-8],edx
 0048C9A0    mov         dword ptr [ebp-4],eax
 0048C9A3    mov         ecx,dword ptr [ebp-0C]
 0048C9A6    mov         edx,dword ptr [ebp-8]
 0048C9A9    mov         eax,dword ptr [ebp-4]
 0048C9AC    call        00484D20
 0048C9B1    mov         byte ptr [ebp-0D],al
 0048C9B4    mov         al,byte ptr [ebp-0D]
 0048C9B7    mov         esp,ebp
 0048C9B9    pop         ebp
 0048C9BA    ret
end;*}

//0048C9BC
{*procedure sub_0048C9BC(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 0048C9BC    push        ebp
 0048C9BD    mov         ebp,esp
 0048C9BF    add         esp,0FFFFFFF4
 0048C9C2    push        ebx
 0048C9C3    mov         dword ptr [ebp-0C],ecx
 0048C9C6    mov         dword ptr [ebp-8],edx
 0048C9C9    mov         dword ptr [ebp-4],eax
 0048C9CC    mov         eax,dword ptr [ebp-4]
 0048C9CF    mov         eax,dword ptr [eax+74]
 0048C9D2    cmp         dword ptr [eax+14],0
>0048C9D6    jbe         0048C9E8
 0048C9D8    mov         eax,dword ptr [ebp-4]
 0048C9DB    mov         eax,dword ptr [eax+74]
 0048C9DE    mov         eax,dword ptr [eax+14]
 0048C9E1    mov         edx,dword ptr [ebp-8]
 0048C9E4    mov         dword ptr [edx],eax
>0048C9E6    jmp         0048C9EF
 0048C9E8    mov         eax,dword ptr [ebp-8]
 0048C9EB    xor         edx,edx
 0048C9ED    mov         dword ptr [eax],edx
 0048C9EF    mov         eax,dword ptr [ebp-4]
 0048C9F2    mov         eax,dword ptr [eax+74]
 0048C9F5    cmp         dword ptr [eax+10],0
>0048C9F9    jbe         0048CA0B
 0048C9FB    mov         eax,dword ptr [ebp-4]
 0048C9FE    mov         eax,dword ptr [eax+74]
 0048CA01    mov         eax,dword ptr [eax+10]
 0048CA04    mov         edx,dword ptr [ebp-0C]
 0048CA07    mov         dword ptr [edx],eax
>0048CA09    jmp         0048CA12
 0048CA0B    mov         eax,dword ptr [ebp-0C]
 0048CA0E    xor         edx,edx
 0048CA10    mov         dword ptr [eax],edx
 0048CA12    mov         eax,dword ptr [ebp-4]
 0048CA15    mov         eax,dword ptr [eax+74]
 0048CA18    cmp         dword ptr [eax+0C],0
>0048CA1C    jbe         0048CA2E
 0048CA1E    mov         eax,dword ptr [ebp-4]
 0048CA21    mov         eax,dword ptr [eax+74]
 0048CA24    mov         eax,dword ptr [eax+0C]
 0048CA27    mov         edx,dword ptr [ebp+0C]
 0048CA2A    mov         dword ptr [edx],eax
>0048CA2C    jmp         0048CA35
 0048CA2E    mov         eax,dword ptr [ebp+0C]
 0048CA31    xor         edx,edx
 0048CA33    mov         dword ptr [eax],edx
 0048CA35    mov         eax,dword ptr [ebp-4]
 0048CA38    mov         eax,dword ptr [eax+74]
 0048CA3B    cmp         dword ptr [eax+8],0
>0048CA3F    jbe         0048CA51
 0048CA41    mov         eax,dword ptr [ebp-4]
 0048CA44    mov         eax,dword ptr [eax+74]
 0048CA47    mov         eax,dword ptr [eax+8]
 0048CA4A    mov         edx,dword ptr [ebp+8]
 0048CA4D    mov         dword ptr [edx],eax
>0048CA4F    jmp         0048CA58
 0048CA51    mov         eax,dword ptr [ebp+8]
 0048CA54    xor         edx,edx
 0048CA56    mov         dword ptr [eax],edx
 0048CA58    mov         eax,dword ptr [ebp+0C]
 0048CA5B    push        eax
 0048CA5C    mov         eax,dword ptr [ebp+8]
 0048CA5F    push        eax
 0048CA60    mov         ecx,dword ptr [ebp-0C]
 0048CA63    mov         edx,dword ptr [ebp-8]
 0048CA66    mov         eax,dword ptr [ebp-4]
 0048CA69    mov         ebx,dword ptr [eax]
 0048CA6B    call        dword ptr [ebx+38]
 0048CA6E    pop         ebx
 0048CA6F    mov         esp,ebp
 0048CA71    pop         ebp
 0048CA72    ret         8
end;*}

//0048CA78
{*procedure sub_0048CA78(?:TWinControl; ?:?; ?:?; ?:?; ?:?);
begin
 0048CA78    push        ebp
 0048CA79    mov         ebp,esp
 0048CA7B    add         esp,0FFFFFF94
 0048CA7E    mov         dword ptr [ebp-0C],ecx
 0048CA81    mov         dword ptr [ebp-8],edx
 0048CA84    mov         dword ptr [ebp-4],eax
 0048CA87    mov         eax,dword ptr [ebp-4]
 0048CA8A    call        TWinControl.HandleAllocated
 0048CA8F    test        al,al
>0048CA91    je          0048CEAD
 0048CA97    mov         eax,dword ptr [ebp-4]
 0048CA9A    call        00487E38
 0048CA9F    test        eax,eax
>0048CAA1    je          0048CEAD
 0048CAA7    lea         edx,[ebp-6C]
 0048CAAA    mov         eax,dword ptr [ebp-4]
 0048CAAD    mov         ecx,dword ptr [eax]
 0048CAAF    call        dword ptr [ecx+44]
 0048CAB2    lea         edx,[ebp-6C]
 0048CAB5    mov         eax,dword ptr [ebp-4]
 0048CAB8    mov         ecx,dword ptr [eax]
 0048CABA    call        dword ptr [ecx+8C]
 0048CAC0    lea         eax,[ebp-6C]
 0048CAC3    push        eax
 0048CAC4    call        user32.IsRectEmpty
 0048CAC9    test        eax,eax
>0048CACB    jne         0048CEAD
 0048CAD1    mov         eax,dword ptr [ebp-4]
 0048CAD4    mov         eax,dword ptr [eax+48]
 0048CAD7    mov         edx,dword ptr [ebp-64]
 0048CADA    sub         edx,dword ptr [ebp-6C]
 0048CADD    sub         eax,edx
 0048CADF    mov         dword ptr [ebp-10],eax
 0048CAE2    mov         eax,dword ptr [ebp-4]
 0048CAE5    mov         eax,dword ptr [eax+4C]
 0048CAE8    mov         edx,dword ptr [ebp-60]
 0048CAEB    sub         edx,dword ptr [ebp-68]
 0048CAEE    sub         eax,edx
 0048CAF0    mov         dword ptr [ebp-14],eax
 0048CAF3    mov         eax,dword ptr [ebp-4]
 0048CAF6    mov         eax,dword ptr [eax+48]
 0048CAF9    mov         edx,dword ptr [ebp-64]
 0048CAFC    sub         edx,dword ptr [ebp-6C]
 0048CAFF    sub         eax,edx
 0048CB01    mov         dword ptr [ebp-18],eax
 0048CB04    mov         eax,dword ptr [ebp-4]
 0048CB07    mov         eax,dword ptr [eax+4C]
 0048CB0A    mov         edx,dword ptr [ebp-60]
 0048CB0D    sub         edx,dword ptr [ebp-68]
 0048CB10    sub         eax,edx
 0048CB12    mov         dword ptr [ebp-1C],eax
 0048CB15    mov         eax,dword ptr [ebp-8]
 0048CB18    cmp         dword ptr [eax],0
>0048CB1B    jle         0048CB25
 0048CB1D    mov         eax,dword ptr [ebp-8]
 0048CB20    mov         edx,dword ptr [ebp-10]
 0048CB23    sub         dword ptr [eax],edx
 0048CB25    mov         eax,dword ptr [ebp-0C]
 0048CB28    cmp         dword ptr [eax],0
>0048CB2B    jle         0048CB35
 0048CB2D    mov         eax,dword ptr [ebp-0C]
 0048CB30    mov         edx,dword ptr [ebp-14]
 0048CB33    sub         dword ptr [eax],edx
 0048CB35    mov         eax,dword ptr [ebp+0C]
 0048CB38    cmp         dword ptr [eax],0
>0048CB3B    jle         0048CB45
 0048CB3D    mov         eax,dword ptr [ebp+0C]
 0048CB40    mov         edx,dword ptr [ebp-18]
 0048CB43    sub         dword ptr [eax],edx
 0048CB45    mov         eax,dword ptr [ebp+8]
 0048CB48    cmp         dword ptr [eax],0
>0048CB4B    jle         0048CB55
 0048CB4D    mov         eax,dword ptr [ebp+8]
 0048CB50    mov         edx,dword ptr [ebp-1C]
 0048CB53    sub         dword ptr [eax],edx
 0048CB55    xor         eax,eax
 0048CB57    push        ebp
 0048CB58    push        48CEA6
 0048CB5D    push        dword ptr fs:[eax]
 0048CB60    mov         dword ptr fs:[eax],esp
 0048CB63    xor         eax,eax
 0048CB65    mov         dword ptr [ebp-24],eax
 0048CB68    xor         eax,eax
 0048CB6A    mov         dword ptr [ebp-34],eax
 0048CB6D    xor         eax,eax
 0048CB6F    mov         dword ptr [ebp-28],eax
 0048CB72    xor         eax,eax
 0048CB74    mov         dword ptr [ebp-38],eax
 0048CB77    xor         eax,eax
 0048CB79    mov         dword ptr [ebp-2C],eax
 0048CB7C    xor         eax,eax
 0048CB7E    mov         dword ptr [ebp-3C],eax
 0048CB81    xor         eax,eax
 0048CB83    mov         dword ptr [ebp-30],eax
 0048CB86    xor         eax,eax
 0048CB88    mov         dword ptr [ebp-40],eax
 0048CB8B    mov         eax,dword ptr [ebp-4]
 0048CB8E    call        00487E38
 0048CB93    dec         eax
 0048CB94    test        eax,eax
>0048CB96    jl          0048CDD0
 0048CB9C    inc         eax
 0048CB9D    mov         dword ptr [ebp-5C],eax
 0048CBA0    mov         dword ptr [ebp-20],0
 0048CBA7    mov         edx,dword ptr [ebp-20]
 0048CBAA    mov         eax,dword ptr [ebp-4]
 0048CBAD    call        00487DCC
 0048CBB2    mov         dword ptr [ebp-54],eax
 0048CBB5    mov         eax,dword ptr [ebp-54]
 0048CBB8    cmp         byte ptr [eax+57],0
>0048CBBC    jne         0048CBD8
 0048CBBE    mov         eax,dword ptr [ebp-54]
 0048CBC1    test        byte ptr [eax+1C],10
>0048CBC5    je          0048CDC4
 0048CBCB    mov         eax,dword ptr [ebp-54]
 0048CBCE    test        byte ptr [eax+51],4
>0048CBD2    jne         0048CDC4
 0048CBD8    push        ebp
 0048CBD9    lea         eax,[ebp-48]
 0048CBDC    push        eax
 0048CBDD    lea         eax,[ebp-50]
 0048CBE0    push        eax
 0048CBE1    lea         ecx,[ebp-4C]
 0048CBE4    lea         edx,[ebp-44]
 0048CBE7    mov         eax,dword ptr [ebp-54]
 0048CBEA    call        0048C9BC
 0048CBEF    pop         ecx
 0048CBF0    mov         eax,dword ptr [ebp-54]
 0048CBF3    mov         al,byte ptr [eax+5B]
 0048CBF6    sub         al,1
>0048CBF8    jb          0048CC10
 0048CBFA    sub         al,2
>0048CBFC    jb          0048CC04
 0048CBFE    sub         al,2
>0048CC00    je          0048CC0A
>0048CC02    jmp         0048CC62
 0048CC04    mov         byte ptr [ebp-55],1
>0048CC08    jmp         0048CC66
 0048CC0A    mov         byte ptr [ebp-55],2
>0048CC0E    jmp         0048CC66
 0048CC10    mov         eax,dword ptr [ebp-54]
 0048CC13    mov         al,byte ptr [eax+61]
 0048CC16    and         al,byte ptr ds:[48CEB4];0x5 gvar_0048CEB4
 0048CC1C    mov         dl,byte ptr ds:[48CEB4];0x5 gvar_0048CEB4
 0048CC22    cmp         dl,al
>0048CC24    jne         0048CC5C
 0048CC26    mov         byte ptr [ebp-55],1
 0048CC2A    cmp         dword ptr [ebp-44],0
>0048CC2E    jle         0048CC42
 0048CC30    mov         eax,dword ptr [ebp-64]
 0048CC33    sub         eax,dword ptr [ebp-6C]
 0048CC36    mov         edx,dword ptr [ebp-54]
 0048CC39    sub         eax,dword ptr [edx+48]
 0048CC3C    sub         eax,dword ptr [ebp-44]
 0048CC3F    mov         dword ptr [ebp-44],eax
 0048CC42    cmp         dword ptr [ebp-48],0
>0048CC46    jle         0048CC66
 0048CC48    mov         eax,dword ptr [ebp-64]
 0048CC4B    sub         eax,dword ptr [ebp-6C]
 0048CC4E    add         eax,dword ptr [ebp-48]
 0048CC51    mov         edx,dword ptr [ebp-54]
 0048CC54    sub         eax,dword ptr [edx+48]
 0048CC57    mov         dword ptr [ebp-48],eax
>0048CC5A    jmp         0048CC66
 0048CC5C    mov         byte ptr [ebp-55],0
>0048CC60    jmp         0048CC66
 0048CC62    mov         byte ptr [ebp-55],3
 0048CC66    mov         eax,dword ptr [ebp-54]
 0048CC69    mov         al,byte ptr [eax+5B]
 0048CC6C    sub         al,1
>0048CC6E    jb          0048CC86
 0048CC70    add         al,0FE
 0048CC72    sub         al,2
>0048CC74    jb          0048CC7A
>0048CC76    je          0048CC80
>0048CC78    jmp         0048CCD8
 0048CC7A    mov         byte ptr [ebp-56],1
>0048CC7E    jmp         0048CCDC
 0048CC80    mov         byte ptr [ebp-56],2
>0048CC84    jmp         0048CCDC
 0048CC86    mov         eax,dword ptr [ebp-54]
 0048CC89    mov         al,byte ptr [eax+61]
 0048CC8C    and         al,byte ptr ds:[48CEB8];0xA gvar_0048CEB8
 0048CC92    mov         dl,byte ptr ds:[48CEB8];0xA gvar_0048CEB8
 0048CC98    cmp         dl,al
>0048CC9A    jne         0048CCD2
 0048CC9C    mov         byte ptr [ebp-56],1
 0048CCA0    cmp         dword ptr [ebp-4C],0
>0048CCA4    jle         0048CCB8
 0048CCA6    mov         eax,dword ptr [ebp-60]
 0048CCA9    sub         eax,dword ptr [ebp-68]
 0048CCAC    mov         edx,dword ptr [ebp-54]
 0048CCAF    sub         eax,dword ptr [edx+4C]
 0048CCB2    sub         eax,dword ptr [ebp-4C]
 0048CCB5    mov         dword ptr [ebp-4C],eax
 0048CCB8    cmp         dword ptr [ebp-50],0
>0048CCBC    jle         0048CCDC
 0048CCBE    mov         eax,dword ptr [ebp-60]
 0048CCC1    sub         eax,dword ptr [ebp-68]
 0048CCC4    add         eax,dword ptr [ebp-50]
 0048CCC7    mov         edx,dword ptr [ebp-54]
 0048CCCA    sub         eax,dword ptr [edx+4C]
 0048CCCD    mov         dword ptr [ebp-50],eax
>0048CCD0    jmp         0048CCDC
 0048CCD2    mov         byte ptr [ebp-56],0
>0048CCD6    jmp         0048CCDC
 0048CCD8    mov         byte ptr [ebp-56],3
 0048CCDC    mov         al,byte ptr [ebp-55]
 0048CCDF    dec         eax
 0048CCE0    sub         al,2
>0048CCE2    jb          0048CCE8
>0048CCE4    je          0048CD3E
>0048CCE6    jmp         0048CD50
 0048CCE8    cmp         dword ptr [ebp-44],0
>0048CCEC    jle         0048CD12
 0048CCEE    mov         eax,dword ptr [ebp-8]
 0048CCF1    mov         eax,dword ptr [eax]
 0048CCF3    cmp         eax,dword ptr [ebp-44]
>0048CCF6    jge         0048CD12
 0048CCF8    mov         eax,dword ptr [ebp-8]
 0048CCFB    mov         edx,dword ptr [ebp-44]
 0048CCFE    mov         dword ptr [eax],edx
 0048CD00    mov         eax,dword ptr [ebp-8]
 0048CD03    mov         eax,dword ptr [eax]
 0048CD05    cmp         eax,dword ptr [ebp-24]
>0048CD08    jle         0048CD12
 0048CD0A    mov         eax,dword ptr [ebp-8]
 0048CD0D    mov         eax,dword ptr [eax]
 0048CD0F    mov         dword ptr [ebp-24],eax
 0048CD12    cmp         dword ptr [ebp-48],0
>0048CD16    jle         0048CD50
 0048CD18    mov         eax,dword ptr [ebp+0C]
 0048CD1B    mov         eax,dword ptr [eax]
 0048CD1D    cmp         eax,dword ptr [ebp-48]
>0048CD20    jle         0048CD50
 0048CD22    mov         eax,dword ptr [ebp+0C]
 0048CD25    mov         edx,dword ptr [ebp-48]
 0048CD28    mov         dword ptr [eax],edx
 0048CD2A    mov         eax,dword ptr [ebp+0C]
 0048CD2D    mov         eax,dword ptr [eax]
 0048CD2F    cmp         eax,dword ptr [ebp-28]
>0048CD32    jle         0048CD50
 0048CD34    mov         eax,dword ptr [ebp+0C]
 0048CD37    mov         eax,dword ptr [eax]
 0048CD39    mov         dword ptr [ebp-28],eax
>0048CD3C    jmp         0048CD50
 0048CD3E    mov         eax,dword ptr [ebp-54]
 0048CD41    mov         eax,dword ptr [eax+48]
 0048CD44    add         dword ptr [ebp-34],eax
 0048CD47    mov         eax,dword ptr [ebp-54]
 0048CD4A    mov         eax,dword ptr [eax+48]
 0048CD4D    add         dword ptr [ebp-38],eax
 0048CD50    mov         al,byte ptr [ebp-56]
 0048CD53    dec         eax
 0048CD54    sub         al,2
>0048CD56    jb          0048CD5C
>0048CD58    je          0048CDB2
>0048CD5A    jmp         0048CDC4
 0048CD5C    cmp         dword ptr [ebp-4C],0
>0048CD60    jle         0048CD86
 0048CD62    mov         eax,dword ptr [ebp-0C]
 0048CD65    mov         eax,dword ptr [eax]
 0048CD67    cmp         eax,dword ptr [ebp-4C]
>0048CD6A    jge         0048CD86
 0048CD6C    mov         eax,dword ptr [ebp-0C]
 0048CD6F    mov         edx,dword ptr [ebp-4C]
 0048CD72    mov         dword ptr [eax],edx
 0048CD74    mov         eax,dword ptr [ebp-0C]
 0048CD77    mov         eax,dword ptr [eax]
 0048CD79    cmp         eax,dword ptr [ebp-2C]
>0048CD7C    jle         0048CD86
 0048CD7E    mov         eax,dword ptr [ebp-0C]
 0048CD81    mov         eax,dword ptr [eax]
 0048CD83    mov         dword ptr [ebp-2C],eax
 0048CD86    cmp         dword ptr [ebp-50],0
>0048CD8A    jle         0048CDC4
 0048CD8C    mov         eax,dword ptr [ebp+8]
 0048CD8F    mov         eax,dword ptr [eax]
 0048CD91    cmp         eax,dword ptr [ebp-50]
>0048CD94    jle         0048CDC4
 0048CD96    mov         eax,dword ptr [ebp+8]
 0048CD99    mov         edx,dword ptr [ebp-50]
 0048CD9C    mov         dword ptr [eax],edx
 0048CD9E    mov         eax,dword ptr [ebp+8]
 0048CDA1    mov         eax,dword ptr [eax]
 0048CDA3    cmp         eax,dword ptr [ebp-30]
>0048CDA6    jle         0048CDC4
 0048CDA8    mov         eax,dword ptr [ebp+8]
 0048CDAB    mov         eax,dword ptr [eax]
 0048CDAD    mov         dword ptr [ebp-30],eax
>0048CDB0    jmp         0048CDC4
 0048CDB2    mov         eax,dword ptr [ebp-54]
 0048CDB5    mov         eax,dword ptr [eax+4C]
 0048CDB8    add         dword ptr [ebp-3C],eax
 0048CDBB    mov         eax,dword ptr [ebp-54]
 0048CDBE    mov         eax,dword ptr [eax+4C]
 0048CDC1    add         dword ptr [ebp-40],eax
 0048CDC4    inc         dword ptr [ebp-20]
 0048CDC7    dec         dword ptr [ebp-5C]
>0048CDCA    jne         0048CBA7
 0048CDD0    cmp         dword ptr [ebp-24],0
>0048CDD4    jle         0048CDEE
 0048CDD6    mov         eax,dword ptr [ebp-24]
 0048CDD9    add         eax,dword ptr [ebp-34]
 0048CDDC    mov         edx,dword ptr [ebp-8]
 0048CDDF    cmp         eax,dword ptr [edx]
>0048CDE1    jle         0048CDEE
 0048CDE3    mov         eax,dword ptr [ebp-24]
 0048CDE6    add         eax,dword ptr [ebp-34]
 0048CDE9    mov         edx,dword ptr [ebp-8]
 0048CDEC    mov         dword ptr [edx],eax
 0048CDEE    cmp         dword ptr [ebp-28],0
>0048CDF2    jle         0048CE14
 0048CDF4    mov         eax,dword ptr [ebp+0C]
 0048CDF7    cmp         dword ptr [eax],0
>0048CDFA    je          0048CE09
 0048CDFC    mov         eax,dword ptr [ebp-28]
 0048CDFF    add         eax,dword ptr [ebp-38]
 0048CE02    mov         edx,dword ptr [ebp+0C]
 0048CE05    cmp         eax,dword ptr [edx]
>0048CE07    jle         0048CE14
 0048CE09    mov         eax,dword ptr [ebp-28]
 0048CE0C    add         eax,dword ptr [ebp-38]
 0048CE0F    mov         edx,dword ptr [ebp+0C]
 0048CE12    mov         dword ptr [edx],eax
 0048CE14    cmp         dword ptr [ebp-2C],0
>0048CE18    jle         0048CE32
 0048CE1A    mov         eax,dword ptr [ebp-2C]
 0048CE1D    add         eax,dword ptr [ebp-3C]
 0048CE20    mov         edx,dword ptr [ebp-0C]
 0048CE23    cmp         eax,dword ptr [edx]
>0048CE25    jle         0048CE32
 0048CE27    mov         eax,dword ptr [ebp-2C]
 0048CE2A    add         eax,dword ptr [ebp-3C]
 0048CE2D    mov         edx,dword ptr [ebp-0C]
 0048CE30    mov         dword ptr [edx],eax
 0048CE32    cmp         dword ptr [ebp-30],0
>0048CE36    jle         0048CE58
 0048CE38    mov         eax,dword ptr [ebp+8]
 0048CE3B    cmp         dword ptr [eax],0
>0048CE3E    je          0048CE4D
 0048CE40    mov         eax,dword ptr [ebp-30]
 0048CE43    add         eax,dword ptr [ebp-40]
 0048CE46    mov         edx,dword ptr [ebp+8]
 0048CE49    cmp         eax,dword ptr [edx]
>0048CE4B    jle         0048CE58
 0048CE4D    mov         eax,dword ptr [ebp-30]
 0048CE50    add         eax,dword ptr [ebp-40]
 0048CE53    mov         edx,dword ptr [ebp+8]
 0048CE56    mov         dword ptr [edx],eax
 0048CE58    xor         eax,eax
 0048CE5A    pop         edx
 0048CE5B    pop         ecx
 0048CE5C    pop         ecx
 0048CE5D    mov         dword ptr fs:[eax],edx
 0048CE60    push        48CEAD
 0048CE65    mov         eax,dword ptr [ebp-8]
 0048CE68    cmp         dword ptr [eax],0
>0048CE6B    jle         0048CE75
 0048CE6D    mov         eax,dword ptr [ebp-8]
 0048CE70    mov         edx,dword ptr [ebp-10]
 0048CE73    add         dword ptr [eax],edx
 0048CE75    mov         eax,dword ptr [ebp-0C]
 0048CE78    cmp         dword ptr [eax],0
>0048CE7B    jle         0048CE85
 0048CE7D    mov         eax,dword ptr [ebp-0C]
 0048CE80    mov         edx,dword ptr [ebp-14]
 0048CE83    add         dword ptr [eax],edx
 0048CE85    mov         eax,dword ptr [ebp+0C]
 0048CE88    cmp         dword ptr [eax],0
>0048CE8B    jle         0048CE95
 0048CE8D    mov         eax,dword ptr [ebp+0C]
 0048CE90    mov         edx,dword ptr [ebp-18]
 0048CE93    add         dword ptr [eax],edx
 0048CE95    mov         eax,dword ptr [ebp+8]
 0048CE98    cmp         dword ptr [eax],0
>0048CE9B    jle         0048CEA5
 0048CE9D    mov         eax,dword ptr [ebp+8]
 0048CEA0    mov         edx,dword ptr [ebp-1C]
 0048CEA3    add         dword ptr [eax],edx
 0048CEA5    ret
>0048CEA6    jmp         @HandleFinally
>0048CEAB    jmp         0048CE65
 0048CEAD    mov         esp,ebp
 0048CEAF    pop         ebp
 0048CEB0    ret         8
end;*}

//0048CEBC
{*procedure sub_0048CEBC(?:?; ?:?; ?:?; ?:?);
begin
 0048CEBC    push        ebp
 0048CEBD    mov         ebp,esp
 0048CEBF    add         esp,0FFFFFFF4
 0048CEC2    mov         dword ptr [ebp-0C],ecx
 0048CEC5    mov         dword ptr [ebp-8],edx
 0048CEC8    mov         dword ptr [ebp-4],eax
 0048CECB    mov         eax,dword ptr [ebp+0C]
 0048CECE    push        eax
 0048CECF    mov         eax,dword ptr [ebp+8]
 0048CED2    push        eax
 0048CED3    mov         ecx,dword ptr [ebp-0C]
 0048CED6    mov         edx,dword ptr [ebp-8]
 0048CED9    mov         eax,dword ptr [ebp-4]
 0048CEDC    call        0048CA78
 0048CEE1    mov         eax,dword ptr [ebp+0C]
 0048CEE4    push        eax
 0048CEE5    mov         eax,dword ptr [ebp+8]
 0048CEE8    push        eax
 0048CEE9    mov         ecx,dword ptr [ebp-0C]
 0048CEEC    mov         edx,dword ptr [ebp-8]
 0048CEEF    mov         eax,dword ptr [ebp-4]
 0048CEF2    call        00484E1C
 0048CEF7    mov         esp,ebp
 0048CEF9    pop         ebp
 0048CEFA    ret         8
end;*}

//0048CF00
{*procedure TWinControl.sub_00486204(?:?; ?:?);
begin
 0048CF00    push        ebp
 0048CF01    mov         ebp,esp
 0048CF03    add         esp,0FFFFFFF4
 0048CF06    mov         byte ptr [ebp-9],cl
 0048CF09    mov         dword ptr [ebp-8],edx
 0048CF0C    mov         dword ptr [ebp-4],eax
 0048CF0F    mov         cl,byte ptr [ebp-9]
 0048CF12    mov         edx,dword ptr [ebp-8]
 0048CF15    mov         eax,dword ptr [ebp-4]
 0048CF18    call        TControl.sub_00486204
 0048CF1D    mov         eax,dword ptr [ebp-8]
 0048CF20    mov         edx,dword ptr ds:[492C28];TCustomAction
 0048CF26    call        @IsClass
 0048CF2B    test        al,al
>0048CF2D    je          0048CF4F
 0048CF2F    cmp         byte ptr [ebp-9],0
>0048CF33    je          0048CF41
 0048CF35    mov         eax,dword ptr [ebp-4]
 0048CF38    cmp         dword ptr [eax+158],0;TWinControl.HelpContext:THelpContext
>0048CF3F    jne         0048CF4F
 0048CF41    mov         eax,dword ptr [ebp-8]
 0048CF44    mov         edx,dword ptr [eax+74]
 0048CF47    mov         eax,dword ptr [ebp-4]
 0048CF4A    call        TControl.SetHelpContext
 0048CF4F    mov         esp,ebp
 0048CF51    pop         ebp
 0048CF52    ret
end;*}

//0048CF54
procedure TWinControl.sub_00486368;
begin
{*
 0048CF54    push        ebp
 0048CF55    mov         ebp,esp
 0048CF57    add         esp,0FFFFFFF8
 0048CF5A    mov         dword ptr [ebp-4],eax
 0048CF5D    mov         eax,[0047E3A4];TWinControlActionLink
 0048CF62    mov         dword ptr [ebp-8],eax
 0048CF65    mov         eax,dword ptr [ebp-8]
 0048CF68    pop         ecx
 0048CF69    pop         ecx
 0048CF6A    pop         ebp
 0048CF6B    ret
*}
end;

//0048CF6C
{*procedure sub_0048CF6C(?:?);
begin
 0048CF6C    push        ebp
 0048CF6D    mov         ebp,esp
 0048CF6F    add         esp,0FFFFFFF8
 0048CF72    mov         dword ptr [ebp-8],edx
 0048CF75    mov         dword ptr [ebp-4],eax
 0048CF78    mov         edx,dword ptr [ebp-8]
 0048CF7B    mov         eax,dword ptr [ebp-4]
 0048CF7E    call        004864F8
 0048CF83    mov         eax,dword ptr [ebp-8]
 0048CF86    mov         edx,dword ptr ds:[492C28];TCustomAction
 0048CF8C    call        @IsClass
 0048CF91    test        al,al
>0048CF93    je          0048CFA6
 0048CF95    mov         eax,dword ptr [ebp-4]
 0048CF98    mov         edx,dword ptr [eax+158];TWinControl.HelpContext:THelpContext
 0048CF9E    mov         eax,dword ptr [ebp-8]
 0048CFA1    mov         ecx,dword ptr [eax]
 0048CFA3    call        dword ptr [ecx+48]
 0048CFA6    pop         ecx
 0048CFA7    pop         ecx
 0048CFA8    pop         ebp
 0048CFA9    ret
end;*}

//0048CFAC
{*function sub_0048CFAC(?:?; ?:?):?;
begin
 0048CFAC    push        ebp
 0048CFAD    mov         ebp,esp
 0048CFAF    add         esp,0FFFFFFBC
 0048CFB2    push        ebx
 0048CFB3    push        esi
 0048CFB4    mov         dword ptr [ebp-0C],ecx
 0048CFB7    mov         dword ptr [ebp-8],edx
 0048CFBA    mov         dword ptr [ebp-4],eax
 0048CFBD    mov         byte ptr [ebp-0D],1
 0048CFC1    mov         eax,dword ptr [ebp-4]
 0048CFC4    call        TWinControl.HandleAllocated
 0048CFC9    test        al,al
>0048CFCB    je          0048D1AB
 0048CFD1    mov         eax,dword ptr [ebp-4]
 0048CFD4    cmp         byte ptr [eax+5B],5;TWinControl.FAlign:TAlign
>0048CFD8    je          0048D1AB
 0048CFDE    mov         eax,dword ptr [ebp-4]
 0048CFE1    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>0048CFE5    je          0048CFF7
 0048CFE7    mov         eax,dword ptr [ebp-4]
 0048CFEA    call        00487E38
 0048CFEF    test        eax,eax
>0048CFF1    jle         0048D1AB
 0048CFF7    lea         edx,[ebp-34]
 0048CFFA    mov         eax,dword ptr [ebp-4]
 0048CFFD    mov         ecx,dword ptr [eax]
 0048CFFF    call        dword ptr [ecx+0B4];TWinControl.sub_0048C10C
 0048D005    lea         edx,[ebp-44]
 0048D008    mov         eax,dword ptr [ebp-4]
 0048D00B    mov         ecx,dword ptr [eax]
 0048D00D    call        dword ptr [ecx+44];TWinControl.sub_0048C23C
 0048D010    lea         edx,[ebp-44]
 0048D013    mov         eax,dword ptr [ebp-4]
 0048D016    mov         ecx,dword ptr [eax]
 0048D018    call        dword ptr [ecx+8C];TWinControl.sub_00486FB0
 0048D01E    mov         eax,dword ptr [ebp-4]
 0048D021    call        TWinControl.DisableAlign
 0048D026    xor         eax,eax
 0048D028    push        ebp
 0048D029    push        48D108
 0048D02E    push        dword ptr fs:[eax]
 0048D031    mov         dword ptr fs:[eax],esp
 0048D034    mov         eax,dword ptr [ebp-4]
 0048D037    call        00487E38
 0048D03C    dec         eax
 0048D03D    test        eax,eax
>0048D03F    jl          0048D0EA
 0048D045    inc         eax
 0048D046    mov         dword ptr [ebp-20],eax
 0048D049    mov         dword ptr [ebp-14],0
 0048D050    mov         edx,dword ptr [ebp-14]
 0048D053    mov         eax,dword ptr [ebp-4]
 0048D056    call        00487DCC
 0048D05B    mov         dword ptr [ebp-24],eax
 0048D05E    mov         eax,dword ptr [ebp-24]
 0048D061    cmp         byte ptr [eax+57],0
>0048D065    jne         0048D079
 0048D067    mov         eax,dword ptr [ebp-24]
 0048D06A    test        byte ptr [eax+1C],10
>0048D06E    je          0048D0DE
 0048D070    mov         eax,dword ptr [ebp-24]
 0048D073    test        byte ptr [eax+51],4
>0048D077    jne         0048D0DE
 0048D079    mov         eax,dword ptr [ebp-4]
 0048D07C    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 0048D07F    test        al,al
>0048D081    je          0048D089
 0048D083    add         al,0FD
 0048D085    sub         al,2
>0048D087    jae         0048D094
 0048D089    mov         eax,dword ptr [ebp-34]
 0048D08C    sub         eax,dword ptr [ebp-44]
 0048D08F    mov         dword ptr [ebp-18],eax
>0048D092    jmp         0048D099
 0048D094    xor         eax,eax
 0048D096    mov         dword ptr [ebp-18],eax
 0048D099    mov         eax,dword ptr [ebp-4]
 0048D09C    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 0048D09F    sub         al,3
>0048D0A1    jae         0048D0AE
 0048D0A3    mov         eax,dword ptr [ebp-30]
 0048D0A6    sub         eax,dword ptr [ebp-40]
 0048D0A9    mov         dword ptr [ebp-1C],eax
>0048D0AC    jmp         0048D0B3
 0048D0AE    xor         eax,eax
 0048D0B0    mov         dword ptr [ebp-1C],eax
 0048D0B3    mov         eax,dword ptr [ebp-24]
 0048D0B6    mov         eax,dword ptr [eax+48]
 0048D0B9    push        eax
 0048D0BA    mov         eax,dword ptr [ebp-24]
 0048D0BD    mov         eax,dword ptr [eax+4C]
 0048D0C0    push        eax
 0048D0C1    mov         eax,dword ptr [ebp-24]
 0048D0C4    mov         ecx,dword ptr [eax+44]
 0048D0C7    sub         ecx,dword ptr [ebp-1C]
 0048D0CA    mov         eax,dword ptr [ebp-24]
 0048D0CD    mov         edx,dword ptr [eax+40]
 0048D0D0    sub         edx,dword ptr [ebp-18]
 0048D0D3    mov         eax,dword ptr [ebp-24]
 0048D0D6    mov         ebx,dword ptr [eax]
 0048D0D8    call        dword ptr [ebx+84]
 0048D0DE    inc         dword ptr [ebp-14]
 0048D0E1    dec         dword ptr [ebp-20]
>0048D0E4    jne         0048D050
 0048D0EA    xor         eax,eax
 0048D0EC    pop         edx
 0048D0ED    pop         ecx
 0048D0EE    pop         ecx
 0048D0EF    mov         dword ptr fs:[eax],edx
 0048D0F2    push        48D10F
 0048D0F7    mov         eax,dword ptr [ebp-4]
 0048D0FA    and         word ptr [eax+54],0FFFFFFEF;TWinControl.FControlState:TControlState
 0048D0FF    mov         eax,dword ptr [ebp-4]
 0048D102    call        TWinControl.EnableAlign
 0048D107    ret
>0048D108    jmp         @HandleFinally
>0048D10D    jmp         0048D0F7
 0048D10F    mov         eax,dword ptr [ebp-4]
 0048D112    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 0048D115    test        al,al
>0048D117    je          0048D11F
 0048D119    add         al,0FD
 0048D11B    sub         al,2
>0048D11D    jae         0048D160
 0048D11F    mov         eax,dword ptr [ebp-2C]
 0048D122    sub         eax,dword ptr [ebp-34]
 0048D125    test        eax,eax
>0048D127    jle         0048D159
 0048D129    mov         eax,dword ptr [ebp-2C]
 0048D12C    sub         eax,dword ptr [ebp-34]
 0048D12F    mov         edx,dword ptr [ebp-4]
 0048D132    add         eax,dword ptr [edx+48];TWinControl.Width:Integer
 0048D135    mov         edx,dword ptr [ebp-3C]
 0048D138    sub         edx,dword ptr [ebp-44]
 0048D13B    sub         eax,edx
 0048D13D    mov         edx,dword ptr [ebp-8]
 0048D140    mov         dword ptr [edx],eax
 0048D142    mov         eax,dword ptr [ebp-4]
 0048D145    cmp         byte ptr [eax+5B],4;TWinControl.FAlign:TAlign
>0048D149    jne         0048D160
 0048D14B    mov         eax,dword ptr [ebp-4]
 0048D14E    mov         si,0FFD0
 0048D152    call        @CallDynaInst;TControl.sub_004826F8
>0048D157    jmp         0048D160
 0048D159    mov         eax,dword ptr [ebp-8]
 0048D15C    xor         edx,edx
 0048D15E    mov         dword ptr [eax],edx
 0048D160    mov         eax,dword ptr [ebp-4]
 0048D163    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 0048D166    sub         al,3
>0048D168    jae         0048D1AB
 0048D16A    mov         eax,dword ptr [ebp-28]
 0048D16D    sub         eax,dword ptr [ebp-30]
 0048D170    test        eax,eax
>0048D172    jle         0048D1A4
 0048D174    mov         eax,dword ptr [ebp-28]
 0048D177    sub         eax,dword ptr [ebp-30]
 0048D17A    mov         edx,dword ptr [ebp-4]
 0048D17D    add         eax,dword ptr [edx+4C];TWinControl.Height:Integer
 0048D180    mov         edx,dword ptr [ebp-38]
 0048D183    sub         edx,dword ptr [ebp-40]
 0048D186    sub         eax,edx
 0048D188    mov         edx,dword ptr [ebp-0C]
 0048D18B    mov         dword ptr [edx],eax
 0048D18D    mov         eax,dword ptr [ebp-4]
 0048D190    cmp         byte ptr [eax+5B],2;TWinControl.FAlign:TAlign
>0048D194    jne         0048D1AB
 0048D196    mov         eax,dword ptr [ebp-4]
 0048D199    mov         si,0FFD0
 0048D19D    call        @CallDynaInst;TControl.sub_004826F8
>0048D1A2    jmp         0048D1AB
 0048D1A4    mov         eax,dword ptr [ebp-0C]
 0048D1A7    xor         edx,edx
 0048D1A9    mov         dword ptr [eax],edx
 0048D1AB    mov         al,byte ptr [ebp-0D]
 0048D1AE    pop         esi
 0048D1AF    pop         ebx
 0048D1B0    mov         esp,ebp
 0048D1B2    pop         ebp
 0048D1B3    ret
end;*}

//0048D1B4
{*procedure TLabeledEdit.SetBevelInner(Value:TBevelCut; ?:?);
begin
 0048D1B4    push        ebp
 0048D1B5    mov         ebp,esp
 0048D1B7    add         esp,0FFFFFFF4
 0048D1BA    mov         byte ptr [ebp-9],cl
 0048D1BD    mov         dword ptr [ebp-8],edx
 0048D1C0    mov         dword ptr [ebp-4],eax
 0048D1C3    mov         eax,dword ptr [ebp-8]
 0048D1C6    sub         eax,1
>0048D1C9    jb          0048D1CF
>0048D1CB    je          0048D1FC
>0048D1CD    jmp         0048D227
 0048D1CF    mov         al,byte ptr [ebp-9]
 0048D1D2    mov         edx,dword ptr [ebp-4]
 0048D1D5    cmp         al,byte ptr [edx+163];TLabeledEdit.FBevelInner:TBevelCut
>0048D1DB    je          0048D227
 0048D1DD    mov         al,byte ptr [ebp-9]
 0048D1E0    mov         edx,dword ptr [ebp-4]
 0048D1E3    mov         byte ptr [edx+163],al;TLabeledEdit.FBevelInner:TBevelCut
 0048D1E9    push        0
 0048D1EB    xor         ecx,ecx
 0048D1ED    mov         edx,0B03B
 0048D1F2    mov         eax,dword ptr [ebp-4]
 0048D1F5    call        00484FFC
>0048D1FA    jmp         0048D227
 0048D1FC    mov         al,byte ptr [ebp-9]
 0048D1FF    mov         edx,dword ptr [ebp-4]
 0048D202    cmp         al,byte ptr [edx+164];TLabeledEdit.FBevelOuter:TBevelCut
>0048D208    je          0048D227
 0048D20A    mov         al,byte ptr [ebp-9]
 0048D20D    mov         edx,dword ptr [ebp-4]
 0048D210    mov         byte ptr [edx+164],al;TLabeledEdit.FBevelOuter:TBevelCut
 0048D216    push        0
 0048D218    xor         ecx,ecx
 0048D21A    mov         edx,0B03B
 0048D21F    mov         eax,dword ptr [ebp-4]
 0048D222    call        00484FFC
 0048D227    mov         esp,ebp
 0048D229    pop         ebp
 0048D22A    ret
end;*}

//0048D22C
procedure TLabeledEdit.SetBevelEdges(Value:TBevelEdges);
begin
{*
 0048D22C    push        ebp
 0048D22D    mov         ebp,esp
 0048D22F    add         esp,0FFFFFFF8
 0048D232    mov         byte ptr [ebp-5],dl
 0048D235    mov         dword ptr [ebp-4],eax
 0048D238    mov         eax,dword ptr [ebp-4]
 0048D23B    mov         al,byte ptr [eax+162];TLabeledEdit.FBevelEdges:TBevelEdges
 0048D241    cmp         al,byte ptr [ebp-5]
>0048D244    je          0048D263
 0048D246    mov         al,byte ptr [ebp-5]
 0048D249    mov         edx,dword ptr [ebp-4]
 0048D24C    mov         byte ptr [edx+162],al;TLabeledEdit.FBevelEdges:TBevelEdges
 0048D252    push        0
 0048D254    xor         ecx,ecx
 0048D256    mov         edx,0B03B
 0048D25B    mov         eax,dword ptr [ebp-4]
 0048D25E    call        00484FFC
 0048D263    pop         ecx
 0048D264    pop         ecx
 0048D265    pop         ebp
 0048D266    ret
*}
end;

//0048D268
procedure TLabeledEdit.SetBevelKind(Value:TBevelKind);
begin
{*
 0048D268    push        ebp
 0048D269    mov         ebp,esp
 0048D26B    add         esp,0FFFFFFF8
 0048D26E    mov         byte ptr [ebp-5],dl
 0048D271    mov         dword ptr [ebp-4],eax
 0048D274    mov         al,byte ptr [ebp-5]
 0048D277    mov         edx,dword ptr [ebp-4]
 0048D27A    cmp         al,byte ptr [edx+165];TLabeledEdit.FBevelKind:TBevelKind
>0048D280    je          0048D29F
 0048D282    mov         al,byte ptr [ebp-5]
 0048D285    mov         edx,dword ptr [ebp-4]
 0048D288    mov         byte ptr [edx+165],al;TLabeledEdit.FBevelKind:TBevelKind
 0048D28E    push        0
 0048D290    xor         ecx,ecx
 0048D292    mov         edx,0B03B
 0048D297    mov         eax,dword ptr [ebp-4]
 0048D29A    call        00484FFC
 0048D29F    pop         ecx
 0048D2A0    pop         ecx
 0048D2A1    pop         ebp
 0048D2A2    ret
*}
end;

//0048D2A4
procedure TRichEdit.SetBevelWidth(Value:TBevelWidth);
begin
{*
 0048D2A4    push        ebp
 0048D2A5    mov         ebp,esp
 0048D2A7    add         esp,0FFFFFFF8
 0048D2AA    mov         dword ptr [ebp-8],edx
 0048D2AD    mov         dword ptr [ebp-4],eax
 0048D2B0    mov         eax,dword ptr [ebp-8]
 0048D2B3    mov         edx,dword ptr [ebp-4]
 0048D2B6    cmp         eax,dword ptr [edx+168];TRichEdit.FBevelWidth:TBevelWidth
>0048D2BC    je          0048D2DB
 0048D2BE    mov         eax,dword ptr [ebp-8]
 0048D2C1    mov         edx,dword ptr [ebp-4]
 0048D2C4    mov         dword ptr [edx+168],eax;TRichEdit.FBevelWidth:TBevelWidth
 0048D2CA    push        0
 0048D2CC    xor         ecx,ecx
 0048D2CE    mov         edx,0B03B
 0048D2D3    mov         eax,dword ptr [ebp-4]
 0048D2D6    call        00484FFC
 0048D2DB    pop         ecx
 0048D2DC    pop         ecx
 0048D2DD    pop         ebp
 0048D2DE    ret
*}
end;

//0048D2E0
{*procedure TWinControl.WMNCCalcSize(?:?);
begin
 0048D2E0    push        ebp
 0048D2E1    mov         ebp,esp
 0048D2E3    add         esp,0FFFFFFEC
 0048D2E6    mov         dword ptr [ebp-8],edx
 0048D2E9    mov         dword ptr [ebp-4],eax
 0048D2EC    mov         edx,dword ptr [ebp-8]
 0048D2EF    mov         eax,dword ptr [ebp-4]
 0048D2F2    mov         ecx,dword ptr [eax]
 0048D2F4    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048D2F7    mov         eax,dword ptr [ebp-8]
 0048D2FA    mov         eax,dword ptr [eax+8]
 0048D2FD    mov         dword ptr [ebp-10],eax
 0048D300    mov         eax,dword ptr [ebp-4]
 0048D303    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 0048D309    neg         eax
 0048D30B    push        eax
 0048D30C    mov         eax,dword ptr [ebp-4]
 0048D30F    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 0048D315    neg         eax
 0048D317    push        eax
 0048D318    mov         eax,dword ptr [ebp-10]
 0048D31B    push        eax
 0048D31C    call        user32.InflateRect
 0048D321    mov         eax,dword ptr [ebp-4]
 0048D324    cmp         byte ptr [eax+165],0;TWinControl.FBevelKind:TBevelKind
>0048D32B    je          0048D3BF
 0048D331    xor         eax,eax
 0048D333    mov         dword ptr [ebp-0C],eax
 0048D336    mov         eax,dword ptr [ebp-4]
 0048D339    cmp         byte ptr [eax+163],0;TWinControl.FBevelInner:TBevelCut
>0048D340    je          0048D34E
 0048D342    mov         eax,dword ptr [ebp-4]
 0048D345    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 0048D34B    add         dword ptr [ebp-0C],eax
 0048D34E    mov         eax,dword ptr [ebp-4]
 0048D351    cmp         byte ptr [eax+164],0;TWinControl.FBevelOuter:TBevelCut
>0048D358    je          0048D366
 0048D35A    mov         eax,dword ptr [ebp-4]
 0048D35D    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 0048D363    add         dword ptr [ebp-0C],eax
 0048D366    mov         eax,dword ptr [ebp-10]
 0048D369    mov         dword ptr [ebp-14],eax
 0048D36C    mov         eax,dword ptr [ebp-4]
 0048D36F    test        byte ptr [eax+162],1;TWinControl.FBevelEdges:TBevelEdges
>0048D376    je          0048D380
 0048D378    mov         eax,dword ptr [ebp-14]
 0048D37B    mov         edx,dword ptr [ebp-0C]
 0048D37E    add         dword ptr [eax],edx
 0048D380    mov         eax,dword ptr [ebp-4]
 0048D383    test        byte ptr [eax+162],2;TWinControl.FBevelEdges:TBevelEdges
>0048D38A    je          0048D395
 0048D38C    mov         eax,dword ptr [ebp-14]
 0048D38F    mov         edx,dword ptr [ebp-0C]
 0048D392    add         dword ptr [eax+4],edx
 0048D395    mov         eax,dword ptr [ebp-4]
 0048D398    test        byte ptr [eax+162],4;TWinControl.FBevelEdges:TBevelEdges
>0048D39F    je          0048D3AA
 0048D3A1    mov         eax,dword ptr [ebp-14]
 0048D3A4    mov         edx,dword ptr [ebp-0C]
 0048D3A7    sub         dword ptr [eax+8],edx
 0048D3AA    mov         eax,dword ptr [ebp-4]
 0048D3AD    test        byte ptr [eax+162],8;TWinControl.FBevelEdges:TBevelEdges
>0048D3B4    je          0048D3BF
 0048D3B6    mov         eax,dword ptr [ebp-14]
 0048D3B9    mov         edx,dword ptr [ebp-0C]
 0048D3BC    sub         dword ptr [eax+0C],edx
 0048D3BF    mov         esp,ebp
 0048D3C1    pop         ebp
 0048D3C2    ret
end;*}

//0048D3C4
{*procedure TWinControl.WMNCPaint(?:?);
begin
 0048D3C4    push        ebp
 0048D3C5    mov         ebp,esp
 0048D3C7    add         esp,0FFFFFFBC
 0048D3CA    push        esi
 0048D3CB    push        edi
 0048D3CC    mov         dword ptr [ebp-8],edx
 0048D3CF    mov         dword ptr [ebp-4],eax
 0048D3D2    mov         eax,dword ptr [ebp-4]
 0048D3D5    cmp         byte ptr [eax+165],0;TWinControl.FBevelKind:TBevelKind
>0048D3DC    jne         0048D3EE
 0048D3DE    mov         eax,dword ptr [ebp-4]
 0048D3E1    cmp         dword ptr [eax+16C],0;TWinControl.FBorderWidth:TBorderWidth
>0048D3E8    jbe         0048D64B
 0048D3EE    mov         eax,dword ptr [ebp-4]
 0048D3F1    call        TWinControl.GetHandle
 0048D3F6    push        eax
 0048D3F7    call        user32.GetWindowDC
 0048D3FC    mov         dword ptr [ebp-0C],eax
 0048D3FF    xor         eax,eax
 0048D401    push        ebp
 0048D402    push        48D644
 0048D407    push        dword ptr fs:[eax]
 0048D40A    mov         dword ptr fs:[eax],esp
 0048D40D    lea         eax,[ebp-24]
 0048D410    push        eax
 0048D411    mov         eax,dword ptr [ebp-4]
 0048D414    call        TWinControl.GetHandle
 0048D419    push        eax
 0048D41A    call        user32.GetClientRect
 0048D41F    lea         eax,[ebp-34]
 0048D422    push        eax
 0048D423    mov         eax,dword ptr [ebp-4]
 0048D426    call        TWinControl.GetHandle
 0048D42B    push        eax
 0048D42C    call        user32.GetWindowRect
 0048D431    push        2
 0048D433    lea         eax,[ebp-34]
 0048D436    push        eax
 0048D437    mov         eax,dword ptr [ebp-4]
 0048D43A    call        TWinControl.GetHandle
 0048D43F    push        eax
 0048D440    push        0
 0048D442    call        user32.MapWindowPoints
 0048D447    mov         eax,dword ptr [ebp-30]
 0048D44A    neg         eax
 0048D44C    push        eax
 0048D44D    mov         eax,dword ptr [ebp-34]
 0048D450    neg         eax
 0048D452    push        eax
 0048D453    lea         eax,[ebp-24]
 0048D456    push        eax
 0048D457    call        user32.OffsetRect
 0048D45C    mov         eax,dword ptr [ebp-18]
 0048D45F    push        eax
 0048D460    mov         eax,dword ptr [ebp-1C]
 0048D463    push        eax
 0048D464    mov         eax,dword ptr [ebp-20]
 0048D467    push        eax
 0048D468    mov         eax,dword ptr [ebp-24]
 0048D46B    push        eax
 0048D46C    mov         eax,dword ptr [ebp-0C]
 0048D46F    push        eax
 0048D470    call        gdi32.ExcludeClipRect
 0048D475    lea         esi,[ebp-34]
 0048D478    lea         edi,[ebp-44]
 0048D47B    movs        dword ptr [edi],dword ptr [esi]
 0048D47C    movs        dword ptr [edi],dword ptr [esi]
 0048D47D    movs        dword ptr [edi],dword ptr [esi]
 0048D47E    movs        dword ptr [edi],dword ptr [esi]
 0048D47F    mov         eax,dword ptr [ebp-4]
 0048D482    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 0048D488    push        eax
 0048D489    mov         eax,dword ptr [ebp-4]
 0048D48C    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 0048D492    push        eax
 0048D493    lea         eax,[ebp-24]
 0048D496    push        eax
 0048D497    call        user32.InflateRect
 0048D49C    lea         esi,[ebp-24]
 0048D49F    lea         edi,[ebp-34]
 0048D4A2    movs        dword ptr [edi],dword ptr [esi]
 0048D4A3    movs        dword ptr [edi],dword ptr [esi]
 0048D4A4    movs        dword ptr [edi],dword ptr [esi]
 0048D4A5    movs        dword ptr [edi],dword ptr [esi]
 0048D4A6    mov         eax,dword ptr [ebp-4]
 0048D4A9    cmp         byte ptr [eax+165],0;TWinControl.FBevelKind:TBevelKind
>0048D4B0    je          0048D5D0
 0048D4B6    xor         eax,eax
 0048D4B8    mov         dword ptr [ebp-10],eax
 0048D4BB    mov         eax,dword ptr [ebp-4]
 0048D4BE    cmp         byte ptr [eax+163],0;TWinControl.FBevelInner:TBevelCut
>0048D4C5    je          0048D4D3
 0048D4C7    mov         eax,dword ptr [ebp-4]
 0048D4CA    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 0048D4D0    add         dword ptr [ebp-10],eax
 0048D4D3    mov         eax,dword ptr [ebp-4]
 0048D4D6    cmp         byte ptr [eax+164],0;TWinControl.FBevelOuter:TBevelCut
>0048D4DD    je          0048D4EB
 0048D4DF    mov         eax,dword ptr [ebp-4]
 0048D4E2    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 0048D4E8    add         dword ptr [ebp-10],eax
 0048D4EB    push        0F0
 0048D4ED    mov         eax,dword ptr [ebp-4]
 0048D4F0    call        TWinControl.GetHandle
 0048D4F5    push        eax
 0048D4F6    call        user32.GetWindowLongA
 0048D4FB    mov         dword ptr [ebp-14],eax
 0048D4FE    mov         eax,dword ptr [ebp-4]
 0048D501    test        byte ptr [eax+162],1;TWinControl.FBevelEdges:TBevelEdges
>0048D508    je          0048D510
 0048D50A    mov         eax,dword ptr [ebp-10]
 0048D50D    sub         dword ptr [ebp-34],eax
 0048D510    mov         eax,dword ptr [ebp-4]
 0048D513    test        byte ptr [eax+162],2;TWinControl.FBevelEdges:TBevelEdges
>0048D51A    je          0048D522
 0048D51C    mov         eax,dword ptr [ebp-10]
 0048D51F    sub         dword ptr [ebp-30],eax
 0048D522    mov         eax,dword ptr [ebp-4]
 0048D525    test        byte ptr [eax+162],4;TWinControl.FBevelEdges:TBevelEdges
>0048D52C    je          0048D534
 0048D52E    mov         eax,dword ptr [ebp-10]
 0048D531    add         dword ptr [ebp-2C],eax
 0048D534    test        byte ptr [ebp-12],20
>0048D538    je          0048D548
 0048D53A    push        14
 0048D53C    mov         eax,[0056E1C0];^gvar_00571B2C
 0048D541    mov         eax,dword ptr [eax]
 0048D543    call        eax
 0048D545    add         dword ptr [ebp-2C],eax
 0048D548    mov         eax,dword ptr [ebp-4]
 0048D54B    test        byte ptr [eax+162],8;TWinControl.FBevelEdges:TBevelEdges
>0048D552    je          0048D55A
 0048D554    mov         eax,dword ptr [ebp-10]
 0048D557    add         dword ptr [ebp-28],eax
 0048D55A    test        byte ptr [ebp-12],10
>0048D55E    je          0048D56E
 0048D560    push        15
 0048D562    mov         eax,[0056E1C0];^gvar_00571B2C
 0048D567    mov         eax,dword ptr [eax]
 0048D569    call        eax
 0048D56B    add         dword ptr [ebp-28],eax
 0048D56E    mov         eax,dword ptr [ebp-4]
 0048D571    movzx       eax,byte ptr [eax+162];TWinControl.FBevelEdges:TBevelEdges
 0048D578    mov         edx,dword ptr [ebp-4]
 0048D57B    movzx       edx,byte ptr [edx+165];TWinControl.FBevelKind:TBevelKind
 0048D582    or          eax,dword ptr [edx*4+56C860]
 0048D589    mov         edx,dword ptr [ebp-4]
 0048D58C    movzx       edx,byte ptr [edx+1A5];TWinControl.FCtl3D:Boolean
 0048D593    or          eax,dword ptr [edx*4+56C870]
 0048D59A    or          eax,2000
 0048D59F    push        eax
 0048D5A0    mov         eax,dword ptr [ebp-4]
 0048D5A3    movzx       eax,byte ptr [eax+163];TWinControl.FBevelInner:TBevelCut
 0048D5AA    mov         eax,dword ptr [eax*4+56C840]
 0048D5B1    mov         edx,dword ptr [ebp-4]
 0048D5B4    movzx       edx,byte ptr [edx+164];TWinControl.FBevelOuter:TBevelCut
 0048D5BB    or          eax,dword ptr [edx*4+56C850]
 0048D5C2    push        eax
 0048D5C3    lea         eax,[ebp-34]
 0048D5C6    push        eax
 0048D5C7    mov         eax,dword ptr [ebp-0C]
 0048D5CA    push        eax
 0048D5CB    call        user32.DrawEdge
 0048D5D0    mov         eax,dword ptr [ebp-28]
 0048D5D3    push        eax
 0048D5D4    mov         eax,dword ptr [ebp-2C]
 0048D5D7    push        eax
 0048D5D8    mov         eax,dword ptr [ebp-30]
 0048D5DB    push        eax
 0048D5DC    mov         eax,dword ptr [ebp-34]
 0048D5DF    push        eax
 0048D5E0    mov         eax,dword ptr [ebp-0C]
 0048D5E3    push        eax
 0048D5E4    call        gdi32.IntersectClipRect
 0048D5E9    lea         esi,[ebp-44]
 0048D5EC    lea         edi,[ebp-34]
 0048D5EF    movs        dword ptr [edi],dword ptr [esi]
 0048D5F0    movs        dword ptr [edi],dword ptr [esi]
 0048D5F1    movs        dword ptr [edi],dword ptr [esi]
 0048D5F2    movs        dword ptr [edi],dword ptr [esi]
 0048D5F3    mov         eax,dword ptr [ebp-30]
 0048D5F6    neg         eax
 0048D5F8    push        eax
 0048D5F9    mov         eax,dword ptr [ebp-34]
 0048D5FC    neg         eax
 0048D5FE    push        eax
 0048D5FF    lea         eax,[ebp-34]
 0048D602    push        eax
 0048D603    call        user32.OffsetRect
 0048D608    mov         eax,dword ptr [ebp-4]
 0048D60B    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 0048D611    call        TBrush.GetHandle
 0048D616    push        eax
 0048D617    lea         eax,[ebp-34]
 0048D61A    push        eax
 0048D61B    mov         eax,dword ptr [ebp-0C]
 0048D61E    push        eax
 0048D61F    call        user32.FillRect
 0048D624    xor         eax,eax
 0048D626    pop         edx
 0048D627    pop         ecx
 0048D628    pop         ecx
 0048D629    mov         dword ptr fs:[eax],edx
 0048D62C    push        48D64B
 0048D631    mov         eax,dword ptr [ebp-0C]
 0048D634    push        eax
 0048D635    mov         eax,dword ptr [ebp-4]
 0048D638    call        TWinControl.GetHandle
 0048D63D    push        eax
 0048D63E    call        user32.ReleaseDC
 0048D643    ret
>0048D644    jmp         @HandleFinally
>0048D649    jmp         0048D631
 0048D64B    mov         edx,dword ptr [ebp-8]
 0048D64E    mov         eax,dword ptr [ebp-4]
 0048D651    mov         ecx,dword ptr [eax]
 0048D653    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048D656    call        0046BFC0
 0048D65B    call        0046C0EC
 0048D660    test        al,al
>0048D662    je          0048D67C
 0048D664    mov         eax,dword ptr [ebp-4]
 0048D667    test        byte ptr [eax+52],2;TWinControl.?f52:byte
>0048D66B    je          0048D67C
 0048D66D    call        0046BFC0
 0048D672    xor         ecx,ecx
 0048D674    mov         edx,dword ptr [ebp-4]
 0048D677    call        0046CC20
 0048D67C    pop         edi
 0048D67D    pop         esi
 0048D67E    mov         esp,ebp
 0048D680    pop         ebp
 0048D681    ret
end;*}

//0048D684
{*procedure TWinControl.WMContextMenu(?:?);
begin
 0048D684    push        ebp
 0048D685    mov         ebp,esp
 0048D687    add         esp,0FFFFFFE4
 0048D68A    mov         dword ptr [ebp-8],edx
 0048D68D    mov         dword ptr [ebp-4],eax
 0048D690    mov         eax,dword ptr [ebp-8]
 0048D693    cmp         dword ptr [eax+0C],0
>0048D697    jne         0048D6FD
 0048D699    push        0
 0048D69B    lea         edx,[ebp-1C]
 0048D69E    mov         eax,dword ptr [ebp-8]
 0048D6A1    mov         eax,dword ptr [eax+8]
 0048D6A4    call        00408640
 0048D6A9    lea         edx,[ebp-1C]
 0048D6AC    lea         ecx,[ebp-14]
 0048D6AF    mov         eax,dword ptr [ebp-4]
 0048D6B2    call        TControl.ScreenToClient
 0048D6B7    lea         edx,[ebp-14]
 0048D6BA    xor         ecx,ecx
 0048D6BC    mov         eax,dword ptr [ebp-4]
 0048D6BF    call        00488D4C
 0048D6C4    mov         dword ptr [ebp-0C],eax
 0048D6C7    cmp         dword ptr [ebp-0C],0
>0048D6CB    je          0048D6E9
 0048D6CD    mov         eax,dword ptr [ebp-8]
 0048D6D0    mov         eax,dword ptr [eax+8]
 0048D6D3    push        eax
 0048D6D4    xor         ecx,ecx
 0048D6D6    mov         edx,7B
 0048D6DB    mov         eax,dword ptr [ebp-0C]
 0048D6DE    call        00484FFC
 0048D6E3    mov         edx,dword ptr [ebp-8]
 0048D6E6    mov         dword ptr [edx+0C],eax
 0048D6E9    mov         eax,dword ptr [ebp-8]
 0048D6EC    cmp         dword ptr [eax+0C],0
>0048D6F0    jne         0048D6FD
 0048D6F2    mov         edx,dword ptr [ebp-8]
 0048D6F5    mov         eax,dword ptr [ebp-4]
 0048D6F8    call        TControl.WMContextMenu
 0048D6FD    mov         esp,ebp
 0048D6FF    pop         ebp
 0048D700    ret
end;*}

//0048D704
{*procedure sub_0048D704(?:TWinControl; ?:?);
begin
 0048D704    push        ebp
 0048D705    mov         ebp,esp
 0048D707    add         esp,0FFFFFFF4
 0048D70A    mov         word ptr [ebp-6],dx
 0048D70E    mov         dword ptr [ebp-4],eax
 0048D711    mov         eax,dword ptr [ebp-4]
 0048D714    call        004A0740
 0048D719    mov         dword ptr [ebp-0C],eax
 0048D71C    cmp         dword ptr [ebp-0C],0
>0048D720    je          0048D779
 0048D722    mov         ax,word ptr [ebp-6]
 0048D726    sub         ax,9
>0048D72A    je          0048D73B
 0048D72C    sub         ax,9
>0048D730    je          0048D75B
 0048D732    add         eax,0FFFFFFED
 0048D735    sub         ax,4
>0048D739    jae         0048D779
 0048D73B    push        0
 0048D73D    mov         dx,1
 0048D741    mov         ax,2
 0048D745    call        0040845C
 0048D74A    mov         ecx,eax
 0048D74C    mov         edx,127
 0048D751    mov         eax,dword ptr [ebp-0C]
 0048D754    call        00484FFC
>0048D759    jmp         0048D779
 0048D75B    push        0
 0048D75D    mov         dx,2
 0048D761    mov         ax,2
 0048D765    call        0040845C
 0048D76A    mov         ecx,eax
 0048D76C    mov         edx,127
 0048D771    mov         eax,dword ptr [ebp-0C]
 0048D774    call        00484FFC
 0048D779    mov         esp,ebp
 0048D77B    pop         ebp
 0048D77C    ret
end;*}

//0048D780
{*procedure TWinControl.sub_0048D780(?:?);
begin
 0048D780    push        ebp
 0048D781    mov         ebp,esp
 0048D783    add         esp,0FFFFFFF8
 0048D786    mov         dword ptr [ebp-8],edx
 0048D789    mov         dword ptr [ebp-4],eax
 0048D78C    mov         eax,dword ptr [ebp-8]
 0048D78F    cmp         dword ptr [eax+0C],1
>0048D793    je          0048D7C1
 0048D795    mov         eax,dword ptr [ebp-8]
 0048D798    test        byte ptr [eax+8],1
>0048D79C    je          0048D7A7
 0048D79E    mov         eax,dword ptr [ebp-4]
 0048D7A1    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>0048D7A5    je          0048D7B4
 0048D7A7    mov         edx,dword ptr [ebp-8]
 0048D7AA    mov         eax,dword ptr [ebp-4]
 0048D7AD    call        TWinControl.PaintHandler
>0048D7B2    jmp         0048D7CC
 0048D7B4    mov         edx,dword ptr [ebp-8]
 0048D7B7    mov         eax,dword ptr [ebp-4]
 0048D7BA    mov         ecx,dword ptr [eax]
 0048D7BC    call        dword ptr [ecx-10];TWinControl.DefaultHandler
>0048D7BF    jmp         0048D7CC
 0048D7C1    mov         edx,dword ptr [ebp-8]
 0048D7C4    mov         eax,dword ptr [ebp-4]
 0048D7C7    mov         ecx,dword ptr [eax]
 0048D7C9    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048D7CC    pop         ecx
 0048D7CD    pop         ecx
 0048D7CE    pop         ebp
 0048D7CF    ret
end;*}

//0048D7D0
{*function TPanel.GetParentBackground:?;
begin
 0048D7D0    push        ebp
 0048D7D1    mov         ebp,esp
 0048D7D3    add         esp,0FFFFFFF8
 0048D7D6    mov         dword ptr [ebp-4],eax
 0048D7D9    mov         eax,dword ptr [ebp-4]
 0048D7DC    test        byte ptr [eax+52],4;TPanel.?f52:byte
 0048D7E0    setne       al
 0048D7E3    mov         byte ptr [ebp-5],al
 0048D7E6    mov         al,byte ptr [ebp-5]
 0048D7E9    pop         ecx
 0048D7EA    pop         ecx
 0048D7EB    pop         ebp
 0048D7EC    ret
end;*}

//0048D7F0
procedure TRadioGroup.SetParentBackground(Value:Boolean);
begin
{*
 0048D7F0    push        ebp
 0048D7F1    mov         ebp,esp
 0048D7F3    add         esp,0FFFFFFF8
 0048D7F6    mov         byte ptr [ebp-5],dl
 0048D7F9    mov         dword ptr [ebp-4],eax
 0048D7FC    mov         eax,dword ptr [ebp-4]
 0048D7FF    call        TPanel.GetParentBackground
 0048D804    cmp         al,byte ptr [ebp-5]
>0048D807    je          0048D83D
 0048D809    cmp         byte ptr [ebp-5],0
>0048D80D    je          0048D822
 0048D80F    mov         eax,[0048D844];0x40000 gvar_0048D844
 0048D814    mov         edx,dword ptr [ebp-4]
 0048D817    or          eax,dword ptr [edx+50];TRadioGroup.FControlStyle:TControlStyle
 0048D81A    mov         edx,dword ptr [ebp-4]
 0048D81D    mov         dword ptr [edx+50],eax;TRadioGroup.FControlStyle:TControlStyle
>0048D820    jmp         0048D835
 0048D822    mov         eax,[0048D844];0x40000 gvar_0048D844
 0048D827    mov         edx,dword ptr [ebp-4]
 0048D82A    not         eax
 0048D82C    and         eax,dword ptr [edx+50];TRadioGroup.FControlStyle:TControlStyle
 0048D82F    mov         edx,dword ptr [ebp-4]
 0048D832    mov         dword ptr [edx+50],eax;TRadioGroup.FControlStyle:TControlStyle
 0048D835    mov         eax,dword ptr [ebp-4]
 0048D838    mov         edx,dword ptr [eax]
 0048D83A    call        dword ptr [edx+7C];TRadioGroup.sub_0048BE68
 0048D83D    pop         ecx
 0048D83E    pop         ecx
 0048D83F    pop         ebp
 0048D840    ret
*}
end;

//0048D848
constructor sub_0048D848;
begin
{*
 0048D848    push        ebp
 0048D849    mov         ebp,esp
 0048D84B    add         esp,0FFFFFFF4
 0048D84E    test        dl,dl
>0048D850    je          0048D85A
 0048D852    add         esp,0FFFFFFF0
 0048D855    call        @ClassCreate
 0048D85A    mov         dword ptr [ebp-0C],ecx
 0048D85D    mov         byte ptr [ebp-5],dl
 0048D860    mov         dword ptr [ebp-4],eax
 0048D863    mov         ecx,dword ptr [ebp-0C]
 0048D866    xor         edx,edx
 0048D868    mov         eax,dword ptr [ebp-4]
 0048D86B    call        00482250
 0048D870    mov         dl,1
 0048D872    mov         eax,[0047D3C4];TControlCanvas
 0048D877    call        TCanvas.Create;TControlCanvas.Create
 0048D87C    mov         edx,dword ptr [ebp-4]
 0048D87F    mov         dword ptr [edx+160],eax;TGraphicControl....................................................
 0048D885    mov         eax,dword ptr [ebp-4]
 0048D888    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 0048D88E    mov         edx,dword ptr [ebp-4]
 0048D891    call        00481B3C
 0048D896    mov         eax,dword ptr [ebp-4]
 0048D899    cmp         byte ptr [ebp-5],0
>0048D89D    je          0048D8AE
 0048D89F    call        @AfterConstruction
 0048D8A4    pop         dword ptr fs:[0]
 0048D8AB    add         esp,0C
 0048D8AE    mov         eax,dword ptr [ebp-4]
 0048D8B1    mov         esp,ebp
 0048D8B3    pop         ebp
 0048D8B4    ret
*}
end;

//0048D8B8
destructor TGraphicControl.Destroy;
begin
{*
 0048D8B8    push        ebp
 0048D8B9    mov         ebp,esp
 0048D8BB    add         esp,0FFFFFFF8
 0048D8BE    call        @BeforeDestruction
 0048D8C3    mov         byte ptr [ebp-5],dl
 0048D8C6    mov         dword ptr [ebp-4],eax
 0048D8C9    mov         eax,[0056C834];0x0 gvar_0056C834
 0048D8CE    cmp         eax,dword ptr [ebp-4]
>0048D8D1    jne         0048D8DA
 0048D8D3    xor         eax,eax
 0048D8D5    call        0047FB90
 0048D8DA    mov         eax,dword ptr [ebp-4]
 0048D8DD    mov         eax,dword ptr [eax+160]
 0048D8E3    call        TObject.Free
 0048D8E8    mov         dl,byte ptr [ebp-5]
 0048D8EB    and         dl,0FC
 0048D8EE    mov         eax,dword ptr [ebp-4]
 0048D8F1    call        TControl.Destroy
 0048D8F6    cmp         byte ptr [ebp-5],0
>0048D8FA    jle         0048D904
 0048D8FC    mov         eax,dword ptr [ebp-4]
 0048D8FF    call        @ClassDestroy
 0048D904    pop         ecx
 0048D905    pop         ecx
 0048D906    pop         ebp
 0048D907    ret
*}
end;

//0048D908
{*procedure TGraphicControl.WMPaint(?:?);
begin
 0048D908    push        ebp
 0048D909    mov         ebp,esp
 0048D90B    add         esp,0FFFFFFF8
 0048D90E    mov         dword ptr [ebp-8],edx
 0048D911    mov         dword ptr [ebp-4],eax
 0048D914    mov         eax,dword ptr [ebp-8]
 0048D917    cmp         dword ptr [eax+4],0
>0048D91B    je          0048D9B2
 0048D921    mov         eax,dword ptr [ebp-4]
 0048D924    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 0048D92A    call        TCanvas.Lock
 0048D92F    xor         eax,eax
 0048D931    push        ebp
 0048D932    push        48D9AB
 0048D937    push        dword ptr fs:[eax]
 0048D93A    mov         dword ptr fs:[eax],esp
 0048D93D    mov         edx,dword ptr [ebp-8]
 0048D940    mov         edx,dword ptr [edx+4]
 0048D943    mov         eax,dword ptr [ebp-4]
 0048D946    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 0048D94C    call        TCanvas.SetHandle
 0048D951    xor         eax,eax
 0048D953    push        ebp
 0048D954    push        48D988
 0048D959    push        dword ptr fs:[eax]
 0048D95C    mov         dword ptr fs:[eax],esp
 0048D95F    mov         eax,dword ptr [ebp-4]
 0048D962    mov         edx,dword ptr [eax]
 0048D964    call        dword ptr [edx+8C];TGraphicControl.sub_0048D9B8
 0048D96A    xor         eax,eax
 0048D96C    pop         edx
 0048D96D    pop         ecx
 0048D96E    pop         ecx
 0048D96F    mov         dword ptr fs:[eax],edx
 0048D972    push        48D98F
 0048D977    mov         eax,dword ptr [ebp-4]
 0048D97A    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 0048D980    xor         edx,edx
 0048D982    call        TCanvas.SetHandle
 0048D987    ret
>0048D988    jmp         @HandleFinally
>0048D98D    jmp         0048D977
 0048D98F    xor         eax,eax
 0048D991    pop         edx
 0048D992    pop         ecx
 0048D993    pop         ecx
 0048D994    mov         dword ptr fs:[eax],edx
 0048D997    push        48D9B2
 0048D99C    mov         eax,dword ptr [ebp-4]
 0048D99F    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 0048D9A5    call        TCanvas.Unlock
 0048D9AA    ret
>0048D9AB    jmp         @HandleFinally
>0048D9B0    jmp         0048D99C
 0048D9B2    pop         ecx
 0048D9B3    pop         ecx
 0048D9B4    pop         ebp
 0048D9B5    ret
end;*}

//0048D9B8
procedure sub_0048D9B8;
begin
{*
 0048D9B8    push        ebp
 0048D9B9    mov         ebp,esp
 0048D9BB    push        ecx
 0048D9BC    mov         dword ptr [ebp-4],eax
 0048D9BF    pop         ecx
 0048D9C0    pop         ebp
 0048D9C1    ret
*}
end;

//0048D9C4
constructor sub_0048D9C4;
begin
{*
 0048D9C4    push        ebp
 0048D9C5    mov         ebp,esp
 0048D9C7    add         esp,0FFFFFFF4
 0048D9CA    test        dl,dl
>0048D9CC    je          0048D9D6
 0048D9CE    add         esp,0FFFFFFF0
 0048D9D1    call        @ClassCreate
 0048D9D6    mov         dword ptr [ebp-0C],ecx
 0048D9D9    mov         byte ptr [ebp-5],dl
 0048D9DC    mov         dword ptr [ebp-4],eax
 0048D9DF    mov         ecx,dword ptr [ebp-0C]
 0048D9E2    xor         edx,edx
 0048D9E4    mov         eax,dword ptr [ebp-4]
 0048D9E7    call        0048E4F0
 0048D9EC    mov         edx,80FFFF
 0048D9F1    mov         eax,dword ptr [ebp-4]
 0048D9F4    call        TPanel.SetColor
 0048D9F9    mov         eax,[0056E604];^Screen:TScreen
 0048D9FE    mov         eax,dword ptr [eax]
 0048DA00    mov         edx,dword ptr [eax+80];TScreen.FHintFont:TFont
 0048DA06    mov         eax,dword ptr [ebp-4]
 0048DA09    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DA0F    call        TCanvas.SetFont
 0048DA14    mov         eax,dword ptr [ebp-4]
 0048DA17    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DA1D    mov         eax,dword ptr [eax+14];TCanvas.Brush:TBrush
 0048DA20    mov         dl,1
 0048DA22    call        TBrush.SetStyle
 0048DA27    mov         eax,dword ptr [ebp-4]
 0048DA2A    cmp         byte ptr [ebp-5],0
>0048DA2E    je          0048DA3F
 0048DA30    call        @AfterConstruction
 0048DA35    pop         dword ptr fs:[0]
 0048DA3C    add         esp,0C
 0048DA3F    mov         eax,dword ptr [ebp-4]
 0048DA42    mov         esp,ebp
 0048DA44    pop         ebp
 0048DA45    ret
*}
end;

//0048DA48
{*procedure sub_0048DA48(?:?);
begin
 0048DA48    push        ebp
 0048DA49    mov         ebp,esp
 0048DA4B    add         esp,0FFFFFFF8
 0048DA4E    mov         dword ptr [ebp-8],edx
 0048DA51    mov         dword ptr [ebp-4],eax
 0048DA54    mov         edx,dword ptr [ebp-8]
 0048DA57    mov         eax,dword ptr [ebp-4]
 0048DA5A    call        00488034
 0048DA5F    mov         eax,dword ptr [ebp-8]
 0048DA62    mov         dword ptr [eax+4],80800000
 0048DA69    mov         eax,dword ptr [ebp-8]
 0048DA6C    or          dword ptr [eax+24],800
 0048DA73    cmp         byte ptr ds:[571DA0],0;NewStyleControls:Boolean
>0048DA7A    je          0048DA86
 0048DA7C    mov         eax,dword ptr [ebp-8]
 0048DA7F    mov         dword ptr [eax+8],80
 0048DA86    mov         edx,1
 0048DA8B    mov         eax,5
 0048DA90    call        00410F7C
 0048DA95    test        al,al
>0048DA97    je          0048DAA3
 0048DA99    mov         eax,dword ptr [ebp-8]
 0048DA9C    or          dword ptr [eax+24],20000
 0048DAA3    cmp         byte ptr ds:[571DA0],0;NewStyleControls:Boolean
>0048DAAA    je          0048DAB6
 0048DAAC    mov         eax,dword ptr [ebp-8]
 0048DAAF    mov         dword ptr [eax+8],80
 0048DAB6    mov         edx,dword ptr [ebp-8]
 0048DAB9    add         edx,8
 0048DABC    mov         eax,dword ptr [ebp-4]
 0048DABF    call        00487FB4
 0048DAC4    pop         ecx
 0048DAC5    pop         ecx
 0048DAC6    pop         ebp
 0048DAC7    ret
end;*}

//0048DAC8
{*procedure THintWindow.WMNCHitTest(?:?);
begin
 0048DAC8    push        ebp
 0048DAC9    mov         ebp,esp
 0048DACB    add         esp,0FFFFFFF8
 0048DACE    mov         dword ptr [ebp-8],edx
 0048DAD1    mov         dword ptr [ebp-4],eax
 0048DAD4    mov         eax,dword ptr [ebp-8]
 0048DAD7    mov         dword ptr [eax+0C],0FFFFFFFF
 0048DADE    pop         ecx
 0048DADF    pop         ecx
 0048DAE0    pop         ebp
 0048DAE1    ret
end;*}

//0048DAE4
{*procedure THintWindow.WMNCPaint(?:?);
begin
 0048DAE4    push        ebp
 0048DAE5    mov         ebp,esp
 0048DAE7    add         esp,0FFFFFFF4
 0048DAEA    mov         dword ptr [ebp-0C],edx
 0048DAED    mov         dword ptr [ebp-4],eax
 0048DAF0    mov         eax,dword ptr [ebp-4]
 0048DAF3    call        TWinControl.GetHandle
 0048DAF8    push        eax
 0048DAF9    call        user32.GetWindowDC
 0048DAFE    mov         dword ptr [ebp-8],eax
 0048DB01    xor         eax,eax
 0048DB03    push        ebp
 0048DB04    push        48DB3D
 0048DB09    push        dword ptr fs:[eax]
 0048DB0C    mov         dword ptr fs:[eax],esp
 0048DB0F    mov         edx,dword ptr [ebp-8]
 0048DB12    mov         eax,dword ptr [ebp-4]
 0048DB15    mov         ecx,dword ptr [eax]
 0048DB17    call        dword ptr [ecx+0CC];THintWindow.sub_0048E008
 0048DB1D    xor         eax,eax
 0048DB1F    pop         edx
 0048DB20    pop         ecx
 0048DB21    pop         ecx
 0048DB22    mov         dword ptr fs:[eax],edx
 0048DB25    push        48DB44
 0048DB2A    mov         eax,dword ptr [ebp-8]
 0048DB2D    push        eax
 0048DB2E    mov         eax,dword ptr [ebp-4]
 0048DB31    call        TWinControl.GetHandle
 0048DB36    push        eax
 0048DB37    call        user32.ReleaseDC
 0048DB3C    ret
>0048DB3D    jmp         @HandleFinally
>0048DB42    jmp         0048DB2A
 0048DB44    mov         esp,ebp
 0048DB46    pop         ebp
 0048DB47    ret
end;*}

//0048DB48
procedure sub_0048DB48;
begin
{*
 0048DB48    push        ebp
 0048DB49    mov         ebp,esp
 0048DB4B    add         esp,0FFFFFFE8
 0048DB4E    xor         edx,edx
 0048DB50    mov         dword ptr [ebp-18],edx
 0048DB53    mov         dword ptr [ebp-4],eax
 0048DB56    xor         eax,eax
 0048DB58    push        ebp
 0048DB59    push        48DBEA
 0048DB5E    push        dword ptr fs:[eax]
 0048DB61    mov         dword ptr fs:[eax],esp
 0048DB64    lea         edx,[ebp-14]
 0048DB67    mov         eax,dword ptr [ebp-4]
 0048DB6A    mov         ecx,dword ptr [eax]
 0048DB6C    call        dword ptr [ecx+44];THintWindow.sub_0048C23C
 0048DB6F    add         dword ptr [ebp-14],2
 0048DB73    add         dword ptr [ebp-10],2
 0048DB77    mov         eax,[0056E604];^Screen:TScreen
 0048DB7C    mov         eax,dword ptr [eax]
 0048DB7E    mov         eax,dword ptr [eax+80];TScreen.FHintFont:TFont
 0048DB84    mov         edx,dword ptr [eax+18];TFont.Color:TColor
 0048DB87    mov         eax,dword ptr [ebp-4]
 0048DB8A    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DB90    mov         eax,dword ptr [eax+0C];TCanvas.Font:TFont
 0048DB93    call        TFont.SetColor
 0048DB98    mov         eax,dword ptr [ebp-4]
 0048DB9B    call        004867CC
 0048DBA0    or          eax,810
 0048DBA5    push        eax
 0048DBA6    lea         eax,[ebp-14]
 0048DBA9    push        eax
 0048DBAA    push        0FF
 0048DBAC    lea         edx,[ebp-18]
 0048DBAF    mov         eax,dword ptr [ebp-4]
 0048DBB2    call        TPanel.GetCaption
 0048DBB7    mov         eax,dword ptr [ebp-18]
 0048DBBA    call        @LStrToPChar
 0048DBBF    push        eax
 0048DBC0    mov         eax,dword ptr [ebp-4]
 0048DBC3    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DBC9    call        0042F6A0
 0048DBCE    push        eax
 0048DBCF    call        user32.DrawTextA
 0048DBD4    xor         eax,eax
 0048DBD6    pop         edx
 0048DBD7    pop         ecx
 0048DBD8    pop         ecx
 0048DBD9    mov         dword ptr fs:[eax],edx
 0048DBDC    push        48DBF1
 0048DBE1    lea         eax,[ebp-18]
 0048DBE4    call        @LStrClr
 0048DBE9    ret
>0048DBEA    jmp         @HandleFinally
>0048DBEF    jmp         0048DBE1
 0048DBF1    mov         esp,ebp
 0048DBF3    pop         ebp
 0048DBF4    ret
*}
end;

//0048DBF8
{*function sub_0048DBF8(?:?):?;
begin
 0048DBF8    push        ebp
 0048DBF9    mov         ebp,esp
 0048DBFB    add         esp,0FFFFFFF4
 0048DBFE    mov         dword ptr [ebp-8],edx
 0048DC01    mov         dword ptr [ebp-4],eax
 0048DC04    mov         eax,dword ptr [ebp-8]
 0048DC07    cmp         dword ptr [eax+4],100
>0048DC0E    jb          0048DC1C
 0048DC10    mov         eax,dword ptr [ebp-8]
 0048DC13    cmp         dword ptr [eax+4],108
>0048DC1A    jbe         0048DC80
 0048DC1C    mov         eax,dword ptr [ebp-8]
 0048DC1F    cmp         dword ptr [eax+4],0B000
>0048DC26    je          0048DC80
 0048DC28    mov         eax,dword ptr [ebp-8]
 0048DC2B    cmp         dword ptr [eax+4],0B001
>0048DC32    je          0048DC80
 0048DC34    mov         eax,dword ptr [ebp-8]
 0048DC37    cmp         dword ptr [eax+4],0B016
>0048DC3E    je          0048DC80
 0048DC40    mov         eax,dword ptr [ebp-8]
 0048DC43    cmp         dword ptr [eax+4],0B017
>0048DC4A    je          0048DC80
 0048DC4C    mov         eax,dword ptr [ebp-8]
 0048DC4F    cmp         dword ptr [eax+4],111
>0048DC56    je          0048DC80
 0048DC58    mov         eax,dword ptr [ebp-8]
 0048DC5B    cmp         dword ptr [eax+4],200
>0048DC62    jbe         0048DC70
 0048DC64    mov         eax,dword ptr [ebp-8]
 0048DC67    cmp         dword ptr [eax+4],20A
>0048DC6E    jbe         0048DC80
 0048DC70    mov         eax,dword ptr [ebp-8]
 0048DC73    cmp         dword ptr [eax+4],0A0
>0048DC7A    je          0048DC80
 0048DC7C    xor         eax,eax
>0048DC7E    jmp         0048DC82
 0048DC80    mov         al,1
 0048DC82    mov         byte ptr [ebp-9],al
 0048DC85    mov         al,byte ptr [ebp-9]
 0048DC88    mov         esp,ebp
 0048DC8A    pop         ebp
 0048DC8B    ret
end;*}

//0048DC8C
{*procedure sub_0048DC8C(?:?);
begin
 0048DC8C    push        ebp
 0048DC8D    mov         ebp,esp
 0048DC8F    push        ecx
 0048DC90    mov         dword ptr [ebp-4],eax
 0048DC93    mov         eax,dword ptr [ebp-4]
 0048DC96    call        004888E4
 0048DC9B    pop         ecx
 0048DC9C    pop         ebp
 0048DC9D    ret
end;*}

//0048DCA0
{*procedure THintWindow.CMTextChanged(?:?);
begin
 0048DCA0    push        ebp
 0048DCA1    mov         ebp,esp
 0048DCA3    add         esp,0FFFFFFF0
 0048DCA6    xor         ecx,ecx
 0048DCA8    mov         dword ptr [ebp-10],ecx
 0048DCAB    mov         dword ptr [ebp-0C],ecx
 0048DCAE    mov         dword ptr [ebp-8],edx
 0048DCB1    mov         dword ptr [ebp-4],eax
 0048DCB4    xor         eax,eax
 0048DCB6    push        ebp
 0048DCB7    push        48DD46
 0048DCBC    push        dword ptr fs:[eax]
 0048DCBF    mov         dword ptr fs:[eax],esp
 0048DCC2    mov         edx,dword ptr [ebp-8]
 0048DCC5    mov         eax,dword ptr [ebp-4]
 0048DCC8    mov         ecx,dword ptr [eax]
 0048DCCA    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 0048DCCD    mov         eax,dword ptr [ebp-4]
 0048DCD0    cmp         byte ptr [eax+210],0;THintWindow.FActivating:Boolean
>0048DCD7    jne         0048DD2B
 0048DCD9    lea         edx,[ebp-0C]
 0048DCDC    mov         eax,dword ptr [ebp-4]
 0048DCDF    call        TPanel.GetCaption
 0048DCE4    mov         edx,dword ptr [ebp-0C]
 0048DCE7    mov         eax,dword ptr [ebp-4]
 0048DCEA    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DCF0    call        0042F43C
 0048DCF5    mov         edx,eax
 0048DCF7    add         edx,6
 0048DCFA    mov         eax,dword ptr [ebp-4]
 0048DCFD    call        TSplitter.SetWidth
 0048DD02    lea         edx,[ebp-10]
 0048DD05    mov         eax,dword ptr [ebp-4]
 0048DD08    call        TPanel.GetCaption
 0048DD0D    mov         edx,dword ptr [ebp-10]
 0048DD10    mov         eax,dword ptr [ebp-4]
 0048DD13    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DD19    call        0042F464
 0048DD1E    mov         edx,eax
 0048DD20    add         edx,4
 0048DD23    mov         eax,dword ptr [ebp-4]
 0048DD26    call        TToolButton.SetHeight
 0048DD2B    xor         eax,eax
 0048DD2D    pop         edx
 0048DD2E    pop         ecx
 0048DD2F    pop         ecx
 0048DD30    mov         dword ptr fs:[eax],edx
 0048DD33    push        48DD4D
 0048DD38    lea         eax,[ebp-10]
 0048DD3B    mov         edx,2
 0048DD40    call        @LStrArrayClr
 0048DD45    ret
>0048DD46    jmp         @HandleFinally
>0048DD4B    jmp         0048DD38
 0048DD4D    mov         esp,ebp
 0048DD4F    pop         ebp
 0048DD50    ret
end;*}

//0048DD54
{*procedure sub_0048DD54(?:?; ?:?);
begin
 0048DD54    push        ebp
 0048DD55    mov         ebp,esp
 0048DD57    add         esp,0FFFFFFD8
 0048DD5A    push        esi
 0048DD5B    push        edi
 0048DD5C    mov         esi,edx
 0048DD5E    lea         edi,[ebp-1D]
 0048DD61    movs        dword ptr [edi],dword ptr [esi]
 0048DD62    movs        dword ptr [edi],dword ptr [esi]
 0048DD63    movs        dword ptr [edi],dword ptr [esi]
 0048DD64    movs        dword ptr [edi],dword ptr [esi]
 0048DD65    mov         dword ptr [ebp-8],ecx
 0048DD68    mov         dword ptr [ebp-4],eax
 0048DD6B    mov         eax,dword ptr [ebp-4]
 0048DD6E    mov         byte ptr [eax+210],1;THintWindow.FActivating:Boolean
 0048DD75    xor         eax,eax
 0048DD77    push        ebp
 0048DD78    push        48DF5C
 0048DD7D    push        dword ptr fs:[eax]
 0048DD80    mov         dword ptr fs:[eax],esp
 0048DD83    mov         edx,dword ptr [ebp-8]
 0048DD86    mov         eax,dword ptr [ebp-4]
 0048DD89    call        TPanel.SetCaption
 0048DD8E    add         dword ptr [ebp-11],4
 0048DD92    lea         edx,[ebp-1D]
 0048DD95    mov         eax,dword ptr [ebp-4]
 0048DD98    call        004850E8
 0048DD9D    mov         eax,[0056E604];^Screen:TScreen
 0048DDA2    mov         eax,dword ptr [eax]
 0048DDA4    call        004A88F4
 0048DDA9    mov         edx,dword ptr [ebp-4]
 0048DDAC    mov         edx,dword ptr [edx+4C];THintWindow.Height:Integer
 0048DDAF    add         edx,dword ptr [ebp-19]
 0048DDB2    cmp         eax,edx
>0048DDB4    jge         0048DDCB
 0048DDB6    mov         eax,[0056E604];^Screen:TScreen
 0048DDBB    mov         eax,dword ptr [eax]
 0048DDBD    call        004A88F4
 0048DDC2    mov         edx,dword ptr [ebp-4]
 0048DDC5    sub         eax,dword ptr [edx+4C]
 0048DDC8    mov         dword ptr [ebp-19],eax
 0048DDCB    mov         eax,[0056E604];^Screen:TScreen
 0048DDD0    mov         eax,dword ptr [eax]
 0048DDD2    call        004A8914
 0048DDD7    mov         edx,dword ptr [ebp-4]
 0048DDDA    mov         edx,dword ptr [edx+48];THintWindow.Width:Integer
 0048DDDD    add         edx,dword ptr [ebp-1D]
 0048DDE0    cmp         eax,edx
>0048DDE2    jge         0048DDF9
 0048DDE4    mov         eax,[0056E604];^Screen:TScreen
 0048DDE9    mov         eax,dword ptr [eax]
 0048DDEB    call        004A8914
 0048DDF0    mov         edx,dword ptr [ebp-4]
 0048DDF3    sub         eax,dword ptr [edx+48]
 0048DDF6    mov         dword ptr [ebp-1D],eax
 0048DDF9    mov         eax,[0056E604];^Screen:TScreen
 0048DDFE    mov         eax,dword ptr [eax]
 0048DE00    call        004A88D4
 0048DE05    cmp         eax,dword ptr [ebp-1D]
>0048DE08    jle         0048DE19
 0048DE0A    mov         eax,[0056E604];^Screen:TScreen
 0048DE0F    mov         eax,dword ptr [eax]
 0048DE11    call        004A88D4
 0048DE16    mov         dword ptr [ebp-1D],eax
 0048DE19    mov         eax,[0056E604];^Screen:TScreen
 0048DE1E    mov         eax,dword ptr [eax]
 0048DE20    call        004A88B4
 0048DE25    cmp         eax,dword ptr [ebp-11]
>0048DE28    jle         0048DE39
 0048DE2A    mov         eax,[0056E604];^Screen:TScreen
 0048DE2F    mov         eax,dword ptr [eax]
 0048DE31    call        004A88B4
 0048DE36    mov         dword ptr [ebp-11],eax
 0048DE39    push        10
 0048DE3B    mov         eax,dword ptr [ebp-4]
 0048DE3E    mov         eax,dword ptr [eax+4C];THintWindow.Height:Integer
 0048DE41    push        eax
 0048DE42    mov         eax,dword ptr [ebp-4]
 0048DE45    mov         eax,dword ptr [eax+48];THintWindow.Width:Integer
 0048DE48    push        eax
 0048DE49    mov         eax,dword ptr [ebp-19]
 0048DE4C    push        eax
 0048DE4D    mov         eax,dword ptr [ebp-1D]
 0048DE50    push        eax
 0048DE51    push        0FF
 0048DE53    mov         eax,dword ptr [ebp-4]
 0048DE56    call        TWinControl.GetHandle
 0048DE5B    push        eax
 0048DE5C    call        user32.SetWindowPos
 0048DE61    call        kernel32.GetTickCount
 0048DE66    mov         edx,dword ptr [ebp-4]
 0048DE69    sub         eax,dword ptr [edx+214]
 0048DE6F    cmp         eax,0FA
>0048DE74    jbe         0048DF0C
 0048DE7A    mov         eax,dword ptr [ebp-8]
 0048DE7D    call        @LStrLen
 0048DE82    cmp         eax,64
>0048DE85    jge         0048DF0C
 0048DE8B    cmp         dword ptr ds:[56C770],0;gvar_0056C770
>0048DE92    je          0048DF0C
 0048DE94    push        0
 0048DE96    lea         eax,[ebp-0C]
 0048DE99    push        eax
 0048DE9A    push        0
 0048DE9C    push        1016
 0048DEA1    call        user32.SystemParametersInfoA
 0048DEA6    cmp         dword ptr [ebp-0C],0
>0048DEAA    je          0048DF0C
 0048DEAC    push        0
 0048DEAE    lea         eax,[ebp-0C]
 0048DEB1    push        eax
 0048DEB2    push        0
 0048DEB4    push        1018
 0048DEB9    call        user32.SystemParametersInfoA
 0048DEBE    cmp         dword ptr [ebp-0C],0
>0048DEC2    je          0048DECA
 0048DEC4    mov         byte ptr [ebp-0D],2
>0048DEC8    jmp         0048DEE9
 0048DECA    lea         edx,[ebp-28]
 0048DECD    mov         eax,[00571D9C];0x0 Mouse:TMouse
 0048DED2    call        00491DC4
 0048DED7    mov         eax,dword ptr [ebp-24]
 0048DEDA    cmp         eax,dword ptr [ebp-19]
>0048DEDD    jle         0048DEE5
 0048DEDF    mov         byte ptr [ebp-0D],0
>0048DEE3    jmp         0048DEE9
 0048DEE5    mov         byte ptr [ebp-0D],1
 0048DEE9    xor         eax,eax
 0048DEEB    mov         al,byte ptr [ebp-0D]
 0048DEEE    mov         eax,dword ptr [eax*4+56C878]
 0048DEF5    or          eax,40000
 0048DEFA    push        eax
 0048DEFB    push        64
 0048DEFD    mov         eax,dword ptr [ebp-4]
 0048DF00    call        TWinControl.GetHandle
 0048DF05    push        eax
 0048DF06    call        dword ptr ds:[56C770]
 0048DF0C    mov         eax,[0056E3C0];^Application:TApplication
 0048DF11    mov         eax,dword ptr [eax]
 0048DF13    mov         edx,dword ptr [eax+30];TApplication.FHandle:HWND
 0048DF16    mov         eax,dword ptr [ebp-4]
 0048DF19    call        00488B38
 0048DF1E    push        4
 0048DF20    mov         eax,dword ptr [ebp-4]
 0048DF23    call        TWinControl.GetHandle
 0048DF28    push        eax
 0048DF29    call        user32.ShowWindow
 0048DF2E    mov         eax,dword ptr [ebp-4]
 0048DF31    mov         edx,dword ptr [eax]
 0048DF33    call        dword ptr [edx+7C];THintWindow.sub_0048BE68
 0048DF36    xor         eax,eax
 0048DF38    pop         edx
 0048DF39    pop         ecx
 0048DF3A    pop         ecx
 0048DF3B    mov         dword ptr fs:[eax],edx
 0048DF3E    push        48DF63
 0048DF43    call        kernel32.GetTickCount
 0048DF48    mov         edx,dword ptr [ebp-4]
 0048DF4B    mov         dword ptr [edx+214],eax;THintWindow.FLastActive:Cardinal
 0048DF51    mov         eax,dword ptr [ebp-4]
 0048DF54    mov         byte ptr [eax+210],0;THintWindow.FActivating:Boolean
 0048DF5B    ret
>0048DF5C    jmp         @HandleFinally
>0048DF61    jmp         0048DF43
 0048DF63    pop         edi
 0048DF64    pop         esi
 0048DF65    mov         esp,ebp
 0048DF67    pop         ebp
 0048DF68    ret
end;*}

//0048DF6C
{*procedure sub_0048DF6C(?:?; ?:?);
begin
 0048DF6C    push        ebp
 0048DF6D    mov         ebp,esp
 0048DF6F    add         esp,0FFFFFFE8
 0048DF72    push        ebx
 0048DF73    push        esi
 0048DF74    push        edi
 0048DF75    mov         esi,edx
 0048DF77    lea         edi,[ebp-18]
 0048DF7A    movs        dword ptr [edi],dword ptr [esi]
 0048DF7B    movs        dword ptr [edi],dword ptr [esi]
 0048DF7C    movs        dword ptr [edi],dword ptr [esi]
 0048DF7D    movs        dword ptr [edi],dword ptr [esi]
 0048DF7E    mov         dword ptr [ebp-8],ecx
 0048DF81    mov         dword ptr [ebp-4],eax
 0048DF84    mov         ecx,dword ptr [ebp-8]
 0048DF87    lea         edx,[ebp-18]
 0048DF8A    mov         eax,dword ptr [ebp-4]
 0048DF8D    mov         ebx,dword ptr [eax]
 0048DF8F    call        dword ptr [ebx+0D0];THintWindow.sub_0048DD54
 0048DF95    pop         edi
 0048DF96    pop         esi
 0048DF97    pop         ebx
 0048DF98    mov         esp,ebp
 0048DF9A    pop         ebp
 0048DF9B    ret         4
end;*}

//0048DFA0
{*procedure sub_0048DFA0(?:?; ?:?; ?:?);
begin
 0048DFA0    push        ebp
 0048DFA1    mov         ebp,esp
 0048DFA3    add         esp,0FFFFFFF4
 0048DFA6    mov         dword ptr [ebp-0C],ecx
 0048DFA9    mov         dword ptr [ebp-8],edx
 0048DFAC    mov         dword ptr [ebp-4],eax
 0048DFAF    push        0
 0048DFB1    mov         eax,dword ptr [ebp+8]
 0048DFB4    push        eax
 0048DFB5    mov         ecx,dword ptr [ebp-8]
 0048DFB8    xor         edx,edx
 0048DFBA    xor         eax,eax
 0048DFBC    call        0041E714
 0048DFC1    mov         eax,dword ptr [ebp-4]
 0048DFC4    call        004867CC
 0048DFC9    or          eax,0C10
 0048DFCE    push        eax
 0048DFCF    mov         eax,dword ptr [ebp+8]
 0048DFD2    push        eax
 0048DFD3    push        0FF
 0048DFD5    mov         eax,dword ptr [ebp-0C]
 0048DFD8    call        @LStrToPChar
 0048DFDD    push        eax
 0048DFDE    mov         eax,dword ptr [ebp-4]
 0048DFE1    mov         eax,dword ptr [eax+208];THintWindow........................................................
 0048DFE7    call        0042F6A0
 0048DFEC    push        eax
 0048DFED    call        user32.DrawTextA
 0048DFF2    mov         eax,dword ptr [ebp+8]
 0048DFF5    add         dword ptr [eax+8],6
 0048DFF9    mov         eax,dword ptr [ebp+8]
 0048DFFC    add         dword ptr [eax+0C],2
 0048E000    mov         esp,ebp
 0048E002    pop         ebp
 0048E003    ret         8
end;*}

//0048E008
{*procedure sub_0048E008(?:?);
begin
 0048E008    push        ebp
 0048E009    mov         ebp,esp
 0048E00B    add         esp,0FFFFFFDC
 0048E00E    mov         dword ptr [ebp-8],edx
 0048E011    mov         dword ptr [ebp-4],eax
 0048E014    mov         eax,dword ptr [ebp-4]
 0048E017    mov         eax,dword ptr [eax+4C];THintWindow.Height:Integer
 0048E01A    push        eax
 0048E01B    lea         eax,[ebp-18]
 0048E01E    push        eax
 0048E01F    mov         eax,dword ptr [ebp-4]
 0048E022    mov         ecx,dword ptr [eax+48];THintWindow.Width:Integer
 0048E025    xor         edx,edx
 0048E027    xor         eax,eax
 0048E029    call        0041E714
 0048E02E    call        0046BFC0
 0048E033    call        0046C0EC
 0048E038    test        al,al
>0048E03A    jne         0048E04F
 0048E03C    push        0F
 0048E03E    push        1
 0048E040    lea         eax,[ebp-18]
 0048E043    push        eax
 0048E044    mov         eax,dword ptr [ebp-8]
 0048E047    push        eax
 0048E048    call        user32.DrawEdge
>0048E04D    jmp         0048E078
 0048E04F    call        0046BFC0
 0048E054    lea         ecx,[ebp-24]
 0048E057    mov         dl,1
 0048E059    call        0046C7B4
 0048E05E    lea         eax,[ebp-18]
 0048E061    push        eax
 0048E062    push        1
 0048E064    push        0F
 0048E066    push        0
 0048E068    call        0046BFC0
 0048E06D    lea         ecx,[ebp-24]
 0048E070    mov         edx,dword ptr [ebp-8]
 0048E073    call        0046C204
 0048E078    mov         esp,ebp
 0048E07A    pop         ebp
 0048E07B    ret
end;*}

//0048E07C
{*procedure THintWindow.sub_0048E07C(?:?);
begin
 0048E07C    push        ebp
 0048E07D    mov         ebp,esp
 0048E07F    add         esp,0FFFFFFF8
 0048E082    mov         dword ptr [ebp-8],edx
 0048E085    mov         dword ptr [ebp-4],eax
 0048E088    push        0
 0048E08A    mov         edx,dword ptr [ebp-8]
 0048E08D    mov         edx,dword ptr [edx+4]
 0048E090    xor         ecx,ecx
 0048E092    mov         eax,dword ptr [ebp-4]
 0048E095    call        004896B4
 0048E09A    mov         edx,dword ptr [ebp-8]
 0048E09D    mov         edx,dword ptr [edx+4]
 0048E0A0    mov         eax,dword ptr [ebp-4]
 0048E0A3    mov         ecx,dword ptr [eax]
 0048E0A5    call        dword ptr [ecx+0CC];THintWindow.sub_0048E008
 0048E0AB    pop         ecx
 0048E0AC    pop         ecx
 0048E0AD    pop         ebp
 0048E0AE    ret
end;*}

//0048E0B0
{*procedure sub_0048E0B0(?:?; ?:?; ?:?; ?:?);
begin
 0048E0B0    push        ebp
 0048E0B1    mov         ebp,esp
 0048E0B3    add         esp,0FFFFFFDC
 0048E0B6    mov         dword ptr [ebp-0C],ecx
 0048E0B9    mov         dword ptr [ebp-8],edx
 0048E0BC    mov         dword ptr [ebp-4],eax
 0048E0BF    mov         eax,dword ptr [ebp-8]
 0048E0C2    mov         dword ptr [ebp-14],eax
 0048E0C5    mov         eax,dword ptr [ebp-0C]
 0048E0C8    mov         dword ptr [ebp-10],eax
 0048E0CB    lea         eax,[ebp-14]
 0048E0CE    push        eax
 0048E0CF    mov         eax,dword ptr [ebp-4]
 0048E0D2    push        eax
 0048E0D3    call        user32.ClientToScreen
 0048E0D8    lea         eax,[ebp-24]
 0048E0DB    push        eax
 0048E0DC    mov         eax,dword ptr [ebp-4]
 0048E0DF    push        eax
 0048E0E0    call        user32.GetWindowRect
 0048E0E5    mov         eax,dword ptr [ebp-14]
 0048E0E8    sub         eax,dword ptr [ebp-24]
 0048E0EB    mov         edx,dword ptr [ebp+8]
 0048E0EE    mov         dword ptr [edx],eax
 0048E0F0    mov         eax,dword ptr [ebp-10]
 0048E0F3    sub         eax,dword ptr [ebp-20]
 0048E0F6    mov         edx,dword ptr [ebp+8]
 0048E0F9    mov         dword ptr [edx+4],eax
 0048E0FC    mov         esp,ebp
 0048E0FE    pop         ebp
 0048E0FF    ret         4
end;*}

//0048E104
procedure sub_0048E104;
begin
{*
 0048E104    push        ebp
 0048E105    mov         ebp,esp
 0048E107    push        ecx
 0048E108    mov         dword ptr [ebp-4],eax
 0048E10B    mov         eax,dword ptr [ebp-4]
 0048E10E    call        00494C00
 0048E113    or          edx,0FFFFFFFF
 0048E116    mov         eax,dword ptr [ebp-4]
 0048E119    call        0048E264
 0048E11E    pop         ecx
 0048E11F    pop         ebp
 0048E120    ret
*}
end;

//0048E124
procedure sub_0048E124(?:TDragImageList);
begin
{*
 0048E124    push        ebp
 0048E125    mov         ebp,esp
 0048E127    add         esp,0FFFFFFF0
 0048E12A    mov         dword ptr [ebp-4],eax
 0048E12D    mov         eax,dword ptr [ebp-4]
 0048E130    cmp         word ptr [eax+68],0FFFFFFFF
>0048E135    je          0048E1F4
 0048E13B    push        1
 0048E13D    push        1
 0048E13F    push        1
 0048E141    push        0E
 0048E143    mov         eax,[0056E1C0];^gvar_00571B2C
 0048E148    mov         eax,dword ptr [eax]
 0048E14A    call        eax
 0048E14C    push        eax
 0048E14D    push        0D
 0048E14F    mov         eax,[0056E1C0];^gvar_00571B2C
 0048E154    mov         eax,dword ptr [eax]
 0048E156    call        eax
 0048E158    push        eax
 0048E159    call        comctl32.ImageList_Create
 0048E15E    mov         dword ptr [ebp-8],eax
 0048E161    xor         eax,eax
 0048E163    push        ebp
 0048E164    push        48E1ED
 0048E169    push        dword ptr fs:[eax]
 0048E16C    mov         dword ptr fs:[eax],esp
 0048E16F    mov         eax,dword ptr [ebp-4]
 0048E172    movsx       edx,word ptr [eax+68]
 0048E176    mov         eax,[0056E604];^Screen:TScreen
 0048E17B    mov         eax,dword ptr [eax]
 0048E17D    call        004A9008
 0048E182    mov         edx,eax
 0048E184    mov         eax,dword ptr [ebp-8]
 0048E187    call        00437A00
 0048E18C    mov         eax,dword ptr [ebp-4]
 0048E18F    movsx       edx,word ptr [eax+68]
 0048E193    mov         eax,[0056E604];^Screen:TScreen
 0048E198    mov         eax,dword ptr [eax]
 0048E19A    call        004A9008
 0048E19F    mov         edx,eax
 0048E1A1    mov         eax,dword ptr [ebp-8]
 0048E1A4    call        00437A00
 0048E1A9    push        0
 0048E1AB    push        0
 0048E1AD    push        0
 0048E1AF    mov         eax,dword ptr [ebp-8]
 0048E1B2    push        eax
 0048E1B3    call        comctl32.ImageList_SetDragCursorImage
 0048E1B8    lea         eax,[ebp-10]
 0048E1BB    push        eax
 0048E1BC    push        0
 0048E1BE    call        comctl32.ImageList_GetDragImage
 0048E1C3    mov         eax,dword ptr [ebp-0C]
 0048E1C6    push        eax
 0048E1C7    mov         eax,dword ptr [ebp-10]
 0048E1CA    push        eax
 0048E1CB    push        1
 0048E1CD    mov         eax,dword ptr [ebp-8]
 0048E1D0    push        eax
 0048E1D1    call        comctl32.ImageList_SetDragCursorImage
 0048E1D6    xor         eax,eax
 0048E1D8    pop         edx
 0048E1D9    pop         ecx
 0048E1DA    pop         ecx
 0048E1DB    mov         dword ptr fs:[eax],edx
 0048E1DE    push        48E1F4
 0048E1E3    mov         eax,dword ptr [ebp-8]
 0048E1E6    push        eax
 0048E1E7    call        comctl32.ImageList_Destroy
 0048E1EC    ret
>0048E1ED    jmp         @HandleFinally
>0048E1F2    jmp         0048E1E3
 0048E1F4    mov         esp,ebp
 0048E1F6    pop         ebp
 0048E1F7    ret
*}
end;

//0048E1F8
{*function sub_0048E1F8(?:TDragImageList; ?:?; ?:?; ?:?):?;
begin
 0048E1F8    push        ebp
 0048E1F9    mov         ebp,esp
 0048E1FB    add         esp,0FFFFFFF0
 0048E1FE    mov         dword ptr [ebp-0C],ecx
 0048E201    mov         dword ptr [ebp-8],edx
 0048E204    mov         dword ptr [ebp-4],eax
 0048E207    mov         eax,dword ptr [ebp-4]
 0048E20A    call        00494CE0
 0048E20F    test        al,al
>0048E211    je          0048E257
 0048E213    mov         eax,dword ptr [ebp-8]
 0048E216    mov         edx,dword ptr [ebp-4]
 0048E219    mov         dword ptr [edx+78],eax;TDragImageList.FDragIndex:Integer
 0048E21C    mov         eax,dword ptr [ebp-0C]
 0048E21F    mov         edx,dword ptr [ebp-4]
 0048E222    mov         dword ptr [edx+70],eax;TDragImageList.FDragHotspot:TPoint
 0048E225    mov         eax,dword ptr [ebp+8]
 0048E228    mov         edx,dword ptr [ebp-4]
 0048E22B    mov         dword ptr [edx+74],eax
 0048E22E    mov         eax,dword ptr [ebp+8]
 0048E231    push        eax
 0048E232    mov         eax,dword ptr [ebp-0C]
 0048E235    push        eax
 0048E236    mov         eax,dword ptr [ebp-8]
 0048E239    push        eax
 0048E23A    mov         eax,dword ptr [ebp-4]
 0048E23D    call        00494F78
 0048E242    push        eax
 0048E243    call        comctl32.ImageList_BeginDrag
 0048E248    mov         byte ptr [ebp-0D],1
 0048E24C    mov         al,byte ptr [ebp-0D]
 0048E24F    mov         edx,dword ptr [ebp-4]
 0048E252    mov         byte ptr [edx+6A],al;TDragImageList.FDragging:Boolean
>0048E255    jmp         0048E25B
 0048E257    mov         byte ptr [ebp-0D],0
 0048E25B    mov         al,byte ptr [ebp-0D]
 0048E25E    mov         esp,ebp
 0048E260    pop         ebp
 0048E261    ret         4
end;*}

//0048E264
{*procedure sub_0048E264(?:TDragImageList; ?:?);
begin
 0048E264    push        ebp
 0048E265    mov         ebp,esp
 0048E267    add         esp,0FFFFFFF8
 0048E26A    mov         word ptr [ebp-6],dx
 0048E26E    mov         dword ptr [ebp-4],eax
 0048E271    mov         ax,word ptr [ebp-6]
 0048E275    mov         edx,dword ptr [ebp-4]
 0048E278    cmp         ax,word ptr [edx+68];TDragImageList.FDragCursor:TCursor
>0048E27C    je          0048E29A
 0048E27E    mov         ax,word ptr [ebp-6]
 0048E282    mov         edx,dword ptr [ebp-4]
 0048E285    mov         word ptr [edx+68],ax;TDragImageList.FDragCursor:TCursor
 0048E289    mov         eax,dword ptr [ebp-4]
 0048E28C    cmp         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
>0048E290    je          0048E29A
 0048E292    mov         eax,dword ptr [ebp-4]
 0048E295    call        0048E124
 0048E29A    pop         ecx
 0048E29B    pop         ecx
 0048E29C    pop         ebp
 0048E29D    ret
end;*}

//0048E2A0
{*procedure sub_0048E2A0(?:?);
begin
 0048E2A0    push        ebp
 0048E2A1    mov         ebp,esp
 0048E2A3    add         esp,0FFFFFFF8
 0048E2A6    mov         dword ptr [ebp-8],edx
 0048E2A9    mov         dword ptr [ebp-4],eax
 0048E2AC    mov         edx,dword ptr [ebp-8]
 0048E2AF    mov         eax,dword ptr [ebp-4]
 0048E2B2    call        00495E84
 0048E2B7    mov         eax,dword ptr [ebp-4]
 0048E2BA    call        00494CE0
 0048E2BF    test        al,al
>0048E2C1    je          0048E2D7
 0048E2C3    mov         eax,dword ptr [ebp-4]
 0048E2C6    cmp         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
>0048E2CA    je          0048E2D7
 0048E2CC    mov         eax,dword ptr [ebp-8]
 0048E2CF    push        eax
 0048E2D0    push        0
 0048E2D2    call        comctl32.ImageList_GetDragImage
 0048E2D7    pop         ecx
 0048E2D8    pop         ecx
 0048E2D9    pop         ebp
 0048E2DA    ret
end;*}

//0048E2DC
{*function sub_0048E2DC(?:?; ?:HWND; ?:?; ?:?):?;
begin
 0048E2DC    push        ebp
 0048E2DD    mov         ebp,esp
 0048E2DF    add         esp,0FFFFFFF0
 0048E2E2    mov         dword ptr [ebp-0C],ecx
 0048E2E5    mov         dword ptr [ebp-8],edx
 0048E2E8    mov         dword ptr [ebp-4],eax
 0048E2EB    mov         byte ptr [ebp-0D],0
 0048E2EF    mov         eax,dword ptr [ebp-4]
 0048E2F2    call        00494CE0
 0048E2F7    test        al,al
>0048E2F9    je          0048E349
 0048E2FB    mov         eax,dword ptr [ebp-4]
 0048E2FE    cmp         byte ptr [eax+6A],0
>0048E302    jne         0048E31F
 0048E304    mov         eax,dword ptr [ebp-4]
 0048E307    mov         eax,dword ptr [eax+74]
 0048E30A    push        eax
 0048E30B    mov         eax,dword ptr [ebp-4]
 0048E30E    mov         ecx,dword ptr [eax+70]
 0048E311    mov         eax,dword ptr [ebp-4]
 0048E314    mov         edx,dword ptr [eax+78]
 0048E317    mov         eax,dword ptr [ebp-4]
 0048E31A    call        0048E1F8
 0048E31F    mov         eax,dword ptr [ebp-4]
 0048E322    call        0048E124
 0048E327    mov         eax,dword ptr [ebp+8]
 0048E32A    push        eax
 0048E32B    mov         ecx,dword ptr [ebp-0C]
 0048E32E    mov         edx,dword ptr [ebp-8]
 0048E331    mov         eax,dword ptr [ebp-4]
 0048E334    call        0048E354
 0048E339    mov         byte ptr [ebp-0D],al
 0048E33C    cmp         byte ptr [ebp-0D],0
>0048E340    je          0048E349
 0048E342    push        0
 0048E344    call        user32.ShowCursor
 0048E349    mov         al,byte ptr [ebp-0D]
 0048E34C    mov         esp,ebp
 0048E34E    pop         ebp
 0048E34F    ret         4
end;*}

//0048E354
{*function sub_0048E354(?:?; ?:HWND; ?:?; ?:?):?;
begin
 0048E354    push        ebp
 0048E355    mov         ebp,esp
 0048E357    add         esp,0FFFFFFE8
 0048E35A    mov         dword ptr [ebp-0C],ecx
 0048E35D    mov         dword ptr [ebp-8],edx
 0048E360    mov         dword ptr [ebp-4],eax
 0048E363    mov         byte ptr [ebp-0D],0
 0048E367    mov         eax,dword ptr [ebp-4]
 0048E36A    call        00494CE0
 0048E36F    test        al,al
>0048E371    je          0048E3C1
 0048E373    mov         eax,dword ptr [ebp-8]
 0048E376    mov         edx,dword ptr [ebp-4]
 0048E379    cmp         eax,dword ptr [edx+6C]
>0048E37C    je          0048E3C1
 0048E37E    mov         eax,dword ptr [ebp-4]
 0048E381    call        0048E3CC
 0048E386    mov         eax,dword ptr [ebp-8]
 0048E389    mov         edx,dword ptr [ebp-4]
 0048E38C    mov         dword ptr [edx+6C],eax
 0048E38F    lea         eax,[ebp-15]
 0048E392    push        eax
 0048E393    mov         ecx,dword ptr [ebp+8]
 0048E396    mov         edx,dword ptr [ebp-0C]
 0048E399    mov         eax,dword ptr [ebp-4]
 0048E39C    mov         eax,dword ptr [eax+6C]
 0048E39F    call        0048E0B0
 0048E3A4    mov         eax,dword ptr [ebp-11]
 0048E3A7    push        eax
 0048E3A8    mov         eax,dword ptr [ebp-15]
 0048E3AB    push        eax
 0048E3AC    mov         eax,dword ptr [ebp-4]
 0048E3AF    mov         eax,dword ptr [eax+6C]
 0048E3B2    push        eax
 0048E3B3    call        comctl32.ImageList_DragEnter
 0048E3B8    cmp         eax,1
 0048E3BB    sbb         eax,eax
 0048E3BD    inc         eax
 0048E3BE    mov         byte ptr [ebp-0D],al
 0048E3C1    mov         al,byte ptr [ebp-0D]
 0048E3C4    mov         esp,ebp
 0048E3C6    pop         ebp
 0048E3C7    ret         4
end;*}

//0048E3CC
procedure sub_0048E3CC(?:TDragImageList);
begin
{*
 0048E3CC    push        ebp
 0048E3CD    mov         ebp,esp
 0048E3CF    push        ecx
 0048E3D0    mov         dword ptr [ebp-4],eax
 0048E3D3    mov         eax,dword ptr [ebp-4]
 0048E3D6    call        00494CE0
 0048E3DB    test        al,al
>0048E3DD    je          0048E3FC
 0048E3DF    mov         eax,dword ptr [ebp-4]
 0048E3E2    cmp         dword ptr [eax+6C],0
>0048E3E6    je          0048E3FC
 0048E3E8    mov         eax,dword ptr [ebp-4]
 0048E3EB    mov         eax,dword ptr [eax+6C]
 0048E3EE    push        eax
 0048E3EF    call        comctl32.ImageList_DragLeave
 0048E3F4    mov         eax,dword ptr [ebp-4]
 0048E3F7    xor         edx,edx
 0048E3F9    mov         dword ptr [eax+6C],edx
 0048E3FC    pop         ecx
 0048E3FD    pop         ebp
 0048E3FE    ret
*}
end;

//0048E400
{*function sub_0048E400(?:?; ?:?; ?:?):?;
begin
 0048E400    push        ebp
 0048E401    mov         ebp,esp
 0048E403    add         esp,0FFFFFFE8
 0048E406    mov         dword ptr [ebp-0C],ecx
 0048E409    mov         dword ptr [ebp-8],edx
 0048E40C    mov         dword ptr [ebp-4],eax
 0048E40F    mov         eax,dword ptr [ebp-4]
 0048E412    call        00494CE0
 0048E417    test        al,al
>0048E419    je          0048E448
 0048E41B    lea         eax,[ebp-15]
 0048E41E    push        eax
 0048E41F    mov         ecx,dword ptr [ebp-0C]
 0048E422    mov         edx,dword ptr [ebp-8]
 0048E425    mov         eax,dword ptr [ebp-4]
 0048E428    mov         eax,dword ptr [eax+6C]
 0048E42B    call        0048E0B0
 0048E430    mov         eax,dword ptr [ebp-11]
 0048E433    push        eax
 0048E434    mov         eax,dword ptr [ebp-15]
 0048E437    push        eax
 0048E438    call        comctl32.ImageList_DragMove
 0048E43D    cmp         eax,1
 0048E440    sbb         eax,eax
 0048E442    inc         eax
 0048E443    mov         byte ptr [ebp-0D],al
>0048E446    jmp         0048E44C
 0048E448    mov         byte ptr [ebp-0D],0
 0048E44C    mov         al,byte ptr [ebp-0D]
 0048E44F    mov         esp,ebp
 0048E451    pop         ebp
 0048E452    ret
end;*}

//0048E454
{*procedure sub_0048E454(?:?);
begin
 0048E454    push        ebp
 0048E455    mov         ebp,esp
 0048E457    push        ecx
 0048E458    mov         dword ptr [ebp-4],eax
 0048E45B    mov         eax,dword ptr [ebp-4]
 0048E45E    call        00494CE0
 0048E463    test        al,al
>0048E465    je          0048E46E
 0048E467    push        0FF
 0048E469    call        comctl32.ImageList_DragShowNolock
 0048E46E    pop         ecx
 0048E46F    pop         ebp
 0048E470    ret
end;*}

//0048E474
{*procedure sub_0048E474(?:?);
begin
 0048E474    push        ebp
 0048E475    mov         ebp,esp
 0048E477    push        ecx
 0048E478    mov         dword ptr [ebp-4],eax
 0048E47B    mov         eax,dword ptr [ebp-4]
 0048E47E    call        00494CE0
 0048E483    test        al,al
>0048E485    je          0048E48E
 0048E487    push        0
 0048E489    call        comctl32.ImageList_DragShowNolock
 0048E48E    pop         ecx
 0048E48F    pop         ebp
 0048E490    ret
end;*}

//0048E494
{*function sub_0048E494(?:TDragImageList):?;
begin
 0048E494    push        ebp
 0048E495    mov         ebp,esp
 0048E497    add         esp,0FFFFFFF8
 0048E49A    mov         dword ptr [ebp-4],eax
 0048E49D    mov         eax,dword ptr [ebp-4]
 0048E4A0    call        00494CE0
 0048E4A5    test        al,al
>0048E4A7    je          0048E4E3
 0048E4A9    mov         eax,dword ptr [ebp-4]
 0048E4AC    cmp         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
>0048E4B0    je          0048E4E3
 0048E4B2    mov         eax,dword ptr [ebp-4]
 0048E4B5    call        0048E3CC
 0048E4BA    call        comctl32.ImageList_EndDrag
 0048E4BF    cmp         eax,1
 0048E4C2    sbb         eax,eax
 0048E4C4    inc         eax
 0048E4C5    mov         byte ptr [ebp-5],al
 0048E4C8    mov         eax,dword ptr [ebp-4]
 0048E4CB    mov         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
 0048E4CF    or          edx,0FFFFFFFF
 0048E4D2    mov         eax,dword ptr [ebp-4]
 0048E4D5    call        0048E264
 0048E4DA    push        0FF
 0048E4DC    call        user32.ShowCursor
>0048E4E1    jmp         0048E4E7
 0048E4E3    mov         byte ptr [ebp-5],0
 0048E4E7    mov         al,byte ptr [ebp-5]
 0048E4EA    pop         ecx
 0048E4EB    pop         ecx
 0048E4EC    pop         ebp
 0048E4ED    ret
end;*}

//0048E4F0
constructor sub_0048E4F0;
begin
{*
 0048E4F0    push        ebp
 0048E4F1    mov         ebp,esp
 0048E4F3    add         esp,0FFFFFFF4
 0048E4F6    test        dl,dl
>0048E4F8    je          0048E502
 0048E4FA    add         esp,0FFFFFFF0
 0048E4FD    call        @ClassCreate
 0048E502    mov         dword ptr [ebp-0C],ecx
 0048E505    mov         byte ptr [ebp-5],dl
 0048E508    mov         dword ptr [ebp-4],eax
 0048E50B    mov         ecx,dword ptr [ebp-0C]
 0048E50E    xor         edx,edx
 0048E510    mov         eax,dword ptr [ebp-4]
 0048E513    call        00486BAC
 0048E518    mov         dl,1
 0048E51A    mov         eax,[0047D3C4];TControlCanvas
 0048E51F    call        TCanvas.Create;TControlCanvas.Create
 0048E524    mov         edx,dword ptr [ebp-4]
 0048E527    mov         dword ptr [edx+208],eax;TCustomControl.....................................................
 0048E52D    mov         eax,dword ptr [ebp-4]
 0048E530    mov         eax,dword ptr [eax+208];TCustomControl.....................................................
 0048E536    mov         edx,dword ptr [ebp-4]
 0048E539    call        00481B3C
 0048E53E    mov         eax,dword ptr [ebp-4]
 0048E541    cmp         byte ptr [ebp-5],0
>0048E545    je          0048E556
 0048E547    call        @AfterConstruction
 0048E54C    pop         dword ptr fs:[0]
 0048E553    add         esp,0C
 0048E556    mov         eax,dword ptr [ebp-4]
 0048E559    mov         esp,ebp
 0048E55B    pop         ebp
 0048E55C    ret
*}
end;

//0048E560
destructor TCustomControl.Destroy;
begin
{*
 0048E560    push        ebp
 0048E561    mov         ebp,esp
 0048E563    add         esp,0FFFFFFF8
 0048E566    call        @BeforeDestruction
 0048E56B    mov         byte ptr [ebp-5],dl
 0048E56E    mov         dword ptr [ebp-4],eax
 0048E571    mov         eax,dword ptr [ebp-4]
 0048E574    mov         eax,dword ptr [eax+208]
 0048E57A    call        TObject.Free
 0048E57F    mov         dl,byte ptr [ebp-5]
 0048E582    and         dl,0FC
 0048E585    mov         eax,dword ptr [ebp-4]
 0048E588    call        TWinControl.Destroy
 0048E58D    cmp         byte ptr [ebp-5],0
>0048E591    jle         0048E59B
 0048E593    mov         eax,dword ptr [ebp-4]
 0048E596    call        @ClassDestroy
 0048E59B    pop         ecx
 0048E59C    pop         ecx
 0048E59D    pop         ebp
 0048E59E    ret
*}
end;

//0048E5A0
procedure TCustomControl.WMPaint(Message:TWMPaint);
begin
{*
 0048E5A0    push        ebp
 0048E5A1    mov         ebp,esp
 0048E5A3    add         esp,0FFFFFFF8
 0048E5A6    mov         dword ptr [ebp-8],edx
 0048E5A9    mov         dword ptr [ebp-4],eax
 0048E5AC    mov         eax,dword ptr [ebp-4]
 0048E5AF    or          word ptr [eax+54],100;TCustomControl.FControlState:TControlState
 0048E5B5    mov         edx,dword ptr [ebp-8]
 0048E5B8    mov         eax,dword ptr [ebp-4]
 0048E5BB    call        TWinControl.WMPaint
 0048E5C0    mov         eax,dword ptr [ebp-4]
 0048E5C3    and         word ptr [eax+54],0FEFF;TCustomControl.FControlState:TControlState
 0048E5C9    pop         ecx
 0048E5CA    pop         ecx
 0048E5CB    pop         ebp
 0048E5CC    ret
*}
end;

//0048E5D0
{*procedure sub_0048E5D0(?:?);
begin
 0048E5D0    push        ebp
 0048E5D1    mov         ebp,esp
 0048E5D3    add         esp,0FFFFFFF8
 0048E5D6    mov         dword ptr [ebp-8],edx
 0048E5D9    mov         dword ptr [ebp-4],eax
 0048E5DC    mov         eax,dword ptr [ebp-4]
 0048E5DF    mov         eax,dword ptr [eax+208];TCustomControl.....................................................
 0048E5E5    call        TCanvas.Lock
 0048E5EA    xor         eax,eax
 0048E5EC    push        ebp
 0048E5ED    push        48E671
 0048E5F2    push        dword ptr fs:[eax]
 0048E5F5    mov         dword ptr fs:[eax],esp
 0048E5F8    mov         eax,dword ptr [ebp-4]
 0048E5FB    mov         eax,dword ptr [eax+208];TCustomControl.....................................................
 0048E601    mov         edx,dword ptr [ebp-8]
 0048E604    call        TCanvas.SetHandle
 0048E609    xor         eax,eax
 0048E60B    push        ebp
 0048E60C    push        48E64E
 0048E611    push        dword ptr fs:[eax]
 0048E614    mov         dword ptr fs:[eax],esp
 0048E617    mov         eax,dword ptr [ebp-4]
 0048E61A    mov         eax,dword ptr [eax+208];TCustomControl.....................................................
 0048E620    call        00481B68
 0048E625    mov         eax,dword ptr [ebp-4]
 0048E628    mov         edx,dword ptr [eax]
 0048E62A    call        dword ptr [edx+0C8];TCustomControl.sub_0048E67C
 0048E630    xor         eax,eax
 0048E632    pop         edx
 0048E633    pop         ecx
 0048E634    pop         ecx
 0048E635    mov         dword ptr fs:[eax],edx
 0048E638    push        48E655
 0048E63D    mov         eax,dword ptr [ebp-4]
 0048E640    mov         eax,dword ptr [eax+208];TCustomControl.....................................................
 0048E646    xor         edx,edx
 0048E648    call        TCanvas.SetHandle
 0048E64D    ret
>0048E64E    jmp         @HandleFinally
>0048E653    jmp         0048E63D
 0048E655    xor         eax,eax
 0048E657    pop         edx
 0048E658    pop         ecx
 0048E659    pop         ecx
 0048E65A    mov         dword ptr fs:[eax],edx
 0048E65D    push        48E678
 0048E662    mov         eax,dword ptr [ebp-4]
 0048E665    mov         eax,dword ptr [eax+208];TCustomControl.....................................................
 0048E66B    call        TCanvas.Unlock
 0048E670    ret
>0048E671    jmp         @HandleFinally
>0048E676    jmp         0048E662
 0048E678    pop         ecx
 0048E679    pop         ecx
 0048E67A    pop         ebp
 0048E67B    ret
end;*}

//0048E67C
procedure sub_0048E67C;
begin
{*
 0048E67C    push        ebp
 0048E67D    mov         ebp,esp
 0048E67F    push        ecx
 0048E680    mov         dword ptr [ebp-4],eax
 0048E683    pop         ecx
 0048E684    pop         ebp
 0048E685    ret
*}
end;

//0048E688
{*function sub_0048E688(?:?):?;
begin
 0048E688    push        ebp
 0048E689    mov         ebp,esp
 0048E68B    add         esp,0FFFFFFF8
 0048E68E    mov         dword ptr [ebp-4],eax
 0048E691    mov         eax,dword ptr [ebp-4]
 0048E694    mov         dword ptr [ebp-8],eax
>0048E697    jmp         0048E6A2
 0048E699    mov         eax,dword ptr [ebp-8]
 0048E69C    mov         eax,dword ptr [eax+0C]
 0048E69F    mov         dword ptr [ebp-8],eax
 0048E6A2    cmp         dword ptr [ebp-8],0
>0048E6A6    je          0048E6B4
 0048E6A8    mov         eax,dword ptr [ebp-8]
 0048E6AB    call        0048E7BC
 0048E6B0    test        al,al
>0048E6B2    je          0048E699
 0048E6B4    mov         eax,dword ptr [ebp-8]
 0048E6B7    pop         ecx
 0048E6B8    pop         ecx
 0048E6B9    pop         ebp
 0048E6BA    ret
end;*}

//0048E6BC
{*function sub_0048E6BC(?:?):?;
begin
 0048E6BC    push        ebp
 0048E6BD    mov         ebp,esp
 0048E6BF    add         esp,0FFFFFFF8
 0048E6C2    mov         dword ptr [ebp-4],eax
 0048E6C5    mov         eax,dword ptr [ebp-4]
 0048E6C8    cmp         dword ptr [eax+14],0
>0048E6CC    je          0048E6DA
 0048E6CE    mov         eax,dword ptr [ebp-4]
 0048E6D1    mov         eax,dword ptr [eax+14]
 0048E6D4    cmp         byte ptr [eax+10],0
>0048E6D8    jne         0048E6F5
 0048E6DA    mov         eax,dword ptr [ebp-4]
 0048E6DD    mov         eax,dword ptr [eax+1C]
 0048E6E0    mov         eax,dword ptr [eax+64]
 0048E6E3    cmp         eax,dword ptr [ebp-4]
>0048E6E6    jne         0048E6F1
 0048E6E8    mov         eax,dword ptr [ebp-4]
 0048E6EB    cmp         byte ptr [eax+10],0
>0048E6EF    jne         0048E6F5
 0048E6F1    xor         eax,eax
>0048E6F3    jmp         0048E6F7
 0048E6F5    mov         al,1
 0048E6F7    mov         byte ptr [ebp-5],al
 0048E6FA    mov         al,byte ptr [ebp-5]
 0048E6FD    pop         ecx
 0048E6FE    pop         ecx
 0048E6FF    pop         ebp
 0048E700    ret
end;*}

//0048E704
constructor TDockZone.Create;
begin
{*
 0048E704    push        ebp
 0048E705    mov         ebp,esp
 0048E707    add         esp,0FFFFFFF4
 0048E70A    test        dl,dl
>0048E70C    je          0048E716
 0048E70E    add         esp,0FFFFFFF0
 0048E711    call        @ClassCreate
 0048E716    mov         dword ptr [ebp-0C],ecx
 0048E719    mov         byte ptr [ebp-5],dl
 0048E71C    mov         dword ptr [ebp-4],eax
 0048E71F    mov         eax,dword ptr [ebp-4]
 0048E722    mov         edx,dword ptr [ebp-0C]
 0048E725    mov         dword ptr [eax+1C],edx
 0048E728    mov         eax,dword ptr [ebp-4]
 0048E72B    cmp         byte ptr [ebp-5],0
>0048E72F    je          0048E740
 0048E731    call        @AfterConstruction
 0048E736    pop         dword ptr fs:[0]
 0048E73D    add         esp,0C
 0048E740    mov         eax,dword ptr [ebp-4]
 0048E743    mov         esp,ebp
 0048E745    pop         ebp
 0048E746    ret
*}
end;

//0048E748
{*function sub_0048E748(?:TDockZone):?;
begin
 0048E748    push        ebp
 0048E749    mov         ebp,esp
 0048E74B    add         esp,0FFFFFFF4
 0048E74E    mov         dword ptr [ebp-4],eax
 0048E751    xor         eax,eax
 0048E753    mov         dword ptr [ebp-8],eax
 0048E756    mov         eax,dword ptr [ebp-4]
 0048E759    mov         eax,dword ptr [eax+8]
 0048E75C    mov         dword ptr [ebp-0C],eax
 0048E75F    cmp         dword ptr [ebp-0C],0
>0048E763    je          0048E777
 0048E765    mov         eax,dword ptr [ebp-0C]
 0048E768    mov         eax,dword ptr [eax+0C]
 0048E76B    mov         dword ptr [ebp-0C],eax
 0048E76E    inc         dword ptr [ebp-8]
 0048E771    cmp         dword ptr [ebp-0C],0
>0048E775    jne         0048E765
 0048E777    mov         eax,dword ptr [ebp-8]
 0048E77A    mov         esp,ebp
 0048E77C    pop         ebp
 0048E77D    ret
end;*}

//0048E780
{*function sub_0048E780(?:?):?;
begin
 0048E780    push        ebp
 0048E781    mov         ebp,esp
 0048E783    add         esp,0FFFFFFF4
 0048E786    mov         dword ptr [ebp-4],eax
 0048E789    xor         eax,eax
 0048E78B    mov         dword ptr [ebp-8],eax
 0048E78E    mov         eax,dword ptr [ebp-4]
 0048E791    call        0048F000
 0048E796    mov         dword ptr [ebp-0C],eax
 0048E799    cmp         dword ptr [ebp-0C],0
>0048E79D    je          0048E7B3
 0048E79F    mov         eax,dword ptr [ebp-0C]
 0048E7A2    call        0048EFA8
 0048E7A7    mov         dword ptr [ebp-0C],eax
 0048E7AA    inc         dword ptr [ebp-8]
 0048E7AD    cmp         dword ptr [ebp-0C],0
>0048E7B1    jne         0048E79F
 0048E7B3    mov         eax,dword ptr [ebp-8]
 0048E7B6    mov         esp,ebp
 0048E7B8    pop         ebp
 0048E7B9    ret
end;*}

//0048E7BC
{*function sub_0048E7BC(?:?):?;
begin
 0048E7BC    push        ebp
 0048E7BD    mov         ebp,esp
 0048E7BF    add         esp,0FFFFFFF4
 0048E7C2    mov         dword ptr [ebp-4],eax
 0048E7C5    mov         eax,dword ptr [ebp-4]
 0048E7C8    cmp         dword ptr [eax+4],0
>0048E7CC    je          0048E7DC
 0048E7CE    mov         eax,dword ptr [ebp-4]
 0048E7D1    mov         eax,dword ptr [eax+4]
 0048E7D4    mov         al,byte ptr [eax+57]
 0048E7D7    mov         byte ptr [ebp-5],al
>0048E7DA    jmp         0048E810
 0048E7DC    mov         byte ptr [ebp-5],1
 0048E7E0    mov         eax,dword ptr [ebp-4]
 0048E7E3    call        0048F000
 0048E7E8    mov         dword ptr [ebp-0C],eax
 0048E7EB    cmp         dword ptr [ebp-0C],0
>0048E7EF    je          0048E80C
 0048E7F1    mov         eax,dword ptr [ebp-0C]
 0048E7F4    call        0048E7BC
 0048E7F9    test        al,al
>0048E7FB    jne         0048E810
 0048E7FD    mov         eax,dword ptr [ebp-0C]
 0048E800    mov         eax,dword ptr [eax+0C]
 0048E803    mov         dword ptr [ebp-0C],eax
 0048E806    cmp         dword ptr [ebp-0C],0
>0048E80A    jne         0048E7F1
 0048E80C    mov         byte ptr [ebp-5],0
 0048E810    mov         al,byte ptr [ebp-5]
 0048E813    mov         esp,ebp
 0048E815    pop         ebp
 0048E816    ret
end;*}

//0048E818
{*function sub_0048E818(?:?):?;
begin
 0048E818    push        ebp
 0048E819    mov         ebp,esp
 0048E81B    add         esp,0FFFFFFF4
 0048E81E    mov         dword ptr [ebp-4],eax
 0048E821    mov         eax,dword ptr [ebp-4]
 0048E824    mov         eax,dword ptr [eax+1C]
 0048E827    mov         eax,dword ptr [eax+64]
 0048E82A    cmp         eax,dword ptr [ebp-4]
>0048E82D    jne         0048E837
 0048E82F    mov         eax,dword ptr [ebp-4]
 0048E832    mov         dword ptr [ebp-0C],eax
>0048E835    jmp         0048E840
 0048E837    mov         eax,dword ptr [ebp-4]
 0048E83A    mov         eax,dword ptr [eax+14]
 0048E83D    mov         dword ptr [ebp-0C],eax
 0048E840    mov         eax,dword ptr [ebp-0C]
 0048E843    cmp         byte ptr [eax+10],1
>0048E847    jne         0048E85B
 0048E849    mov         edx,1
 0048E84E    mov         eax,dword ptr [ebp-4]
 0048E851    call        0048E908
 0048E856    mov         dword ptr [ebp-8],eax
>0048E859    jmp         0048E889
 0048E85B    mov         eax,dword ptr [ebp-0C]
 0048E85E    cmp         byte ptr [eax+10],2
>0048E862    jne         0048E876
 0048E864    mov         edx,2
 0048E869    mov         eax,dword ptr [ebp-4]
 0048E86C    call        0048E908
 0048E871    mov         dword ptr [ebp-8],eax
>0048E874    jmp         0048E889
 0048E876    xor         ecx,ecx
 0048E878    mov         dl,1
 0048E87A    mov         eax,[0040B004];Exception
 0048E87F    call        Exception.Create;Exception.Create
 0048E884    call        @RaiseExcept
 0048E889    mov         eax,dword ptr [ebp-8]
 0048E88C    mov         esp,ebp
 0048E88E    pop         ebp
 0048E88F    ret
end;*}

//0048E890
{*function sub_0048E890(?:TDockZone):?;
begin
 0048E890    push        ebp
 0048E891    mov         ebp,esp
 0048E893    add         esp,0FFFFFFF4
 0048E896    mov         dword ptr [ebp-4],eax
 0048E899    mov         eax,dword ptr [ebp-4]
 0048E89C    mov         eax,dword ptr [eax+1C]
 0048E89F    mov         eax,dword ptr [eax+64]
 0048E8A2    cmp         eax,dword ptr [ebp-4]
>0048E8A5    jne         0048E8AF
 0048E8A7    mov         eax,dword ptr [ebp-4]
 0048E8AA    mov         dword ptr [ebp-0C],eax
>0048E8AD    jmp         0048E8B8
 0048E8AF    mov         eax,dword ptr [ebp-4]
 0048E8B2    mov         eax,dword ptr [eax+14]
 0048E8B5    mov         dword ptr [ebp-0C],eax
 0048E8B8    mov         eax,dword ptr [ebp-0C]
 0048E8BB    cmp         byte ptr [eax+10],1
>0048E8BF    jne         0048E8D3
 0048E8C1    mov         edx,1
 0048E8C6    mov         eax,dword ptr [ebp-4]
 0048E8C9    call        0048E9A8
 0048E8CE    mov         dword ptr [ebp-8],eax
>0048E8D1    jmp         0048E901
 0048E8D3    mov         eax,dword ptr [ebp-0C]
 0048E8D6    cmp         byte ptr [eax+10],2
>0048E8DA    jne         0048E8EE
 0048E8DC    mov         edx,2
 0048E8E1    mov         eax,dword ptr [ebp-4]
 0048E8E4    call        0048E9A8
 0048E8E9    mov         dword ptr [ebp-8],eax
>0048E8EC    jmp         0048E901
 0048E8EE    xor         ecx,ecx
 0048E8F0    mov         dl,1
 0048E8F2    mov         eax,[0040B004];Exception
 0048E8F7    call        Exception.Create;Exception.Create
 0048E8FC    call        @RaiseExcept
 0048E901    mov         eax,dword ptr [ebp-8]
 0048E904    mov         esp,ebp
 0048E906    pop         ebp
 0048E907    ret
end;*}

//0048E908
{*function sub_0048E908(?:?; ?:?):?;
begin
 0048E908    push        ebp
 0048E909    mov         ebp,esp
 0048E90B    add         esp,0FFFFFFE0
 0048E90E    mov         dword ptr [ebp-8],edx
 0048E911    mov         dword ptr [ebp-4],eax
 0048E914    mov         eax,dword ptr [ebp-4]
 0048E917    mov         dword ptr [ebp-10],eax
>0048E91A    jmp         0048E94C
 0048E91C    mov         al,byte ptr [ebp-8]
 0048E91F    mov         edx,dword ptr [ebp-10]
 0048E922    mov         edx,dword ptr [edx+14]
 0048E925    cmp         al,byte ptr [edx+10]
>0048E928    jne         0048E943
 0048E92A    mov         eax,dword ptr [ebp-10]
 0048E92D    cmp         dword ptr [eax+18],0
>0048E931    je          0048E943
 0048E933    mov         eax,dword ptr [ebp-10]
 0048E936    mov         eax,dword ptr [eax+18]
 0048E939    call        0048EE38
 0048E93E    mov         dword ptr [ebp-0C],eax
>0048E941    jmp         0048E99F
 0048E943    mov         eax,dword ptr [ebp-10]
 0048E946    mov         eax,dword ptr [eax+14]
 0048E949    mov         dword ptr [ebp-10],eax
 0048E94C    mov         eax,dword ptr [ebp-4]
 0048E94F    mov         eax,dword ptr [eax+1C]
 0048E952    mov         eax,dword ptr [eax+64]
 0048E955    cmp         eax,dword ptr [ebp-10]
>0048E958    jne         0048E91C
 0048E95A    lea         edx,[ebp-20]
 0048E95D    mov         eax,dword ptr [ebp-4]
 0048E960    mov         eax,dword ptr [eax+1C]
 0048E963    mov         eax,dword ptr [eax+14]
 0048E966    mov         ecx,dword ptr [eax]
 0048E968    call        dword ptr [ecx+44]
 0048E96B    lea         edx,[ebp-20]
 0048E96E    mov         eax,dword ptr [ebp-4]
 0048E971    mov         eax,dword ptr [eax+1C]
 0048E974    mov         eax,dword ptr [eax+14]
 0048E977    mov         ecx,dword ptr [eax]
 0048E979    call        dword ptr [ecx+8C]
 0048E97F    mov         al,byte ptr [ebp-8]
 0048E982    dec         al
>0048E984    je          0048E992
 0048E986    dec         al
>0048E988    jne         0048E99A
 0048E98A    mov         eax,dword ptr [ebp-20]
 0048E98D    mov         dword ptr [ebp-0C],eax
>0048E990    jmp         0048E99F
 0048E992    mov         eax,dword ptr [ebp-1C]
 0048E995    mov         dword ptr [ebp-0C],eax
>0048E998    jmp         0048E99F
 0048E99A    xor         eax,eax
 0048E99C    mov         dword ptr [ebp-0C],eax
 0048E99F    mov         eax,dword ptr [ebp-0C]
 0048E9A2    mov         esp,ebp
 0048E9A4    pop         ebp
 0048E9A5    ret
end;*}

//0048E9A8
{*function sub_0048E9A8(?:TDockZone; ?:?):?;
begin
 0048E9A8    push        ebp
 0048E9A9    mov         ebp,esp
 0048E9AB    add         esp,0FFFFFFE0
 0048E9AE    push        ebx
 0048E9AF    mov         dword ptr [ebp-8],edx
 0048E9B2    mov         dword ptr [ebp-4],eax
 0048E9B5    mov         eax,dword ptr [ebp-4]
 0048E9B8    mov         eax,dword ptr [eax+1C]
 0048E9BB    mov         eax,dword ptr [eax+64]
 0048E9BE    cmp         eax,dword ptr [ebp-4]
>0048E9C1    je          0048E9EE
 0048E9C3    mov         eax,dword ptr [ebp-4]
 0048E9C6    mov         eax,dword ptr [eax+1C]
 0048E9C9    mov         eax,dword ptr [eax+64]
 0048E9CC    mov         edx,dword ptr [ebp-4]
 0048E9CF    cmp         eax,dword ptr [edx+14]
>0048E9D2    jne         0048EA32
 0048E9D4    mov         eax,dword ptr [ebp-4]
 0048E9D7    cmp         dword ptr [eax+4],0
>0048E9DB    je          0048EA32
 0048E9DD    mov         eax,dword ptr [ebp-4]
 0048E9E0    mov         eax,dword ptr [eax+1C]
 0048E9E3    mov         eax,dword ptr [eax+64]
 0048E9E6    call        0048E780
 0048E9EB    dec         eax
>0048E9EC    jne         0048EA32
 0048E9EE    lea         edx,[ebp-20]
 0048E9F1    mov         eax,dword ptr [ebp-4]
 0048E9F4    mov         eax,dword ptr [eax+1C]
 0048E9F7    mov         eax,dword ptr [eax+14]
 0048E9FA    mov         ecx,dword ptr [eax]
 0048E9FC    call        dword ptr [ecx+44]
 0048E9FF    lea         edx,[ebp-20]
 0048EA02    mov         eax,dword ptr [ebp-4]
 0048EA05    mov         eax,dword ptr [eax+1C]
 0048EA08    mov         eax,dword ptr [eax+14]
 0048EA0B    mov         ecx,dword ptr [eax]
 0048EA0D    call        dword ptr [ecx+8C]
 0048EA13    cmp         byte ptr [ebp-8],1
>0048EA17    jne         0048EA27
 0048EA19    mov         eax,dword ptr [ebp-14]
 0048EA1C    sub         eax,dword ptr [ebp-1C]
 0048EA1F    mov         dword ptr [ebp-0C],eax
>0048EA22    jmp         0048EAA8
 0048EA27    mov         eax,dword ptr [ebp-18]
 0048EA2A    sub         eax,dword ptr [ebp-20]
 0048EA2D    mov         dword ptr [ebp-0C],eax
>0048EA30    jmp         0048EAA8
 0048EA32    mov         eax,dword ptr [ebp-4]
 0048EA35    mov         dword ptr [ebp-10],eax
>0048EA38    jmp         0048EA6A
 0048EA3A    mov         al,byte ptr [ebp-8]
 0048EA3D    mov         edx,dword ptr [ebp-10]
 0048EA40    mov         edx,dword ptr [edx+14]
 0048EA43    cmp         al,byte ptr [edx+10]
>0048EA46    jne         0048EA61
 0048EA48    mov         eax,dword ptr [ebp-10]
 0048EA4B    call        0048EE38
 0048EA50    mov         ebx,eax
 0048EA52    mov         eax,dword ptr [ebp-10]
 0048EA55    call        0048E818
 0048EA5A    sub         ebx,eax
 0048EA5C    mov         dword ptr [ebp-0C],ebx
>0048EA5F    jmp         0048EAA8
 0048EA61    mov         eax,dword ptr [ebp-10]
 0048EA64    mov         eax,dword ptr [eax+14]
 0048EA67    mov         dword ptr [ebp-10],eax
 0048EA6A    mov         eax,dword ptr [ebp-4]
 0048EA6D    mov         eax,dword ptr [eax+1C]
 0048EA70    mov         eax,dword ptr [eax+64]
 0048EA73    cmp         eax,dword ptr [ebp-10]
>0048EA76    jne         0048EA3A
 0048EA78    mov         al,byte ptr [ebp-8]
 0048EA7B    mov         edx,dword ptr [ebp-4]
 0048EA7E    mov         edx,dword ptr [edx+1C]
 0048EA81    mov         edx,dword ptr [edx+64]
 0048EA84    cmp         al,byte ptr [edx+10]
>0048EA87    jne         0048EA97
 0048EA89    mov         eax,dword ptr [ebp-4]
 0048EA8C    mov         eax,dword ptr [eax+1C]
 0048EA8F    mov         eax,dword ptr [eax+68]
 0048EA92    mov         dword ptr [ebp-0C],eax
>0048EA95    jmp         0048EAA8
 0048EA97    mov         eax,dword ptr [ebp-4]
 0048EA9A    mov         eax,dword ptr [eax+1C]
 0048EA9D    mov         eax,dword ptr [eax+64]
 0048EAA0    call        0048EE38
 0048EAA5    mov         dword ptr [ebp-0C],eax
 0048EAA8    mov         eax,dword ptr [ebp-0C]
 0048EAAB    pop         ebx
 0048EAAC    mov         esp,ebp
 0048EAAE    pop         ebp
 0048EAAF    ret
end;*}

//0048EAB0
procedure sub_0048EAB0(?:TDockZone);
begin
{*
 0048EAB0    push        ebp
 0048EAB1    mov         ebp,esp
 0048EAB3    add         esp,0FFFFFFF0
 0048EAB6    mov         dword ptr [ebp-4],eax
 0048EAB9    mov         eax,dword ptr [ebp-4]
 0048EABC    call        0048E780
 0048EAC1    test        eax,eax
>0048EAC3    je          0048EB79
 0048EAC9    mov         eax,dword ptr [ebp-4]
 0048EACC    cmp         byte ptr [eax+10],0
>0048EAD0    je          0048EB79
 0048EAD6    mov         eax,dword ptr [ebp-4]
 0048EAD9    call        0048F000
 0048EADE    mov         dword ptr [ebp-10],eax
 0048EAE1    mov         eax,dword ptr [ebp-4]
 0048EAE4    mov         al,byte ptr [eax+10]
 0048EAE7    dec         al
>0048EAE9    je          0048EAF1
 0048EAEB    dec         al
>0048EAED    je          0048EB03
>0048EAEF    jmp         0048EB15
 0048EAF1    mov         edx,1
 0048EAF6    mov         eax,dword ptr [ebp-4]
 0048EAF9    call        0048E9A8
 0048EAFE    mov         dword ptr [ebp-8],eax
>0048EB01    jmp         0048EB1A
 0048EB03    mov         edx,2
 0048EB08    mov         eax,dword ptr [ebp-4]
 0048EB0B    call        0048E9A8
 0048EB10    mov         dword ptr [ebp-8],eax
>0048EB13    jmp         0048EB1A
 0048EB15    xor         eax,eax
 0048EB17    mov         dword ptr [ebp-8],eax
 0048EB1A    mov         eax,dword ptr [ebp-4]
 0048EB1D    call        0048E780
 0048EB22    push        eax
 0048EB23    mov         eax,dword ptr [ebp-8]
 0048EB26    pop         edx
 0048EB27    mov         ecx,edx
 0048EB29    cdq
 0048EB2A    idiv        eax,ecx
 0048EB2C    mov         dword ptr [ebp-0C],eax
 0048EB2F    cmp         dword ptr [ebp-10],0
>0048EB33    je          0048EB79
 0048EB35    mov         eax,dword ptr [ebp-10]
 0048EB38    cmp         dword ptr [eax+0C],0
>0048EB3C    jne         0048EB4B
 0048EB3E    mov         edx,dword ptr [ebp-8]
 0048EB41    mov         eax,dword ptr [ebp-10]
 0048EB44    call        0048EE78
>0048EB49    jmp         0048EB60
 0048EB4B    mov         eax,dword ptr [ebp-10]
 0048EB4E    call        0048E818
 0048EB53    mov         edx,eax
 0048EB55    add         edx,dword ptr [ebp-0C]
 0048EB58    mov         eax,dword ptr [ebp-10]
 0048EB5B    call        0048EE78
 0048EB60    mov         eax,dword ptr [ebp-10]
 0048EB63    call        0048ECA8
 0048EB68    mov         eax,dword ptr [ebp-10]
 0048EB6B    call        0048EFA8
 0048EB70    mov         dword ptr [ebp-10],eax
 0048EB73    cmp         dword ptr [ebp-10],0
>0048EB77    jne         0048EB35
 0048EB79    mov         esp,ebp
 0048EB7B    pop         ebp
 0048EB7C    ret
*}
end;

//0048EB80
{*procedure sub_0048EB80(?:?; ?:?);
begin
 0048EB80    push        ebp
 0048EB81    mov         ebp,esp
 0048EB83    add         esp,0FFFFFFF8
 0048EB86    mov         dword ptr [ebp-8],edx
 0048EB89    mov         dword ptr [ebp-4],eax
 0048EB8C    mov         eax,dword ptr [ebp-8]
 0048EB8F    call        @LStrClr
 0048EB94    mov         eax,dword ptr [ebp-4]
 0048EB97    cmp         dword ptr [eax+4],0
>0048EB9B    je          0048EBD1
 0048EB9D    mov         eax,dword ptr [ebp-4]
 0048EBA0    mov         eax,dword ptr [eax+4]
 0048EBA3    cmp         dword ptr [eax+8],0
>0048EBA7    jne         0048EBC0
 0048EBA9    mov         ecx,dword ptr ds:[56E298];^SDockedCtlNeedsName:TResStringRec
 0048EBAF    mov         dl,1
 0048EBB1    mov         eax,[0040B004];Exception
 0048EBB6    call        Exception.Create;Exception.Create
 0048EBBB    call        @RaiseExcept
 0048EBC0    mov         eax,dword ptr [ebp-8]
 0048EBC3    mov         edx,dword ptr [ebp-4]
 0048EBC6    mov         edx,dword ptr [edx+4]
 0048EBC9    mov         edx,dword ptr [edx+8]
 0048EBCC    call        @LStrAsg
 0048EBD1    pop         ecx
 0048EBD2    pop         ecx
 0048EBD3    pop         ebp
 0048EBD4    ret
end;*}

//0048EBD8
{*function sub_0048EBD8(?:TDockZone; ?:?):?;
begin
 0048EBD8    push        ebp
 0048EBD9    mov         ebp,esp
 0048EBDB    add         esp,0FFFFFFEC
 0048EBDE    push        esi
 0048EBDF    mov         dword ptr [ebp-8],edx
 0048EBE2    mov         dword ptr [ebp-4],eax
 0048EBE5    xor         eax,eax
 0048EBE7    mov         dword ptr [ebp-10],eax
 0048EBEA    mov         eax,dword ptr [ebp-4]
 0048EBED    mov         eax,dword ptr [eax+1C]
 0048EBF0    mov         dword ptr [ebp-14],eax
 0048EBF3    lea         ecx,[ebp-10]
 0048EBF6    mov         eax,dword ptr [ebp-14]
 0048EBF9    mov         eax,dword ptr [eax+14]
 0048EBFC    mov         edx,dword ptr [ebp-8]
 0048EBFF    mov         si,0FFB9
 0048EC03    call        @CallDynaInst
 0048EC08    cmp         dword ptr [ebp-10],0
 0048EC0C    setne       byte ptr [ebp-9]
 0048EC10    cmp         byte ptr [ebp-9],0
>0048EC14    je          0048EC5C
 0048EC16    mov         eax,dword ptr [ebp-14]
 0048EC19    mov         edx,dword ptr [ebp-4]
 0048EC1C    mov         dword ptr [eax+38],edx
 0048EC1F    xor         eax,eax
 0048EC21    push        ebp
 0048EC22    push        48EC55
 0048EC27    push        dword ptr fs:[eax]
 0048EC2A    mov         dword ptr fs:[eax],esp
 0048EC2D    push        0
 0048EC2F    mov         eax,dword ptr [ebp-14]
 0048EC32    mov         edx,dword ptr [eax+14]
 0048EC35    xor         ecx,ecx
 0048EC37    mov         eax,dword ptr [ebp-10]
 0048EC3A    call        004849FC
 0048EC3F    xor         eax,eax
 0048EC41    pop         edx
 0048EC42    pop         ecx
 0048EC43    pop         ecx
 0048EC44    mov         dword ptr fs:[eax],edx
 0048EC47    push        48EC5C
 0048EC4C    mov         eax,dword ptr [ebp-14]
 0048EC4F    xor         edx,edx
 0048EC51    mov         dword ptr [eax+38],edx
 0048EC54    ret
>0048EC55    jmp         @HandleFinally
>0048EC5A    jmp         0048EC4C
 0048EC5C    mov         al,byte ptr [ebp-9]
 0048EC5F    pop         esi
 0048EC60    mov         esp,ebp
 0048EC62    pop         ebp
 0048EC63    ret
end;*}

//0048EC64
{*function sub_0048EC64(?:?):?;
begin
 0048EC64    push        ebp
 0048EC65    mov         ebp,esp
 0048EC67    add         esp,0FFFFFFF8
 0048EC6A    mov         byte ptr [ebp-1],0
 0048EC6E    mov         eax,dword ptr [ebp+8]
 0048EC71    mov         eax,dword ptr [eax-4]
 0048EC74    mov         eax,dword ptr [eax+14]
 0048EC77    mov         dword ptr [ebp-8],eax
 0048EC7A    cmp         dword ptr [ebp-8],0
>0048EC7E    je          0048ECA1
 0048EC80    mov         eax,dword ptr [ebp-8]
 0048EC83    call        0048EFA8
 0048EC88    test        eax,eax
>0048EC8A    je          0048EC92
 0048EC8C    mov         byte ptr [ebp-1],1
>0048EC90    jmp         0048ECA1
 0048EC92    mov         eax,dword ptr [ebp-8]
 0048EC95    mov         eax,dword ptr [eax+14]
 0048EC98    mov         dword ptr [ebp-8],eax
 0048EC9B    cmp         dword ptr [ebp-8],0
>0048EC9F    jne         0048EC80
 0048ECA1    mov         al,byte ptr [ebp-1]
 0048ECA4    pop         ecx
 0048ECA5    pop         ecx
 0048ECA6    pop         ebp
 0048ECA7    ret
end;*}

//0048ECA8
procedure sub_0048ECA8(?:TDockZone);
begin
{*
 0048ECA8    push        ebp
 0048ECA9    mov         ebp,esp
 0048ECAB    add         esp,0FFFFFFE4
 0048ECAE    push        ebx
 0048ECAF    mov         dword ptr [ebp-4],eax
 0048ECB2    mov         eax,dword ptr [ebp-4]
 0048ECB5    cmp         dword ptr [eax+4],0
>0048ECB9    je          0048EE32
 0048ECBF    mov         eax,dword ptr [ebp-4]
 0048ECC2    mov         eax,dword ptr [eax+4]
 0048ECC5    cmp         byte ptr [eax+57],0
>0048ECC9    je          0048EE32
 0048ECCF    mov         eax,dword ptr [ebp-4]
 0048ECD2    mov         eax,dword ptr [eax+1C]
 0048ECD5    cmp         dword ptr [eax+6C],0
>0048ECD9    jne         0048EE32
 0048ECDF    mov         eax,dword ptr [ebp-4]
 0048ECE2    mov         eax,dword ptr [eax+14]
 0048ECE5    mov         al,byte ptr [eax+10]
 0048ECE8    mov         edx,dword ptr [ebp-4]
 0048ECEB    mov         edx,dword ptr [edx+4]
 0048ECEE    mov         byte ptr [edx+9C],al
 0048ECF4    mov         edx,2
 0048ECF9    mov         eax,dword ptr [ebp-4]
 0048ECFC    call        0048E9A8
 0048ED01    mov         dword ptr [ebp-8],eax
 0048ED04    mov         edx,1
 0048ED09    mov         eax,dword ptr [ebp-4]
 0048ED0C    call        0048E9A8
 0048ED11    mov         dword ptr [ebp-0C],eax
 0048ED14    push        ebp
 0048ED15    call        0048EC64
 0048ED1A    pop         ecx
 0048ED1B    test        al,al
>0048ED1D    je          0048ED45
 0048ED1F    mov         eax,dword ptr [ebp-4]
 0048ED22    mov         eax,dword ptr [eax+14]
 0048ED25    cmp         byte ptr [eax+10],1
>0048ED29    jne         0048ED39
 0048ED2B    mov         eax,dword ptr [ebp-4]
 0048ED2E    mov         eax,dword ptr [eax+1C]
 0048ED31    mov         eax,dword ptr [eax+0C]
 0048ED34    sub         dword ptr [ebp-8],eax
>0048ED37    jmp         0048ED45
 0048ED39    mov         eax,dword ptr [ebp-4]
 0048ED3C    mov         eax,dword ptr [eax+1C]
 0048ED3F    mov         eax,dword ptr [eax+0C]
 0048ED42    sub         dword ptr [ebp-0C],eax
 0048ED45    mov         eax,dword ptr [ebp-4]
 0048ED48    call        0048EFA8
 0048ED4D    test        eax,eax
>0048ED4F    jne         0048EDBF
 0048ED51    mov         eax,dword ptr [ebp-4]
 0048ED54    mov         eax,dword ptr [eax+14]
 0048ED57    mov         edx,dword ptr [ebp-4]
 0048ED5A    mov         edx,dword ptr [edx+1C]
 0048ED5D    cmp         eax,dword ptr [edx+64]
>0048ED60    je          0048ED8C
 0048ED62    mov         eax,dword ptr [ebp-4]
 0048ED65    mov         eax,dword ptr [eax+14]
 0048ED68    mov         al,byte ptr [eax+10]
 0048ED6B    mov         edx,dword ptr [ebp-4]
 0048ED6E    mov         edx,dword ptr [edx+1C]
 0048ED71    mov         edx,dword ptr [edx+64]
 0048ED74    cmp         al,byte ptr [edx+10]
>0048ED77    jne         0048ED8C
 0048ED79    mov         eax,dword ptr [ebp-4]
 0048ED7C    call        0048EE38
 0048ED81    mov         edx,dword ptr [ebp-4]
 0048ED84    mov         edx,dword ptr [edx+1C]
 0048ED87    cmp         eax,dword ptr [edx+68]
>0048ED8A    jl          0048EDBF
 0048ED8C    mov         eax,dword ptr [ebp-4]
 0048ED8F    mov         eax,dword ptr [eax+14]
 0048ED92    mov         al,byte ptr [eax+10]
 0048ED95    mov         edx,dword ptr [ebp-4]
 0048ED98    mov         edx,dword ptr [edx+1C]
 0048ED9B    mov         edx,dword ptr [edx+64]
 0048ED9E    cmp         al,byte ptr [edx+10]
>0048EDA1    je          0048EDE5
 0048EDA3    mov         eax,dword ptr [ebp-4]
 0048EDA6    call        0048EE38
 0048EDAB    mov         ebx,eax
 0048EDAD    mov         eax,dword ptr [ebp-4]
 0048EDB0    mov         eax,dword ptr [eax+1C]
 0048EDB3    mov         eax,dword ptr [eax+64]
 0048EDB6    call        0048EE38
 0048EDBB    cmp         ebx,eax
>0048EDBD    jge         0048EDE5
 0048EDBF    mov         eax,dword ptr [ebp-4]
 0048EDC2    mov         eax,dword ptr [eax+14]
 0048EDC5    cmp         byte ptr [eax+10],1
>0048EDC9    jne         0048EDD9
 0048EDCB    mov         eax,dword ptr [ebp-4]
 0048EDCE    mov         eax,dword ptr [eax+1C]
 0048EDD1    mov         eax,dword ptr [eax+0C]
 0048EDD4    sub         dword ptr [ebp-0C],eax
>0048EDD7    jmp         0048EDE5
 0048EDD9    mov         eax,dword ptr [ebp-4]
 0048EDDC    mov         eax,dword ptr [eax+1C]
 0048EDDF    mov         eax,dword ptr [eax+0C]
 0048EDE2    sub         dword ptr [ebp-8],eax
 0048EDE5    mov         eax,dword ptr [ebp-0C]
 0048EDE8    push        eax
 0048EDE9    lea         eax,[ebp-1C]
 0048EDEC    push        eax
 0048EDED    mov         edx,1
 0048EDF2    mov         eax,dword ptr [ebp-4]
 0048EDF5    call        0048E908
 0048EDFA    push        eax
 0048EDFB    mov         edx,2
 0048EE00    mov         eax,dword ptr [ebp-4]
 0048EE03    call        0048E908
 0048EE08    mov         ecx,dword ptr [ebp-8]
 0048EE0B    pop         edx
 0048EE0C    call        0041E740
 0048EE11    lea         ecx,[ebp-1C]
 0048EE14    mov         eax,dword ptr [ebp-4]
 0048EE17    mov         edx,dword ptr [eax+4]
 0048EE1A    mov         eax,dword ptr [ebp-4]
 0048EE1D    mov         eax,dword ptr [eax+1C]
 0048EE20    mov         ebx,dword ptr [eax]
 0048EE22    call        dword ptr [ebx]
 0048EE24    lea         edx,[ebp-1C]
 0048EE27    mov         eax,dword ptr [ebp-4]
 0048EE2A    mov         eax,dword ptr [eax+4]
 0048EE2D    call        00482F18
 0048EE32    pop         ebx
 0048EE33    mov         esp,ebp
 0048EE35    pop         ebp
 0048EE36    ret
*}
end;

//0048EE38
{*function sub_0048EE38(?:TDockZone):?;
begin
 0048EE38    push        ebp
 0048EE39    mov         ebp,esp
 0048EE3B    add         esp,0FFFFFFF8
 0048EE3E    mov         dword ptr [ebp-4],eax
 0048EE41    mov         eax,dword ptr [ebp-4]
 0048EE44    call        0048E7BC
 0048EE49    test        al,al
>0048EE4B    jne         0048EE66
 0048EE4D    mov         eax,dword ptr [ebp-4]
 0048EE50    call        0048E6BC
 0048EE55    test        al,al
>0048EE57    je          0048EE66
 0048EE59    mov         eax,dword ptr [ebp-4]
 0048EE5C    call        0048E818
 0048EE61    mov         dword ptr [ebp-8],eax
>0048EE64    jmp         0048EE6F
 0048EE66    mov         eax,dword ptr [ebp-4]
 0048EE69    mov         eax,dword ptr [eax+20]
 0048EE6C    mov         dword ptr [ebp-8],eax
 0048EE6F    mov         eax,dword ptr [ebp-8]
 0048EE72    pop         ecx
 0048EE73    pop         ecx
 0048EE74    pop         ebp
 0048EE75    ret
end;*}

//0048EE78
procedure sub_0048EE78(?:TDockZone; ?:Integer);
begin
{*
 0048EE78    push        ebp
 0048EE79    mov         ebp,esp
 0048EE7B    add         esp,0FFFFFFF8
 0048EE7E    mov         dword ptr [ebp-8],edx
 0048EE81    mov         dword ptr [ebp-4],eax
 0048EE84    mov         eax,dword ptr [ebp-8]
 0048EE87    mov         edx,dword ptr [ebp-4]
 0048EE8A    mov         dword ptr [edx+20],eax
 0048EE8D    pop         ecx
 0048EE8E    pop         ecx
 0048EE8F    pop         ebp
 0048EE90    ret
*}
end;

//0048EE94
{*function sub_0048EE94(?:?):?;
begin
 0048EE94    push        ebp
 0048EE95    mov         ebp,esp
 0048EE97    add         esp,0FFFFFFF8
 0048EE9A    mov         dword ptr [ebp-4],eax
 0048EE9D    mov         eax,dword ptr [ebp-4]
 0048EEA0    mov         eax,dword ptr [eax+8]
 0048EEA3    mov         dword ptr [ebp-8],eax
>0048EEA6    jmp         0048EEB1
 0048EEA8    mov         eax,dword ptr [ebp-8]
 0048EEAB    mov         eax,dword ptr [eax+0C]
 0048EEAE    mov         dword ptr [ebp-8],eax
 0048EEB1    mov         eax,dword ptr [ebp-8]
 0048EEB4    cmp         dword ptr [eax+0C],0
>0048EEB8    jne         0048EEA8
 0048EEBA    mov         eax,dword ptr [ebp-8]
 0048EEBD    pop         ecx
 0048EEBE    pop         ecx
 0048EEBF    pop         ebp
 0048EEC0    ret
end;*}

//0048EEC4
procedure sub_0048EEC4(?:TDockZone; ?:Integer);
begin
{*
 0048EEC4    push        ebp
 0048EEC5    mov         ebp,esp
 0048EEC7    add         esp,0FFFFFFF0
 0048EECA    mov         dword ptr [ebp-8],edx
 0048EECD    mov         dword ptr [ebp-4],eax
 0048EED0    mov         edx,dword ptr [ebp-8]
 0048EED3    mov         eax,dword ptr [ebp-4]
 0048EED6    call        0048EE78
 0048EEDB    mov         eax,dword ptr [ebp-4]
 0048EEDE    mov         eax,dword ptr [eax+8]
 0048EEE1    mov         dword ptr [ebp-10],eax
 0048EEE4    cmp         dword ptr [ebp-10],0
>0048EEE8    je          0048EF1D
 0048EEEA    mov         eax,dword ptr [ebp-10]
 0048EEED    call        0048E748
 0048EEF2    test        eax,eax
>0048EEF4    jle         0048EF0E
 0048EEF6    push        ebp
 0048EEF7    mov         eax,dword ptr [ebp-10]
 0048EEFA    call        0048EE94
 0048EEFF    pop         ecx
 0048EF00    mov         dword ptr [ebp-0C],eax
 0048EF03    mov         edx,dword ptr [ebp-8]
 0048EF06    mov         eax,dword ptr [ebp-0C]
 0048EF09    call        0048EEC4
 0048EF0E    mov         eax,dword ptr [ebp-10]
 0048EF11    mov         eax,dword ptr [eax+0C]
 0048EF14    mov         dword ptr [ebp-10],eax
 0048EF17    cmp         dword ptr [ebp-10],0
>0048EF1B    jne         0048EEEA
 0048EF1D    mov         esp,ebp
 0048EF1F    pop         ebp
 0048EF20    ret
*}
end;

//0048EF24
procedure sub_0048EF24(?:TDockZone);
begin
{*
 0048EF24    push        ebp
 0048EF25    mov         ebp,esp
 0048EF27    add         esp,0FFFFFFF8
 0048EF2A    push        ebx
 0048EF2B    mov         dword ptr [ebp-4],eax
 0048EF2E    mov         eax,dword ptr [ebp-4]
 0048EF31    mov         eax,dword ptr [eax+8]
 0048EF34    mov         dword ptr [ebp-8],eax
 0048EF37    cmp         dword ptr [ebp-8],0
>0048EF3B    je          0048EFA2
 0048EF3D    mov         eax,dword ptr [ebp-8]
 0048EF40    call        0048EE38
 0048EF45    mov         ebx,eax
 0048EF47    mov         eax,dword ptr [ebp-8]
 0048EF4A    call        0048E818
 0048EF4F    cmp         ebx,eax
>0048EF51    jl          0048EF69
 0048EF53    mov         eax,dword ptr [ebp-8]
 0048EF56    call        0048EE38
 0048EF5B    mov         ebx,eax
 0048EF5D    mov         eax,dword ptr [ebp-4]
 0048EF60    call        0048E890
 0048EF65    cmp         ebx,eax
>0048EF67    jle         0048EF8B
 0048EF69    mov         eax,dword ptr [ebp-4]
 0048EF6C    call        0048EAB0
 0048EF71    mov         eax,dword ptr [ebp-4]
 0048EF74    mov         eax,dword ptr [eax+1C]
 0048EF77    push        eax
 0048EF78    push        4911C4
 0048EF7D    mov         edx,dword ptr [ebp-4]
 0048EF80    mov         eax,dword ptr [ebp-4]
 0048EF83    mov         eax,dword ptr [eax+1C]
 0048EF86    call        0048F364
 0048EF8B    mov         eax,dword ptr [ebp-8]
 0048EF8E    call        0048EF24
 0048EF93    mov         eax,dword ptr [ebp-8]
 0048EF96    mov         eax,dword ptr [eax+0C]
 0048EF99    mov         dword ptr [ebp-8],eax
 0048EF9C    cmp         dword ptr [ebp-8],0
>0048EFA0    jne         0048EF3D
 0048EFA2    pop         ebx
 0048EFA3    pop         ecx
 0048EFA4    pop         ecx
 0048EFA5    pop         ebp
 0048EFA6    ret
*}
end;

//0048EFA8
{*function sub_0048EFA8(?:?):?;
begin
 0048EFA8    push        ebp
 0048EFA9    mov         ebp,esp
 0048EFAB    add         esp,0FFFFFFF8
 0048EFAE    mov         dword ptr [ebp-4],eax
 0048EFB1    mov         eax,dword ptr [ebp-4]
 0048EFB4    mov         eax,dword ptr [eax+0C]
 0048EFB7    call        0048E688
 0048EFBC    mov         dword ptr [ebp-8],eax
 0048EFBF    mov         eax,dword ptr [ebp-8]
 0048EFC2    pop         ecx
 0048EFC3    pop         ecx
 0048EFC4    pop         ebp
 0048EFC5    ret
end;*}

//0048F000
{*function sub_0048F000(?:TDockZone):?;
begin
 0048F000    push        ebp
 0048F001    mov         ebp,esp
 0048F003    add         esp,0FFFFFFF8
 0048F006    mov         dword ptr [ebp-4],eax
 0048F009    mov         eax,dword ptr [ebp-4]
 0048F00C    mov         eax,dword ptr [eax+8]
 0048F00F    call        0048E688
 0048F014    mov         dword ptr [ebp-8],eax
 0048F017    mov         eax,dword ptr [ebp-8]
 0048F01A    pop         ecx
 0048F01B    pop         ecx
 0048F01C    pop         ebp
 0048F01D    ret
end;*}

//0048F020
constructor sub_0048F020;
begin
{*
 0048F020    push        ebp
 0048F021    mov         ebp,esp
 0048F023    add         esp,0FFFFFFEC
 0048F026    push        ebx
 0048F027    test        dl,dl
>0048F029    je          0048F033
 0048F02B    add         esp,0FFFFFFF0
 0048F02E    call        @ClassCreate
 0048F033    mov         dword ptr [ebp-0C],ecx
 0048F036    mov         byte ptr [ebp-5],dl
 0048F039    mov         dword ptr [ebp-4],eax
 0048F03C    xor         edx,edx
 0048F03E    mov         eax,dword ptr [ebp-4]
 0048F041    call        TObject.Create
 0048F046    mov         eax,dword ptr [ebp-4]
 0048F049    mov         dword ptr [eax+0C],4;TDockTree.FBorderWidth:Integer
 0048F050    mov         eax,dword ptr [ebp-4]
 0048F053    mov         edx,dword ptr [ebp-0C]
 0048F056    mov         dword ptr [eax+14],edx;TDockTree.FDockSite:TWinControl
 0048F059    mov         eax,dword ptr [ebp-4]
 0048F05C    mov         dword ptr [eax+70],40000;TDockTree.FVersion:Integer
 0048F063    mov         eax,dword ptr [ebp-4]
 0048F066    mov         dword ptr [eax+18],0C;TDockTree.FGrabberSize:Integer
 0048F06D    mov         eax,dword ptr [ebp-0C]
 0048F070    cmp         byte ptr [eax+5B],1
>0048F074    je          0048F07F
 0048F076    mov         eax,dword ptr [ebp-0C]
 0048F079    cmp         byte ptr [eax+5B],2
>0048F07D    jne         0048F083
 0048F07F    xor         eax,eax
>0048F081    jmp         0048F085
 0048F083    mov         al,1
 0048F085    mov         edx,dword ptr [ebp-4]
 0048F088    mov         byte ptr [edx+1C],al;TDockTree.FGrabbersOnTop:Boolean
 0048F08B    mov         ecx,dword ptr [ebp-4]
 0048F08E    mov         dl,1
 0048F090    mov         eax,[0047F138];TDockZone
 0048F095    call        TDockZone.Create;TDockZone.Create
 0048F09A    mov         edx,dword ptr [ebp-4]
 0048F09D    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 0048F0A0    mov         dl,1
 0048F0A2    mov         eax,[0042C774];TBrush
 0048F0A7    call        TBrush.Create;TBrush.Create
 0048F0AC    mov         edx,dword ptr [ebp-4]
 0048F0AF    mov         dword ptr [edx+10],eax;TDockTree.FBrush:TBrush
 0048F0B2    mov         edx,0FFFFFF
 0048F0B7    xor         eax,eax
 0048F0B9    call        00436FC8
 0048F0BE    mov         edx,eax
 0048F0C0    mov         eax,dword ptr [ebp-4]
 0048F0C3    mov         eax,dword ptr [eax+10];TDockTree.FBrush:TBrush
 0048F0C6    call        0042EA6C
 0048F0CB    mov         eax,dword ptr [ebp-4]
 0048F0CE    call        0048F238
 0048F0D3    xor         eax,eax
 0048F0D5    push        ebp
 0048F0D6    push        48F13B
 0048F0DB    push        dword ptr fs:[eax]
 0048F0DE    mov         dword ptr fs:[eax],esp
 0048F0E1    mov         eax,dword ptr [ebp-0C]
 0048F0E4    call        00487E38
 0048F0E9    dec         eax
 0048F0EA    test        eax,eax
>0048F0EC    jl          0048F11A
 0048F0EE    inc         eax
 0048F0EF    mov         dword ptr [ebp-14],eax
 0048F0F2    mov         dword ptr [ebp-10],0
 0048F0F9    push        0
 0048F0FB    mov         edx,dword ptr [ebp-10]
 0048F0FE    mov         eax,dword ptr [ebp-0C]
 0048F101    call        00487DCC
 0048F106    mov         edx,eax
 0048F108    mov         cl,3
 0048F10A    mov         eax,dword ptr [ebp-4]
 0048F10D    mov         ebx,dword ptr [eax]
 0048F10F    call        dword ptr [ebx+8];TDockTree.sub_0048F45C
 0048F112    inc         dword ptr [ebp-10]
 0048F115    dec         dword ptr [ebp-14]
>0048F118    jne         0048F0F9
 0048F11A    mov         eax,dword ptr [ebp-4]
 0048F11D    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F120    call        0048EAB0
 0048F125    xor         eax,eax
 0048F127    pop         edx
 0048F128    pop         ecx
 0048F129    pop         ecx
 0048F12A    mov         dword ptr fs:[eax],edx
 0048F12D    push        48F142
 0048F132    mov         eax,dword ptr [ebp-4]
 0048F135    call        0048F248
 0048F13A    ret
>0048F13B    jmp         @HandleFinally
>0048F140    jmp         0048F132
 0048F142    mov         eax,dword ptr [ebp-0C]
 0048F145    test        byte ptr [eax+1C],10
>0048F149    jne         0048F173
 0048F14B    mov         eax,dword ptr [ebp-4]
 0048F14E    mov         edx,dword ptr [ebp-4]
 0048F151    mov         edx,dword ptr [edx+14];TDockTree.FDockSite:TWinControl
 0048F154    mov         ecx,dword ptr [edx+38];TWinControl.FWindowProc:TWndMethod
 0048F157    mov         dword ptr [eax+30],ecx;TDockTree.FOldWndProc:TWndMethod
 0048F15A    mov         ecx,dword ptr [edx+3C];TWinControl.?f3C:TControl
 0048F15D    mov         dword ptr [eax+34],ecx;TDockTree.?f34:TControl
 0048F160    mov         eax,dword ptr [ebp-4]
 0048F163    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048F166    mov         edx,dword ptr [ebp-4]
 0048F169    mov         dword ptr [eax+3C],edx;TWinControl.?f3C:TControl
 0048F16C    mov         dword ptr [eax+38],491860;TWinControl.FWindowProc:TWndMethod
 0048F173    mov         eax,dword ptr [ebp-4]
 0048F176    cmp         byte ptr [ebp-5],0
>0048F17A    je          0048F18B
 0048F17C    call        @AfterConstruction
 0048F181    pop         dword ptr fs:[0]
 0048F188    add         esp,0C
 0048F18B    mov         eax,dword ptr [ebp-4]
 0048F18E    pop         ebx
 0048F18F    mov         esp,ebp
 0048F191    pop         ebp
 0048F192    ret
*}
end;

//0048F194
destructor TDockTree.Destroy;
begin
{*
 0048F194    push        ebp
 0048F195    mov         ebp,esp
 0048F197    add         esp,0FFFFFFF8
 0048F19A    call        @BeforeDestruction
 0048F19F    mov         byte ptr [ebp-5],dl
 0048F1A2    mov         dword ptr [ebp-4],eax
 0048F1A5    mov         eax,dword ptr [ebp-4]
 0048F1A8    cmp         dword ptr [eax+30],0
>0048F1AC    je          0048F1CE
 0048F1AE    mov         eax,dword ptr [ebp-4]
 0048F1B1    mov         eax,dword ptr [eax+14]
 0048F1B4    mov         edx,dword ptr [ebp-4]
 0048F1B7    mov         ecx,dword ptr [edx+30]
 0048F1BA    mov         dword ptr [eax+38],ecx
 0048F1BD    mov         ecx,dword ptr [edx+34]
 0048F1C0    mov         dword ptr [eax+3C],ecx
 0048F1C3    mov         eax,dword ptr [ebp-4]
 0048F1C6    xor         edx,edx
 0048F1C8    mov         dword ptr [eax+30],edx
 0048F1CB    mov         dword ptr [eax+34],edx
 0048F1CE    mov         eax,dword ptr [ebp-4]
 0048F1D1    mov         edx,dword ptr [eax+64]
 0048F1D4    mov         eax,dword ptr [ebp-4]
 0048F1D7    call        00490678
 0048F1DC    mov         eax,dword ptr [ebp-4]
 0048F1DF    mov         eax,dword ptr [eax+10]
 0048F1E2    call        TObject.Free
 0048F1E7    mov         dl,byte ptr [ebp-5]
 0048F1EA    and         dl,0FC
 0048F1ED    mov         eax,dword ptr [ebp-4]
 0048F1F0    call        TObject.Destroy
 0048F1F5    cmp         byte ptr [ebp-5],0
>0048F1F9    jle         0048F203
 0048F1FB    mov         eax,dword ptr [ebp-4]
 0048F1FE    call        @ClassDestroy
 0048F203    pop         ecx
 0048F204    pop         ecx
 0048F205    pop         ebp
 0048F206    ret
*}
end;

//0048F208
{*procedure sub_0048F208(?:?; ?:?);
begin
 0048F208    push        ebp
 0048F209    mov         ebp,esp
 0048F20B    add         esp,0FFFFFFF4
 0048F20E    mov         dword ptr [ebp-8],ecx
 0048F211    mov         dword ptr [ebp-0C],edx
 0048F214    mov         dword ptr [ebp-4],eax
 0048F217    mov         eax,dword ptr [ebp-4]
 0048F21A    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048F21D    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 0048F220    dec         eax
 0048F221    sub         al,2
>0048F223    jae         0048F22D
 0048F225    mov         eax,dword ptr [ebp-8]
 0048F228    add         dword ptr [eax],0C
>0048F22B    jmp         0048F234
 0048F22D    mov         eax,dword ptr [ebp-8]
 0048F230    add         dword ptr [eax+4],0C
 0048F234    mov         esp,ebp
 0048F236    pop         ebp
 0048F237    ret
end;*}

//0048F238
procedure sub_0048F238(?:TDockTree);
begin
{*
 0048F238    push        ebp
 0048F239    mov         ebp,esp
 0048F23B    push        ecx
 0048F23C    mov         dword ptr [ebp-4],eax
 0048F23F    mov         eax,dword ptr [ebp-4]
 0048F242    inc         dword ptr [eax+6C];TDockTree.FUpdateCount:Integer
 0048F245    pop         ecx
 0048F246    pop         ebp
 0048F247    ret
*}
end;

//0048F248
procedure sub_0048F248(?:TDockTree);
begin
{*
 0048F248    push        ebp
 0048F249    mov         ebp,esp
 0048F24B    push        ecx
 0048F24C    mov         dword ptr [ebp-4],eax
 0048F24F    mov         eax,dword ptr [ebp-4]
 0048F252    dec         dword ptr [eax+6C];TDockTree.FUpdateCount:Integer
 0048F255    mov         eax,dword ptr [ebp-4]
 0048F258    cmp         dword ptr [eax+6C],0;TDockTree.FUpdateCount:Integer
>0048F25C    jg          0048F26E
 0048F25E    mov         eax,dword ptr [ebp-4]
 0048F261    xor         edx,edx
 0048F263    mov         dword ptr [eax+6C],edx;TDockTree.FUpdateCount:Integer
 0048F266    mov         eax,dword ptr [ebp-4]
 0048F269    call        0049118C
 0048F26E    pop         ecx
 0048F26F    pop         ebp
 0048F270    ret
*}
end;

//0048F274
{*procedure sub_0048F274(?:?; ?:?);
begin
 0048F274    push        ebp
 0048F275    mov         ebp,esp
 0048F277    push        ecx
 0048F278    mov         dword ptr [ebp-4],eax
 0048F27B    mov         eax,dword ptr [ebp+8]
 0048F27E    mov         eax,dword ptr [eax-4]
 0048F281    mov         edx,dword ptr [ebp-4]
 0048F284    cmp         eax,dword ptr [edx+4]
>0048F287    jne         0048F295
 0048F289    mov         eax,dword ptr [ebp+8]
 0048F28C    mov         edx,dword ptr [ebp-4]
 0048F28F    mov         dword ptr [eax-8],edx
 0048F292    pop         ecx
 0048F293    pop         ebp
 0048F294    ret
 0048F295    mov         eax,dword ptr [ebp+8]
 0048F298    cmp         dword ptr [eax-8],0
>0048F29C    jne         0048F2B7
 0048F29E    mov         eax,dword ptr [ebp-4]
 0048F2A1    cmp         dword ptr [eax+0C],0
>0048F2A5    je          0048F2B7
 0048F2A7    mov         eax,dword ptr [ebp+8]
 0048F2AA    push        eax
 0048F2AB    mov         eax,dword ptr [ebp-4]
 0048F2AE    mov         eax,dword ptr [eax+0C]
 0048F2B1    call        0048F274
 0048F2B6    pop         ecx
 0048F2B7    mov         eax,dword ptr [ebp+8]
 0048F2BA    cmp         dword ptr [eax-8],0
>0048F2BE    jne         0048F2D9
 0048F2C0    mov         eax,dword ptr [ebp-4]
 0048F2C3    cmp         dword ptr [eax+8],0
>0048F2C7    je          0048F2D9
 0048F2C9    mov         eax,dword ptr [ebp+8]
 0048F2CC    push        eax
 0048F2CD    mov         eax,dword ptr [ebp-4]
 0048F2D0    mov         eax,dword ptr [eax+8]
 0048F2D3    call        0048F274
 0048F2D8    pop         ecx
 0048F2D9    pop         ecx
 0048F2DA    pop         ebp
 0048F2DB    ret
end;*}

//0048F2DC
{*function sub_0048F2DC(?:TDockTree; ?:?):?;
begin
 0048F2DC    push        ebp
 0048F2DD    mov         ebp,esp
 0048F2DF    add         esp,0FFFFFFF0
 0048F2E2    mov         dword ptr [ebp-4],edx
 0048F2E5    mov         dword ptr [ebp-0C],eax
 0048F2E8    xor         eax,eax
 0048F2EA    mov         dword ptr [ebp-8],eax
 0048F2ED    cmp         dword ptr [ebp-4],0
>0048F2F1    je          0048F309
 0048F2F3    mov         eax,dword ptr [ebp-0C]
 0048F2F6    cmp         dword ptr [eax+64],0
>0048F2FA    je          0048F309
 0048F2FC    push        ebp
 0048F2FD    mov         eax,dword ptr [ebp-0C]
 0048F300    mov         eax,dword ptr [eax+64]
 0048F303    call        0048F274
 0048F308    pop         ecx
 0048F309    mov         eax,dword ptr [ebp-8]
 0048F30C    mov         dword ptr [ebp-10],eax
 0048F30F    mov         eax,dword ptr [ebp-10]
 0048F312    mov         esp,ebp
 0048F314    pop         ebp
 0048F315    ret
end;*}

//0048F318
{*procedure sub_0048F318(?:?; ?:?);
begin
 0048F318    push        ebp
 0048F319    mov         ebp,esp
 0048F31B    push        ecx
 0048F31C    push        ebx
 0048F31D    mov         dword ptr [ebp-4],eax
 0048F320    mov         eax,dword ptr [ebp+8]
 0048F323    lea         ebx,[eax+8]
 0048F326    mov         edx,dword ptr [ebp-4]
 0048F329    mov         eax,dword ptr [ebx+4]
 0048F32C    call        dword ptr [ebx]
 0048F32E    mov         eax,dword ptr [ebp-4]
 0048F331    cmp         dword ptr [eax+0C],0
>0048F335    je          0048F347
 0048F337    mov         eax,dword ptr [ebp+8]
 0048F33A    push        eax
 0048F33B    mov         eax,dword ptr [ebp-4]
 0048F33E    mov         eax,dword ptr [eax+0C]
 0048F341    call        0048F318
 0048F346    pop         ecx
 0048F347    mov         eax,dword ptr [ebp-4]
 0048F34A    cmp         dword ptr [eax+8],0
>0048F34E    je          0048F360
 0048F350    mov         eax,dword ptr [ebp+8]
 0048F353    push        eax
 0048F354    mov         eax,dword ptr [ebp-4]
 0048F357    mov         eax,dword ptr [eax+8]
 0048F35A    call        0048F318
 0048F35F    pop         ecx
 0048F360    pop         ebx
 0048F361    pop         ecx
 0048F362    pop         ebp
 0048F363    ret
end;*}

//0048F364
procedure sub_0048F364(?:TDockTree; ?:TDockZone);
begin
{*
 0048F364    push        ebp
 0048F365    mov         ebp,esp
 0048F367    add         esp,0FFFFFFF8
 0048F36A    mov         dword ptr [ebp-8],edx
 0048F36D    mov         dword ptr [ebp-4],eax
 0048F370    cmp         dword ptr [ebp-8],0
>0048F374    jne         0048F37F
 0048F376    mov         eax,dword ptr [ebp-4]
 0048F379    mov         eax,dword ptr [eax+64]
 0048F37C    mov         dword ptr [ebp-8],eax
 0048F37F    push        ebp
 0048F380    mov         eax,dword ptr [ebp-8]
 0048F383    call        0048F318
 0048F388    pop         ecx
 0048F389    pop         ecx
 0048F38A    pop         ecx
 0048F38B    pop         ebp
 0048F38C    ret         8
*}
end;

//0048F390
{*procedure sub_0048F390(?:?; ?:?; ?:?);
begin
 0048F390    push        ebp
 0048F391    mov         ebp,esp
 0048F393    add         esp,0FFFFFFE0
 0048F396    push        esi
 0048F397    push        edi
 0048F398    mov         dword ptr [ebp-0C],ecx
 0048F39B    mov         dword ptr [ebp-8],edx
 0048F39E    mov         dword ptr [ebp-4],eax
 0048F3A1    mov         edx,dword ptr [ebp-8]
 0048F3A4    mov         eax,dword ptr [ebp-4]
 0048F3A7    call        0048F2DC
 0048F3AC    mov         dword ptr [ebp-10],eax
 0048F3AF    cmp         dword ptr [ebp-10],0
>0048F3B3    jne         0048F3C6
 0048F3B5    mov         eax,dword ptr [ebp-0C]
 0048F3B8    xor         ecx,ecx
 0048F3BA    mov         edx,10
 0048F3BF    call        @FillChar
>0048F3C4    jmp         0048F414
 0048F3C6    mov         edx,1
 0048F3CB    mov         eax,dword ptr [ebp-10]
 0048F3CE    call        0048E9A8
 0048F3D3    push        eax
 0048F3D4    lea         eax,[ebp-20]
 0048F3D7    push        eax
 0048F3D8    mov         edx,2
 0048F3DD    mov         eax,dword ptr [ebp-10]
 0048F3E0    call        0048E9A8
 0048F3E5    push        eax
 0048F3E6    mov         edx,1
 0048F3EB    mov         eax,dword ptr [ebp-10]
 0048F3EE    call        0048E908
 0048F3F3    push        eax
 0048F3F4    mov         edx,2
 0048F3F9    mov         eax,dword ptr [ebp-10]
 0048F3FC    call        0048E908
 0048F401    pop         edx
 0048F402    pop         ecx
 0048F403    call        0041E740
 0048F408    mov         eax,dword ptr [ebp-0C]
 0048F40B    lea         esi,[ebp-20]
 0048F40E    mov         edi,eax
 0048F410    movs        dword ptr [edi],dword ptr [esi]
 0048F411    movs        dword ptr [edi],dword ptr [esi]
 0048F412    movs        dword ptr [edi],dword ptr [esi]
 0048F413    movs        dword ptr [edi],dword ptr [esi]
 0048F414    pop         edi
 0048F415    pop         esi
 0048F416    mov         esp,ebp
 0048F418    pop         ebp
 0048F419    ret
end;*}

//0048F41C
{*function sub_0048F41C(?:?; ?:?):?;
begin
 0048F41C    push        ebp
 0048F41D    mov         ebp,esp
 0048F41F    add         esp,0FFFFFFEC
 0048F422    mov         dword ptr [ebp-0C],ecx
 0048F425    mov         dword ptr [ebp-8],edx
 0048F428    mov         dword ptr [ebp-4],eax
 0048F42B    mov         ecx,dword ptr [ebp-0C]
 0048F42E    mov         edx,dword ptr [ebp-8]
 0048F431    mov         eax,dword ptr [ebp-4]
 0048F434    call        0048FDBC
 0048F439    mov         dword ptr [ebp-14],eax
 0048F43C    cmp         dword ptr [ebp-14],0
>0048F440    je          0048F44D
 0048F442    mov         eax,dword ptr [ebp-14]
 0048F445    mov         eax,dword ptr [eax+4]
 0048F448    mov         dword ptr [ebp-10],eax
>0048F44B    jmp         0048F452
 0048F44D    xor         eax,eax
 0048F44F    mov         dword ptr [ebp-10],eax
 0048F452    mov         eax,dword ptr [ebp-10]
 0048F455    mov         esp,ebp
 0048F457    pop         ebp
 0048F458    ret
end;*}

//0048F45C
{*procedure sub_0048F45C(?:?; ?:?; ?:?);
begin
 0048F45C    push        ebp
 0048F45D    mov         ebp,esp
 0048F45F    add         esp,0FFFFFFC0
 0048F462    push        ebx
 0048F463    push        esi
 0048F464    push        edi
 0048F465    mov         byte ptr [ebp-9],cl
 0048F468    mov         dword ptr [ebp-8],edx
 0048F46B    mov         dword ptr [ebp-4],eax
 0048F46E    mov         eax,dword ptr [ebp-8]
 0048F471    cmp         byte ptr [eax+57],0
>0048F475    je          0048F6FC
 0048F47B    mov         eax,dword ptr [ebp-4]
 0048F47E    cmp         dword ptr [eax+38],0;TDockTree.FReplacementZone:TDockZone
>0048F482    je          0048F4A0
 0048F484    mov         eax,dword ptr [ebp-4]
 0048F487    mov         eax,dword ptr [eax+38];TDockTree.FReplacementZone:TDockZone
 0048F48A    mov         edx,dword ptr [ebp-8]
 0048F48D    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
 0048F490    mov         eax,dword ptr [ebp-4]
 0048F493    mov         eax,dword ptr [eax+38];TDockTree.FReplacementZone:TDockZone
 0048F496    call        0048ECA8
>0048F49B    jmp         0048F6F1
 0048F4A0    mov         eax,dword ptr [ebp-4]
 0048F4A3    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F4A6    cmp         dword ptr [eax+8],0;TDockZone.FChildZones:TDockZone
>0048F4AA    jne         0048F57F
 0048F4B0    lea         edx,[ebp-30]
 0048F4B3    mov         eax,dword ptr [ebp-4]
 0048F4B6    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048F4B9    mov         ecx,dword ptr [eax]
 0048F4BB    call        dword ptr [ecx+44];TWinControl.sub_0048C23C
 0048F4BE    lea         edx,[ebp-30]
 0048F4C1    mov         eax,dword ptr [ebp-4]
 0048F4C4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048F4C7    mov         ecx,dword ptr [eax]
 0048F4C9    call        dword ptr [ecx+8C];TWinControl.sub_00486FB0
 0048F4CF    mov         eax,dword ptr [ebp-28]
 0048F4D2    sub         eax,dword ptr [ebp-30]
 0048F4D5    mov         dword ptr [ebp-1C],eax
 0048F4D8    mov         eax,dword ptr [ebp-24]
 0048F4DB    sub         eax,dword ptr [ebp-2C]
 0048F4DE    mov         dword ptr [ebp-20],eax
 0048F4E1    mov         eax,dword ptr [ebp-4]
 0048F4E4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048F4E7    cmp         byte ptr [eax+5C],0;TWinControl.FAutoSize:Boolean
>0048F4EB    je          0048F50F
 0048F4ED    cmp         dword ptr [ebp-1C],0
>0048F4F1    jne         0048F4FE
 0048F4F3    mov         eax,dword ptr [ebp-8]
 0048F4F6    call        0048371C
 0048F4FB    mov         dword ptr [ebp-1C],eax
 0048F4FE    cmp         dword ptr [ebp-20],0
>0048F502    jne         0048F50F
 0048F504    mov         eax,dword ptr [ebp-8]
 0048F507    call        004836E8
 0048F50C    mov         dword ptr [ebp-20],eax
 0048F50F    mov         eax,dword ptr [ebp-20]
 0048F512    push        eax
 0048F513    lea         eax,[ebp-40]
 0048F516    push        eax
 0048F517    mov         ecx,dword ptr [ebp-1C]
 0048F51A    mov         edx,dword ptr [ebp-2C]
 0048F51D    mov         eax,dword ptr [ebp-30]
 0048F520    call        0041E740
 0048F525    lea         esi,[ebp-40]
 0048F528    lea         edi,[ebp-30]
 0048F52B    movs        dword ptr [edi],dword ptr [esi]
 0048F52C    movs        dword ptr [edi],dword ptr [esi]
 0048F52D    movs        dword ptr [edi],dword ptr [esi]
 0048F52E    movs        dword ptr [edi],dword ptr [esi]
 0048F52F    lea         ecx,[ebp-30]
 0048F532    mov         edx,dword ptr [ebp-8]
 0048F535    mov         eax,dword ptr [ebp-4]
 0048F538    mov         ebx,dword ptr [eax]
 0048F53A    call        dword ptr [ebx];TDockTree.sub_0048F208
 0048F53C    lea         edx,[ebp-30]
 0048F53F    mov         eax,dword ptr [ebp-8]
 0048F542    call        00482F18
 0048F547    mov         ecx,dword ptr [ebp-4]
 0048F54A    mov         dl,1
 0048F54C    mov         eax,[0047F138];TDockZone
 0048F551    call        TDockZone.Create;TDockZone.Create
 0048F556    mov         dword ptr [ebp-14],eax
 0048F559    mov         eax,dword ptr [ebp-4]
 0048F55C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F55F    mov         edx,dword ptr [ebp-14]
 0048F562    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 0048F565    mov         eax,dword ptr [ebp-14]
 0048F568    mov         edx,dword ptr [ebp-4]
 0048F56B    mov         edx,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
 0048F56E    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 0048F571    mov         eax,dword ptr [ebp-14]
 0048F574    mov         edx,dword ptr [ebp-8]
 0048F577    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
>0048F57A    jmp         0048F6F1
 0048F57F    mov         al,byte ptr [ebp-9]
 0048F582    test        al,al
>0048F584    je          0048F58A
 0048F586    sub         al,5
>0048F588    jne         0048F58E
 0048F58A    mov         byte ptr [ebp-9],4
 0048F58E    mov         edx,dword ptr [ebp-8]
 0048F591    mov         eax,dword ptr [ebp-4]
 0048F594    call        0048F2DC
 0048F599    mov         dword ptr [ebp-14],eax
 0048F59C    cmp         dword ptr [ebp-14],0
>0048F5A0    je          0048F5AD
 0048F5A2    mov         edx,dword ptr [ebp-14]
 0048F5A5    mov         eax,dword ptr [ebp-4]
 0048F5A8    call        00490768
 0048F5AD    mov         edx,dword ptr [ebp+8]
 0048F5B0    mov         eax,dword ptr [ebp-4]
 0048F5B3    call        0048F2DC
 0048F5B8    mov         dword ptr [ebp-10],eax
 0048F5BB    xor         eax,eax
 0048F5BD    mov         al,byte ptr [ebp-9]
 0048F5C0    mov         al,byte ptr [eax+56C884]
 0048F5C6    mov         byte ptr [ebp-15],al
 0048F5C9    mov         eax,dword ptr [ebp-4]
 0048F5CC    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F5CF    call        0048E748
 0048F5D4    dec         eax
>0048F5D5    jne         0048F668
 0048F5DB    mov         eax,dword ptr [ebp-4]
 0048F5DE    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F5E1    mov         dl,byte ptr [ebp-15]
 0048F5E4    mov         byte ptr [eax+10],dl;TDockZone.FOrientation:TDockOrientation
 0048F5E7    mov         al,byte ptr [ebp-15]
 0048F5EA    dec         al
>0048F5EC    je          0048F5F4
 0048F5EE    dec         al
>0048F5F0    je          0048F62F
>0048F5F2    jmp         0048F668
 0048F5F4    mov         eax,dword ptr [ebp-4]
 0048F5F7    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F5FA    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F5FD    mov         edx,2
 0048F602    call        0048E9A8
 0048F607    mov         edx,eax
 0048F609    mov         eax,dword ptr [ebp-4]
 0048F60C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F60F    call        0048EE78
 0048F614    mov         eax,dword ptr [ebp-4]
 0048F617    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F61A    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F61D    mov         edx,1
 0048F622    call        0048E9A8
 0048F627    mov         edx,dword ptr [ebp-4]
 0048F62A    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
>0048F62D    jmp         0048F668
 0048F62F    mov         eax,dword ptr [ebp-4]
 0048F632    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F635    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F638    mov         edx,1
 0048F63D    call        0048E9A8
 0048F642    mov         edx,eax
 0048F644    mov         eax,dword ptr [ebp-4]
 0048F647    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F64A    call        0048EE78
 0048F64F    mov         eax,dword ptr [ebp-4]
 0048F652    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F655    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F658    mov         edx,2
 0048F65D    call        0048E9A8
 0048F662    mov         edx,dword ptr [ebp-4]
 0048F665    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 0048F668    mov         ecx,dword ptr [ebp-4]
 0048F66B    mov         dl,1
 0048F66D    mov         eax,[0047F138];TDockZone
 0048F672    call        TDockZone.Create;TDockZone.Create
 0048F677    mov         dword ptr [ebp-14],eax
 0048F67A    mov         eax,dword ptr [ebp-14]
 0048F67D    mov         edx,dword ptr [ebp-8]
 0048F680    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
 0048F683    cmp         dword ptr [ebp-10],0
>0048F687    je          0048F697
 0048F689    mov         eax,dword ptr [ebp-10]
 0048F68C    mov         eax,dword ptr [eax+14]
 0048F68F    mov         al,byte ptr [eax+10]
 0048F692    mov         byte ptr [ebp-16],al
>0048F695    jmp         0048F6A3
 0048F697    mov         eax,dword ptr [ebp-4]
 0048F69A    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F69D    mov         al,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 0048F6A0    mov         byte ptr [ebp-16],al
 0048F6A3    cmp         byte ptr [ebp-15],0
>0048F6A7    jne         0048F6AF
 0048F6A9    mov         al,byte ptr [ebp-16]
 0048F6AC    mov         byte ptr [ebp-15],al
 0048F6AF    mov         al,byte ptr [ebp-15]
 0048F6B2    cmp         al,byte ptr [ebp-16]
>0048F6B5    jne         0048F6D3
 0048F6B7    xor         eax,eax
 0048F6B9    mov         al,byte ptr [ebp-9]
 0048F6BC    mov         al,byte ptr [eax+56C88C]
 0048F6C2    push        eax
 0048F6C3    mov         ecx,dword ptr [ebp-10]
 0048F6C6    mov         edx,dword ptr [ebp-14]
 0048F6C9    mov         eax,dword ptr [ebp-4]
 0048F6CC    call        0048F994
>0048F6D1    jmp         0048F6F1
 0048F6D3    mov         al,byte ptr [ebp-15]
 0048F6D6    push        eax
 0048F6D7    xor         eax,eax
 0048F6D9    mov         al,byte ptr [ebp-9]
 0048F6DC    mov         al,byte ptr [eax+56C88C]
 0048F6E2    push        eax
 0048F6E3    mov         ecx,dword ptr [ebp-10]
 0048F6E6    mov         edx,dword ptr [ebp-14]
 0048F6E9    mov         eax,dword ptr [ebp-4]
 0048F6EC    call        0048F708
 0048F6F1    mov         eax,dword ptr [ebp-4]
 0048F6F4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048F6F7    mov         edx,dword ptr [eax]
 0048F6F9    call        dword ptr [edx+7C];TWinControl.sub_0048BE68
 0048F6FC    pop         edi
 0048F6FD    pop         esi
 0048F6FE    pop         ebx
 0048F6FF    mov         esp,ebp
 0048F701    pop         ebp
 0048F702    ret         4
end;*}

//0048F708
{*procedure sub_0048F708(?:TDockTree; ?:TDockZone; ?:?; ?:?; ?:?);
begin
 0048F708    push        ebp
 0048F709    mov         ebp,esp
 0048F70B    add         esp,0FFFFFFF0
 0048F70E    mov         dword ptr [ebp-0C],ecx
 0048F711    mov         dword ptr [ebp-8],edx
 0048F714    mov         dword ptr [ebp-4],eax
 0048F717    mov         ecx,dword ptr [ebp-4]
 0048F71A    mov         dl,1
 0048F71C    mov         eax,[0047F138];TDockZone
 0048F721    call        TDockZone.Create;TDockZone.Create
 0048F726    mov         dword ptr [ebp-10],eax
 0048F729    mov         al,byte ptr [ebp+0C]
 0048F72C    mov         edx,dword ptr [ebp-10]
 0048F72F    mov         byte ptr [edx+10],al;TDockZone.FOrientation:TDockOrientation
 0048F732    cmp         dword ptr [ebp-0C],0
>0048F736    jne         0048F890
 0048F73C    mov         eax,dword ptr [ebp-4]
 0048F73F    mov         edx,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 0048F742    mov         eax,dword ptr [ebp-10]
 0048F745    call        0048EE78
 0048F74A    mov         eax,dword ptr [ebp-4]
 0048F74D    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F750    call        0048EE38
 0048F755    mov         edx,dword ptr [ebp-4]
 0048F758    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 0048F75B    mov         al,byte ptr [ebp+0C]
 0048F75E    mov         edx,dword ptr [ebp-4]
 0048F761    mov         byte ptr [edx+48],al;TDockTree.FShiftScaleOrient:TDockOrientation
 0048F764    mov         eax,dword ptr [ebp-4]
 0048F767    xor         edx,edx
 0048F769    mov         dword ptr [eax+40],edx;TDockTree.FScaleBy:Double
 0048F76C    mov         dword ptr [eax+44],3FE00000;TDockTree.?f44:dword
 0048F773    cmp         byte ptr [ebp+8],0
>0048F777    je          0048F7D7
 0048F779    mov         eax,dword ptr [ebp-4]
 0048F77C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F77F    mov         edx,dword ptr [ebp-10]
 0048F782    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 0048F785    mov         eax,dword ptr [ebp-4]
 0048F788    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F78B    mov         edx,dword ptr [ebp-10]
 0048F78E    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 0048F791    mov         eax,dword ptr [ebp-4]
 0048F794    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F797    mov         edx,dword ptr [ebp-8]
 0048F79A    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 0048F79D    mov         eax,dword ptr [ebp-8]
 0048F7A0    mov         edx,dword ptr [ebp-4]
 0048F7A3    mov         edx,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
 0048F7A6    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 0048F7A9    mov         eax,dword ptr [ebp-8]
 0048F7AC    mov         edx,dword ptr [ebp-10]
 0048F7AF    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 0048F7B2    mov         eax,dword ptr [ebp-10]
 0048F7B5    mov         edx,dword ptr [ebp-4]
 0048F7B8    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 0048F7BB    mov         eax,dword ptr [ebp-4]
 0048F7BE    push        eax
 0048F7BF    push        490C14
 0048F7C4    mov         eax,dword ptr [ebp-10]
 0048F7C7    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F7CA    mov         eax,dword ptr [ebp-4]
 0048F7CD    call        0048F364
>0048F7D2    jmp         0048F878
 0048F7D7    mov         eax,dword ptr [ebp-8]
 0048F7DA    mov         edx,dword ptr [ebp-10]
 0048F7DD    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 0048F7E0    mov         eax,dword ptr [ebp-4]
 0048F7E3    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F7E6    mov         edx,dword ptr [ebp-10]
 0048F7E9    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 0048F7EC    mov         eax,dword ptr [ebp-4]
 0048F7EF    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F7F2    mov         edx,dword ptr [ebp-8]
 0048F7F5    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 0048F7F8    mov         eax,dword ptr [ebp-8]
 0048F7FB    mov         edx,dword ptr [ebp-4]
 0048F7FE    mov         edx,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
 0048F801    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 0048F804    mov         eax,dword ptr [ebp-8]
 0048F807    mov         edx,dword ptr [ebp-10]
 0048F80A    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 0048F80D    mov         eax,dword ptr [ebp-10]
 0048F810    mov         edx,dword ptr [ebp-4]
 0048F813    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 0048F816    mov         eax,dword ptr [ebp-4]
 0048F819    push        eax
 0048F81A    push        490C14
 0048F81F    mov         eax,dword ptr [ebp-10]
 0048F822    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F825    mov         eax,dword ptr [ebp-4]
 0048F828    call        0048F364
 0048F82D    mov         eax,dword ptr [ebp-4]
 0048F830    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F833    call        0048EE38
 0048F838    sar         eax,1
>0048F83A    jns         0048F83F
 0048F83C    adc         eax,0
 0048F83F    mov         edx,dword ptr [ebp-4]
 0048F842    mov         dword ptr [edx+4C],eax;TDockTree.FShiftBy:Integer
 0048F845    mov         eax,dword ptr [ebp-4]
 0048F848    push        eax
 0048F849    push        491010
 0048F84E    mov         eax,dword ptr [ebp-10]
 0048F851    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F854    mov         eax,dword ptr [ebp-4]
 0048F857    call        0048F364
 0048F85C    mov         eax,dword ptr [ebp-4]
 0048F85F    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F862    call        0048EE38
 0048F867    mov         edx,eax
 0048F869    sar         edx,1
>0048F86B    jns         0048F870
 0048F86D    adc         edx,0
 0048F870    mov         eax,dword ptr [ebp-8]
 0048F873    call        0048EE78
 0048F878    mov         eax,dword ptr [ebp-4]
 0048F87B    push        eax
 0048F87C    push        4911C4
 0048F881    xor         edx,edx
 0048F883    mov         eax,dword ptr [ebp-4]
 0048F886    call        0048F364
>0048F88B    jmp         0048F96A
 0048F890    mov         eax,dword ptr [ebp-0C]
 0048F893    call        0048EE38
 0048F898    mov         edx,eax
 0048F89A    mov         eax,dword ptr [ebp-10]
 0048F89D    call        0048EE78
 0048F8A2    mov         eax,dword ptr [ebp-0C]
 0048F8A5    mov         eax,dword ptr [eax+14]
 0048F8A8    mov         edx,dword ptr [ebp-10]
 0048F8AB    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 0048F8AE    mov         eax,dword ptr [ebp-0C]
 0048F8B1    mov         eax,dword ptr [eax+18]
 0048F8B4    mov         edx,dword ptr [ebp-10]
 0048F8B7    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 0048F8BA    mov         eax,dword ptr [ebp-10]
 0048F8BD    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>0048F8C1    je          0048F8CF
 0048F8C3    mov         eax,dword ptr [ebp-10]
 0048F8C6    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 0048F8C9    mov         edx,dword ptr [ebp-10]
 0048F8CC    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 0048F8CF    mov         eax,dword ptr [ebp-0C]
 0048F8D2    mov         eax,dword ptr [eax+0C]
 0048F8D5    mov         edx,dword ptr [ebp-10]
 0048F8D8    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 0048F8DB    mov         eax,dword ptr [ebp-10]
 0048F8DE    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>0048F8E2    je          0048F8F0
 0048F8E4    mov         eax,dword ptr [ebp-10]
 0048F8E7    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 0048F8EA    mov         edx,dword ptr [ebp-10]
 0048F8ED    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 0048F8F0    mov         eax,dword ptr [ebp-10]
 0048F8F3    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048F8F6    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F8F9    cmp         eax,dword ptr [ebp-0C]
>0048F8FC    jne         0048F90A
 0048F8FE    mov         eax,dword ptr [ebp-10]
 0048F901    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048F904    mov         edx,dword ptr [ebp-10]
 0048F907    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 0048F90A    mov         eax,dword ptr [ebp-8]
 0048F90D    mov         edx,dword ptr [ebp-10]
 0048F910    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 0048F913    mov         eax,dword ptr [ebp-0C]
 0048F916    mov         edx,dword ptr [ebp-10]
 0048F919    mov         dword ptr [eax+14],edx
 0048F91C    cmp         byte ptr [ebp+8],0
>0048F920    je          0048F947
 0048F922    mov         eax,dword ptr [ebp-0C]
 0048F925    mov         edx,dword ptr [ebp-10]
 0048F928    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 0048F92B    mov         eax,dword ptr [ebp-0C]
 0048F92E    xor         edx,edx
 0048F930    mov         dword ptr [eax+18],edx
 0048F933    mov         eax,dword ptr [ebp-0C]
 0048F936    mov         edx,dword ptr [ebp-8]
 0048F939    mov         dword ptr [eax+0C],edx
 0048F93C    mov         eax,dword ptr [ebp-8]
 0048F93F    mov         edx,dword ptr [ebp-0C]
 0048F942    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
>0048F945    jmp         0048F96A
 0048F947    mov         eax,dword ptr [ebp-8]
 0048F94A    mov         edx,dword ptr [ebp-10]
 0048F94D    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 0048F950    mov         eax,dword ptr [ebp-0C]
 0048F953    mov         edx,dword ptr [ebp-8]
 0048F956    mov         dword ptr [eax+18],edx
 0048F959    mov         eax,dword ptr [ebp-0C]
 0048F95C    xor         edx,edx
 0048F95E    mov         dword ptr [eax+0C],edx
 0048F961    mov         eax,dword ptr [ebp-8]
 0048F964    mov         edx,dword ptr [ebp-0C]
 0048F967    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 0048F96A    mov         eax,dword ptr [ebp-10]
 0048F96D    call        0048EAB0
 0048F972    mov         eax,dword ptr [ebp-10]
 0048F975    call        0048EF24
 0048F97A    mov         eax,dword ptr [ebp-4]
 0048F97D    push        eax
 0048F97E    push        4911C4
 0048F983    xor         edx,edx
 0048F985    mov         eax,dword ptr [ebp-4]
 0048F988    call        0048F364
 0048F98D    mov         esp,ebp
 0048F98F    pop         ebp
 0048F990    ret         8
end;*}

//0048F994
{*procedure sub_0048F994(?:TDockTree; ?:TDockZone; ?:?; ?:?);
begin
 0048F994    push        ebp
 0048F995    mov         ebp,esp
 0048F997    add         esp,0FFFFFFF4
 0048F99A    mov         dword ptr [ebp-0C],ecx
 0048F99D    mov         dword ptr [ebp-8],edx
 0048F9A0    mov         dword ptr [ebp-4],eax
 0048F9A3    cmp         dword ptr [ebp-0C],0
>0048F9A7    jne         0048F9CF
 0048F9A9    mov         eax,dword ptr [ebp-4]
 0048F9AC    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048F9AF    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048F9B2    mov         dword ptr [ebp-0C],eax
 0048F9B5    cmp         byte ptr [ebp+8],0
>0048F9B9    je          0048F9CF
>0048F9BB    jmp         0048F9C6
 0048F9BD    mov         eax,dword ptr [ebp-0C]
 0048F9C0    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 0048F9C3    mov         dword ptr [ebp-0C],eax
 0048F9C6    mov         eax,dword ptr [ebp-0C]
 0048F9C9    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>0048F9CD    jne         0048F9BD
 0048F9CF    cmp         byte ptr [ebp+8],0
>0048F9D3    je          0048FA16
 0048F9D5    mov         eax,dword ptr [ebp-0C]
 0048F9D8    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048F9DB    mov         edx,dword ptr [ebp-8]
 0048F9DE    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 0048F9E1    mov         eax,dword ptr [ebp-0C]
 0048F9E4    mov         edx,dword ptr [ebp-8]
 0048F9E7    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 0048F9EA    mov         eax,dword ptr [ebp-0C]
 0048F9ED    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 0048F9F0    mov         edx,dword ptr [ebp-8]
 0048F9F3    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 0048F9F6    mov         eax,dword ptr [ebp-8]
 0048F9F9    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>0048F9FD    je          0048FA0B
 0048F9FF    mov         eax,dword ptr [ebp-8]
 0048FA02    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 0048FA05    mov         edx,dword ptr [ebp-8]
 0048FA08    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 0048FA0B    mov         eax,dword ptr [ebp-8]
 0048FA0E    mov         edx,dword ptr [ebp-0C]
 0048FA11    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
>0048FA14    jmp         0048FA6F
 0048FA16    mov         eax,dword ptr [ebp-0C]
 0048FA19    mov         edx,dword ptr [ebp-8]
 0048FA1C    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 0048FA1F    mov         eax,dword ptr [ebp-0C]
 0048FA22    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 0048FA25    mov         edx,dword ptr [ebp-8]
 0048FA28    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 0048FA2B    mov         eax,dword ptr [ebp-8]
 0048FA2E    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>0048FA32    je          0048FA40
 0048FA34    mov         eax,dword ptr [ebp-8]
 0048FA37    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 0048FA3A    mov         edx,dword ptr [ebp-8]
 0048FA3D    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 0048FA40    mov         eax,dword ptr [ebp-8]
 0048FA43    mov         edx,dword ptr [ebp-0C]
 0048FA46    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 0048FA49    mov         eax,dword ptr [ebp-0C]
 0048FA4C    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048FA4F    mov         edx,dword ptr [ebp-8]
 0048FA52    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 0048FA55    mov         eax,dword ptr [ebp-8]
 0048FA58    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048FA5B    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0048FA5E    cmp         eax,dword ptr [ebp-0C]
>0048FA61    jne         0048FA6F
 0048FA63    mov         eax,dword ptr [ebp-8]
 0048FA66    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048FA69    mov         edx,dword ptr [ebp-8]
 0048FA6C    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 0048FA6F    mov         eax,dword ptr [ebp-0C]
 0048FA72    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048FA75    call        0048EAB0
 0048FA7A    mov         eax,dword ptr [ebp-0C]
 0048FA7D    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0048FA80    call        0048EF24
 0048FA85    mov         esp,ebp
 0048FA87    pop         ebp
 0048FA88    ret         4
end;*}

//0048FA8C
{*procedure sub_0048FA8C(?:?; ?:?);
begin
 0048FA8C    push        ebp
 0048FA8D    mov         ebp,esp
 0048FA8F    add         esp,0FFFFFFF0
 0048FA92    mov         dword ptr [ebp-4],eax
 0048FA95    mov         eax,dword ptr [ebp-4]
 0048FA98    mov         eax,dword ptr [eax+14]
 0048FA9B    cmp         byte ptr [eax+10],1
>0048FA9F    jne         0048FAEA
 0048FAA1    mov         eax,dword ptr [ebp-4]
 0048FAA4    call        0048EE38
 0048FAA9    mov         edx,dword ptr [ebp+8]
 0048FAAC    mov         edx,dword ptr [edx-4]
 0048FAAF    cmp         eax,dword ptr [edx+4]
>0048FAB2    jl          0048FAEA
 0048FAB4    mov         eax,dword ptr [ebp-4]
 0048FAB7    call        0048EE38
 0048FABC    mov         edx,dword ptr [ebp+8]
 0048FABF    mov         edx,dword ptr [edx-8]
 0048FAC2    sub         eax,dword ptr [edx+0C]
 0048FAC5    mov         edx,dword ptr [ebp+8]
 0048FAC8    mov         edx,dword ptr [edx-4]
 0048FACB    cmp         eax,dword ptr [edx+4]
>0048FACE    jg          0048FAEA
 0048FAD0    mov         eax,dword ptr [ebp+8]
 0048FAD3    mov         eax,dword ptr [eax-0C]
 0048FAD6    mov         dword ptr [eax],12
 0048FADC    mov         eax,dword ptr [ebp+8]
 0048FADF    mov         edx,dword ptr [ebp-4]
 0048FAE2    mov         dword ptr [eax-10],edx
>0048FAE5    jmp         0048FCAF
 0048FAEA    mov         eax,dword ptr [ebp-4]
 0048FAED    mov         eax,dword ptr [eax+14]
 0048FAF0    cmp         byte ptr [eax+10],2
>0048FAF4    jne         0048FB3D
 0048FAF6    mov         eax,dword ptr [ebp-4]
 0048FAF9    call        0048EE38
 0048FAFE    mov         edx,dword ptr [ebp+8]
 0048FB01    mov         edx,dword ptr [edx-4]
 0048FB04    cmp         eax,dword ptr [edx]
>0048FB06    jl          0048FB3D
 0048FB08    mov         eax,dword ptr [ebp-4]
 0048FB0B    call        0048EE38
 0048FB10    mov         edx,dword ptr [ebp+8]
 0048FB13    mov         edx,dword ptr [edx-8]
 0048FB16    sub         eax,dword ptr [edx+0C]
 0048FB19    mov         edx,dword ptr [ebp+8]
 0048FB1C    mov         edx,dword ptr [edx-4]
 0048FB1F    cmp         eax,dword ptr [edx]
>0048FB21    jg          0048FB3D
 0048FB23    mov         eax,dword ptr [ebp+8]
 0048FB26    mov         eax,dword ptr [eax-0C]
 0048FB29    mov         dword ptr [eax],12
 0048FB2F    mov         eax,dword ptr [ebp+8]
 0048FB32    mov         edx,dword ptr [ebp-4]
 0048FB35    mov         dword ptr [eax-10],edx
>0048FB38    jmp         0048FCAF
 0048FB3D    mov         eax,dword ptr [ebp-4]
 0048FB40    cmp         dword ptr [eax+4],0
>0048FB44    je          0048FCAF
 0048FB4A    mov         edx,1
 0048FB4F    mov         eax,dword ptr [ebp-4]
 0048FB52    call        0048E908
 0048FB57    mov         dword ptr [ebp-8],eax
 0048FB5A    mov         edx,2
 0048FB5F    mov         eax,dword ptr [ebp-4]
 0048FB62    call        0048E908
 0048FB67    mov         dword ptr [ebp-0C],eax
 0048FB6A    mov         eax,dword ptr [ebp+8]
 0048FB6D    mov         eax,dword ptr [eax-8]
 0048FB70    cmp         byte ptr [eax+1C],0
>0048FB74    je          0048FC25
 0048FB7A    mov         eax,dword ptr [ebp+8]
 0048FB7D    mov         eax,dword ptr [eax-4]
 0048FB80    mov         eax,dword ptr [eax+4]
 0048FB83    cmp         eax,dword ptr [ebp-8]
>0048FB86    jl          0048FCAF
 0048FB8C    mov         eax,dword ptr [ebp+8]
 0048FB8F    mov         eax,dword ptr [eax-4]
 0048FB92    mov         eax,dword ptr [eax+4]
 0048FB95    mov         edx,dword ptr [ebp+8]
 0048FB98    mov         edx,dword ptr [edx-8]
 0048FB9B    mov         edx,dword ptr [edx+18]
 0048FB9E    add         edx,dword ptr [ebp-8]
 0048FBA1    cmp         eax,edx
>0048FBA3    jg          0048FCAF
 0048FBA9    mov         eax,dword ptr [ebp+8]
 0048FBAC    mov         eax,dword ptr [eax-4]
 0048FBAF    mov         eax,dword ptr [eax]
 0048FBB1    cmp         eax,dword ptr [ebp-0C]
>0048FBB4    jl          0048FCAF
 0048FBBA    mov         edx,2
 0048FBBF    mov         eax,dword ptr [ebp-4]
 0048FBC2    call        0048E9A8
 0048FBC7    add         eax,dword ptr [ebp-0C]
 0048FBCA    mov         edx,dword ptr [ebp+8]
 0048FBCD    mov         edx,dword ptr [edx-4]
 0048FBD0    cmp         eax,dword ptr [edx]
>0048FBD2    jl          0048FCAF
 0048FBD8    mov         eax,dword ptr [ebp+8]
 0048FBDB    mov         edx,dword ptr [ebp-4]
 0048FBDE    mov         dword ptr [eax-10],edx
 0048FBE1    mov         eax,dword ptr [ebp-4]
 0048FBE4    mov         eax,dword ptr [eax+4]
 0048FBE7    mov         dword ptr [ebp-10],eax
 0048FBEA    mov         eax,dword ptr [ebp-10]
 0048FBED    mov         eax,dword ptr [eax+40]
 0048FBF0    mov         edx,dword ptr [ebp-10]
 0048FBF3    add         eax,dword ptr [edx+48]
 0048FBF6    sub         eax,0F
 0048FBF9    mov         edx,dword ptr [ebp+8]
 0048FBFC    mov         edx,dword ptr [edx-4]
 0048FBFF    cmp         eax,dword ptr [edx]
>0048FC01    jge         0048FC14
 0048FC03    mov         eax,dword ptr [ebp+8]
 0048FC06    mov         eax,dword ptr [eax-0C]
 0048FC09    mov         dword ptr [eax],14
>0048FC0F    jmp         0048FCAF
 0048FC14    mov         eax,dword ptr [ebp+8]
 0048FC17    mov         eax,dword ptr [eax-0C]
 0048FC1A    mov         dword ptr [eax],2
>0048FC20    jmp         0048FCAF
 0048FC25    mov         eax,dword ptr [ebp+8]
 0048FC28    mov         eax,dword ptr [eax-4]
 0048FC2B    mov         eax,dword ptr [eax]
 0048FC2D    cmp         eax,dword ptr [ebp-0C]
>0048FC30    jl          0048FCAF
 0048FC32    mov         eax,dword ptr [ebp+8]
 0048FC35    mov         eax,dword ptr [eax-4]
 0048FC38    mov         eax,dword ptr [eax]
 0048FC3A    mov         edx,dword ptr [ebp+8]
 0048FC3D    mov         edx,dword ptr [edx-8]
 0048FC40    mov         edx,dword ptr [edx+18]
 0048FC43    add         edx,dword ptr [ebp-0C]
 0048FC46    cmp         eax,edx
>0048FC48    jg          0048FCAF
 0048FC4A    mov         eax,dword ptr [ebp+8]
 0048FC4D    mov         eax,dword ptr [eax-4]
 0048FC50    mov         eax,dword ptr [eax+4]
 0048FC53    cmp         eax,dword ptr [ebp-8]
>0048FC56    jl          0048FCAF
 0048FC58    mov         edx,1
 0048FC5D    mov         eax,dword ptr [ebp-4]
 0048FC60    call        0048E9A8
 0048FC65    add         eax,dword ptr [ebp-8]
 0048FC68    mov         edx,dword ptr [ebp+8]
 0048FC6B    mov         edx,dword ptr [edx-4]
 0048FC6E    cmp         eax,dword ptr [edx+4]
>0048FC71    jl          0048FCAF
 0048FC73    mov         eax,dword ptr [ebp+8]
 0048FC76    mov         edx,dword ptr [ebp-4]
 0048FC79    mov         dword ptr [eax-10],edx
 0048FC7C    mov         eax,dword ptr [ebp+8]
 0048FC7F    mov         eax,dword ptr [eax-4]
 0048FC82    mov         eax,dword ptr [eax+4]
 0048FC85    mov         edx,dword ptr [ebp-4]
 0048FC88    mov         edx,dword ptr [edx+4]
 0048FC8B    mov         edx,dword ptr [edx+44]
 0048FC8E    add         edx,0F
 0048FC91    cmp         eax,edx
>0048FC93    jge         0048FCA3
 0048FC95    mov         eax,dword ptr [ebp+8]
 0048FC98    mov         eax,dword ptr [eax-0C]
 0048FC9B    mov         dword ptr [eax],14
>0048FCA1    jmp         0048FCAF
 0048FCA3    mov         eax,dword ptr [ebp+8]
 0048FCA6    mov         eax,dword ptr [eax-0C]
 0048FCA9    mov         dword ptr [eax],2
 0048FCAF    mov         eax,dword ptr [ebp+8]
 0048FCB2    cmp         dword ptr [eax-10],0
>0048FCB6    jne         0048FCD6
 0048FCB8    mov         eax,dword ptr [ebp-4]
 0048FCBB    call        0048EFA8
 0048FCC0    test        eax,eax
>0048FCC2    je          0048FCD6
 0048FCC4    mov         eax,dword ptr [ebp+8]
 0048FCC7    push        eax
 0048FCC8    mov         eax,dword ptr [ebp-4]
 0048FCCB    call        0048EFA8
 0048FCD0    call        0048FA8C
 0048FCD5    pop         ecx
 0048FCD6    mov         eax,dword ptr [ebp+8]
 0048FCD9    cmp         dword ptr [eax-10],0
>0048FCDD    jne         0048FCFD
 0048FCDF    mov         eax,dword ptr [ebp-4]
 0048FCE2    call        0048F000
 0048FCE7    test        eax,eax
>0048FCE9    je          0048FCFD
 0048FCEB    mov         eax,dword ptr [ebp+8]
 0048FCEE    push        eax
 0048FCEF    mov         eax,dword ptr [ebp-4]
 0048FCF2    call        0048F000
 0048FCF7    call        0048FA8C
 0048FCFC    pop         ecx
 0048FCFD    mov         esp,ebp
 0048FCFF    pop         ebp
 0048FD00    ret
end;*}

//0048FD04
{*function sub_0048FD04(?:?; ?:?):?;
begin
 0048FD04    push        ebp
 0048FD05    mov         ebp,esp
 0048FD07    add         esp,0FFFFFFDC
 0048FD0A    mov         dword ptr [ebp-4],eax
 0048FD0D    mov         eax,dword ptr [ebp+8]
 0048FD10    mov         eax,dword ptr [eax-8]
 0048FD13    mov         eax,dword ptr [eax+14]
 0048FD16    call        00487E38
 0048FD1B    dec         eax
 0048FD1C    cmp         eax,0
>0048FD1F    jl          0048FDAD
 0048FD25    mov         dword ptr [ebp-0C],eax
 0048FD28    mov         eax,dword ptr [ebp+8]
 0048FD2B    mov         eax,dword ptr [eax-8]
 0048FD2E    mov         eax,dword ptr [eax+14]
 0048FD31    mov         edx,dword ptr [ebp-0C]
 0048FD34    call        00487DCC
 0048FD39    mov         dword ptr [ebp-8],eax
 0048FD3C    mov         eax,dword ptr [ebp-8]
 0048FD3F    cmp         byte ptr [eax+57],0
>0048FD43    je          0048FDA0
 0048FD45    mov         eax,dword ptr [ebp-8]
 0048FD48    mov         edx,dword ptr ds:[47E678];TWinControl
 0048FD4E    call        @IsClass
 0048FD53    test        al,al
>0048FD55    je          0048FD63
 0048FD57    mov         eax,dword ptr [ebp-8]
 0048FD5A    cmp         byte ptr [eax+1A6],0
>0048FD61    je          0048FDA0
 0048FD63    mov         edx,dword ptr [ebp-4]
 0048FD66    mov         edx,dword ptr [edx+4]
 0048FD69    mov         eax,dword ptr [ebp-8]
 0048FD6C    sub         edx,dword ptr [eax+44]
 0048FD6F    mov         eax,dword ptr [ebp-4]
 0048FD72    mov         eax,dword ptr [eax]
 0048FD74    mov         ecx,dword ptr [ebp-8]
 0048FD77    sub         eax,dword ptr [ecx+40]
 0048FD7A    lea         ecx,[ebp-14]
 0048FD7D    call        Point
 0048FD82    push        dword ptr [ebp-10]
 0048FD85    push        dword ptr [ebp-14]
 0048FD88    lea         edx,[ebp-24]
 0048FD8B    mov         eax,dword ptr [ebp-8]
 0048FD8E    mov         ecx,dword ptr [eax]
 0048FD90    call        dword ptr [ecx+44]
 0048FD93    lea         eax,[ebp-24]
 0048FD96    push        eax
 0048FD97    call        user32.PtInRect
 0048FD9C    test        eax,eax
>0048FD9E    jne         0048FDB2
 0048FDA0    dec         dword ptr [ebp-0C]
 0048FDA3    cmp         dword ptr [ebp-0C],0FFFFFFFF
>0048FDA7    jne         0048FD28
 0048FDAD    xor         eax,eax
 0048FDAF    mov         dword ptr [ebp-8],eax
 0048FDB2    mov         eax,dword ptr [ebp-8]
 0048FDB5    mov         esp,ebp
 0048FDB7    pop         ebp
 0048FDB8    ret
end;*}

//0048FDBC
{*function sub_0048FDBC(?:TDockTree; ?:?; ?:?):?;
begin
 0048FDBC    push        ebp
 0048FDBD    mov         ebp,esp
 0048FDBF    add         esp,0FFFFFFE8
 0048FDC2    mov         dword ptr [ebp-0C],ecx
 0048FDC5    mov         dword ptr [ebp-4],edx
 0048FDC8    mov         dword ptr [ebp-8],eax
 0048FDCB    xor         eax,eax
 0048FDCD    mov         dword ptr [ebp-10],eax
 0048FDD0    mov         eax,dword ptr [ebp-0C]
 0048FDD3    xor         edx,edx
 0048FDD5    mov         dword ptr [eax],edx
 0048FDD7    push        ebp
 0048FDD8    mov         eax,dword ptr [ebp-4]
 0048FDDB    call        0048FD04
 0048FDE0    pop         ecx
 0048FDE1    mov         dword ptr [ebp-18],eax
 0048FDE4    cmp         dword ptr [ebp-18],0
>0048FDE8    je          0048FE1A
 0048FDEA    mov         eax,dword ptr [ebp-8]
 0048FDED    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048FDF0    mov         edx,dword ptr [ebp-18]
 0048FDF3    cmp         eax,dword ptr [edx+0A0]
>0048FDF9    jne         0048FE1A
 0048FDFB    mov         edx,dword ptr [ebp-18]
 0048FDFE    mov         eax,dword ptr [ebp-8]
 0048FE01    call        0048F2DC
 0048FE06    mov         dword ptr [ebp-10],eax
 0048FE09    cmp         dword ptr [ebp-10],0
>0048FE0D    je          0048FE41
 0048FE0F    mov         eax,dword ptr [ebp-0C]
 0048FE12    mov         dword ptr [eax],1
>0048FE18    jmp         0048FE41
 0048FE1A    mov         eax,dword ptr [ebp-8]
 0048FE1D    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048FE20    call        0048F000
 0048FE25    test        eax,eax
>0048FE27    je          0048FE41
 0048FE29    cmp         dword ptr [ebp-18],0
>0048FE2D    jne         0048FE41
 0048FE2F    push        ebp
 0048FE30    mov         eax,dword ptr [ebp-8]
 0048FE33    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048FE36    call        0048F000
 0048FE3B    call        0048FA8C
 0048FE40    pop         ecx
 0048FE41    mov         eax,dword ptr [ebp-10]
 0048FE44    mov         dword ptr [ebp-14],eax
 0048FE47    mov         eax,dword ptr [ebp-14]
 0048FE4A    mov         esp,ebp
 0048FE4C    pop         ebp
 0048FE4D    ret
end;*}

//0048FE50
{*procedure sub_0048FE50(?:?; ?:?);
begin
 0048FE50    push        ebp
 0048FE51    mov         ebp,esp
 0048FE53    add         esp,0FFFFFFF8
 0048FE56    push        ebx
 0048FE57    mov         dword ptr [ebp-4],eax
 0048FE5A    mov         eax,dword ptr [ebp-4]
 0048FE5D    call        @LStrClr
 0048FE62    lea         edx,[ebp-8]
 0048FE65    mov         eax,dword ptr [ebp+8]
 0048FE68    mov         eax,dword ptr [eax-4]
 0048FE6B    mov         ecx,4
 0048FE70    mov         ebx,dword ptr [eax]
 0048FE72    call        dword ptr [ebx+0C]
 0048FE75    cmp         dword ptr [ebp-8],0
>0048FE79    jle         0048FE99
 0048FE7B    mov         eax,dword ptr [ebp-4]
 0048FE7E    mov         edx,dword ptr [ebp-8]
 0048FE81    call        @LStrSetLength
 0048FE86    mov         edx,dword ptr [ebp-4]
 0048FE89    mov         edx,dword ptr [edx]
 0048FE8B    mov         eax,dword ptr [ebp+8]
 0048FE8E    mov         eax,dword ptr [eax-4]
 0048FE91    mov         ecx,dword ptr [ebp-8]
 0048FE94    mov         ebx,dword ptr [eax]
 0048FE96    call        dword ptr [ebx+0C]
 0048FE99    pop         ebx
 0048FE9A    pop         ecx
 0048FE9B    pop         ecx
 0048FE9C    pop         ebp
 0048FE9D    ret
end;*}

//0048FEA0
{*procedure sub_0048FEA0(?:?);
begin
 0048FEA0    push        ebp
 0048FEA1    mov         ebp,esp
 0048FEA3    add         esp,0FFFFFFD0
 0048FEA6    push        ebx
 0048FEA7    push        esi
 0048FEA8    xor         ecx,ecx
 0048FEAA    mov         dword ptr [ebp-0C],ecx
 0048FEAD    mov         dword ptr [ebp-4],edx
 0048FEB0    mov         dword ptr [ebp-8],eax
 0048FEB3    xor         eax,eax
 0048FEB5    push        ebp
 0048FEB6    push        4900F1
 0048FEBB    push        dword ptr fs:[eax]
 0048FEBE    mov         dword ptr fs:[eax],esp
 0048FEC1    mov         eax,dword ptr [ebp-8]
 0048FEC4    mov         edx,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0048FEC7    mov         eax,dword ptr [ebp-8]
 0048FECA    call        00490678
 0048FECF    mov         eax,dword ptr [ebp-8]
 0048FED2    call        0048F238
 0048FED7    xor         eax,eax
 0048FED9    push        ebp
 0048FEDA    push        4900D4
 0048FEDF    push        dword ptr fs:[eax]
 0048FEE2    mov         dword ptr fs:[eax],esp
 0048FEE5    lea         edx,[ebp-1C]
 0048FEE8    mov         ecx,4
 0048FEED    mov         eax,dword ptr [ebp-4]
 0048FEF0    mov         ebx,dword ptr [eax]
 0048FEF2    call        dword ptr [ebx+0C]
 0048FEF5    lea         edx,[ebp-20]
 0048FEF8    mov         ecx,4
 0048FEFD    mov         eax,dword ptr [ebp-4]
 0048FF00    mov         ebx,dword ptr [eax]
 0048FF02    call        dword ptr [ebx+0C]
 0048FF05    mov         eax,dword ptr [ebp-20]
 0048FF08    dec         eax
 0048FF09    test        eax,eax
>0048FF0B    jl          0048FF67
 0048FF0D    inc         eax
 0048FF0E    mov         dword ptr [ebp-30],eax
 0048FF11    mov         dword ptr [ebp-1C],0
 0048FF18    push        ebp
 0048FF19    lea         eax,[ebp-0C]
 0048FF1C    call        0048FE50
 0048FF21    pop         ecx
 0048FF22    cmp         dword ptr [ebp-0C],0
>0048FF26    je          0048FF5F
 0048FF28    lea         ecx,[ebp-10]
 0048FF2B    mov         eax,dword ptr [ebp-8]
 0048FF2E    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048FF31    mov         edx,dword ptr [ebp-0C]
 0048FF34    mov         si,0FFB9
 0048FF38    call        @CallDynaInst;TWinControl.sub_0048A3D4
 0048FF3D    cmp         dword ptr [ebp-10],0
>0048FF41    je          0048FF5F
 0048FF43    xor         edx,edx
 0048FF45    mov         eax,dword ptr [ebp-10]
 0048FF48    call        TImage.SetVisible
 0048FF4D    push        0
 0048FF4F    mov         eax,dword ptr [ebp-8]
 0048FF52    mov         edx,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0048FF55    xor         ecx,ecx
 0048FF57    mov         eax,dword ptr [ebp-10]
 0048FF5A    call        004849FC
 0048FF5F    inc         dword ptr [ebp-1C]
 0048FF62    dec         dword ptr [ebp-30]
>0048FF65    jne         0048FF18
 0048FF67    mov         eax,dword ptr [ebp-8]
 0048FF6A    lea         edx,[eax+68];TDockTree.FTopXYLimit:Integer
 0048FF6D    mov         ecx,4
 0048FF72    mov         eax,dword ptr [ebp-4]
 0048FF75    mov         ebx,dword ptr [eax]
 0048FF77    call        dword ptr [ebx+0C]
 0048FF7A    xor         eax,eax
 0048FF7C    mov         dword ptr [ebp-18],eax
 0048FF7F    xor         eax,eax
 0048FF81    mov         dword ptr [ebp-28],eax
 0048FF84    lea         edx,[ebp-14]
 0048FF87    mov         ecx,4
 0048FF8C    mov         eax,dword ptr [ebp-4]
 0048FF8F    mov         ebx,dword ptr [eax]
 0048FF91    call        dword ptr [ebx+0C]
 0048FF94    mov         eax,dword ptr [ebp-14]
 0048FF97    cmp         eax,dword ptr ds:[56C894];0xFFFFFFFF gvar_0056C894
>0048FF9D    je          004900BE
 0048FFA3    mov         ecx,dword ptr [ebp-8]
 0048FFA6    mov         dl,1
 0048FFA8    mov         eax,[0047F138];TDockZone
 0048FFAD    call        TDockZone.Create;TDockZone.Create
 0048FFB2    mov         dword ptr [ebp-24],eax
 0048FFB5    mov         eax,dword ptr [ebp-24]
 0048FFB8    lea         edx,[eax+10];TDockZone.FOrientation:TDockOrientation
 0048FFBB    mov         ecx,1
 0048FFC0    mov         eax,dword ptr [ebp-4]
 0048FFC3    mov         ebx,dword ptr [eax]
 0048FFC5    call        dword ptr [ebx+0C]
 0048FFC8    mov         eax,dword ptr [ebp-24]
 0048FFCB    lea         edx,[eax+20];TDockZone.FZoneLimit:Integer
 0048FFCE    mov         ecx,4
 0048FFD3    mov         eax,dword ptr [ebp-4]
 0048FFD6    mov         ebx,dword ptr [eax]
 0048FFD8    call        dword ptr [ebx+0C]
 0048FFDB    push        ebp
 0048FFDC    lea         eax,[ebp-0C]
 0048FFDF    call        0048FE50
 0048FFE4    pop         ecx
 0048FFE5    cmp         dword ptr [ebp-0C],0
>0048FFE9    je          00490004
 0048FFEB    mov         edx,dword ptr [ebp-0C]
 0048FFEE    mov         eax,dword ptr [ebp-24]
 0048FFF1    call        0048EBD8
 0048FFF6    test        al,al
>0048FFF8    jne         00490004
 0048FFFA    mov         eax,dword ptr [ebp-24]
 0048FFFD    call        TObject.Free
>00490002    jmp         0048FF84
 00490004    cmp         dword ptr [ebp-14],0
>00490008    jne         00490018
 0049000A    mov         eax,dword ptr [ebp-8]
 0049000D    mov         edx,dword ptr [ebp-24]
 00490010    mov         dword ptr [eax+64],edx;TDockTree.FTopZone:TDockZone
>00490013    jmp         004900AD
 00490018    mov         eax,dword ptr [ebp-14]
 0049001B    cmp         eax,dword ptr [ebp-18]
>0049001E    jne         00490040
 00490020    mov         eax,dword ptr [ebp-28]
 00490023    mov         edx,dword ptr [ebp-24]
 00490026    mov         dword ptr [eax+0C],edx
 00490029    mov         eax,dword ptr [ebp-24]
 0049002C    mov         edx,dword ptr [ebp-28]
 0049002F    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 00490032    mov         eax,dword ptr [ebp-28]
 00490035    mov         eax,dword ptr [eax+14]
 00490038    mov         edx,dword ptr [ebp-24]
 0049003B    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
>0049003E    jmp         004900AD
 00490040    mov         eax,dword ptr [ebp-14]
 00490043    cmp         eax,dword ptr [ebp-18]
>00490046    jle         0049005C
 00490048    mov         eax,dword ptr [ebp-28]
 0049004B    mov         edx,dword ptr [ebp-24]
 0049004E    mov         dword ptr [eax+8],edx
 00490051    mov         eax,dword ptr [ebp-24]
 00490054    mov         edx,dword ptr [ebp-28]
 00490057    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
>0049005A    jmp         004900AD
 0049005C    mov         eax,dword ptr [ebp-14]
 0049005F    cmp         eax,dword ptr [ebp-18]
>00490062    jge         004900AD
 00490064    mov         eax,dword ptr [ebp-28]
 00490067    mov         dword ptr [ebp-2C],eax
 0049006A    mov         eax,dword ptr [ebp-18]
 0049006D    sub         eax,dword ptr [ebp-14]
 00490070    test        eax,eax
>00490072    jle         0049008F
 00490074    mov         dword ptr [ebp-30],eax
 00490077    mov         dword ptr [ebp-1C],1
 0049007E    mov         eax,dword ptr [ebp-2C]
 00490081    mov         eax,dword ptr [eax+14]
 00490084    mov         dword ptr [ebp-2C],eax
 00490087    inc         dword ptr [ebp-1C]
 0049008A    dec         dword ptr [ebp-30]
>0049008D    jne         0049007E
 0049008F    mov         eax,dword ptr [ebp-2C]
 00490092    mov         edx,dword ptr [ebp-24]
 00490095    mov         dword ptr [eax+0C],edx
 00490098    mov         eax,dword ptr [ebp-24]
 0049009B    mov         edx,dword ptr [ebp-2C]
 0049009E    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004900A1    mov         eax,dword ptr [ebp-2C]
 004900A4    mov         eax,dword ptr [eax+14]
 004900A7    mov         edx,dword ptr [ebp-24]
 004900AA    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004900AD    mov         eax,dword ptr [ebp-14]
 004900B0    mov         dword ptr [ebp-18],eax
 004900B3    mov         eax,dword ptr [ebp-24]
 004900B6    mov         dword ptr [ebp-28],eax
>004900B9    jmp         0048FF84
 004900BE    xor         eax,eax
 004900C0    pop         edx
 004900C1    pop         ecx
 004900C2    pop         ecx
 004900C3    mov         dword ptr fs:[eax],edx
 004900C6    push        4900DB
 004900CB    mov         eax,dword ptr [ebp-8]
 004900CE    call        0048F248
 004900D3    ret
>004900D4    jmp         @HandleFinally
>004900D9    jmp         004900CB
 004900DB    xor         eax,eax
 004900DD    pop         edx
 004900DE    pop         ecx
 004900DF    pop         ecx
 004900E0    mov         dword ptr fs:[eax],edx
 004900E3    push        4900F8
 004900E8    lea         eax,[ebp-0C]
 004900EB    call        @LStrClr
 004900F0    ret
>004900F1    jmp         @HandleFinally
>004900F6    jmp         004900E8
 004900F8    pop         esi
 004900F9    pop         ebx
 004900FA    mov         esp,ebp
 004900FC    pop         ebp
 004900FD    ret
end;*}

//00490100
{*procedure sub_00490100(?:?; ?:?; ?:?);
begin
 00490100    push        ebp
 00490101    mov         ebp,esp
 00490103    add         esp,0FFFFFFE8
 00490106    mov         dword ptr [ebp-8],edx
 00490109    mov         dword ptr [ebp-4],eax
 0049010C    push        0
 0049010E    push        1
 00490110    mov         eax,dword ptr [ebp+8]
 00490113    mov         eax,dword ptr [eax-8]
 00490116    mov         eax,dword ptr [eax+18]
 00490119    add         eax,dword ptr [ebp-8]
 0049011C    sub         eax,2
 0049011F    push        eax
 00490120    lea         eax,[ebp-18]
 00490123    push        eax
 00490124    mov         eax,dword ptr [ebp+8]
 00490127    mov         eax,dword ptr [eax-8]
 0049012A    mov         ecx,dword ptr [eax+18]
 0049012D    add         ecx,dword ptr [ebp-4]
 00490130    sub         ecx,2
 00490133    mov         edx,dword ptr [ebp-8]
 00490136    mov         eax,dword ptr [ebp-4]
 00490139    call        0041E714
 0049013E    lea         eax,[ebp-18]
 00490141    push        eax
 00490142    mov         eax,dword ptr [ebp+8]
 00490145    mov         eax,dword ptr [eax-4]
 00490148    call        0042F6A0
 0049014D    push        eax
 0049014E    call        user32.DrawFrameControl
 00490153    mov         esp,ebp
 00490155    pop         ebp
 00490156    ret
end;*}

//00490158
{*procedure sub_00490158(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 00490158    push        ebp
 00490159    mov         ebp,esp
 0049015B    add         esp,0FFFFFFF4
 0049015E    mov         dword ptr [ebp-0C],ecx
 00490161    mov         dword ptr [ebp-8],edx
 00490164    mov         dword ptr [ebp-4],eax
 00490167    mov         eax,dword ptr [ebp+0C]
 0049016A    mov         eax,dword ptr [eax-4]
 0049016D    mov         eax,dword ptr [eax+10]
 00490170    mov         edx,0FF000014
 00490175    call        TPen.SetColor
 0049017A    mov         eax,dword ptr [ebp+0C]
 0049017D    mov         eax,dword ptr [eax-4]
 00490180    mov         ecx,dword ptr [ebp-8]
 00490183    mov         edx,dword ptr [ebp-0C]
 00490186    call        0042F14C
 0049018B    mov         eax,dword ptr [ebp+0C]
 0049018E    mov         eax,dword ptr [eax-4]
 00490191    mov         ecx,dword ptr [ebp-8]
 00490194    mov         edx,dword ptr [ebp-4]
 00490197    call        0042F0D0
 0049019C    mov         eax,dword ptr [ebp+0C]
 0049019F    mov         eax,dword ptr [eax-4]
 004901A2    mov         ecx,dword ptr [ebp+8]
 004901A5    mov         edx,dword ptr [ebp-4]
 004901A8    call        0042F0D0
 004901AD    mov         eax,dword ptr [ebp+0C]
 004901B0    mov         eax,dword ptr [eax-4]
 004901B3    mov         eax,dword ptr [eax+10]
 004901B6    mov         edx,0FF000010
 004901BB    call        TPen.SetColor
 004901C0    mov         eax,dword ptr [ebp+0C]
 004901C3    mov         eax,dword ptr [eax-4]
 004901C6    mov         ecx,dword ptr [ebp+8]
 004901C9    mov         edx,dword ptr [ebp-0C]
 004901CC    call        0042F0D0
 004901D1    mov         ecx,dword ptr [ebp-8]
 004901D4    dec         ecx
 004901D5    mov         eax,dword ptr [ebp+0C]
 004901D8    mov         eax,dword ptr [eax-4]
 004901DB    mov         edx,dword ptr [ebp-0C]
 004901DE    call        0042F0D0
 004901E3    mov         esp,ebp
 004901E5    pop         ebp
 004901E6    ret         4
end;*}

//004901EC
{*procedure sub_004901EC(?:?; ?:?; ?:?);
begin
 004901EC    push        ebp
 004901ED    mov         ebp,esp
 004901EF    add         esp,0FFFFFFF4
 004901F2    mov         dword ptr [ebp-0C],ecx
 004901F5    mov         dword ptr [ebp-4],edx
 004901F8    mov         dword ptr [ebp-8],eax
 004901FB    mov         eax,dword ptr [ebp-8]
 004901FE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490201    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 00490204    dec         eax
 00490205    sub         al,2
>00490207    jae         0049027B
 00490209    push        ebp
 0049020A    mov         edx,dword ptr [ebp+8]
 0049020D    mov         edx,dword ptr [edx+4]
 00490210    inc         edx
 00490211    mov         eax,dword ptr [ebp+8]
 00490214    mov         eax,dword ptr [eax]
 00490216    inc         eax
 00490217    call        00490100
 0049021C    pop         ecx
 0049021D    push        ebp
 0049021E    mov         eax,dword ptr [ebp+8]
 00490221    mov         eax,dword ptr [eax+0C]
 00490224    sub         eax,2
 00490227    push        eax
 00490228    mov         edx,dword ptr [ebp+8]
 0049022B    mov         edx,dword ptr [edx+4]
 0049022E    mov         eax,dword ptr [ebp-8]
 00490231    add         edx,dword ptr [eax+18];TDockTree.FGrabberSize:Integer
 00490234    inc         edx
 00490235    mov         ecx,dword ptr [ebp+8]
 00490238    mov         ecx,dword ptr [ecx]
 0049023A    add         ecx,5
 0049023D    mov         eax,dword ptr [ebp+8]
 00490240    mov         eax,dword ptr [eax]
 00490242    add         eax,3
 00490245    call        00490158
 0049024A    pop         ecx
 0049024B    push        ebp
 0049024C    mov         eax,dword ptr [ebp+8]
 0049024F    mov         eax,dword ptr [eax+0C]
 00490252    sub         eax,2
 00490255    push        eax
 00490256    mov         edx,dword ptr [ebp+8]
 00490259    mov         edx,dword ptr [edx+4]
 0049025C    mov         eax,dword ptr [ebp-8]
 0049025F    add         edx,dword ptr [eax+18];TDockTree.FGrabberSize:Integer
 00490262    inc         edx
 00490263    mov         ecx,dword ptr [ebp+8]
 00490266    mov         ecx,dword ptr [ecx]
 00490268    add         ecx,8
 0049026B    mov         eax,dword ptr [ebp+8]
 0049026E    mov         eax,dword ptr [eax]
 00490270    add         eax,6
 00490273    call        00490158
 00490278    pop         ecx
>00490279    jmp         004902F8
 0049027B    push        ebp
 0049027C    mov         eax,dword ptr [ebp+8]
 0049027F    mov         eax,dword ptr [eax+8]
 00490282    mov         edx,dword ptr [ebp-8]
 00490285    sub         eax,dword ptr [edx+18]
 00490288    inc         eax
 00490289    mov         edx,dword ptr [ebp+8]
 0049028C    mov         edx,dword ptr [edx+4]
 0049028F    inc         edx
 00490290    call        00490100
 00490295    pop         ecx
 00490296    push        ebp
 00490297    mov         eax,dword ptr [ebp+8]
 0049029A    mov         eax,dword ptr [eax+4]
 0049029D    add         eax,5
 004902A0    push        eax
 004902A1    mov         ecx,dword ptr [ebp+8]
 004902A4    mov         ecx,dword ptr [ecx+8]
 004902A7    mov         eax,dword ptr [ebp-8]
 004902AA    sub         ecx,dword ptr [eax+18]
 004902AD    sub         ecx,2
 004902B0    mov         edx,dword ptr [ebp+8]
 004902B3    mov         edx,dword ptr [edx+4]
 004902B6    add         edx,3
 004902B9    mov         eax,dword ptr [ebp+8]
 004902BC    mov         eax,dword ptr [eax]
 004902BE    add         eax,2
 004902C1    call        00490158
 004902C6    pop         ecx
 004902C7    push        ebp
 004902C8    mov         eax,dword ptr [ebp+8]
 004902CB    mov         eax,dword ptr [eax+4]
 004902CE    add         eax,8
 004902D1    push        eax
 004902D2    mov         ecx,dword ptr [ebp+8]
 004902D5    mov         ecx,dword ptr [ecx+8]
 004902D8    mov         eax,dword ptr [ebp-8]
 004902DB    sub         ecx,dword ptr [eax+18]
 004902DE    sub         ecx,2
 004902E1    mov         edx,dword ptr [ebp+8]
 004902E4    mov         edx,dword ptr [edx+4]
 004902E7    add         edx,6
 004902EA    mov         eax,dword ptr [ebp+8]
 004902ED    mov         eax,dword ptr [eax]
 004902EF    add         eax,2
 004902F2    call        00490158
 004902F7    pop         ecx
 004902F8    mov         esp,ebp
 004902FA    pop         ebp
 004902FB    ret         4
end;*}

//00490300
{*procedure sub_00490300(?:?);
begin
 00490300    push        ebp
 00490301    mov         ebp,esp
 00490303    add         esp,0FFFFFFD8
 00490306    push        ebx
 00490307    mov         dword ptr [ebp-8],edx
 0049030A    mov         dword ptr [ebp-4],eax
 0049030D    mov         dl,1
 0049030F    mov         eax,[0047D3C4];TControlCanvas
 00490314    call        TCanvas.Create;TControlCanvas.Create
 00490319    mov         dword ptr [ebp-0C],eax
 0049031C    xor         eax,eax
 0049031E    push        ebp
 0049031F    push        490483
 00490324    push        dword ptr fs:[eax]
 00490327    mov         dword ptr fs:[eax],esp
 0049032A    mov         eax,dword ptr [ebp-4]
 0049032D    mov         edx,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490330    mov         eax,dword ptr [ebp-0C]
 00490333    call        00481B3C
 00490338    mov         eax,dword ptr [ebp-0C]
 0049033B    call        TCanvas.Lock
 00490340    xor         eax,eax
 00490342    push        ebp
 00490343    push        490466
 00490348    push        dword ptr fs:[eax]
 0049034B    mov         dword ptr fs:[eax],esp
 0049034E    mov         edx,dword ptr [ebp-8]
 00490351    mov         eax,dword ptr [ebp-0C]
 00490354    call        TCanvas.SetHandle
 00490359    xor         eax,eax
 0049035B    push        ebp
 0049035C    push        490449
 00490361    push        dword ptr fs:[eax]
 00490364    mov         dword ptr fs:[eax],esp
 00490367    mov         eax,dword ptr [ebp-4]
 0049036A    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0049036D    call        00487E38
 00490372    dec         eax
 00490373    test        eax,eax
>00490375    jl          00490431
 0049037B    inc         eax
 0049037C    mov         dword ptr [ebp-18],eax
 0049037F    mov         dword ptr [ebp-14],0
 00490386    mov         eax,dword ptr [ebp-4]
 00490389    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0049038C    mov         edx,dword ptr [ebp-14]
 0049038F    call        00487DCC
 00490394    mov         dword ptr [ebp-10],eax
 00490397    mov         eax,dword ptr [ebp-10]
 0049039A    cmp         byte ptr [eax+57],0
>0049039E    je          00490425
 004903A4    mov         eax,dword ptr [ebp-10]
 004903A7    mov         eax,dword ptr [eax+0A0]
 004903AD    mov         edx,dword ptr [ebp-4]
 004903B0    cmp         eax,dword ptr [edx+14];TDockTree.FDockSite:TWinControl
>004903B3    jne         00490425
 004903B5    lea         edx,[ebp-28]
 004903B8    mov         eax,dword ptr [ebp-10]
 004903BB    call        00482ECC
 004903C0    lea         ecx,[ebp-28]
 004903C3    mov         edx,dword ptr [ebp-10]
 004903C6    mov         eax,dword ptr [ebp-4]
 004903C9    mov         ebx,dword ptr [eax]
 004903CB    call        dword ptr [ebx];TDockTree.sub_0048F208
 004903CD    mov         eax,dword ptr [ebp-10]
 004903D0    mov         edx,dword ptr [ebp-28]
 004903D3    sub         edx,dword ptr [eax+40]
 004903D6    mov         eax,edx
 004903D8    add         eax,eax
 004903DA    sub         dword ptr [ebp-28],eax
 004903DD    mov         eax,dword ptr [ebp-10]
 004903E0    mov         edx,dword ptr [ebp-24]
 004903E3    sub         edx,dword ptr [eax+44]
 004903E6    mov         eax,edx
 004903E8    add         eax,eax
 004903EA    sub         dword ptr [ebp-24],eax
 004903ED    mov         eax,dword ptr [ebp-10]
 004903F0    mov         eax,dword ptr [eax+48]
 004903F3    mov         edx,dword ptr [ebp-20]
 004903F6    sub         edx,dword ptr [ebp-28]
 004903F9    sub         eax,edx
 004903FB    add         eax,eax
 004903FD    sub         dword ptr [ebp-20],eax
 00490400    mov         eax,dword ptr [ebp-10]
 00490403    mov         eax,dword ptr [eax+4C]
 00490406    mov         edx,dword ptr [ebp-1C]
 00490409    sub         edx,dword ptr [ebp-24]
 0049040C    sub         eax,edx
 0049040E    add         eax,eax
 00490410    sub         dword ptr [ebp-1C],eax
 00490413    lea         eax,[ebp-28]
 00490416    push        eax
 00490417    mov         ecx,dword ptr [ebp-10]
 0049041A    mov         edx,dword ptr [ebp-0C]
 0049041D    mov         eax,dword ptr [ebp-4]
 00490420    mov         ebx,dword ptr [eax]
 00490422    call        dword ptr [ebx+10];TDockTree.sub_004901EC
 00490425    inc         dword ptr [ebp-14]
 00490428    dec         dword ptr [ebp-18]
>0049042B    jne         00490386
 00490431    xor         eax,eax
 00490433    pop         edx
 00490434    pop         ecx
 00490435    pop         ecx
 00490436    mov         dword ptr fs:[eax],edx
 00490439    push        490450
 0049043E    xor         edx,edx
 00490440    mov         eax,dword ptr [ebp-0C]
 00490443    call        TCanvas.SetHandle
 00490448    ret
>00490449    jmp         @HandleFinally
>0049044E    jmp         0049043E
 00490450    xor         eax,eax
 00490452    pop         edx
 00490453    pop         ecx
 00490454    pop         ecx
 00490455    mov         dword ptr fs:[eax],edx
 00490458    push        49046D
 0049045D    mov         eax,dword ptr [ebp-0C]
 00490460    call        TCanvas.Unlock
 00490465    ret
>00490466    jmp         @HandleFinally
>0049046B    jmp         0049045D
 0049046D    xor         eax,eax
 0049046F    pop         edx
 00490470    pop         ecx
 00490471    pop         ecx
 00490472    mov         dword ptr fs:[eax],edx
 00490475    push        49048A
 0049047A    mov         eax,dword ptr [ebp-0C]
 0049047D    call        TObject.Free
 00490482    ret
>00490483    jmp         @HandleFinally
>00490488    jmp         0049047A
 0049048A    pop         ebx
 0049048B    mov         esp,ebp
 0049048D    pop         ebp
 0049048E    ret
end;*}

//00490490
{*procedure sub_00490490(?:?; ?:?; ?:?; ?:?);
begin
 00490490    push        ebp
 00490491    mov         ebp,esp
 00490493    add         esp,0FFFFFFD0
 00490496    push        esi
 00490497    push        edi
 00490498    mov         dword ptr [ebp-8],ecx
 0049049B    mov         dword ptr [ebp-20],edx
 0049049E    mov         dword ptr [ebp-4],eax
 004904A1    mov         eax,dword ptr [ebp-4]
 004904A4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004904A7    call        0048A4E8
 004904AC    mov         dword ptr [ebp-0C],eax
 004904AF    cmp         dword ptr [ebp-8],0
>004904B3    je          004904CB
 004904B5    mov         eax,dword ptr [ebp-8]
 004904B8    cmp         byte ptr [eax+9C],0
>004904BF    je          004904CB
 004904C1    cmp         dword ptr [ebp-0C],2
>004904C5    jge         0049057E
 004904CB    mov         eax,dword ptr [ebp-4]
 004904CE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004904D1    call        TControl.GetClientHeight
 004904D6    push        eax
 004904D7    lea         eax,[ebp-30]
 004904DA    push        eax
 004904DB    mov         eax,dword ptr [ebp-4]
 004904DE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004904E1    call        TControl.GetClientWidth
 004904E6    mov         ecx,eax
 004904E8    xor         edx,edx
 004904EA    xor         eax,eax
 004904EC    call        0041E714
 004904F1    mov         eax,dword ptr [ebp+8]
 004904F4    lea         esi,[ebp-30]
 004904F7    mov         edi,eax
 004904F9    movs        dword ptr [edi],dword ptr [esi]
 004904FA    movs        dword ptr [edi],dword ptr [esi]
 004904FB    movs        dword ptr [edi],dword ptr [esi]
 004904FC    movs        dword ptr [edi],dword ptr [esi]
 004904FD    cmp         dword ptr [ebp-0C],0
>00490501    jle         00490610
 00490507    mov         al,byte ptr [ebp+0C]
 0049050A    dec         al
>0049050C    je          0049054E
 0049050E    dec         al
>00490510    je          00490566
 00490512    dec         al
>00490514    je          0049051F
 00490516    dec         al
>00490518    je          00490537
>0049051A    jmp         00490610
 0049051F    mov         eax,dword ptr [ebp+8]
 00490522    mov         eax,dword ptr [eax+8]
 00490525    sar         eax,1
>00490527    jns         0049052C
 00490529    adc         eax,0
 0049052C    mov         edx,dword ptr [ebp+8]
 0049052F    mov         dword ptr [edx+8],eax
>00490532    jmp         00490610
 00490537    mov         eax,dword ptr [ebp+8]
 0049053A    mov         eax,dword ptr [eax+8]
 0049053D    sar         eax,1
>0049053F    jns         00490544
 00490541    adc         eax,0
 00490544    mov         edx,dword ptr [ebp+8]
 00490547    mov         dword ptr [edx],eax
>00490549    jmp         00490610
 0049054E    mov         eax,dword ptr [ebp+8]
 00490551    mov         eax,dword ptr [eax+0C]
 00490554    sar         eax,1
>00490556    jns         0049055B
 00490558    adc         eax,0
 0049055B    mov         edx,dword ptr [ebp+8]
 0049055E    mov         dword ptr [edx+0C],eax
>00490561    jmp         00490610
 00490566    mov         eax,dword ptr [ebp+8]
 00490569    mov         eax,dword ptr [eax+0C]
 0049056C    sar         eax,1
>0049056E    jns         00490573
 00490570    adc         eax,0
 00490573    mov         edx,dword ptr [ebp+8]
 00490576    mov         dword ptr [edx+4],eax
>00490579    jmp         00490610
 0049057E    mov         eax,dword ptr [ebp-8]
 00490581    mov         eax,dword ptr [eax+40]
 00490584    mov         dword ptr [ebp-10],eax
 00490587    mov         eax,dword ptr [ebp-8]
 0049058A    mov         eax,dword ptr [eax+44]
 0049058D    mov         dword ptr [ebp-14],eax
 00490590    mov         eax,dword ptr [ebp-8]
 00490593    mov         eax,dword ptr [eax+48]
 00490596    mov         dword ptr [ebp-18],eax
 00490599    mov         eax,dword ptr [ebp-8]
 0049059C    mov         eax,dword ptr [eax+4C]
 0049059F    mov         dword ptr [ebp-1C],eax
 004905A2    mov         al,byte ptr [ebp+0C]
 004905A5    add         al,0FD
 004905A7    sub         al,2
>004905A9    jae         004905BD
 004905AB    mov         eax,dword ptr [ebp-8]
 004905AE    mov         eax,dword ptr [eax+48]
 004905B1    sar         eax,1
>004905B3    jns         004905B8
 004905B5    adc         eax,0
 004905B8    mov         dword ptr [ebp-18],eax
>004905BB    jmp         004905D5
 004905BD    mov         al,byte ptr [ebp+0C]
 004905C0    dec         eax
 004905C1    sub         al,2
>004905C3    jae         004905D5
 004905C5    mov         eax,dword ptr [ebp-8]
 004905C8    mov         eax,dword ptr [eax+4C]
 004905CB    sar         eax,1
>004905CD    jns         004905D2
 004905CF    adc         eax,0
 004905D2    mov         dword ptr [ebp-1C],eax
 004905D5    mov         al,byte ptr [ebp+0C]
 004905D8    sub         al,2
>004905DA    je          004905E8
 004905DC    sub         al,2
>004905DE    jne         004905EE
 004905E0    mov         eax,dword ptr [ebp-18]
 004905E3    add         dword ptr [ebp-10],eax
>004905E6    jmp         004905EE
 004905E8    mov         eax,dword ptr [ebp-1C]
 004905EB    add         dword ptr [ebp-14],eax
 004905EE    mov         eax,dword ptr [ebp-1C]
 004905F1    push        eax
 004905F2    lea         eax,[ebp-30]
 004905F5    push        eax
 004905F6    mov         ecx,dword ptr [ebp-18]
 004905F9    mov         edx,dword ptr [ebp-14]
 004905FC    mov         eax,dword ptr [ebp-10]
 004905FF    call        0041E740
 00490604    mov         eax,dword ptr [ebp+8]
 00490607    lea         esi,[ebp-30]
 0049060A    mov         edi,eax
 0049060C    movs        dword ptr [edi],dword ptr [esi]
 0049060D    movs        dword ptr [edi],dword ptr [esi]
 0049060E    movs        dword ptr [edi],dword ptr [esi]
 0049060F    movs        dword ptr [edi],dword ptr [esi]
 00490610    push        2
 00490612    mov         eax,dword ptr [ebp+8]
 00490615    push        eax
 00490616    push        0
 00490618    mov         eax,dword ptr [ebp-4]
 0049061B    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0049061E    call        TWinControl.GetHandle
 00490623    push        eax
 00490624    call        user32.MapWindowPoints
 00490629    pop         edi
 0049062A    pop         esi
 0049062B    mov         esp,ebp
 0049062D    pop         ebp
 0049062E    ret         8
end;*}

//00490634
{*procedure sub_00490634(?:TDockZone; ?:?);
begin
 00490634    push        ebp
 00490635    mov         ebp,esp
 00490637    push        ecx
 00490638    mov         dword ptr [ebp-4],eax
 0049063B    mov         eax,dword ptr [ebp-4]
 0049063E    cmp         dword ptr [eax+0C],0
>00490642    je          00490654
 00490644    mov         eax,dword ptr [ebp+8]
 00490647    push        eax
 00490648    mov         eax,dword ptr [ebp-4]
 0049064B    mov         eax,dword ptr [eax+0C]
 0049064E    call        00490634
 00490653    pop         ecx
 00490654    mov         eax,dword ptr [ebp-4]
 00490657    cmp         dword ptr [eax+8],0
>0049065B    je          0049066D
 0049065D    mov         eax,dword ptr [ebp+8]
 00490660    push        eax
 00490661    mov         eax,dword ptr [ebp-4]
 00490664    mov         eax,dword ptr [eax+8]
 00490667    call        00490634
 0049066C    pop         ecx
 0049066D    mov         eax,dword ptr [ebp-4]
 00490670    call        TObject.Free
 00490675    pop         ecx
 00490676    pop         ebp
 00490677    ret
end;*}

//00490678
procedure sub_00490678(?:TDockTree; ?:TDockZone);
begin
{*
 00490678    push        ebp
 00490679    mov         ebp,esp
 0049067B    add         esp,0FFFFFFF8
 0049067E    mov         dword ptr [ebp-8],edx
 00490681    mov         dword ptr [ebp-4],eax
 00490684    cmp         dword ptr [ebp-8],0
>00490688    je          00490705
 0049068A    mov         eax,dword ptr [ebp-8]
 0049068D    cmp         dword ptr [eax+8],0;TDockZone.FChildZones:TDockZone
>00490691    je          004906A0
 00490693    push        ebp
 00490694    mov         eax,dword ptr [ebp-8]
 00490697    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 0049069A    call        00490634
 0049069F    pop         ecx
 004906A0    mov         eax,dword ptr [ebp-8]
 004906A3    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004906A7    je          004906BA
 004906A9    mov         eax,dword ptr [ebp-8]
 004906AC    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004906AF    mov         edx,dword ptr [ebp-8]
 004906B2    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004906B5    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
>004906B8    jmp         004906D2
 004906BA    mov         eax,dword ptr [ebp-8]
 004906BD    cmp         dword ptr [eax+14],0;TDockZone.FParentZone:TDockZone
>004906C1    je          004906D2
 004906C3    mov         eax,dword ptr [ebp-8]
 004906C6    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004906C9    mov         edx,dword ptr [ebp-8]
 004906CC    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004906CF    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004906D2    mov         eax,dword ptr [ebp-8]
 004906D5    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004906D9    je          004906EA
 004906DB    mov         eax,dword ptr [ebp-8]
 004906DE    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004906E1    mov         edx,dword ptr [ebp-8]
 004906E4    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 004906E7    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004906EA    mov         eax,dword ptr [ebp-8]
 004906ED    mov         edx,dword ptr [ebp-4]
 004906F0    cmp         eax,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
>004906F3    jne         004906FD
 004906F5    mov         eax,dword ptr [ebp-4]
 004906F8    xor         edx,edx
 004906FA    mov         dword ptr [eax+64],edx;TDockTree.FTopZone:TDockZone
 004906FD    mov         eax,dword ptr [ebp-8]
 00490700    call        TObject.Free
 00490705    pop         ecx
 00490706    pop         ecx
 00490707    pop         ebp
 00490708    ret
*}
end;

//0049070C
{*procedure sub_0049070C(?:?);
begin
 0049070C    push        ebp
 0049070D    mov         ebp,esp
 0049070F    add         esp,0FFFFFFF4
 00490712    mov         dword ptr [ebp-8],edx
 00490715    mov         dword ptr [ebp-4],eax
 00490718    mov         edx,dword ptr [ebp-8]
 0049071B    mov         eax,dword ptr [ebp-4]
 0049071E    call        0048F2DC
 00490723    mov         dword ptr [ebp-0C],eax
 00490726    cmp         dword ptr [ebp-0C],0
>0049072A    je          00490761
 0049072C    mov         eax,dword ptr [ebp-0C]
 0049072F    mov         edx,dword ptr [ebp-4]
 00490732    cmp         eax,dword ptr [edx+38];TDockTree.FReplacementZone:TDockZone
>00490735    jne         00490741
 00490737    mov         eax,dword ptr [ebp-0C]
 0049073A    xor         edx,edx
 0049073C    mov         dword ptr [eax+4],edx
>0049073F    jmp         0049074C
 00490741    mov         edx,dword ptr [ebp-0C]
 00490744    mov         eax,dword ptr [ebp-4]
 00490747    call        00490768
 0049074C    mov         eax,dword ptr [ebp-8]
 0049074F    mov         byte ptr [eax+9C],0
 00490756    mov         eax,dword ptr [ebp-4]
 00490759    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 0049075C    mov         edx,dword ptr [eax]
 0049075E    call        dword ptr [edx+7C];TWinControl.sub_0048BE68
 00490761    mov         esp,ebp
 00490763    pop         ebp
 00490764    ret
end;*}

//00490768
procedure sub_00490768(?:TDockTree; ?:TDockZone);
begin
{*
 00490768    push        ebp
 00490769    mov         ebp,esp
 0049076B    add         esp,0FFFFFFDC
 0049076E    xor         ecx,ecx
 00490770    mov         dword ptr [ebp-20],ecx
 00490773    mov         dword ptr [ebp-24],ecx
 00490776    mov         dword ptr [ebp-18],ecx
 00490779    mov         dword ptr [ebp-1C],ecx
 0049077C    mov         dword ptr [ebp-8],edx
 0049077F    mov         dword ptr [ebp-4],eax
 00490782    xor         eax,eax
 00490784    push        ebp
 00490785    push        490AEF
 0049078A    push        dword ptr fs:[eax]
 0049078D    mov         dword ptr fs:[eax],esp
 00490790    cmp         dword ptr [ebp-8],0
>00490794    jne         004907D1
 00490796    lea         edx,[ebp-18]
 00490799    mov         eax,[0056E1E0];^SDockTreeRemoveError:TResStringRec
 0049079E    call        LoadResString
 004907A3    lea         eax,[ebp-18]
 004907A6    push        eax
 004907A7    lea         edx,[ebp-1C]
 004907AA    mov         eax,[0056E054];^SDockZoneNotFound:TResStringRec
 004907AF    call        LoadResString
 004907B4    mov         edx,dword ptr [ebp-1C]
 004907B7    pop         eax
 004907B8    call        @LStrCat
 004907BD    mov         ecx,dword ptr [ebp-18]
 004907C0    mov         dl,1
 004907C2    mov         eax,[0040B004];Exception
 004907C7    call        Exception.Create;Exception.Create
 004907CC    call        @RaiseExcept
 004907D1    mov         eax,dword ptr [ebp-8]
 004907D4    cmp         dword ptr [eax+4],0;TDockZone.FChildControl:TControl
>004907D8    jne         00490815
 004907DA    lea         edx,[ebp-20]
 004907DD    mov         eax,[0056E1E0];^SDockTreeRemoveError:TResStringRec
 004907E2    call        LoadResString
 004907E7    lea         eax,[ebp-20]
 004907EA    push        eax
 004907EB    lea         edx,[ebp-24]
 004907EE    mov         eax,[0056E46C];^SDockZoneHasNoCtl:TResStringRec
 004907F3    call        LoadResString
 004907F8    mov         edx,dword ptr [ebp-24]
 004907FB    pop         eax
 004907FC    call        @LStrCat
 00490801    mov         ecx,dword ptr [ebp-20]
 00490804    mov         dl,1
 00490806    mov         eax,[0040B004];Exception
 0049080B    call        Exception.Create;Exception.Create
 00490810    call        @RaiseExcept
 00490815    mov         eax,dword ptr [ebp-8]
 00490818    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0049081B    call        0048E748
 00490820    mov         dword ptr [ebp-14],eax
 00490823    cmp         dword ptr [ebp-14],1
>00490827    jne         00490843
 00490829    mov         eax,dword ptr [ebp-4]
 0049082C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0049082F    xor         edx,edx
 00490831    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 00490834    mov         eax,dword ptr [ebp-4]
 00490837    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0049083A    mov         byte ptr [eax+10],0;TDockZone.FOrientation:TDockOrientation
>0049083E    jmp         00490ACC
 00490843    cmp         dword ptr [ebp-14],2
>00490847    jne         00490A3E
 0049084D    mov         eax,dword ptr [ebp-8]
 00490850    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>00490854    jne         00490861
 00490856    mov         eax,dword ptr [ebp-8]
 00490859    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 0049085C    mov         dword ptr [ebp-0C],eax
>0049085F    jmp         0049086A
 00490861    mov         eax,dword ptr [ebp-8]
 00490864    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 00490867    mov         dword ptr [ebp-0C],eax
 0049086A    mov         eax,dword ptr [ebp-0C]
 0049086D    cmp         dword ptr [eax+4],0;TDockZone.FChildControl:TControl
>00490871    je          00490908
 00490877    mov         eax,dword ptr [ebp-8]
 0049087A    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0049087D    mov         edx,dword ptr [ebp-4]
 00490880    cmp         eax,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
>00490883    jne         004908C0
 00490885    mov         eax,dword ptr [ebp-4]
 00490888    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0049088B    mov         edx,dword ptr [ebp-0C]
 0049088E    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 00490891    mov         eax,dword ptr [ebp-0C]
 00490894    xor         edx,edx
 00490896    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 00490899    mov         eax,dword ptr [ebp-0C]
 0049089C    xor         edx,edx
 0049089E    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004908A1    mov         eax,dword ptr [ebp-4]
 004908A4    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004908A7    call        0048E890
 004908AC    mov         edx,eax
 004908AE    mov         eax,dword ptr [ebp-0C]
 004908B1    call        0048EE78
 004908B6    mov         eax,dword ptr [ebp-0C]
 004908B9    call        0048ECA8
>004908BE    jmp         004908EC
 004908C0    mov         eax,dword ptr [ebp-8]
 004908C3    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004908C6    mov         byte ptr [eax+10],0;TDockZone.FOrientation:TDockOrientation
 004908CA    mov         eax,dword ptr [ebp-0C]
 004908CD    mov         eax,dword ptr [eax+4];TDockZone.FChildControl:TControl
 004908D0    mov         edx,dword ptr [ebp-8]
 004908D3    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004908D6    mov         dword ptr [edx+4],eax;TDockZone.FChildControl:TControl
 004908D9    mov         eax,dword ptr [ebp-8]
 004908DC    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004908DF    xor         edx,edx
 004908E1    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004908E4    mov         eax,dword ptr [ebp-0C]
 004908E7    call        TObject.Free
 004908EC    mov         eax,dword ptr [ebp-4]
 004908EF    push        eax
 004908F0    push        4911C4
 004908F5    mov         eax,dword ptr [ebp-8]
 004908F8    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004908FB    mov         eax,dword ptr [ebp-4]
 004908FE    call        0048F364
>00490903    jmp         00490ACC
 00490908    mov         eax,dword ptr [ebp-8]
 0049090B    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 0049090E    mov         edx,dword ptr [ebp-4]
 00490911    cmp         eax,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
>00490914    jne         0049096E
 00490916    mov         eax,dword ptr [ebp-4]
 00490919    mov         edx,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 0049091C    mov         eax,dword ptr [ebp-0C]
 0049091F    call        0048EEC4
 00490924    mov         eax,dword ptr [ebp-4]
 00490927    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0049092A    call        0048EE38
 0049092F    mov         edx,dword ptr [ebp-4]
 00490932    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 00490935    mov         eax,dword ptr [ebp-4]
 00490938    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 0049093B    call        TObject.Free
 00490940    mov         eax,dword ptr [ebp-0C]
 00490943    mov         edx,dword ptr [ebp-4]
 00490946    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 00490949    mov         eax,dword ptr [ebp-0C]
 0049094C    xor         edx,edx
 0049094E    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 00490951    mov         eax,dword ptr [ebp-0C]
 00490954    xor         edx,edx
 00490956    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 00490959    mov         eax,dword ptr [ebp-0C]
 0049095C    xor         edx,edx
 0049095E    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 00490961    mov         eax,dword ptr [ebp-4]
 00490964    call        0049118C
>00490969    jmp         00490ACC
 0049096E    mov         eax,dword ptr [ebp-8]
 00490971    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 00490974    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 00490977    mov         edx,dword ptr [ebp-0C]
 0049097A    mov         edx,dword ptr [edx+8];TDockZone.FChildZones:TDockZone
 0049097D    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 00490980    mov         eax,dword ptr [ebp-0C]
 00490983    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 00490986    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>0049098A    jne         004909A0
 0049098C    mov         eax,dword ptr [ebp-0C]
 0049098F    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 00490992    mov         edx,dword ptr [ebp-8]
 00490995    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 00490998    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 0049099B    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
>0049099E    jmp         004909B2
 004909A0    mov         eax,dword ptr [ebp-0C]
 004909A3    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004909A6    mov         edx,dword ptr [ebp-0C]
 004909A9    mov         edx,dword ptr [edx+8];TDockZone.FChildZones:TDockZone
 004909AC    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 004909AF    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004909B2    mov         eax,dword ptr [ebp-0C]
 004909B5    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004909B8    mov         dword ptr [ebp-10],eax
 004909BB    mov         eax,dword ptr [ebp-8]
 004909BE    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004909C1    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004909C4    mov         edx,dword ptr [ebp-10]
 004909C7    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004909CA    mov         eax,dword ptr [ebp-10]
 004909CD    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004909D0    mov         dword ptr [ebp-10],eax
 004909D3    mov         eax,dword ptr [ebp-8]
 004909D6    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004909D9    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004909DC    mov         edx,dword ptr [ebp-10]
 004909DF    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004909E2    mov         eax,dword ptr [ebp-10]
 004909E5    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004909E9    jne         004909CA
 004909EB    mov         eax,dword ptr [ebp-8]
 004909EE    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004909F1    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004909F4    mov         edx,dword ptr [ebp-10]
 004909F7    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004909FA    mov         eax,dword ptr [ebp-10]
 004909FD    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>00490A01    je          00490A0F
 00490A03    mov         eax,dword ptr [ebp-10]
 00490A06    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 00490A09    mov         edx,dword ptr [ebp-10]
 00490A0C    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 00490A0F    mov         eax,dword ptr [ebp-4]
 00490A12    push        eax
 00490A13    push        4911C4
 00490A18    mov         eax,dword ptr [ebp-10]
 00490A1B    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 00490A1E    mov         eax,dword ptr [ebp-4]
 00490A21    call        0048F364
 00490A26    mov         eax,dword ptr [ebp-8]
 00490A29    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 00490A2C    call        TObject.Free
 00490A31    mov         eax,dword ptr [ebp-0C]
 00490A34    call        TObject.Free
>00490A39    jmp         00490ACC
 00490A3E    mov         eax,dword ptr [ebp-8]
 00490A41    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>00490A45    jne         00490A6E
 00490A47    mov         eax,dword ptr [ebp-8]
 00490A4A    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 00490A4D    mov         edx,dword ptr [ebp-8]
 00490A50    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 00490A53    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 00490A56    mov         eax,dword ptr [ebp-8]
 00490A59    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 00490A5C    xor         edx,edx
 00490A5E    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 00490A61    mov         eax,dword ptr [ebp-8]
 00490A64    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 00490A67    call        0048ECA8
>00490A6C    jmp         00490AB5
 00490A6E    mov         eax,dword ptr [ebp-8]
 00490A71    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 00490A74    mov         edx,dword ptr [ebp-8]
 00490A77    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 00490A7A    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 00490A7D    mov         eax,dword ptr [ebp-8]
 00490A80    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>00490A84    je          00490A95
 00490A86    mov         eax,dword ptr [ebp-8]
 00490A89    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 00490A8C    mov         edx,dword ptr [ebp-8]
 00490A8F    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 00490A92    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 00490A95    mov         eax,dword ptr [ebp-8]
 00490A98    call        0048EE38
 00490A9D    mov         edx,eax
 00490A9F    mov         eax,dword ptr [ebp-8]
 00490AA2    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 00490AA5    call        0048EEC4
 00490AAA    mov         eax,dword ptr [ebp-8]
 00490AAD    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 00490AB0    call        0048ECA8
 00490AB5    mov         eax,dword ptr [ebp-4]
 00490AB8    push        eax
 00490AB9    push        4911C4
 00490ABE    mov         eax,dword ptr [ebp-8]
 00490AC1    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 00490AC4    mov         eax,dword ptr [ebp-4]
 00490AC7    call        0048F364
 00490ACC    mov         eax,dword ptr [ebp-8]
 00490ACF    call        TObject.Free
 00490AD4    xor         eax,eax
 00490AD6    pop         edx
 00490AD7    pop         ecx
 00490AD8    pop         ecx
 00490AD9    mov         dword ptr fs:[eax],edx
 00490ADC    push        490AF6
 00490AE1    lea         eax,[ebp-24]
 00490AE4    mov         edx,4
 00490AE9    call        @LStrArrayClr
 00490AEE    ret
>00490AEF    jmp         @HandleFinally
>00490AF4    jmp         00490AE1
 00490AF6    mov         esp,ebp
 00490AF8    pop         ebp
 00490AF9    ret
*}
end;

//00490AFC
{*procedure sub_00490AFC(?:?);
begin
 00490AFC    push        ebp
 00490AFD    mov         ebp,esp
 00490AFF    add         esp,0FFFFFFE8
 00490B02    push        esi
 00490B03    push        edi
 00490B04    mov         byte ptr [ebp-5],dl
 00490B07    mov         dword ptr [ebp-4],eax
 00490B0A    mov         eax,dword ptr [ebp-4]
 00490B0D    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490B10    test        byte ptr [eax+1C],1;TWinControl.FComponentState:TComponentState
>00490B14    jne         00490C0B
 00490B1A    mov         eax,dword ptr [ebp-4]
 00490B1D    cmp         dword ptr [eax+64],0;TDockTree.FTopZone:TDockZone
>00490B21    je          00490C0B
 00490B27    mov         eax,dword ptr [ebp-4]
 00490B2A    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490B2D    call        0048A4E8
 00490B32    test        eax,eax
>00490B34    jle         00490C0B
 00490B3A    lea         edx,[ebp-15]
 00490B3D    mov         eax,dword ptr [ebp-4]
 00490B40    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490B43    mov         ecx,dword ptr [eax]
 00490B45    call        dword ptr [ecx+44];TWinControl.sub_0048C23C
 00490B48    lea         edx,[ebp-15]
 00490B4B    mov         eax,dword ptr [ebp-4]
 00490B4E    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490B51    mov         ecx,dword ptr [eax]
 00490B53    call        dword ptr [ecx+8C];TWinControl.sub_00486FB0
 00490B59    cmp         byte ptr [ebp-5],0
>00490B5D    jne         00490B7A
 00490B5F    mov         eax,dword ptr [ebp-4]
 00490B62    lea         edx,[eax+1D];TDockTree.FOldRect:TRect
 00490B65    lea         eax,[ebp-15]
 00490B68    mov         ecx,10
 00490B6D    call        CompareMem
 00490B72    test        al,al
>00490B74    jne         00490C0B
 00490B7A    mov         eax,dword ptr [ebp-4]
 00490B7D    lea         esi,[ebp-15]
 00490B80    lea         edi,[eax+1D];TDockTree.FOldRect:TRect
 00490B83    movs        dword ptr [edi],dword ptr [esi]
 00490B84    movs        dword ptr [edi],dword ptr [esi]
 00490B85    movs        dword ptr [edi],dword ptr [esi]
 00490B86    movs        dword ptr [edi],dword ptr [esi]
 00490B87    mov         eax,dword ptr [ebp-4]
 00490B8A    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 00490B8D    mov         al,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 00490B90    dec         al
>00490B92    je          00490B9A
 00490B94    dec         al
>00490B96    je          00490BB9
>00490B98    jmp         00490BD6
 00490B9A    mov         edx,dword ptr [ebp-0D]
 00490B9D    sub         edx,dword ptr [ebp-15]
 00490BA0    mov         eax,dword ptr [ebp-4]
 00490BA3    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 00490BA6    call        0048EE78
 00490BAB    mov         eax,dword ptr [ebp-9]
 00490BAE    sub         eax,dword ptr [ebp-11]
 00490BB1    mov         edx,dword ptr [ebp-4]
 00490BB4    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
>00490BB7    jmp         00490BD6
 00490BB9    mov         edx,dword ptr [ebp-9]
 00490BBC    sub         edx,dword ptr [ebp-11]
 00490BBF    mov         eax,dword ptr [ebp-4]
 00490BC2    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 00490BC5    call        0048EE78
 00490BCA    mov         eax,dword ptr [ebp-0D]
 00490BCD    sub         eax,dword ptr [ebp-15]
 00490BD0    mov         edx,dword ptr [ebp-4]
 00490BD3    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 00490BD6    mov         eax,dword ptr [ebp-4]
 00490BD9    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490BDC    call        0048A408
 00490BE1    test        eax,eax
>00490BE3    jle         00490C0B
 00490BE5    xor         edx,edx
 00490BE7    mov         eax,dword ptr [ebp-4]
 00490BEA    call        00490FB4
 00490BEF    mov         eax,dword ptr [ebp-4]
 00490BF2    cmp         dword ptr [eax+6C],0;TDockTree.FUpdateCount:Integer
>00490BF6    jne         00490C0B
 00490BF8    mov         eax,dword ptr [ebp-4]
 00490BFB    push        eax
 00490BFC    push        4911C4
 00490C01    xor         edx,edx
 00490C03    mov         eax,dword ptr [ebp-4]
 00490C06    call        0048F364
 00490C0B    pop         edi
 00490C0C    pop         esi
 00490C0D    mov         esp,ebp
 00490C0F    pop         ebp
 00490C10    ret
end;*}

//00490C64
procedure WriteControlName(ControlName:AnsiString);
begin
{*
 00490C64    push        ebp
 00490C65    mov         ebp,esp
 00490C67    add         esp,0FFFFFFF8
 00490C6A    push        ebx
 00490C6B    mov         dword ptr [ebp-4],eax
 00490C6E    mov         eax,dword ptr [ebp-4]
 00490C71    call        @LStrAddRef
 00490C76    xor         eax,eax
 00490C78    push        ebp
 00490C79    push        490CCF
 00490C7E    push        dword ptr fs:[eax]
 00490C81    mov         dword ptr fs:[eax],esp
 00490C84    mov         eax,dword ptr [ebp-4]
 00490C87    call        @LStrLen
 00490C8C    mov         dword ptr [ebp-8],eax
 00490C8F    lea         edx,[ebp-8]
 00490C92    mov         eax,dword ptr [ebp+8]
 00490C95    mov         eax,dword ptr [eax-4]
 00490C98    mov         ecx,4
 00490C9D    mov         ebx,dword ptr [eax]
 00490C9F    call        dword ptr [ebx+10]
 00490CA2    cmp         dword ptr [ebp-8],0
>00490CA6    jle         00490CB9
 00490CA8    mov         edx,dword ptr [ebp-4]
 00490CAB    mov         eax,dword ptr [ebp+8]
 00490CAE    mov         eax,dword ptr [eax-4]
 00490CB1    mov         ecx,dword ptr [ebp-8]
 00490CB4    mov         ebx,dword ptr [eax]
 00490CB6    call        dword ptr [ebx+10]
 00490CB9    xor         eax,eax
 00490CBB    pop         edx
 00490CBC    pop         ecx
 00490CBD    pop         ecx
 00490CBE    mov         dword ptr fs:[eax],edx
 00490CC1    push        490CD6
 00490CC6    lea         eax,[ebp-4]
 00490CC9    call        @LStrClr
 00490CCE    ret
>00490CCF    jmp         @HandleFinally
>00490CD4    jmp         00490CC6
 00490CD6    pop         ebx
 00490CD7    pop         ecx
 00490CD8    pop         ecx
 00490CD9    pop         ebp
 00490CDA    ret
*}
end;

//00490CDC
{*procedure sub_00490CDC(?:TDockZone; ?:?; ?:?);
begin
 00490CDC    push        ebp
 00490CDD    mov         ebp,esp
 00490CDF    add         esp,0FFFFFFF4
 00490CE2    push        ebx
 00490CE3    xor         ecx,ecx
 00490CE5    mov         dword ptr [ebp-0C],ecx
 00490CE8    mov         dword ptr [ebp-8],edx
 00490CEB    mov         dword ptr [ebp-4],eax
 00490CEE    xor         eax,eax
 00490CF0    push        ebp
 00490CF1    push        490DA2
 00490CF6    push        dword ptr fs:[eax]
 00490CF9    mov         dword ptr fs:[eax],esp
 00490CFC    lea         edx,[ebp-8]
 00490CFF    mov         eax,dword ptr [ebp+8]
 00490D02    mov         eax,dword ptr [eax-4]
 00490D05    mov         ecx,4
 00490D0A    mov         ebx,dword ptr [eax]
 00490D0C    call        dword ptr [ebx+10]
 00490D0F    mov         eax,dword ptr [ebp-4]
 00490D12    lea         edx,[eax+10]
 00490D15    mov         eax,dword ptr [ebp+8]
 00490D18    mov         eax,dword ptr [eax-4]
 00490D1B    mov         ecx,1
 00490D20    mov         ebx,dword ptr [eax]
 00490D22    call        dword ptr [ebx+10]
 00490D25    mov         eax,dword ptr [ebp-4]
 00490D28    lea         edx,[eax+20]
 00490D2B    mov         eax,dword ptr [ebp+8]
 00490D2E    mov         eax,dword ptr [eax-4]
 00490D31    mov         ecx,4
 00490D36    mov         ebx,dword ptr [eax]
 00490D38    call        dword ptr [ebx+10]
 00490D3B    mov         eax,dword ptr [ebp+8]
 00490D3E    push        eax
 00490D3F    lea         edx,[ebp-0C]
 00490D42    mov         eax,dword ptr [ebp-4]
 00490D45    call        0048EB80
 00490D4A    mov         eax,dword ptr [ebp-0C]
 00490D4D    call        WriteControlName
 00490D52    pop         ecx
 00490D53    mov         eax,dword ptr [ebp-4]
 00490D56    cmp         dword ptr [eax+8],0
>00490D5A    je          00490D70
 00490D5C    mov         eax,dword ptr [ebp+8]
 00490D5F    push        eax
 00490D60    mov         edx,dword ptr [ebp-8]
 00490D63    inc         edx
 00490D64    mov         eax,dword ptr [ebp-4]
 00490D67    mov         eax,dword ptr [eax+8]
 00490D6A    call        00490CDC
 00490D6F    pop         ecx
 00490D70    mov         eax,dword ptr [ebp-4]
 00490D73    cmp         dword ptr [eax+0C],0
>00490D77    je          00490D8C
 00490D79    mov         eax,dword ptr [ebp+8]
 00490D7C    push        eax
 00490D7D    mov         edx,dword ptr [ebp-8]
 00490D80    mov         eax,dword ptr [ebp-4]
 00490D83    mov         eax,dword ptr [eax+0C]
 00490D86    call        00490CDC
 00490D8B    pop         ecx
 00490D8C    xor         eax,eax
 00490D8E    pop         edx
 00490D8F    pop         ecx
 00490D90    pop         ecx
 00490D91    mov         dword ptr fs:[eax],edx
 00490D94    push        490DA9
 00490D99    lea         eax,[ebp-0C]
 00490D9C    call        @LStrClr
 00490DA1    ret
>00490DA2    jmp         @HandleFinally
>00490DA7    jmp         00490D99
 00490DA9    pop         ebx
 00490DAA    mov         esp,ebp
 00490DAC    pop         ebp
 00490DAD    ret
end;*}

//00490DB0
{*procedure sub_00490DB0(?:?);
begin
 00490DB0    push        ebp
 00490DB1    mov         ebp,esp
 00490DB3    add         esp,0FFFFFFE0
 00490DB6    push        ebx
 00490DB7    xor         ecx,ecx
 00490DB9    mov         dword ptr [ebp-20],ecx
 00490DBC    mov         dword ptr [ebp-4],edx
 00490DBF    mov         dword ptr [ebp-8],eax
 00490DC2    xor         eax,eax
 00490DC4    push        ebp
 00490DC5    push        490F09
 00490DCA    push        dword ptr fs:[eax]
 00490DCD    mov         dword ptr fs:[eax],esp
 00490DD0    mov         eax,dword ptr [ebp-8]
 00490DD3    lea         edx,[eax+70];TDockTree.FVersion:Integer
 00490DD6    mov         ecx,4
 00490DDB    mov         eax,dword ptr [ebp-4]
 00490DDE    mov         ebx,dword ptr [eax]
 00490DE0    call        dword ptr [ebx+10]
 00490DE3    mov         dl,1
 00490DE5    mov         eax,[0041DB24];TStringList
 00490DEA    call        TObject.Create;TStringList.Create
 00490DEF    mov         dword ptr [ebp-18],eax
 00490DF2    xor         eax,eax
 00490DF4    push        ebp
 00490DF5    push        490EB8
 00490DFA    push        dword ptr fs:[eax]
 00490DFD    mov         dword ptr fs:[eax],esp
 00490E00    mov         eax,dword ptr [ebp-8]
 00490E03    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490E06    call        0048A408
 00490E0B    dec         eax
 00490E0C    test        eax,eax
>00490E0E    jl          00490E54
 00490E10    inc         eax
 00490E11    mov         dword ptr [ebp-1C],eax
 00490E14    mov         dword ptr [ebp-0C],0
 00490E1B    mov         eax,dword ptr [ebp-8]
 00490E1E    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490E21    mov         edx,dword ptr [ebp-0C]
 00490E24    call        0048A43C
 00490E29    mov         dword ptr [ebp-14],eax
 00490E2C    mov         eax,dword ptr [ebp-14]
 00490E2F    cmp         byte ptr [eax+57],0
>00490E33    jne         00490E4C
 00490E35    mov         eax,dword ptr [ebp-14]
 00490E38    cmp         dword ptr [eax+8],0
>00490E3C    je          00490E4C
 00490E3E    mov         eax,dword ptr [ebp-14]
 00490E41    mov         edx,dword ptr [eax+8]
 00490E44    mov         eax,dword ptr [ebp-18]
 00490E47    mov         ecx,dword ptr [eax]
 00490E49    call        dword ptr [ecx+38];TStringList.sub_00422C34
 00490E4C    inc         dword ptr [ebp-0C]
 00490E4F    dec         dword ptr [ebp-1C]
>00490E52    jne         00490E1B
 00490E54    mov         eax,dword ptr [ebp-18]
 00490E57    mov         edx,dword ptr [eax]
 00490E59    call        dword ptr [edx+14];TStringList.sub_00423008
 00490E5C    mov         dword ptr [ebp-10],eax
 00490E5F    lea         edx,[ebp-10]
 00490E62    mov         ecx,4
 00490E67    mov         eax,dword ptr [ebp-4]
 00490E6A    mov         ebx,dword ptr [eax]
 00490E6C    call        dword ptr [ebx+10]
 00490E6F    mov         eax,dword ptr [ebp-10]
 00490E72    dec         eax
 00490E73    test        eax,eax
>00490E75    jl          00490EA2
 00490E77    inc         eax
 00490E78    mov         dword ptr [ebp-1C],eax
 00490E7B    mov         dword ptr [ebp-0C],0
 00490E82    push        ebp
 00490E83    lea         ecx,[ebp-20]
 00490E86    mov         edx,dword ptr [ebp-0C]
 00490E89    mov         eax,dword ptr [ebp-18]
 00490E8C    mov         ebx,dword ptr [eax]
 00490E8E    call        dword ptr [ebx+0C];TStringList.sub_00422FA0
 00490E91    mov         eax,dword ptr [ebp-20]
 00490E94    call        WriteControlName
 00490E99    pop         ecx
 00490E9A    inc         dword ptr [ebp-0C]
 00490E9D    dec         dword ptr [ebp-1C]
>00490EA0    jne         00490E82
 00490EA2    xor         eax,eax
 00490EA4    pop         edx
 00490EA5    pop         ecx
 00490EA6    pop         ecx
 00490EA7    mov         dword ptr fs:[eax],edx
 00490EAA    push        490EBF
 00490EAF    mov         eax,dword ptr [ebp-18]
 00490EB2    call        TObject.Free
 00490EB7    ret
>00490EB8    jmp         @HandleFinally
>00490EBD    jmp         00490EAF
 00490EBF    mov         eax,dword ptr [ebp-8]
 00490EC2    lea         edx,[eax+68];TDockTree.FTopXYLimit:Integer
 00490EC5    mov         ecx,4
 00490ECA    mov         eax,dword ptr [ebp-4]
 00490ECD    mov         ebx,dword ptr [eax]
 00490ECF    call        dword ptr [ebx+10]
 00490ED2    push        ebp
 00490ED3    mov         eax,dword ptr [ebp-8]
 00490ED6    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 00490ED9    xor         edx,edx
 00490EDB    call        00490CDC
 00490EE0    pop         ecx
 00490EE1    mov         edx,56C894;gvar_0056C894
 00490EE6    mov         ecx,4
 00490EEB    mov         eax,dword ptr [ebp-4]
 00490EEE    mov         ebx,dword ptr [eax]
 00490EF0    call        dword ptr [ebx+10]
 00490EF3    xor         eax,eax
 00490EF5    pop         edx
 00490EF6    pop         ecx
 00490EF7    pop         ecx
 00490EF8    mov         dword ptr fs:[eax],edx
 00490EFB    push        490F10
 00490F00    lea         eax,[ebp-20]
 00490F03    call        @LStrClr
 00490F08    ret
>00490F09    jmp         @HandleFinally
>00490F0E    jmp         00490F00
 00490F10    pop         ebx
 00490F11    mov         esp,ebp
 00490F13    pop         ebp
 00490F14    ret
end;*}

//00490F18
{*procedure sub_00490F18(?:TDockZone; ?:?);
begin
 00490F18    push        ebp
 00490F19    mov         ebp,esp
 00490F1B    push        ecx
 00490F1C    mov         dword ptr [ebp-4],eax
 00490F1F    cmp         dword ptr [ebp-4],0
>00490F23    je          00490FAF
 00490F29    mov         eax,dword ptr [ebp-4]
 00490F2C    call        0048EFA8
 00490F31    test        eax,eax
>00490F33    jne         00490F8B
 00490F35    mov         eax,dword ptr [ebp+8]
 00490F38    mov         eax,dword ptr [eax-4]
 00490F3B    mov         eax,dword ptr [eax+64]
 00490F3E    cmp         eax,dword ptr [ebp-4]
>00490F41    je          00490F8B
 00490F43    mov         eax,dword ptr [ebp-4]
 00490F46    call        0048E7BC
 00490F4B    test        al,al
>00490F4D    je          00490F8B
 00490F4F    mov         eax,dword ptr [ebp+8]
 00490F52    mov         eax,dword ptr [eax-4]
 00490F55    mov         eax,dword ptr [eax+64]
 00490F58    mov         edx,dword ptr [ebp-4]
 00490F5B    cmp         eax,dword ptr [edx+14]
>00490F5E    jne         00490F73
 00490F60    mov         eax,dword ptr [ebp+8]
 00490F63    mov         eax,dword ptr [eax-4]
 00490F66    mov         edx,dword ptr [eax+68]
 00490F69    mov         eax,dword ptr [ebp-4]
 00490F6C    call        0048EE78
>00490F71    jmp         00490F8B
 00490F73    mov         eax,dword ptr [ebp-4]
 00490F76    mov         eax,dword ptr [eax+14]
 00490F79    mov         eax,dword ptr [eax+14]
 00490F7C    call        0048EE38
 00490F81    mov         edx,eax
 00490F83    mov         eax,dword ptr [ebp-4]
 00490F86    call        0048EE78
 00490F8B    mov         eax,dword ptr [ebp+8]
 00490F8E    push        eax
 00490F8F    mov         eax,dword ptr [ebp-4]
 00490F92    call        0048F000
 00490F97    call        00490F18
 00490F9C    pop         ecx
 00490F9D    mov         eax,dword ptr [ebp+8]
 00490FA0    push        eax
 00490FA1    mov         eax,dword ptr [ebp-4]
 00490FA4    call        0048EFA8
 00490FA9    call        00490F18
 00490FAE    pop         ecx
 00490FAF    pop         ecx
 00490FB0    pop         ebp
 00490FB1    ret
end;*}

//00490FB4
{*procedure sub_00490FB4(?:TDockTree; ?:?);
begin
 00490FB4    push        ebp
 00490FB5    mov         ebp,esp
 00490FB7    add         esp,0FFFFFFF8
 00490FBA    mov         dword ptr [ebp-8],edx
 00490FBD    mov         dword ptr [ebp-4],eax
 00490FC0    cmp         dword ptr [ebp-8],0
>00490FC4    jne         00490FD2
 00490FC6    mov         eax,dword ptr [ebp-4]
 00490FC9    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 00490FCC    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 00490FCF    mov         dword ptr [ebp-8],eax
 00490FD2    push        ebp
 00490FD3    mov         eax,dword ptr [ebp-8]
 00490FD6    call        00490F18
 00490FDB    pop         ecx
 00490FDC    mov         eax,dword ptr [ebp-4]
 00490FDF    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 00490FE2    mov         edx,dword ptr [eax]
 00490FE4    call        dword ptr [edx+7C];TWinControl.sub_0048BE68
 00490FE7    pop         ecx
 00490FE8    pop         ecx
 00490FE9    pop         ebp
 00490FEA    ret
end;*}

//00490FEC
{*procedure sub_00490FEC(?:?; ?:?);
begin
 00490FEC    push        ebp
 00490FED    mov         ebp,esp
 00490FEF    add         esp,0FFFFFFF8
 00490FF2    mov         dword ptr [ebp-8],edx
 00490FF5    mov         dword ptr [ebp-4],eax
 00490FF8    mov         edx,dword ptr [ebp-8]
 00490FFB    mov         eax,dword ptr [ebp-4]
 00490FFE    call        0048F2DC
 00491003    mov         edx,dword ptr [ebp-4]
 00491006    mov         dword ptr [edx+38],eax
 00491009    pop         ecx
 0049100A    pop         ecx
 0049100B    pop         ebp
 0049100C    ret
end;*}

//0049118C
procedure sub_0049118C(?:TDockTree);
begin
{*
 0049118C    push        ebp
 0049118D    mov         ebp,esp
 0049118F    push        ecx
 00491190    mov         dword ptr [ebp-4],eax
 00491193    mov         eax,dword ptr [ebp-4]
 00491196    cmp         dword ptr [eax+6C],0;TDockTree.FUpdateCount:Integer
>0049119A    jne         004911BE
 0049119C    mov         eax,dword ptr [ebp-4]
 0049119F    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004911A2    call        0048A408
 004911A7    test        eax,eax
>004911A9    jle         004911BE
 004911AB    mov         eax,dword ptr [ebp-4]
 004911AE    push        eax
 004911AF    push        4911C4
 004911B4    xor         edx,edx
 004911B6    mov         eax,dword ptr [ebp-4]
 004911B9    call        0048F364
 004911BE    pop         ecx
 004911BF    pop         ebp
 004911C0    ret
*}
end;

//00491CCC
constructor sub_00491CCC;
begin
{*
 00491CCC    push        ebp
 00491CCD    mov         ebp,esp
 00491CCF    add         esp,0FFFFFFF8
 00491CD2    test        dl,dl
>00491CD4    je          00491CDE
 00491CD6    add         esp,0FFFFFFF0
 00491CD9    call        @ClassCreate
 00491CDE    mov         byte ptr [ebp-5],dl
 00491CE1    mov         dword ptr [ebp-4],eax
 00491CE4    xor         edx,edx
 00491CE6    mov         eax,dword ptr [ebp-4]
 00491CE9    call        TObject.Create
 00491CEE    mov         eax,dword ptr [ebp-4]
 00491CF1    mov         byte ptr [eax+4],1
 00491CF5    mov         eax,dword ptr [ebp-4]
 00491CF8    mov         dword ptr [eax+8],5
 00491CFF    mov         eax,[0056E624];^gvar_0056B7D8
 00491D04    cmp         dword ptr [eax],2
>00491D07    jne         00491D13
 00491D09    mov         eax,[0056E1A4];^gvar_0056B7DC
 00491D0E    cmp         dword ptr [eax],4
>00491D11    jge         00491D3F
 00491D13    mov         eax,[0056E624];^gvar_0056B7D8
 00491D18    cmp         dword ptr [eax],1
>00491D1B    jne         00491D3B
 00491D1D    mov         eax,[0056E1A4];^gvar_0056B7DC
 00491D22    cmp         dword ptr [eax],4
>00491D25    jg          00491D3F
 00491D27    mov         eax,[0056E1A4];^gvar_0056B7DC
 00491D2C    cmp         dword ptr [eax],4
>00491D2F    jne         00491D3B
 00491D31    mov         eax,[0056E45C];^gvar_0056B7E0
 00491D36    cmp         dword ptr [eax],0A
>00491D39    jge         00491D3F
 00491D3B    xor         eax,eax
>00491D3D    jmp         00491D41
 00491D3F    mov         al,1
 00491D41    mov         edx,dword ptr [ebp-4]
 00491D44    mov         byte ptr [edx+0D],al
 00491D47    xor         edx,edx
 00491D49    mov         eax,dword ptr [ebp-4]
 00491D4C    call        00491EDC
 00491D51    mov         eax,dword ptr [ebp-4]
 00491D54    cmp         byte ptr [ebp-5],0
>00491D58    je          00491D69
 00491D5A    call        @AfterConstruction
 00491D5F    pop         dword ptr fs:[0]
 00491D66    add         esp,0C
 00491D69    mov         eax,dword ptr [ebp-4]
 00491D6C    pop         ecx
 00491D6D    pop         ecx
 00491D6E    pop         ebp
 00491D6F    ret
*}
end;

//00491DC4
{*procedure sub_00491DC4(?:TMouse; ?:?);
begin
 00491DC4    push        ebp
 00491DC5    mov         ebp,esp
 00491DC7    add         esp,0FFFFFFF8
 00491DCA    mov         dword ptr [ebp-8],edx
 00491DCD    mov         dword ptr [ebp-4],eax
 00491DD0    mov         eax,dword ptr [ebp-8]
 00491DD3    push        eax
 00491DD4    call        user32.GetCursorPos
 00491DD9    call        00412170
 00491DDE    pop         ecx
 00491DDF    pop         ecx
 00491DE0    pop         ebp
 00491DE1    ret
end;*}

//00491DE4
{*function sub_00491DE4(?:TMouse):?;
begin
 00491DE4    push        ebp
 00491DE5    mov         ebp,esp
 00491DE7    add         esp,0FFFFFFF8
 00491DEA    mov         dword ptr [ebp-4],eax
 00491DED    cmp         byte ptr ds:[571DD8],0;gvar_00571DD8
 00491DF4    setne       byte ptr [ebp-5]
 00491DF8    mov         al,byte ptr [ebp-5]
 00491DFB    pop         ecx
 00491DFC    pop         ecx
 00491DFD    pop         ebp
 00491DFE    ret
end;*}

//00491E00
procedure sub_00491E00(?:TMouse);
begin
{*
 00491E00    push        ebp
 00491E01    mov         ebp,esp
 00491E03    push        ecx
 00491E04    mov         dword ptr [ebp-4],eax
 00491E07    push        13
 00491E09    mov         eax,[0056E1C0];^gvar_00571B2C
 00491E0E    mov         eax,dword ptr [eax]
 00491E10    call        eax
 00491E12    cmp         eax,1
 00491E15    sbb         eax,eax
 00491E17    inc         eax
 00491E18    mov         edx,dword ptr [ebp-4]
 00491E1B    mov         byte ptr [edx+0C],al
 00491E1E    pop         ecx
 00491E1F    pop         ebp
 00491E20    ret
*}
end;

//00491E24
procedure sub_00491E24(?:TMouse);
begin
{*
 00491E24    push        ebp
 00491E25    mov         ebp,esp
 00491E27    push        ecx
 00491E28    mov         dword ptr [ebp-4],eax
 00491E2B    push        4B
 00491E2D    mov         eax,[0056E1C0];^gvar_00571B2C
 00491E32    mov         eax,dword ptr [eax]
 00491E34    call        eax
 00491E36    cmp         eax,1
 00491E39    sbb         eax,eax
 00491E3B    inc         eax
 00491E3C    mov         edx,dword ptr [ebp-4]
 00491E3F    mov         byte ptr [edx+20],al
 00491E42    mov         eax,dword ptr [ebp-4]
 00491E45    cmp         byte ptr [eax+20],0
>00491E49    je          00491E5D
 00491E4B    push        0
 00491E4D    mov         eax,dword ptr [ebp-4]
 00491E50    add         eax,10
 00491E53    push        eax
 00491E54    push        0
 00491E56    push        68
 00491E58    call        user32.SystemParametersInfoA
 00491E5D    pop         ecx
 00491E5E    pop         ebp
 00491E5F    ret
*}
end;

//00491E60
procedure sub_00491E60(?:TMouse);
begin
{*
 00491E60    push        ebp
 00491E61    mov         ebp,esp
 00491E63    add         esp,0FFFFFFF8
 00491E66    mov         dword ptr [ebp-4],eax
 00491E69    lea         eax,[ebp-8]
 00491E6C    push        eax
 00491E6D    mov         eax,dword ptr [ebp-4]
 00491E70    add         eax,10
 00491E73    push        eax
 00491E74    mov         eax,dword ptr [ebp-4]
 00491E77    lea         ecx,[eax+14]
 00491E7A    mov         eax,dword ptr [ebp-4]
 00491E7D    lea         edx,[eax+24]
 00491E80    mov         eax,dword ptr [ebp-4]
 00491E83    add         eax,1C
 00491E86    call        004087A8
 00491E8B    mov         edx,dword ptr [ebp-4]
 00491E8E    mov         dword ptr [edx+18],eax
 00491E91    mov         eax,dword ptr [ebp-4]
 00491E94    cmp         dword ptr [eax+1C],0
 00491E98    setne       al
 00491E9B    mov         edx,dword ptr [ebp-4]
 00491E9E    mov         byte ptr [edx+20],al
 00491EA1    pop         ecx
 00491EA2    pop         ecx
 00491EA3    pop         ebp
 00491EA4    ret
*}
end;

//00491EDC
{*procedure sub_00491EDC(?:TMouse; ?:?);
begin
 00491EDC    push        ebp
 00491EDD    mov         ebp,esp
 00491EDF    add         esp,0FFFFFFF8
 00491EE2    mov         dword ptr [ebp-8],edx
 00491EE5    mov         dword ptr [ebp-4],eax
 00491EE8    mov         eax,dword ptr [ebp-8]
 00491EEB    sub         eax,1
>00491EEE    jb          00491EF7
 00491EF0    sub         eax,67
>00491EF3    je          00491F1C
>00491EF5    jmp         00491F5F
 00491EF7    mov         eax,dword ptr [ebp-4]
 00491EFA    call        00491E00
 00491EFF    mov         eax,dword ptr [ebp-4]
 00491F02    cmp         byte ptr [eax+0D],0;TMouse.FNativeWheelSupport:Boolean
>00491F06    jne         00491F12
 00491F08    mov         eax,dword ptr [ebp-4]
 00491F0B    call        00491E60
>00491F10    jmp         00491F5F
 00491F12    mov         eax,dword ptr [ebp-4]
 00491F15    call        00491E24
>00491F1A    jmp         00491F5F
 00491F1C    mov         eax,dword ptr [ebp-4]
 00491F1F    cmp         byte ptr [eax+20],0;TMouse.FWheelPresent:Boolean
>00491F23    je          00491F5F
 00491F25    mov         eax,dword ptr [ebp-4]
 00491F28    cmp         byte ptr [eax+0D],0;TMouse.FNativeWheelSupport:Boolean
>00491F2C    je          00491F42
 00491F2E    push        0
 00491F30    mov         eax,dword ptr [ebp-4]
 00491F33    add         eax,10;TMouse.FScrollLines:Integer
 00491F36    push        eax
 00491F37    push        0
 00491F39    push        68
 00491F3B    call        user32.SystemParametersInfoA
>00491F40    jmp         00491F5F
 00491F42    push        0
 00491F44    push        0
 00491F46    mov         eax,dword ptr [ebp-4]
 00491F49    mov         eax,dword ptr [eax+14];TMouse.FScrollLinesMessage:UINT
 00491F4C    push        eax
 00491F4D    mov         eax,dword ptr [ebp-4]
 00491F50    mov         eax,dword ptr [eax+18];TMouse.FWheelHwnd:HWND
 00491F53    push        eax
 00491F54    call        user32.SendMessageA
 00491F59    mov         edx,dword ptr [ebp-4]
 00491F5C    mov         dword ptr [edx+10],eax;TMouse.FScrollLines:Integer
 00491F5F    pop         ecx
 00491F60    pop         ecx
 00491F61    pop         ebp
 00491F62    ret
end;*}

//00491F64
procedure sub_00491F64;
begin
{*
 00491F64    push        ebp
 00491F65    mov         ebp,esp
 00491F67    add         esp,0FFFFFFF8
 00491F6A    mov         eax,[0056E638];^gvar_0057196C:Integer
 00491F6F    cmp         byte ptr [eax+0C],0
>00491F73    je          004920D6
 00491F79    push        8000
 00491F7E    call        kernel32.SetErrorMode
 00491F83    mov         dword ptr [ebp-8],eax
 00491F86    xor         eax,eax
 00491F88    push        ebp
 00491F89    push        4920CF
 00491F8E    push        dword ptr fs:[eax]
 00491F91    mov         dword ptr fs:[eax],esp
 00491F94    cmp         dword ptr ds:[571DF0],0;gvar_00571DF0:Pointer
>00491F9B    jne         00491FBD
 00491F9D    push        4920DC;'USER32'
 00491FA2    call        kernel32.GetModuleHandleA
 00491FA7    mov         dword ptr [ebp-4],eax
 00491FAA    push        4920E4;'WINNLSEnableIME'
 00491FAF    mov         eax,dword ptr [ebp-4]
 00491FB2    push        eax
 00491FB3    call        kernel32.GetProcAddress
 00491FB8    mov         [00571DF0],eax;gvar_00571DF0:Pointer
 00491FBD    cmp         dword ptr ds:[56C8A0],0;gvar_0056C8A0:HMODULE
>00491FC4    jne         004920B8
 00491FCA    push        4920F4;'imm32.dll'
 00491FCF    call        kernel32.LoadLibraryA
 00491FD4    mov         [0056C8A0],eax;gvar_0056C8A0:HMODULE
 00491FD9    cmp         dword ptr ds:[56C8A0],0;gvar_0056C8A0:HMODULE
>00491FE0    je          004920B8
 00491FE6    push        492100;'ImmGetContext'
 00491FEB    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 00491FF0    push        eax
 00491FF1    call        kernel32.GetProcAddress
 00491FF6    mov         [00571DF4],eax;gvar_00571DF4:Pointer
 00491FFB    push        492110;'ImmReleaseContext'
 00492000    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 00492005    push        eax
 00492006    call        kernel32.GetProcAddress
 0049200B    mov         [00571DF8],eax;gvar_00571DF8:Pointer
 00492010    push        492124;'ImmGetConversionStatus'
 00492015    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 0049201A    push        eax
 0049201B    call        kernel32.GetProcAddress
 00492020    mov         [00571DFC],eax;gvar_00571DFC:Pointer
 00492025    push        49213C;'ImmSetConversionStatus'
 0049202A    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 0049202F    push        eax
 00492030    call        kernel32.GetProcAddress
 00492035    mov         [00571E00],eax;gvar_00571E00:Pointer
 0049203A    push        492154;'ImmSetOpenStatus'
 0049203F    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 00492044    push        eax
 00492045    call        kernel32.GetProcAddress
 0049204A    mov         [00571E04],eax;gvar_00571E04:Pointer
 0049204F    push        492168;'ImmSetCompositionWindow'
 00492054    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 00492059    push        eax
 0049205A    call        kernel32.GetProcAddress
 0049205F    mov         [00571E08],eax;gvar_00571E08:Pointer
 00492064    push        492180;'ImmSetCompositionFontA'
 00492069    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 0049206E    push        eax
 0049206F    call        kernel32.GetProcAddress
 00492074    mov         [00571E0C],eax;gvar_00571E0C:Pointer
 00492079    push        492198;'ImmGetCompositionStringA'
 0049207E    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 00492083    push        eax
 00492084    call        kernel32.GetProcAddress
 00492089    mov         [00571E10],eax;gvar_00571E10:Pointer
 0049208E    push        4921B4;'ImmIsIME'
 00492093    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 00492098    push        eax
 00492099    call        kernel32.GetProcAddress
 0049209E    mov         [00571E14],eax;gvar_00571E14:Pointer
 004920A3    push        4921C0;'ImmNotifyIME'
 004920A8    mov         eax,[0056C8A0];0x0 gvar_0056C8A0:HMODULE
 004920AD    push        eax
 004920AE    call        kernel32.GetProcAddress
 004920B3    mov         [00571E18],eax;gvar_00571E18:Pointer
 004920B8    xor         eax,eax
 004920BA    pop         edx
 004920BB    pop         ecx
 004920BC    pop         ecx
 004920BD    mov         dword ptr fs:[eax],edx
 004920C0    push        4920D6
 004920C5    mov         eax,dword ptr [ebp-8]
 004920C8    push        eax
 004920C9    call        kernel32.SetErrorMode
 004920CE    ret
>004920CF    jmp         @HandleFinally
>004920D4    jmp         004920C5
 004920D6    pop         ecx
 004920D7    pop         ecx
 004920D8    pop         ebp
 004920D9    ret
*}
end;

//004921D0
{*function sub_004921D0(?:HWND; ?:?):?;
begin
 004921D0    push        ebp
 004921D1    mov         ebp,esp
 004921D3    add         esp,0FFFFFFF8
 004921D6    mov         byte ptr [ebp-5],dl
 004921D9    mov         dword ptr [ebp-4],eax
 004921DC    cmp         dword ptr ds:[571DF0],0;gvar_00571DF0:Pointer
>004921E3    je          004921FC
 004921E5    cmp         byte ptr [ebp-5],1
 004921E9    cmc
 004921EA    sbb         eax,eax
 004921EC    push        eax
 004921ED    mov         eax,dword ptr [ebp-4]
 004921F0    push        eax
 004921F1    call        dword ptr ds:[571DF0]
 004921F7    mov         byte ptr [ebp-6],al
>004921FA    jmp         00492200
 004921FC    mov         byte ptr [ebp-6],0
 00492200    mov         al,byte ptr [ebp-6]
 00492203    pop         ecx
 00492204    pop         ecx
 00492205    pop         ebp
 00492206    ret
end;*}

//00492208
{*procedure sub_00492208(?:HWND; ?:?);
begin
 00492208    push        ebp
 00492209    mov         ebp,esp
 0049220B    add         esp,0FFFFFFEC
 0049220E    mov         byte ptr [ebp-5],dl
 00492211    mov         dword ptr [ebp-4],eax
 00492214    mov         eax,[0056E638];^gvar_0057196C:Integer
 00492219    cmp         byte ptr [eax+0C],0
>0049221D    je          00492300
 00492223    cmp         byte ptr [ebp-5],3
>00492227    je          00492300
 0049222D    cmp         byte ptr [ebp-5],0
>00492231    jne         00492242
 00492233    xor         edx,edx
 00492235    mov         eax,dword ptr [ebp-4]
 00492238    call        004921D0
>0049223D    jmp         00492300
 00492242    mov         dl,1
 00492244    mov         eax,dword ptr [ebp-4]
 00492247    call        004921D0
 0049224C    cmp         dword ptr ds:[56C8A0],0;gvar_0056C8A0:HMODULE
>00492253    je          00492300
 00492259    mov         eax,dword ptr [ebp-4]
 0049225C    push        eax
 0049225D    call        dword ptr ds:[571DF4]
 00492263    mov         dword ptr [ebp-0C],eax
 00492266    cmp         dword ptr [ebp-0C],0
>0049226A    je          00492300
 00492270    lea         eax,[ebp-14]
 00492273    push        eax
 00492274    lea         eax,[ebp-10]
 00492277    push        eax
 00492278    mov         eax,dword ptr [ebp-0C]
 0049227B    push        eax
 0049227C    call        dword ptr ds:[571DFC]
 00492282    mov         al,byte ptr [ebp-5]
 00492285    dec         al
>00492287    je          0049228F
 00492289    dec         al
>0049228B    je          0049229D
>0049228D    jmp         004922AB
 0049228F    push        0
 00492291    mov         eax,dword ptr [ebp-0C]
 00492294    push        eax
 00492295    call        dword ptr ds:[571E04]
>0049229B    jmp         004922E0
 0049229D    push        1
 0049229F    mov         eax,dword ptr [ebp-0C]
 004922A2    push        eax
 004922A3    call        dword ptr ds:[571E04]
>004922A9    jmp         004922E0
 004922AB    push        1
 004922AD    mov         eax,dword ptr [ebp-0C]
 004922B0    push        eax
 004922B1    call        dword ptr ds:[571E04]
 004922B7    lea         eax,[ebp-14]
 004922BA    push        eax
 004922BB    lea         eax,[ebp-10]
 004922BE    push        eax
 004922BF    mov         eax,dword ptr [ebp-0C]
 004922C2    push        eax
 004922C3    call        dword ptr ds:[571DFC]
 004922C9    mov         eax,dword ptr [ebp-10]
 004922CC    and         eax,0FFFFFFF4
 004922CF    xor         edx,edx
 004922D1    mov         dl,byte ptr [ebp-5]
 004922D4    movzx       edx,byte ptr [edx+56C8A0];gvar_0056C8A0:HMODULE
 004922DB    or          eax,edx
 004922DD    mov         dword ptr [ebp-10],eax
 004922E0    mov         eax,dword ptr [ebp-14]
 004922E3    push        eax
 004922E4    mov         eax,dword ptr [ebp-10]
 004922E7    push        eax
 004922E8    mov         eax,dword ptr [ebp-0C]
 004922EB    push        eax
 004922EC    call        dword ptr ds:[571E00]
 004922F2    mov         eax,dword ptr [ebp-0C]
 004922F5    push        eax
 004922F6    mov         eax,dword ptr [ebp-4]
 004922F9    push        eax
 004922FA    call        dword ptr ds:[571DF8]
 00492300    mov         esp,ebp
 00492302    pop         ebp
 00492303    ret
end;*}

//00492304
{*function sub_00492304(?:?):?;
begin
 00492304    push        ebp
 00492305    mov         ebp,esp
 00492307    add         esp,0FFFFFFF8
 0049230A    mov         dword ptr [ebp-4],eax
 0049230D    cmp         dword ptr ds:[56C8A0],0;gvar_0056C8A0:HMODULE
>00492314    je          00492325
 00492316    mov         eax,dword ptr [ebp-4]
 00492319    push        eax
 0049231A    call        dword ptr ds:[571E14]
 00492320    mov         byte ptr [ebp-5],al
>00492323    jmp         00492329
 00492325    mov         byte ptr [ebp-5],0
 00492329    mov         al,byte ptr [ebp-5]
 0049232C    pop         ecx
 0049232D    pop         ecx
 0049232E    pop         ebp
 0049232F    ret
end;*}

//00492330
procedure DoneControls;
begin
{*
 00492330    mov         eax,[0056E3C0];^Application:TApplication
 00492335    mov         eax,dword ptr [eax]
 00492337    call        TObject.Free
 0049233C    mov         eax,[0056E3C0];^Application:TApplication
 00492341    xor         edx,edx
 00492343    mov         dword ptr [eax],edx
 00492345    mov         eax,[0056E604];^Screen:TScreen
 0049234A    mov         eax,dword ptr [eax]
 0049234C    call        TObject.Free
 00492351    mov         eax,[0056E604];^Screen:TScreen
 00492356    xor         edx,edx
 00492358    mov         dword ptr [eax],edx
 0049235A    mov         eax,[00571D9C];Mouse:TMouse
 0049235F    call        TObject.Free
 00492364    xor         eax,eax
 00492366    mov         [00571D9C],eax;Mouse:TMouse
 0049236B    mov         eax,[00571DEC];CanvasList:TThreadList
 00492370    call        TObject.Free
 00492375    mov         ax,[00571DAA];ControlAtom:TAtom
 0049237B    push        eax
 0049237C    call        kernel32.GlobalDeleteAtom
 00492381    mov         eax,571DB0;ControlAtomString:AnsiString
 00492386    call        @LStrClr
 0049238B    mov         ax,[00571DA8];WindowAtom:TAtom
 00492391    push        eax
 00492392    call        kernel32.GlobalDeleteAtom
 00492397    mov         eax,571DAC;WindowAtomString:AnsiString
 0049239C    call        @LStrClr
 004923A1    cmp         dword ptr ds:[56C8A0],0;gvar_0056C8A0:HMODULE
>004923A8    je          004923B5
 004923AA    mov         eax,[0056C8A0];gvar_0056C8A0:HMODULE
 004923AF    push        eax
 004923B0    call        kernel32.FreeLibrary
 004923B5    ret
*}
end;

//004923B8
procedure InitControls;
begin
{*
 004923B8    push        ebp
 004923B9    mov         ebp,esp
 004923BB    add         esp,0FFFFFFDC
 004923BE    xor         eax,eax
 004923C0    mov         dword ptr [ebp-14],eax
 004923C3    mov         dword ptr [ebp-8],eax
 004923C6    xor         eax,eax
 004923C8    push        ebp
 004923C9    push        492535
 004923CE    push        dword ptr fs:[eax]
 004923D1    mov         dword ptr fs:[eax],esp
 004923D4    lea         eax,[ebp-8]
 004923D7    push        eax
 004923D8    call        kernel32.GetCurrentProcessId
 004923DD    mov         dword ptr [ebp-10],eax
 004923E0    mov         byte ptr [ebp-0C],0
 004923E4    lea         edx,[ebp-10]
 004923E7    xor         ecx,ecx
 004923E9    mov         eax,492548;'Delphi%.8X'
 004923EE    call        0040D630
 004923F3    mov         edx,dword ptr [ebp-8]
 004923F6    mov         eax,571DAC;WindowAtomString:AnsiString
 004923FB    call        @LStrAsg
 00492400    mov         eax,[00571DAC];WindowAtomString:AnsiString
 00492405    call        @LStrToPChar
 0049240A    push        eax
 0049240B    call        kernel32.GlobalAddAtomA
 00492410    mov         [00571DA8],ax;WindowAtom:TAtom
 00492416    lea         eax,[ebp-14]
 00492419    push        eax
 0049241A    mov         eax,[0056F668];HInstance:LongWord
 0049241F    mov         dword ptr [ebp-24],eax
 00492422    mov         byte ptr [ebp-20],0
 00492426    call        kernel32.GetCurrentThreadId
 0049242B    mov         dword ptr [ebp-1C],eax
 0049242E    mov         byte ptr [ebp-18],0
 00492432    lea         edx,[ebp-24]
 00492435    mov         ecx,1
 0049243A    mov         eax,49255C;'ControlOfs%.8X%.8X'
 0049243F    call        0040D630
 00492444    mov         edx,dword ptr [ebp-14]
 00492447    mov         eax,571DB0;ControlAtomString:AnsiString
 0049244C    call        @LStrAsg
 00492451    mov         eax,[00571DB0];ControlAtomString:AnsiString
 00492456    call        @LStrToPChar
 0049245B    push        eax
 0049245C    call        kernel32.GlobalAddAtomA
 00492461    mov         [00571DAA],ax;ControlAtom:TAtom
 00492467    mov         eax,[00571DB0];ControlAtomString:AnsiString
 0049246C    call        @LStrToPChar
 00492471    push        eax
 00492472    call        user32.RegisterClipboardFormatA
 00492477    mov         [00571DB4],eax;gvar_00571DB4
 0049247C    mov         dl,1
 0049247E    mov         eax,[0041D4D0];TThreadList
 00492483    call        TThreadList.Create
 00492488    mov         [00571DEC],eax;CanvasList:TThreadList
 0049248D    call        00491F64
 00492492    mov         dl,1
 00492494    mov         eax,[0047F308];TMouse
 00492499    call        00491CCC
 0049249E    mov         [00571D9C],eax;Mouse:TMouse
 004924A3    xor         ecx,ecx
 004924A5    mov         dl,1
 004924A7    mov         eax,[0049FF40];TScreen
 004924AC    call        004A85C8
 004924B1    mov         edx,dword ptr ds:[56E604];^Screen:TScreen
 004924B7    mov         dword ptr [edx],eax
 004924B9    xor         ecx,ecx
 004924BB    mov         dl,1
 004924BD    mov         eax,[004A0018];TApplication
 004924C2    call        004A9C3C
 004924C7    mov         edx,dword ptr ds:[56E3C0];^Application:TApplication
 004924CD    mov         dword ptr [edx],eax
 004924CF    mov         eax,[0056E3C0];^Application:TApplication
 004924D4    mov         eax,dword ptr [eax]
 004924D6    mov         dl,1
 004924D8    call        004ABED0
 004924DD    mov         ecx,47F9F4;sub_0047F9F4
 004924E2    mov         edx,47FA1C;sub_0047FA1C
 004924E7    mov         eax,[0047CEEC];TCursor
 004924EC    call        RegisterIntegerConsts
 004924F1    push        492570
 004924F6    call        kernel32.GetModuleHandleA
 004924FB    mov         dword ptr [ebp-4],eax
 004924FE    cmp         dword ptr [ebp-4],0
>00492502    je          00492517
 00492504    push        492578
 00492509    mov         eax,dword ptr [ebp-4]
 0049250C    push        eax
 0049250D    call        kernel32.GetProcAddress
 00492512    mov         [0056C770],eax;gvar_0056C770
 00492517    xor         eax,eax
 00492519    pop         edx
 0049251A    pop         ecx
 0049251B    pop         ecx
 0049251C    mov         dword ptr fs:[eax],edx
 0049251F    push        49253C
 00492524    lea         eax,[ebp-14]
 00492527    call        @LStrClr
 0049252C    lea         eax,[ebp-8]
 0049252F    call        @LStrClr
 00492534    ret
>00492535    jmp         @HandleFinally
>0049253A    jmp         00492524
 0049253C    mov         esp,ebp
 0049253E    pop         ebp
 0049253F    ret
*}
end;

//00492588
{*procedure sub_00492588(?:?);
begin
 00492588    push        ebp
 00492589    mov         ebp,esp
 0049258B    add         esp,0FFFFFFF8
 0049258E    mov         dword ptr [ebp-8],edx
 00492591    mov         dword ptr [ebp-4],eax
 00492594    mov         edx,dword ptr [ebp-8]
 00492597    mov         eax,dword ptr [ebp-4]
 0049259A    mov         ecx,dword ptr [eax]
 0049259C    call        dword ptr [ecx+0E0];@AbstractError
 004925A2    mov         eax,dword ptr [ebp-4]
 004925A5    mov         edx,dword ptr [eax]
 004925A7    call        dword ptr [edx+0E4];@AbstractError
 004925AD    pop         ecx
 004925AE    pop         ecx
 004925AF    pop         ebp
 004925B0    ret
end;*}

Initialization
//0049261C
{*
 0049261C    push        ebp
 0049261D    mov         ebp,esp
 0049261F    xor         eax,eax
 00492621    push        ebp
 00492622    push        4926A2
 00492627    push        dword ptr fs:[eax]
 0049262A    mov         dword ptr fs:[eax],esp
 0049262D    sub         dword ptr ds:[571DA4],1
>00492634    jae         00492694
 00492636    call        kernel32.GetVersion
 0049263B    and         eax,0FF
 00492640    cmp         ax,4
 00492644    setae       byte ptr ds:[571DA0];NewStyleControls:Boolean
 0049264B    call        InitControls
 00492650    mov         eax,[0047DF94];TControl
 00492655    call        StartClassGroup
 0049265A    mov         eax,[0047DF94];TControl
 0049265F    call        ActivateClassGroup
 00492664    mov         edx,dword ptr ds:[47DF94];TControl
 0049266A    mov         eax,[00494958];TCustomImageList
 0049266F    call        GroupDescendentsWith
 00492674    mov         edx,dword ptr ds:[47DF94];TControl
 0049267A    mov         eax,[004926AC];TContainedAction
 0049267F    call        GroupDescendentsWith
 00492684    mov         edx,dword ptr ds:[47DF94];TControl
 0049268A    mov         eax,[00492868];TCustomActionList
 0049268F    call        GroupDescendentsWith
 00492694    xor         eax,eax
 00492696    pop         edx
 00492697    pop         ecx
 00492698    pop         ecx
 00492699    mov         dword ptr fs:[eax],edx
 0049269C    push        4926A9
 004926A1    ret
>004926A2    jmp         @HandleFinally
>004926A7    jmp         004926A1
 004926A9    pop         ebp
 004926AA    ret
*}
Finalization
//004925B4
{*
 004925B4    push        ebp
 004925B5    mov         ebp,esp
 004925B7    xor         eax,eax
 004925B9    push        ebp
 004925BA    push        492613
 004925BF    push        dword ptr fs:[eax]
 004925C2    mov         dword ptr fs:[eax],esp
 004925C5    inc         dword ptr ds:[571DA4]
>004925CB    jne         00492605
 004925CD    mov         eax,571DE0;DockSiteList:TList
 004925D2    call        FreeAndNil
 004925D7    call        DoneControls
 004925DC    mov         eax,56C784
 004925E1    mov         ecx,16
 004925E6    mov         edx,dword ptr ds:[41E66C];TIdentMapEntry
 004925EC    call        @FinalizeArray
 004925F1    mov         eax,571DB0;ControlAtomString:AnsiString
 004925F6    call        @LStrClr
 004925FB    mov         eax,571DAC;WindowAtomString:AnsiString
 00492600    call        @LStrClr
 00492605    xor         eax,eax
 00492607    pop         edx
 00492608    pop         ecx
 00492609    pop         ecx
 0049260A    mov         dword ptr fs:[eax],edx
 0049260D    push        49261A
 00492612    ret
>00492613    jmp         @HandleFinally
>00492618    jmp         00492612
 0049261A    pop         ebp
 0049261B    ret
*}
end.